/*! For license information please see main.js.LICENSE.txt */
(()=>{var __webpack_modules__={"./node_modules/@kitware/vtk.js/Common/Core/CellArray.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STATIC: () => (/* binding */ STATIC),\n/* harmony export */   "default": () => (/* binding */ vtkCellArray$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _DataArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DataArray.js */ "./node_modules/@kitware/vtk.js/Common/Core/DataArray.js");\n/* harmony import */ var _DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DataArray/Constants.js */ "./node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js");\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extractCellSizes(cellArray) {\r\n  let currentIdx = 0;\r\n  return cellArray.filter((value, index) => {\r\n    if (index === currentIdx) {\r\n      currentIdx += value + 1;\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n}\r\nfunction getNumberOfCells(cellArray) {\r\n  let cellId = 0;\r\n  for (let cellArrayIndex = 0; cellArrayIndex < cellArray.length;) {\r\n    cellArrayIndex += cellArray[cellArrayIndex] + 1;\r\n    cellId++;\r\n  }\r\n  return cellId;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Static API\r\n// ----------------------------------------------------------------------------\r\n\r\nconst STATIC = {\r\n  extractCellSizes,\r\n  getNumberOfCells\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkCellArray methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkCellArray(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkCellArray\');\r\n  const superClass = {\r\n    ...publicAPI\r\n  };\r\n  publicAPI.getNumberOfCells = recompute => {\r\n    if (model.numberOfCells !== undefined && !recompute) {\r\n      return model.numberOfCells;\r\n    }\r\n    if (model.cellSizes) {\r\n      model.numberOfCells = model.cellSizes.length;\r\n    } else {\r\n      model.numberOfCells = getNumberOfCells(publicAPI.getData());\r\n    }\r\n    return model.numberOfCells;\r\n  };\r\n  publicAPI.getCellSizes = recompute => {\r\n    if (model.cellSizes !== undefined && !recompute) {\r\n      return model.cellSizes;\r\n    }\r\n    model.cellSizes = extractCellSizes(publicAPI.getData());\r\n    return model.cellSizes;\r\n  };\r\n\r\n  /**\r\n   * When `resize()` is being used, you then MUST use `insertNextCell()`.\r\n   */\r\n  publicAPI.resize = requestedNumTuples => {\r\n    const oldNumTuples = publicAPI.getNumberOfTuples();\r\n    superClass.resize(requestedNumTuples);\r\n    const newNumTuples = publicAPI.getNumberOfTuples();\r\n    if (newNumTuples < oldNumTuples) {\r\n      if (newNumTuples === 0) {\r\n        model.numberOfCells = 0;\r\n        model.cellSizes = [];\r\n      } else {\r\n        // We do not know how many cells are left.\r\n        // Set to undefined to ensure insertNextCell works correctly.\r\n        model.numberOfCells = undefined;\r\n        model.cellSizes = undefined;\r\n      }\r\n    }\r\n  };\r\n  publicAPI.setData = typedArray => {\r\n    superClass.setData(typedArray, 1);\r\n    model.numberOfCells = undefined;\r\n    model.cellSizes = undefined;\r\n  };\r\n  publicAPI.getCell = loc => {\r\n    let cellLoc = loc;\r\n    const numberOfPoints = model.values[cellLoc++];\r\n    return model.values.subarray(cellLoc, cellLoc + numberOfPoints);\r\n  };\r\n  publicAPI.insertNextCell = cellPointIds => {\r\n    const cellId = publicAPI.getNumberOfCells();\r\n    publicAPI.insertNextTuples([cellPointIds.length, ...cellPointIds]);\r\n    // By computing the number of cells earlier, we made sure that numberOfCells is defined\r\n    ++model.numberOfCells;\r\n    if (model.cellSizes != null) {\r\n      model.cellSizes.push(cellPointIds.length);\r\n    }\r\n    return cellId;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction defaultValues(initialValues) {\r\n  return {\r\n    empty: true,\r\n    numberOfComponents: 1,\r\n    dataType: _DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_2__.VtkDataTypes.UNSIGNED_INT,\r\n    ...initialValues\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  _DataArray_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, defaultValues(initialValues));\r\n  vtkCellArray(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, \'vtkCellArray\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkCellArray$1 = {\r\n  newInstance,\r\n  extend,\r\n  ...STATIC\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/Core/CellArray.js?')},"./node_modules/@kitware/vtk.js/Common/Core/ClassHierarchy.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ ClassHierarchy)\n/* harmony export */ });\n/* eslint-disable prefer-rest-params */\r\nclass ClassHierarchy extends Array {\r\n  push() {\r\n    for (let i = 0; i < arguments.length; i++) {\r\n      if (!this.includes(arguments[i])) {\r\n        super.push(arguments[i]);\r\n      }\r\n    }\r\n    return this.length;\r\n  }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/Core/ClassHierarchy.js?')},"./node_modules/@kitware/vtk.js/Common/Core/DataArray.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STATIC: () => (/* binding */ STATIC),\n/* harmony export */   \"default\": () => (/* binding */ vtkDataArray$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DataArray/Constants.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Math_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n\r\n\r\n\r\n\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_1__.c;\r\nconst {\r\n  DefaultDataType\r\n} = _DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\nconst EPSILON = 1e-6;\r\n\r\n// Original source from https://www.npmjs.com/package/compute-range\r\n// Modified to accept type arrays\r\nfunction fastComputeRange(arr, offset, numberOfComponents) {\r\n  const len = arr.length;\r\n  let min = Number.MAX_VALUE;\r\n  let max = -Number.MAX_VALUE;\r\n  let x;\r\n  let i;\r\n\r\n  // find first non-NaN value\r\n  for (i = offset; i < len; i += numberOfComponents) {\r\n    if (!Number.isNaN(arr[i])) {\r\n      min = arr[i];\r\n      max = min;\r\n      break;\r\n    }\r\n  }\r\n  for (; i < len; i += numberOfComponents) {\r\n    x = arr[i];\r\n    if (x < min) {\r\n      min = x;\r\n    } else if (x > max) {\r\n      max = x;\r\n    }\r\n  }\r\n  return {\r\n    min,\r\n    max\r\n  };\r\n}\r\n\r\n/**\r\n * @deprecated please use fastComputeRange instead\r\n */\r\nfunction createRangeHelper() {\r\n  let min = Number.MAX_VALUE;\r\n  let max = -Number.MAX_VALUE;\r\n  let count = 0;\r\n  let sum = 0;\r\n  return {\r\n    add(value) {\r\n      if (min > value) {\r\n        min = value;\r\n      }\r\n      if (max < value) {\r\n        max = value;\r\n      }\r\n      count++;\r\n      sum += value;\r\n    },\r\n    get() {\r\n      return {\r\n        min,\r\n        max,\r\n        count,\r\n        sum,\r\n        mean: sum / count\r\n      };\r\n    },\r\n    getRange() {\r\n      return {\r\n        min,\r\n        max\r\n      };\r\n    }\r\n  };\r\n}\r\nfunction computeRange(values) {\r\n  let component = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n  let numberOfComponents = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\r\n  if (component < 0 && numberOfComponents > 1) {\r\n    // Compute magnitude\r\n    const size = values.length;\r\n    const numberOfValues = size / numberOfComponents;\r\n    const data = new Float64Array(numberOfValues);\r\n    for (let i = 0, j = 0; i < numberOfValues; ++i) {\r\n      for (let nextJ = j + numberOfComponents; j < nextJ; ++j) {\r\n        data[i] += values[j] * values[j];\r\n      }\r\n      data[i] **= 0.5;\r\n    }\r\n    return fastComputeRange(data, 0, 1);\r\n  }\r\n  return fastComputeRange(values, component < 0 ? 0 : component, numberOfComponents);\r\n}\r\nfunction ensureRangeSize(rangeArray) {\r\n  let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n  const ranges = rangeArray || [];\r\n  // Pad ranges with null value to get the\r\n  while (ranges.length <= size) {\r\n    ranges.push(null);\r\n  }\r\n  return ranges;\r\n}\r\nfunction getDataType(typedArray) {\r\n  // Expects toString() to return \"[object ...Array]\"\r\n  return Object.prototype.toString.call(typedArray).slice(8, -1);\r\n}\r\nfunction getMaxNorm(normArray) {\r\n  const numComps = normArray.getNumberOfComponents();\r\n  let maxNorm = 0.0;\r\n  const tuple = new Array(numComps);\r\n  for (let i = 0; i < normArray.getNumberOfTuples(); ++i) {\r\n    normArray.getTuple(i, tuple);\r\n    const norm$1 = (0,_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.n)(tuple, numComps);\r\n    if (norm$1 > maxNorm) {\r\n      maxNorm = norm$1;\r\n    }\r\n  }\r\n  return maxNorm;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Static API\r\n// ----------------------------------------------------------------------------\r\n\r\nconst STATIC = {\r\n  computeRange,\r\n  createRangeHelper,\r\n  fastComputeRange,\r\n  getDataType,\r\n  getMaxNorm\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkDataArray methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkDataArray(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkDataArray');\r\n\r\n  /**\r\n   * Resize model.values and copy the old values to the new array.\r\n   * @param {Number} requestedNumTuples Final expected number of tuples; must be >= 0\r\n   * @returns {Boolean} True if a resize occured, false otherwise\r\n   */\r\n  function resize(requestedNumTuples) {\r\n    if (requestedNumTuples < 0) {\r\n      return false;\r\n    }\r\n    const numComps = publicAPI.getNumberOfComponents();\r\n    const curNumTuples = model.values.length / (numComps > 0 ? numComps : 1);\r\n    if (requestedNumTuples === curNumTuples) {\r\n      return true;\r\n    }\r\n    if (requestedNumTuples > curNumTuples) {\r\n      // Requested size is bigger than current size.  Allocate enough\r\n      // memory to fit the requested size and be more than double the\r\n      // currently allocated memory.\r\n      const oldValues = model.values;\r\n      model.values = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_1__.a)(model.dataType, (requestedNumTuples + curNumTuples) * numComps);\r\n      model.values.set(oldValues);\r\n      return true;\r\n    }\r\n\r\n    // Requested size is smaller than currently allocated size\r\n    if (model.size > requestedNumTuples * numComps) {\r\n      model.size = requestedNumTuples * numComps;\r\n      publicAPI.dataChange();\r\n    }\r\n    return true;\r\n  }\r\n  publicAPI.dataChange = () => {\r\n    model.ranges = null;\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.resize = requestedNumTuples => {\r\n    resize(requestedNumTuples);\r\n    const newSize = requestedNumTuples * publicAPI.getNumberOfComponents();\r\n    if (model.size !== newSize) {\r\n      model.size = newSize;\r\n      publicAPI.dataChange();\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // FIXME, to rename into \"clear()\" or \"reset()\"\r\n  publicAPI.initialize = () => {\r\n    publicAPI.resize(0);\r\n  };\r\n  publicAPI.getElementComponentSize = () => model.values.BYTES_PER_ELEMENT;\r\n\r\n  // Description:\r\n  // Return the data component at the location specified by tupleIdx and\r\n  // compIdx.\r\n  publicAPI.getComponent = function (tupleIdx) {\r\n    let compIdx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n    return model.values[tupleIdx * model.numberOfComponents + compIdx];\r\n  };\r\n\r\n  // Description:\r\n  // Set the data component at the location specified by tupleIdx and compIdx\r\n  // to value.\r\n  // Note that i is less than NumberOfTuples and j is less than\r\n  //  NumberOfComponents. Make sure enough memory has been allocated\r\n  // (use SetNumberOfTuples() and SetNumberOfComponents()).\r\n  publicAPI.setComponent = (tupleIdx, compIdx, value) => {\r\n    if (value !== model.values[tupleIdx * model.numberOfComponents + compIdx]) {\r\n      model.values[tupleIdx * model.numberOfComponents + compIdx] = value;\r\n      publicAPI.dataChange();\r\n    }\r\n  };\r\n  publicAPI.getValue = valueIdx => {\r\n    const idx = valueIdx / model.numberOfComponents;\r\n    const comp = valueIdx % model.numberOfComponents;\r\n    return publicAPI.getComponent(idx, comp);\r\n  };\r\n  publicAPI.setValue = (valueIdx, value) => {\r\n    const idx = valueIdx / model.numberOfComponents;\r\n    const comp = valueIdx % model.numberOfComponents;\r\n    publicAPI.setComponent(idx, comp, value);\r\n  };\r\n  publicAPI.getData = () => model.size === model.values.length ? model.values : model.values.subarray(0, model.size);\r\n  publicAPI.getRange = function () {\r\n    let componentIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\r\n    let rangeIdx = componentIndex;\r\n    if (rangeIdx < 0) {\r\n      // If scalar data, then store in slot 0 (same as componentIndex = 0).\r\n      // If vector data, then store in last slot.\r\n      rangeIdx = model.numberOfComponents === 1 ? 0 : model.numberOfComponents;\r\n    }\r\n    let range = null;\r\n    if (!model.ranges) {\r\n      model.ranges = ensureRangeSize(model.ranges, model.numberOfComponents);\r\n    }\r\n    range = model.ranges[rangeIdx];\r\n    if (range) {\r\n      model.rangeTuple[0] = range.min;\r\n      model.rangeTuple[1] = range.max;\r\n      return model.rangeTuple;\r\n    }\r\n\r\n    // Need to compute ranges...\r\n    range = computeRange(publicAPI.getData(), componentIndex, model.numberOfComponents);\r\n    model.ranges[rangeIdx] = range;\r\n    model.rangeTuple[0] = range.min;\r\n    model.rangeTuple[1] = range.max;\r\n    return model.rangeTuple;\r\n  };\r\n  publicAPI.setRange = (rangeValue, componentIndex) => {\r\n    if (!model.ranges) {\r\n      model.ranges = ensureRangeSize(model.ranges, model.numberOfComponents);\r\n    }\r\n    const range = {\r\n      min: rangeValue.min,\r\n      max: rangeValue.max\r\n    };\r\n    model.ranges[componentIndex] = range;\r\n    model.rangeTuple[0] = range.min;\r\n    model.rangeTuple[1] = range.max;\r\n    return model.rangeTuple;\r\n  };\r\n  publicAPI.setTuple = (idx, tuple) => {\r\n    const offset = idx * model.numberOfComponents;\r\n    for (let i = 0; i < model.numberOfComponents; i++) {\r\n      model.values[offset + i] = tuple[i];\r\n    }\r\n  };\r\n  publicAPI.setTuples = (idx, tuples) => {\r\n    let i = idx * model.numberOfComponents;\r\n    const last = Math.min(tuples.length, model.size - i);\r\n    for (let j = 0; j < last;) {\r\n      model.values[i++] = tuples[j++];\r\n    }\r\n  };\r\n  publicAPI.insertTuple = (idx, tuple) => {\r\n    if (model.size <= idx * model.numberOfComponents) {\r\n      model.size = (idx + 1) * model.numberOfComponents;\r\n      resize(idx + 1);\r\n    }\r\n    publicAPI.setTuple(idx, tuple);\r\n    return idx;\r\n  };\r\n  publicAPI.insertTuples = (idx, tuples) => {\r\n    const end = idx + tuples.length / model.numberOfComponents;\r\n    if (model.size < end * model.numberOfComponents) {\r\n      model.size = end * model.numberOfComponents;\r\n      resize(end);\r\n    }\r\n    publicAPI.setTuples(idx, tuples);\r\n    return end;\r\n  };\r\n  publicAPI.insertNextTuple = tuple => {\r\n    const idx = model.size / model.numberOfComponents;\r\n    return publicAPI.insertTuple(idx, tuple);\r\n  };\r\n  publicAPI.insertNextTuples = tuples => {\r\n    const idx = model.size / model.numberOfComponents;\r\n    return publicAPI.insertTuples(idx, tuples);\r\n  };\r\n  publicAPI.findTuple = function (tuple) {\r\n    let precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EPSILON;\r\n    for (let i = 0; i < model.size; i += model.numberOfComponents) {\r\n      if (Math.abs(tuple[0] - model.values[i]) <= precision) {\r\n        let match = true;\r\n        for (let j = 1; j < model.numberOfComponents; ++j) {\r\n          if (Math.abs(tuple[j] - model.values[i + j]) > precision) {\r\n            match = false;\r\n            break;\r\n          }\r\n        }\r\n        if (match) {\r\n          return i / model.numberOfComponents;\r\n        }\r\n      }\r\n    }\r\n    return -1;\r\n  };\r\n  publicAPI.getTuple = function (idx) {\r\n    let tupleToFill = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\r\n    const numberOfComponents = model.numberOfComponents || 1;\r\n    const offset = idx * numberOfComponents;\r\n    // Check most common component sizes first\r\n    // to avoid doing a for loop if possible\r\n    switch (numberOfComponents) {\r\n      case 4:\r\n        tupleToFill[3] = model.values[offset + 3];\r\n      // eslint-disable-next-line no-fallthrough\r\n      case 3:\r\n        tupleToFill[2] = model.values[offset + 2];\r\n      // eslint-disable-next-line no-fallthrough\r\n      case 2:\r\n        tupleToFill[1] = model.values[offset + 1];\r\n      // eslint-disable-next-line no-fallthrough\r\n      case 1:\r\n        tupleToFill[0] = model.values[offset];\r\n        break;\r\n      default:\r\n        for (let i = numberOfComponents - 1; i >= 0; --i) {\r\n          tupleToFill[i] = model.values[offset + i];\r\n        }\r\n    }\r\n    return tupleToFill;\r\n  };\r\n  publicAPI.getTuples = (fromId, toId) => {\r\n    const from = (fromId ?? 0) * model.numberOfComponents;\r\n    const to = (toId ?? publicAPI.getNumberOfTuples()) * model.numberOfComponents;\r\n    const arr = publicAPI.getData().subarray(from, to);\r\n    return arr.length > 0 ? arr : null;\r\n  };\r\n  publicAPI.getTupleLocation = function () {\r\n    let idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\r\n    return idx * model.numberOfComponents;\r\n  };\r\n  publicAPI.getNumberOfComponents = () => model.numberOfComponents;\r\n  publicAPI.getNumberOfValues = () => model.size;\r\n  publicAPI.getNumberOfTuples = () => model.size / model.numberOfComponents;\r\n  publicAPI.getDataType = () => model.dataType;\r\n  /* eslint-disable no-use-before-define */\r\n  publicAPI.newClone = () => newInstance({\r\n    empty: true,\r\n    name: model.name,\r\n    dataType: model.dataType,\r\n    numberOfComponents: model.numberOfComponents\r\n  });\r\n  /* eslint-enable no-use-before-define */\r\n\r\n  publicAPI.getName = () => {\r\n    if (!model.name) {\r\n      publicAPI.modified();\r\n      model.name = `vtkDataArray${publicAPI.getMTime()}`;\r\n    }\r\n    return model.name;\r\n  };\r\n  publicAPI.setData = (typedArray, numberOfComponents) => {\r\n    model.values = typedArray;\r\n    model.size = typedArray.length;\r\n    model.dataType = getDataType(typedArray);\r\n    if (numberOfComponents) {\r\n      model.numberOfComponents = numberOfComponents;\r\n    }\r\n    if (model.size % model.numberOfComponents !== 0) {\r\n      model.numberOfComponents = 1;\r\n    }\r\n    publicAPI.dataChange();\r\n  };\r\n\r\n  // Override serialization support\r\n  publicAPI.getState = () => {\r\n    if (model.deleted) {\r\n      return null;\r\n    }\r\n    const jsonArchive = {\r\n      ...model,\r\n      vtkClass: publicAPI.getClassName()\r\n    };\r\n\r\n    // Convert typed array to regular array\r\n    jsonArchive.values = Array.from(jsonArchive.values);\r\n    delete jsonArchive.buffer;\r\n\r\n    // Clean any empty data\r\n    Object.keys(jsonArchive).forEach(keyName => {\r\n      if (!jsonArchive[keyName]) {\r\n        delete jsonArchive[keyName];\r\n      }\r\n    });\r\n\r\n    // Sort resulting object by key name\r\n    const sortedObj = {};\r\n    Object.keys(jsonArchive).sort().forEach(name => {\r\n      sortedObj[name] = jsonArchive[name];\r\n    });\r\n\r\n    // Remove mtime\r\n    if (sortedObj.mtime) {\r\n      delete sortedObj.mtime;\r\n    }\r\n    return sortedObj;\r\n  };\r\n  publicAPI.deepCopy = other => {\r\n    // Retain current dataType and array reference before shallowCopy call.\r\n    const currentType = publicAPI.getDataType();\r\n    const currentArray = model.values;\r\n    publicAPI.shallowCopy(other);\r\n\r\n    // Avoid array reallocation if size already sufficient\r\n    // and dataTypes match.\r\n    if (currentArray?.length >= other.getNumberOfValues() && currentType === other.getDataType()) {\r\n      currentArray.set(other.getData());\r\n      model.values = currentArray;\r\n      publicAPI.dataChange();\r\n    } else {\r\n      publicAPI.setData(other.getData().slice());\r\n    }\r\n  };\r\n  publicAPI.interpolateTuple = (idx, source1, source1Idx, source2, source2Idx, t) => {\r\n    const numberOfComponents = model.numberOfComponents || 1;\r\n    if (numberOfComponents !== source1.getNumberOfComponents() || numberOfComponents !== source2.getNumberOfComponents()) {\r\n      vtkErrorMacro('numberOfComponents must match');\r\n    }\r\n    const tuple1 = source1.getTuple(source1Idx);\r\n    const tuple2 = source2.getTuple(source2Idx);\r\n    const out = [];\r\n    out.length = numberOfComponents;\r\n\r\n    // Check most common component sizes first\r\n    // to avoid doing a for loop if possible\r\n    switch (numberOfComponents) {\r\n      case 4:\r\n        out[3] = tuple1[3] + (tuple2[3] - tuple1[3]) * t;\r\n      // eslint-disable-next-line no-fallthrough\r\n      case 3:\r\n        out[2] = tuple1[2] + (tuple2[2] - tuple1[2]) * t;\r\n      // eslint-disable-next-line no-fallthrough\r\n      case 2:\r\n        out[1] = tuple1[1] + (tuple2[1] - tuple1[1]) * t;\r\n      // eslint-disable-next-line no-fallthrough\r\n      case 1:\r\n        out[0] = tuple1[0] + (tuple2[0] - tuple1[0]) * t;\r\n        break;\r\n      default:\r\n        for (let i = 0; i < numberOfComponents; i++) {\r\n          out[i] = tuple1[i] + (tuple2[i] - tuple1[i]) * t;\r\n        }\r\n    }\r\n    return publicAPI.insertTuple(idx, out);\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\n// size: The current size of the dataArray.\r\n// NOTE: The underlying typed array may be larger than 'size'.\r\nconst DEFAULT_VALUES = {\r\n  name: '',\r\n  numberOfComponents: 1,\r\n  dataType: DefaultDataType,\r\n  rangeTuple: [0, 0]\r\n  // size: undefined,\r\n  // values: null,\r\n  // ranges: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n  if (!model.empty && !model.values && !model.size) {\r\n    throw new TypeError('Cannot create vtkDataArray object without: size > 0, values');\r\n  }\r\n  if (!model.values) {\r\n    model.values = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_1__.a)(model.dataType, model.size);\r\n  } else if (Array.isArray(model.values)) {\r\n    model.values = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_1__.b)(model.dataType, model.values);\r\n  }\r\n  if (model.values) {\r\n    // Takes the size if provided (can be lower than `model.values`) otherwise the actual length of `values`.\r\n    model.size = model.size ?? model.values.length;\r\n    model.dataType = getDataType(model.values);\r\n  }\r\n\r\n  // Object methods\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_1__.o)(publicAPI, model);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_1__.s)(publicAPI, model, ['name', 'numberOfComponents']);\r\n  if (model.size % model.numberOfComponents !== 0) {\r\n    throw new RangeError('model.size is not a multiple of model.numberOfComponents');\r\n  }\r\n\r\n  // Object specific methods\r\n  vtkDataArray(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_1__.n)(extend, 'vtkDataArray');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkDataArray$1 = {\r\n  newInstance,\r\n  extend,\r\n  ...STATIC,\r\n  ..._DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/Core/DataArray.js?")},"./node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataTypeByteSize: () => (/* binding */ DataTypeByteSize),\n/* harmony export */   DefaultDataType: () => (/* binding */ DefaultDataType),\n/* harmony export */   VtkDataTypes: () => (/* binding */ VtkDataTypes),\n/* harmony export */   \"default\": () => (/* binding */ Constants)\n/* harmony export */ });\nconst DataTypeByteSize = {\r\n  Int8Array: 1,\r\n  Uint8Array: 1,\r\n  Uint8ClampedArray: 1,\r\n  Int16Array: 2,\r\n  Uint16Array: 2,\r\n  Int32Array: 4,\r\n  Uint32Array: 4,\r\n  Float32Array: 4,\r\n  Float64Array: 8\r\n};\r\nconst VtkDataTypes = {\r\n  VOID: '',\r\n  // not sure to know what that should be\r\n  CHAR: 'Int8Array',\r\n  SIGNED_CHAR: 'Int8Array',\r\n  UNSIGNED_CHAR: 'Uint8Array',\r\n  UNSIGNED_CHAR_CLAMPED: 'Uint8ClampedArray',\r\n  // should be used for VTK.js internal purpose only\r\n  SHORT: 'Int16Array',\r\n  UNSIGNED_SHORT: 'Uint16Array',\r\n  INT: 'Int32Array',\r\n  UNSIGNED_INT: 'Uint32Array',\r\n  FLOAT: 'Float32Array',\r\n  DOUBLE: 'Float64Array'\r\n};\r\nconst DefaultDataType = VtkDataTypes.FLOAT;\r\nvar Constants = {\r\n  DefaultDataType,\r\n  DataTypeByteSize,\r\n  VtkDataTypes\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js?")},"./node_modules/@kitware/vtk.js/Common/Core/Endian.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENDIANNESS: () => (/* binding */ ENDIANNESS),\n/* harmony export */   \"default\": () => (/* binding */ Endian),\n/* harmony export */   getEndianness: () => (/* binding */ getEndianness),\n/* harmony export */   swapBytes: () => (/* binding */ swapBytes)\n/* harmony export */ });\nfunction getEndianness() {\r\n  const a = new ArrayBuffer(4);\r\n  const b = new Uint8Array(a);\r\n  const c = new Uint32Array(a);\r\n  b[0] = 0xa1;\r\n  b[1] = 0xb2;\r\n  b[2] = 0xc3;\r\n  b[3] = 0xd4;\r\n  if (c[0] === 0xd4c3b2a1) return 'LittleEndian';\r\n  if (c[0] === 0xa1b2c3d4) return 'BigEndian';\r\n  return null;\r\n}\r\nconst ENDIANNESS = getEndianness();\r\nfunction swapBytes(buffer, wordSize) {\r\n  if (wordSize < 2) {\r\n    return;\r\n  }\r\n  const bytes = new Int8Array(buffer);\r\n  const size = bytes.length;\r\n  const tempBuffer = [];\r\n  for (let i = 0; i < size; i += wordSize) {\r\n    for (let j = 0; j < wordSize; j++) {\r\n      tempBuffer.push(bytes[i + j]);\r\n    }\r\n    for (let j = 0; j < wordSize; j++) {\r\n      bytes[i + j] = tempBuffer.pop();\r\n    }\r\n  }\r\n}\r\nvar Endian = {\r\n  ENDIANNESS,\r\n  getEndianness,\r\n  swapBytes\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/Core/Endian.js?")},"./node_modules/@kitware/vtk.js/Common/Core/HalfFloat.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ HalfFloat)\n/* harmony export */ });\n/* eslint-disable no-bitwise */\r\n\r\nconst floatView = new Float32Array(1);\r\nconst int32View = new Int32Array(floatView.buffer);\r\n\r\n/* eslint-disable no-bitwise */\r\n/* This method is faster than the OpenEXR implementation (very often\r\n * used, eg. in Ogre), with the additional benefit of rounding, inspired\r\n * by James Tursa?s half-precision code. */\r\nfunction toHalf(val) {\r\n  floatView[0] = val;\r\n  const x = int32View[0];\r\n  let bits = x >> 16 & 0x8000; /* Get the sign */\r\n  let m = x >> 12 & 0x07ff; /* Keep one extra bit for rounding */\r\n  const e = x >> 23 & 0xff; /* Using int is faster here */\r\n\r\n  /* If zero, or denormal, or exponent underflows too much for a denormal\r\n   * half, return signed zero. */\r\n  if (e < 103) {\r\n    return bits;\r\n  }\r\n\r\n  /* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\r\n  if (e > 142) {\r\n    bits |= 0x7c00;\r\n    /* If exponent was 0xff and one mantissa bit was set, it means NaN,\r\n     * not Inf, so make sure we set one mantissa bit too. */\r\n    bits |= (e === 255 ? 0 : 1) && x & 0x007fffff;\r\n    return bits;\r\n  }\r\n\r\n  /* If exponent underflows but not too much, return a denormal */\r\n  if (e < 113) {\r\n    m |= 0x0800;\r\n    /* Extra rounding may overflow and set mantissa to 0 and exponent\r\n     * to 1, which is OK. */\r\n    bits |= (m >> 114 - e) + (m >> 113 - e & 1);\r\n    return bits;\r\n  }\r\n  bits |= e - 112 << 10 | m >> 1;\r\n  /* Extra rounding. An overflow will set mantissa to 0 and increment\r\n   * the exponent, which is OK. */\r\n  bits += m & 1;\r\n  return bits;\r\n}\r\nfunction fromHalf(h) {\r\n  const s = (h & 0x8000) >> 15;\r\n  const e = (h & 0x7c00) >> 10;\r\n  const f = h & 0x03ff;\r\n  if (e === 0) {\r\n    return (s ? -1 : 1) * 2 ** -14 * (f / 2 ** 10);\r\n  }\r\n  if (e === 0x1f) {\r\n    return f ? NaN : (s ? -1 : 1) * Infinity;\r\n  }\r\n  return (s ? -1 : 1) * 2 ** (e - 15) * (1 + f / 2 ** 10);\r\n}\r\nvar HalfFloat = {\r\n  fromHalf,\r\n  toHalf\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/Core/HalfFloat.js?')},"./node_modules/@kitware/vtk.js/Common/Core/LookupTable.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkLookupTable$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Math_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n/* harmony import */ var _ScalarsToColors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ScalarsToColors.js */ \"./node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors.js\");\n/* harmony import */ var _ScalarsToColors_Constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ScalarsToColors/Constants.js */ \"./node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors/Constants.js\");\n/* harmony import */ var _DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DataArray/Constants.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\n\r\n// Add module-level functions or api that you want to expose statically via\r\n// the next section...\r\n\r\n// ----------------------------------------------------------------------------\r\n// Static API\r\n// ----------------------------------------------------------------------------\r\n\r\nconst BELOW_RANGE_COLOR_INDEX = 0;\r\nconst ABOVE_RANGE_COLOR_INDEX = 1;\r\nconst NAN_COLOR_INDEX = 2;\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkMyClass methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkLookupTable(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkLookupTable');\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Description:\r\n  // Return true if all of the values defining the mapping have an opacity\r\n  // equal to 1. Default implementation return true.\r\n  publicAPI.isOpaque = () => {\r\n    if (model.opaqueFlagBuildTime.getMTime() < publicAPI.getMTime()) {\r\n      let opaque = true;\r\n      if (model.nanColor[3] < 1.0) {\r\n        opaque = 0;\r\n      }\r\n      if (model.useBelowRangeColor && model.belowRangeColor[3] < 1.0) {\r\n        opaque = 0;\r\n      }\r\n      if (model.useAboveRangeColor && model.aboveRangeColor[3] < 1.0) {\r\n        opaque = 0;\r\n      }\r\n      for (let i = 3; i < model.table.length && opaque; i += 4) {\r\n        if (model.table[i] < 255) {\r\n          opaque = false;\r\n        }\r\n      }\r\n      model.opaqueFlag = opaque;\r\n      model.opaqueFlagBuildTime.modified();\r\n    }\r\n    return model.opaqueFlag;\r\n  };\r\n  publicAPI.usingLogScale = () => false;\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.getNumberOfAvailableColors = () => model.table.length / 4;\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Apply shift/scale to the scalar value v and return the index.\r\n  publicAPI.linearIndexLookup = (v, p) => {\r\n    let dIndex = 0;\r\n    const nv = Number(v);\r\n    if (nv < p.range[0]) {\r\n      dIndex = p.maxIndex + BELOW_RANGE_COLOR_INDEX + 1.5;\r\n    } else if (nv > p.range[1]) {\r\n      dIndex = p.maxIndex + ABOVE_RANGE_COLOR_INDEX + 1.5;\r\n    } else {\r\n      dIndex = (nv + p.shift) * p.scale;\r\n\r\n      // This conditional is needed because when v is very close to\r\n      // p.Range[1], it may map above p.MaxIndex in the linear mapping\r\n      // above.\r\n      dIndex = dIndex < p.maxIndex ? dIndex : p.maxIndex;\r\n    }\r\n    return Math.floor(dIndex);\r\n  };\r\n  publicAPI.linearLookup = (v, table, p) => {\r\n    let index = 0;\r\n    if ((0,_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.i)(v)) {\r\n      index = Math.floor(p.maxIndex + 1.5 + NAN_COLOR_INDEX);\r\n    } else {\r\n      index = publicAPI.linearIndexLookup(v, p);\r\n    }\r\n    const offset = 4 * index;\r\n    return table.slice(offset, offset + 4);\r\n  };\r\n  publicAPI.indexedLookupFunction = (v, table, p) => {\r\n    let index = publicAPI.getAnnotatedValueIndexInternal(v);\r\n    if (index === -1) {\r\n      index = model.numberOfColors + NAN_COLOR_INDEX;\r\n    }\r\n    const offset = 4 * index;\r\n    return [table[offset], table[offset + 1], table[offset + 2], table[offset + 3]];\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.lookupShiftAndScale = (range, p) => {\r\n    p.shift = -range[0];\r\n    p.scale = Number.MAX_VALUE;\r\n    if (range[1] > range[0]) {\r\n      p.scale = (p.maxIndex + 1) / (range[1] - range[0]);\r\n    }\r\n  };\r\n\r\n  // Public API methods\r\n  publicAPI.mapScalarsThroughTable = (input, output, outFormat, inputOffset) => {\r\n    let lookupFunc = publicAPI.linearLookup;\r\n    if (model.indexedLookup) {\r\n      lookupFunc = publicAPI.indexedLookupFunction;\r\n    }\r\n    const trange = publicAPI.getMappingRange();\r\n    const p = {\r\n      maxIndex: publicAPI.getNumberOfColors() - 1,\r\n      range: trange,\r\n      shift: 0.0,\r\n      scale: 0.0\r\n    };\r\n    publicAPI.lookupShiftAndScale(trange, p);\r\n    const alpha = publicAPI.getAlpha();\r\n    const length = input.getNumberOfTuples();\r\n    const inIncr = input.getNumberOfComponents();\r\n    const outputV = output.getData();\r\n    const inputV = input.getData();\r\n    if (alpha >= 1.0) {\r\n      if (outFormat === _ScalarsToColors_Constants_js__WEBPACK_IMPORTED_MODULE_3__.ScalarMappingTarget.RGBA) {\r\n        for (let i = 0; i < length; i++) {\r\n          const cptr = lookupFunc(inputV[i * inIncr + inputOffset], model.table, p);\r\n          outputV[i * 4] = cptr[0];\r\n          outputV[i * 4 + 1] = cptr[1];\r\n          outputV[i * 4 + 2] = cptr[2];\r\n          outputV[i * 4 + 3] = cptr[3];\r\n        }\r\n      }\r\n    } else {\r\n      /* eslint-disable no-lonely-if */\r\n      if (outFormat === _ScalarsToColors_Constants_js__WEBPACK_IMPORTED_MODULE_3__.ScalarMappingTarget.RGBA) {\r\n        for (let i = 0; i < length; i++) {\r\n          const cptr = lookupFunc(inputV[i * inIncr + inputOffset], model.table, p);\r\n          outputV[i * 4] = cptr[0];\r\n          outputV[i * 4 + 1] = cptr[1];\r\n          outputV[i * 4 + 2] = cptr[2];\r\n          outputV[i * 4 + 3] = Math.floor(cptr[3] * alpha + 0.5);\r\n        }\r\n      }\r\n    } // alpha blending\r\n  };\r\n\r\n  publicAPI.forceBuild = () => {\r\n    let hinc = 0.0;\r\n    let sinc = 0.0;\r\n    let vinc = 0.0;\r\n    let ainc = 0.0;\r\n    const maxIndex = model.numberOfColors - 1;\r\n    if (maxIndex) {\r\n      hinc = (model.hueRange[1] - model.hueRange[0]) / maxIndex;\r\n      sinc = (model.saturationRange[1] - model.saturationRange[0]) / maxIndex;\r\n      vinc = (model.valueRange[1] - model.valueRange[0]) / maxIndex;\r\n      ainc = (model.alphaRange[1] - model.alphaRange[0]) / maxIndex;\r\n    }\r\n    model.table.length = 4 * maxIndex + 16;\r\n    const hsv = [];\r\n    const rgba = [];\r\n    for (let i = 0; i <= maxIndex; i++) {\r\n      hsv[0] = model.hueRange[0] + i * hinc;\r\n      hsv[1] = model.saturationRange[0] + i * sinc;\r\n      hsv[2] = model.valueRange[0] + i * vinc;\r\n      (0,_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.h)(hsv, rgba);\r\n      rgba[3] = model.alphaRange[0] + i * ainc;\r\n\r\n      //  case VTK_RAMP_LINEAR:\r\n      model.table[i * 4] = rgba[0] * 255.0 + 0.5;\r\n      model.table[i * 4 + 1] = rgba[1] * 255.0 + 0.5;\r\n      model.table[i * 4 + 2] = rgba[2] * 255.0 + 0.5;\r\n      model.table[i * 4 + 3] = rgba[3] * 255.0 + 0.5;\r\n    }\r\n    publicAPI.buildSpecialColors();\r\n    model.buildTime.modified();\r\n  };\r\n  publicAPI.setTable = table => {\r\n    // Handle JS array (assume 2D array)\r\n    if (Array.isArray(table)) {\r\n      const nbComponents = table[0].length;\r\n      model.numberOfColors = table.length;\r\n      const colorOffset = 4 - nbComponents;\r\n      let offset = 0;\r\n      // fill table\r\n      for (let i = 0; i < model.numberOfColors; i++) {\r\n        model.table[i * 4] = 255;\r\n        model.table[i * 4 + 1] = 255;\r\n        model.table[i * 4 + 2] = 255;\r\n        model.table[i * 4 + 3] = 255;\r\n      }\r\n      // extract colors\r\n      for (let i = 0; i < table.length; i++) {\r\n        const color = table[i];\r\n        for (let j = 0; j < nbComponents; j++) {\r\n          model.table[offset++] = color[j];\r\n        }\r\n        offset += colorOffset;\r\n      }\r\n      publicAPI.buildSpecialColors();\r\n      model.insertTime.modified();\r\n      publicAPI.modified();\r\n      return true;\r\n    }\r\n    if (table.getNumberOfComponents() !== 4) {\r\n      vtkErrorMacro('Expected 4 components for RGBA colors');\r\n      return false;\r\n    }\r\n    if (table.getDataType() !== _DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_4__.VtkDataTypes.UNSIGNED_CHAR) {\r\n      vtkErrorMacro('Expected unsigned char values for RGBA colors');\r\n      return false;\r\n    }\r\n    model.numberOfColors = table.getNumberOfTuples();\r\n    const data = table.getData();\r\n    model.table.length = data.length;\r\n    for (let i = 0; i < data.length; i++) {\r\n      model.table[i] = data[i];\r\n    }\r\n    publicAPI.buildSpecialColors();\r\n    model.insertTime.modified();\r\n    publicAPI.modified();\r\n    return true;\r\n  };\r\n  publicAPI.buildSpecialColors = () => {\r\n    // Add \"special\" colors (NaN, below range, above range) to table here.\r\n    const {\r\n      numberOfColors\r\n    } = model;\r\n    const tptr = model.table;\r\n    let base = (numberOfColors + BELOW_RANGE_COLOR_INDEX) * 4;\r\n\r\n    // Below range color\r\n    if (model.useBelowRangeColor || numberOfColors === 0) {\r\n      tptr[base] = model.belowRangeColor[0] * 255.0 + 0.5;\r\n      tptr[base + 1] = model.belowRangeColor[1] * 255.0 + 0.5;\r\n      tptr[base + 2] = model.belowRangeColor[2] * 255.0 + 0.5;\r\n      tptr[base + 3] = model.belowRangeColor[3] * 255.0 + 0.5;\r\n    } else {\r\n      // Duplicate the first color in the table.\r\n      tptr[base] = tptr[0];\r\n      tptr[base + 1] = tptr[1];\r\n      tptr[base + 2] = tptr[2];\r\n      tptr[base + 3] = tptr[3];\r\n    }\r\n\r\n    // Above range color\r\n    base = (numberOfColors + ABOVE_RANGE_COLOR_INDEX) * 4;\r\n    if (model.useAboveRangeColor || numberOfColors === 0) {\r\n      tptr[base] = model.aboveRangeColor[0] * 255.0 + 0.5;\r\n      tptr[base + 1] = model.aboveRangeColor[1] * 255.0 + 0.5;\r\n      tptr[base + 2] = model.aboveRangeColor[2] * 255.0 + 0.5;\r\n      tptr[base + 3] = model.aboveRangeColor[3] * 255.0 + 0.5;\r\n    } else {\r\n      // Duplicate the last color in the table.\r\n      tptr[base] = tptr[4 * (numberOfColors - 1) + 0];\r\n      tptr[base + 1] = tptr[4 * (numberOfColors - 1) + 1];\r\n      tptr[base + 2] = tptr[4 * (numberOfColors - 1) + 2];\r\n      tptr[base + 3] = tptr[4 * (numberOfColors - 1) + 3];\r\n    }\r\n\r\n    // Always use NanColor\r\n    base = (numberOfColors + NAN_COLOR_INDEX) * 4;\r\n    tptr[base] = model.nanColor[0] * 255.0 + 0.5;\r\n    tptr[base + 1] = model.nanColor[1] * 255.0 + 0.5;\r\n    tptr[base + 2] = model.nanColor[2] * 255.0 + 0.5;\r\n    tptr[base + 3] = model.nanColor[3] * 255.0 + 0.5;\r\n  };\r\n  publicAPI.build = () => {\r\n    if (model.table.length < 1 || publicAPI.getMTime() > model.buildTime.getMTime() && model.insertTime.getMTime() <= model.buildTime.getMTime()) {\r\n      publicAPI.forceBuild();\r\n    }\r\n  };\r\n  if (model.table.length > 0) {\r\n    // Ensure that special colors are properly included in the table\r\n    publicAPI.buildSpecialColors();\r\n\r\n    // ensure insertTime is more recently modified than buildTime if\r\n    // a table is provided via the constructor\r\n    model.insertTime.modified();\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  numberOfColors: 256,\r\n  // table: null,\r\n\r\n  hueRange: [0.0, 0.66667],\r\n  saturationRange: [1.0, 1.0],\r\n  valueRange: [1.0, 1.0],\r\n  alphaRange: [1.0, 1.0],\r\n  nanColor: [0.5, 0.0, 0.0, 1.0],\r\n  belowRangeColor: [0.0, 0.0, 0.0, 1.0],\r\n  aboveRangeColor: [1.0, 1.0, 1.0, 1.0],\r\n  useAboveRangeColor: false,\r\n  useBelowRangeColor: false,\r\n  alpha: 1.0\r\n  // buildTime: null,\r\n  // opaqueFlagBuildTime: null,\r\n  // insertTime: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _ScalarsToColors_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(publicAPI, model, initialValues);\r\n\r\n  // Internal objects initialization\r\n  if (!model.table) {\r\n    model.table = [];\r\n  }\r\n  model.buildTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.buildTime);\r\n  model.opaqueFlagBuildTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.opaqueFlagBuildTime, {\r\n    mtime: 0\r\n  });\r\n  model.insertTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.insertTime, {\r\n    mtime: 0\r\n  });\r\n\r\n  // Create get-only macros\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['buildTime']);\r\n\r\n  // Create get-set macros\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['numberOfColors', 'useAboveRangeColor', 'useBelowRangeColor']);\r\n\r\n  // Create set macros for array (needs to know size)\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setArray(publicAPI, model, ['alphaRange', 'hueRange', 'saturationRange', 'valueRange'], 2);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor'], 4);\r\n\r\n  // Create get macros for array\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.getArray(publicAPI, model, ['hueRange', 'saturationRange', 'valueRange', 'alphaRange', 'nanColor', 'belowRangeColor', 'aboveRangeColor']);\r\n\r\n  // For more macro methods, see \"Sources/macros.js\"\r\n\r\n  // Object specific methods\r\n  vtkLookupTable(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkLookupTable');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkLookupTable$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/Core/LookupTable.js?")},"./node_modules/@kitware/vtk.js/Common/Core/Math/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EPSILON: () => (/* binding */ EPSILON),\n/* harmony export */   IDENTITY: () => (/* binding */ IDENTITY),\n/* harmony export */   IDENTITY_3X3: () => (/* binding */ IDENTITY_3X3),\n/* harmony export */   VTK_SMALL_NUMBER: () => (/* binding */ VTK_SMALL_NUMBER),\n/* harmony export */   "default": () => (/* binding */ Constants)\n/* harmony export */ });\nconst IDENTITY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\nconst IDENTITY_3X3 = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\nconst EPSILON = 1e-6;\r\nconst VTK_SMALL_NUMBER = 1.0e-12;\r\nvar Constants = {\r\n  IDENTITY,\r\n  IDENTITY_3X3,\r\n  EPSILON,\r\n  VTK_SMALL_NUMBER\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/Core/Math/Constants.js?')},"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $: () => (/* binding */ max),\n/* harmony export */   A: () => (/* binding */ degreesFromRadians),\n/* harmony export */   B: () => (/* binding */ areEquals),\n/* harmony export */   C: () => (/* binding */ clampValue),\n/* harmony export */   D: () => (/* binding */ arrayRange),\n/* harmony export */   E: () => (/* binding */ getMajorAxisIndex),\n/* harmony export */   F: () => (/* binding */ createUninitializedBounds),\n/* harmony export */   G: () => (/* binding */ isIdentity3x3),\n/* harmony export */   H: () => (/* binding */ identity),\n/* harmony export */   I: () => (/* binding */ multiplyMatrix),\n/* harmony export */   J: () => (/* binding */ floor),\n/* harmony export */   K: () => (/* binding */ isInf),\n/* harmony export */   L: () => (/* binding */ rgb2hsv),\n/* harmony export */   M: () => (/* binding */ rgb2lab),\n/* harmony export */   N: () => (/* binding */ lab2rgb),\n/* harmony export */   O: () => (/* binding */ round),\n/* harmony export */   P: () => (/* binding */ normalize2D),\n/* harmony export */   Q: () => (/* binding */ nearestPowerOfTwo),\n/* harmony export */   R: () => (/* binding */ multiply3x3_vect3),\n/* harmony export */   S: () => (/* binding */ getSparseOrthogonalMatrix),\n/* harmony export */   T: () => (/* binding */ areBoundsInitialized),\n/* harmony export */   U: () => (/* binding */ isPowerOfTwo),\n/* harmony export */   V: () => (/* binding */ angleBetweenVectors),\n/* harmony export */   W: () => (/* binding */ signedAngleBetweenVectors),\n/* harmony export */   X: () => (/* binding */ createArray),\n/* harmony export */   Y: () => (/* binding */ Pi),\n/* harmony export */   Z: () => (/* binding */ ceil),\n/* harmony export */   _: () => (/* binding */ min),\n/* harmony export */   a: () => (/* binding */ areMatricesEqual),\n/* harmony export */   a$: () => (/* binding */ float2CssRGBA),\n/* harmony export */   a0: () => (/* binding */ arrayMin),\n/* harmony export */   a1: () => (/* binding */ arrayMax),\n/* harmony export */   a2: () => (/* binding */ ceilLog2),\n/* harmony export */   a3: () => (/* binding */ factorial),\n/* harmony export */   a4: () => (/* binding */ binomial),\n/* harmony export */   a5: () => (/* binding */ beginCombination),\n/* harmony export */   a6: () => (/* binding */ nextCombination),\n/* harmony export */   a7: () => (/* binding */ randomSeed),\n/* harmony export */   a8: () => (/* binding */ getSeed),\n/* harmony export */   a9: () => (/* binding */ gaussian),\n/* harmony export */   aA: () => (/* binding */ diagonalize3x3),\n/* harmony export */   aB: () => (/* binding */ singularValueDecomposition3x3),\n/* harmony export */   aC: () => (/* binding */ luFactorLinearSystem),\n/* harmony export */   aD: () => (/* binding */ luSolveLinearSystem),\n/* harmony export */   aE: () => (/* binding */ invertMatrix),\n/* harmony export */   aF: () => (/* binding */ estimateMatrixCondition),\n/* harmony export */   aG: () => (/* binding */ solveHomogeneousLeastSquares),\n/* harmony export */   aH: () => (/* binding */ solveLeastSquares),\n/* harmony export */   aI: () => (/* binding */ hex2float),\n/* harmony export */   aJ: () => (/* binding */ lab2xyz),\n/* harmony export */   aK: () => (/* binding */ xyz2lab),\n/* harmony export */   aL: () => (/* binding */ xyz2rgb),\n/* harmony export */   aM: () => (/* binding */ rgb2xyz),\n/* harmony export */   aN: () => (/* binding */ computeBoundsFromPoints),\n/* harmony export */   aO: () => (/* binding */ clampAndNormalizeValue),\n/* harmony export */   aP: () => (/* binding */ getScalarTypeFittingRange),\n/* harmony export */   aQ: () => (/* binding */ getAdjustedScalarRange),\n/* harmony export */   aR: () => (/* binding */ extentIsWithinOtherExtent),\n/* harmony export */   aS: () => (/* binding */ boundsIsWithinOtherBounds),\n/* harmony export */   aT: () => (/* binding */ pointIsWithinBounds),\n/* harmony export */   aU: () => (/* binding */ solve3PointCircle),\n/* harmony export */   aV: () => (/* binding */ inf),\n/* harmony export */   aW: () => (/* binding */ negInf),\n/* harmony export */   aX: () => (/* binding */ isFinite),\n/* harmony export */   aY: () => (/* binding */ isNaN),\n/* harmony export */   aZ: () => (/* binding */ floatToHex2),\n/* harmony export */   a_: () => (/* binding */ floatRGB2HexCode),\n/* harmony export */   aa: () => (/* binding */ multiplyScalar2D),\n/* harmony export */   ab: () => (/* binding */ multiplyAccumulate2D),\n/* harmony export */   ac: () => (/* binding */ outer),\n/* harmony export */   ad: () => (/* binding */ projectVector),\n/* harmony export */   ae: () => (/* binding */ dot2D),\n/* harmony export */   af: () => (/* binding */ projectVector2D),\n/* harmony export */   ag: () => (/* binding */ gaussianAmplitude),\n/* harmony export */   ah: () => (/* binding */ gaussianWeight),\n/* harmony export */   ai: () => (/* binding */ outer2D),\n/* harmony export */   aj: () => (/* binding */ norm2D),\n/* harmony export */   ak: () => (/* binding */ rowsToMat4),\n/* harmony export */   al: () => (/* binding */ columnsToMat4),\n/* harmony export */   am: () => (/* binding */ columnsToMat3),\n/* harmony export */   an: () => (/* binding */ LUFactor3x3),\n/* harmony export */   ao: () => (/* binding */ LUSolve3x3),\n/* harmony export */   ap: () => (/* binding */ linearSolve3x3),\n/* harmony export */   aq: () => (/* binding */ multiply3x3_mat3),\n/* harmony export */   ar: () => (/* binding */ transpose3x3),\n/* harmony export */   as: () => (/* binding */ invert3x3),\n/* harmony export */   at: () => (/* binding */ identity3x3),\n/* harmony export */   au: () => (/* binding */ isIdentity),\n/* harmony export */   av: () => (/* binding */ quaternionToMatrix3x3),\n/* harmony export */   aw: () => (/* binding */ roundNumber),\n/* harmony export */   ax: () => (/* binding */ matrix3x3ToQuaternion),\n/* harmony export */   ay: () => (/* binding */ multiplyQuaternion),\n/* harmony export */   az: () => (/* binding */ orthogonalize3x3),\n/* harmony export */   b: () => (/* binding */ roundVector),\n/* harmony export */   c: () => (/* binding */ clampVector),\n/* harmony export */   d: () => (/* binding */ dot),\n/* harmony export */   e: () => (/* binding */ distance2BetweenPoints),\n/* harmony export */   f: () => (/* binding */ vtkMath),\n/* harmony export */   g: () => (/* binding */ solveLinearSystem),\n/* harmony export */   h: () => (/* binding */ hsv2rgb),\n/* harmony export */   i: () => (/* binding */ isNan),\n/* harmony export */   j: () => (/* binding */ cross),\n/* harmony export */   k: () => (/* binding */ add),\n/* harmony export */   l: () => (/* binding */ normalize),\n/* harmony export */   m: () => (/* binding */ multiplyAccumulate),\n/* harmony export */   n: () => (/* binding */ norm),\n/* harmony export */   o: () => (/* binding */ determinant2x2),\n/* harmony export */   p: () => (/* binding */ jacobiN),\n/* harmony export */   q: () => (/* binding */ perpendiculars),\n/* harmony export */   r: () => (/* binding */ radiansFromDegrees),\n/* harmony export */   s: () => (/* binding */ subtract),\n/* harmony export */   t: () => (/* binding */ jacobi),\n/* harmony export */   u: () => (/* binding */ uninitializeBounds),\n/* harmony export */   v: () => (/* binding */ vtkMath$1),\n/* harmony export */   w: () => (/* binding */ multiplyScalar),\n/* harmony export */   x: () => (/* binding */ random),\n/* harmony export */   y: () => (/* binding */ determinant3x3),\n/* harmony export */   z: () => (/* binding */ rowsToMat3)\n/* harmony export */ });\n/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! seedrandom */ \"./node_modules/seedrandom/index.js\");\n/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(seedrandom__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Constants.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/Constants.js\");\n\r\n\r\n\r\n\r\nconst {\r\n  vtkErrorMacro,\r\n  vtkWarningMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m;\r\n\r\n// ----------------------------------------------------------------------------\r\n/* eslint-disable camelcase                                                  */\r\n/* eslint-disable no-cond-assign                                             */\r\n/* eslint-disable no-bitwise                                                 */\r\n/* eslint-disable no-multi-assign                                            */\r\n// ----------------------------------------------------------------------------\r\nlet randomSeedValue = 0;\r\nconst VTK_MAX_ROTATIONS = 20;\r\nfunction notImplemented(method) {\r\n  return () => vtkErrorMacro(`vtkMath::${method} - NOT IMPLEMENTED`);\r\n}\r\n\r\n// Swap rows for n by n matrix\r\nfunction swapRowsMatrix_nxn(matrix, n, row1, row2) {\r\n  let tmp;\r\n  for (let i = 0; i < n; i++) {\r\n    tmp = matrix[row1 * n + i];\r\n    matrix[row1 * n + i] = matrix[row2 * n + i];\r\n    matrix[row2 * n + i] = tmp;\r\n  }\r\n}\r\n\r\n// Swap columns for n by n matrix\r\nfunction swapColumnsMatrix_nxn(matrix, n, column1, column2) {\r\n  let tmp;\r\n  for (let i = 0; i < n; i++) {\r\n    tmp = matrix[i * n + column1];\r\n    matrix[i * n + column1] = matrix[i * n + column2];\r\n    matrix[i * n + column2] = tmp;\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction createArray() {\r\n  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\r\n  // faster than Array.from and/or while loop\r\n  const res = Array(size);\r\n  for (let i = 0; i < size; ++i) {\r\n    res[i] = 0;\r\n  }\r\n  return res;\r\n}\r\nconst Pi = () => Math.PI;\r\nfunction radiansFromDegrees(deg) {\r\n  return deg / 180 * Math.PI;\r\n}\r\nfunction degreesFromRadians(rad) {\r\n  return rad * 180 / Math.PI;\r\n}\r\nconst {\r\n  round,\r\n  floor,\r\n  ceil,\r\n  min,\r\n  max\r\n} = Math;\r\nfunction arrayMin(arr) {\r\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n  let stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\r\n  let minValue = Infinity;\r\n  for (let i = offset, len = arr.length; i < len; i += stride) {\r\n    if (arr[i] < minValue) {\r\n      minValue = arr[i];\r\n    }\r\n  }\r\n  return minValue;\r\n}\r\nfunction arrayMax(arr) {\r\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n  let stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\r\n  let maxValue = -Infinity;\r\n  for (let i = offset, len = arr.length; i < len; i += stride) {\r\n    if (maxValue < arr[i]) {\r\n      maxValue = arr[i];\r\n    }\r\n  }\r\n  return maxValue;\r\n}\r\nfunction arrayRange(arr) {\r\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n  let stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\r\n  let minValue = Infinity;\r\n  let maxValue = -Infinity;\r\n  for (let i = offset, len = arr.length; i < len; i += stride) {\r\n    if (arr[i] < minValue) {\r\n      minValue = arr[i];\r\n    }\r\n    if (maxValue < arr[i]) {\r\n      maxValue = arr[i];\r\n    }\r\n  }\r\n  return [minValue, maxValue];\r\n}\r\nconst ceilLog2 = notImplemented('ceilLog2');\r\nconst factorial = notImplemented('factorial');\r\nfunction nearestPowerOfTwo(xi) {\r\n  let v = 1;\r\n  while (v < xi) {\r\n    v *= 2;\r\n  }\r\n  return v;\r\n}\r\nfunction isPowerOfTwo(x) {\r\n  return x === nearestPowerOfTwo(x);\r\n}\r\nfunction binomial(m, n) {\r\n  let r = 1;\r\n  for (let i = 1; i <= n; ++i) {\r\n    r *= (m - i + 1) / i;\r\n  }\r\n  return Math.floor(r);\r\n}\r\nfunction beginCombination(m, n) {\r\n  if (m < n) {\r\n    return 0;\r\n  }\r\n  const r = createArray(n);\r\n  for (let i = 0; i < n; ++i) {\r\n    r[i] = i;\r\n  }\r\n  return r;\r\n}\r\nfunction nextCombination(m, n, r) {\r\n  let status = 0;\r\n  for (let i = n - 1; i >= 0; --i) {\r\n    if (r[i] < m - n + i) {\r\n      let j = r[i] + 1;\r\n      while (i < n) {\r\n        r[i++] = j++;\r\n      }\r\n      status = 1;\r\n      break;\r\n    }\r\n  }\r\n  return status;\r\n}\r\nfunction randomSeed(seed) {\r\n  seedrandom__WEBPACK_IMPORTED_MODULE_0___default()(`${seed}`, {\r\n    global: true\r\n  });\r\n  randomSeedValue = seed;\r\n}\r\nfunction getSeed() {\r\n  return randomSeedValue;\r\n}\r\nfunction random() {\r\n  let minValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n  let maxValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\r\n  const delta = maxValue - minValue;\r\n  return minValue + delta * Math.random();\r\n}\r\nconst gaussian = notImplemented('gaussian');\r\n\r\n// Vect3 operations\r\nfunction add(a, b, out) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\nfunction subtract(a, b, out) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\nfunction multiplyScalar(vec, scalar) {\r\n  vec[0] *= scalar;\r\n  vec[1] *= scalar;\r\n  vec[2] *= scalar;\r\n  return vec;\r\n}\r\nfunction multiplyScalar2D(vec, scalar) {\r\n  vec[0] *= scalar;\r\n  vec[1] *= scalar;\r\n  return vec;\r\n}\r\nfunction multiplyAccumulate(a, b, scalar, out) {\r\n  out[0] = a[0] + b[0] * scalar;\r\n  out[1] = a[1] + b[1] * scalar;\r\n  out[2] = a[2] + b[2] * scalar;\r\n  return out;\r\n}\r\nfunction multiplyAccumulate2D(a, b, scalar, out) {\r\n  out[0] = a[0] + b[0] * scalar;\r\n  out[1] = a[1] + b[1] * scalar;\r\n  return out;\r\n}\r\nfunction dot(x, y) {\r\n  return x[0] * y[0] + x[1] * y[1] + x[2] * y[2];\r\n}\r\nfunction outer(x, y, out_3x3) {\r\n  out_3x3[0] = x[0] * y[0];\r\n  out_3x3[1] = x[0] * y[1];\r\n  out_3x3[2] = x[0] * y[2];\r\n  out_3x3[3] = x[1] * y[0];\r\n  out_3x3[4] = x[1] * y[1];\r\n  out_3x3[5] = x[1] * y[2];\r\n  out_3x3[6] = x[2] * y[0];\r\n  out_3x3[7] = x[2] * y[1];\r\n  out_3x3[8] = x[2] * y[2];\r\n}\r\nfunction cross(x, y, out) {\r\n  const Zx = x[1] * y[2] - x[2] * y[1];\r\n  const Zy = x[2] * y[0] - x[0] * y[2];\r\n  const Zz = x[0] * y[1] - x[1] * y[0];\r\n  out[0] = Zx;\r\n  out[1] = Zy;\r\n  out[2] = Zz;\r\n  return out;\r\n}\r\nfunction norm(x) {\r\n  let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\r\n  switch (n) {\r\n    case 1:\r\n      return Math.abs(x);\r\n    case 2:\r\n      return Math.sqrt(x[0] * x[0] + x[1] * x[1]);\r\n    case 3:\r\n      return Math.sqrt(x[0] * x[0] + x[1] * x[1] + x[2] * x[2]);\r\n    default:\r\n      {\r\n        let sum = 0;\r\n        for (let i = 0; i < n; i++) {\r\n          sum += x[i] * x[i];\r\n        }\r\n        return Math.sqrt(sum);\r\n      }\r\n  }\r\n}\r\nfunction normalize(x) {\r\n  const den = norm(x);\r\n  if (den !== 0.0) {\r\n    x[0] /= den;\r\n    x[1] /= den;\r\n    x[2] /= den;\r\n  }\r\n  return den;\r\n}\r\nfunction perpendiculars(x, y, z, theta) {\r\n  const x2 = x[0] * x[0];\r\n  const y2 = x[1] * x[1];\r\n  const z2 = x[2] * x[2];\r\n  const r = Math.sqrt(x2 + y2 + z2);\r\n  let dx;\r\n  let dy;\r\n  let dz;\r\n\r\n  // transpose the vector to avoid divide-by-zero error\r\n  if (x2 > y2 && x2 > z2) {\r\n    dx = 0;\r\n    dy = 1;\r\n    dz = 2;\r\n  } else if (y2 > z2) {\r\n    dx = 1;\r\n    dy = 2;\r\n    dz = 0;\r\n  } else {\r\n    dx = 2;\r\n    dy = 0;\r\n    dz = 1;\r\n  }\r\n  const a = x[dx] / r;\r\n  const b = x[dy] / r;\r\n  const c = x[dz] / r;\r\n  const tmp = Math.sqrt(a * a + c * c);\r\n  if (theta !== 0) {\r\n    const sintheta = Math.sin(theta);\r\n    const costheta = Math.cos(theta);\r\n    if (y) {\r\n      y[dx] = (c * costheta - a * b * sintheta) / tmp;\r\n      y[dy] = sintheta * tmp;\r\n      y[dz] = (-(a * costheta) - b * c * sintheta) / tmp;\r\n    }\r\n    if (z) {\r\n      z[dx] = (-(c * sintheta) - a * b * costheta) / tmp;\r\n      z[dy] = costheta * tmp;\r\n      z[dz] = (a * sintheta - b * c * costheta) / tmp;\r\n    }\r\n  } else {\r\n    if (y) {\r\n      y[dx] = c / tmp;\r\n      y[dy] = 0;\r\n      y[dz] = -a / tmp;\r\n    }\r\n    if (z) {\r\n      z[dx] = -a * b / tmp;\r\n      z[dy] = tmp;\r\n      z[dz] = -b * c / tmp;\r\n    }\r\n  }\r\n}\r\nfunction projectVector(a, b, projection) {\r\n  const bSquared = dot(b, b);\r\n  if (bSquared === 0) {\r\n    projection[0] = 0;\r\n    projection[1] = 0;\r\n    projection[2] = 0;\r\n    return false;\r\n  }\r\n  const scale = dot(a, b) / bSquared;\r\n  for (let i = 0; i < 3; i++) {\r\n    projection[i] = b[i];\r\n  }\r\n  multiplyScalar(projection, scale);\r\n  return true;\r\n}\r\nfunction dot2D(x, y) {\r\n  return x[0] * y[0] + x[1] * y[1];\r\n}\r\nfunction projectVector2D(a, b, projection) {\r\n  const bSquared = dot2D(b, b);\r\n  if (bSquared === 0) {\r\n    projection[0] = 0;\r\n    projection[1] = 0;\r\n    return false;\r\n  }\r\n  const scale = dot2D(a, b) / bSquared;\r\n  for (let i = 0; i < 2; i++) {\r\n    projection[i] = b[i];\r\n  }\r\n  multiplyScalar2D(projection, scale);\r\n  return true;\r\n}\r\nfunction distance2BetweenPoints(x, y) {\r\n  return (x[0] - y[0]) * (x[0] - y[0]) + (x[1] - y[1]) * (x[1] - y[1]) + (x[2] - y[2]) * (x[2] - y[2]);\r\n}\r\nfunction angleBetweenVectors(v1, v2) {\r\n  const crossVect = [0, 0, 0];\r\n  cross(v1, v2, crossVect);\r\n  return Math.atan2(norm(crossVect), dot(v1, v2));\r\n}\r\nfunction signedAngleBetweenVectors(v1, v2, vN) {\r\n  const crossVect = [0, 0, 0];\r\n  cross(v1, v2, crossVect);\r\n  const angle = Math.atan2(norm(crossVect), dot(v1, v2));\r\n  return dot(crossVect, vN) >= 0 ? angle : -angle;\r\n}\r\nfunction gaussianAmplitude(mean, variance, position) {\r\n  const distanceFromMean = Math.abs(mean - position);\r\n  return 1 / Math.sqrt(2 * Math.PI * variance) * Math.exp(-(distanceFromMean ** 2) / (2 * variance));\r\n}\r\nfunction gaussianWeight(mean, variance, position) {\r\n  const distanceFromMean = Math.abs(mean - position);\r\n  return Math.exp(-(distanceFromMean ** 2) / (2 * variance));\r\n}\r\nfunction outer2D(x, y, out_2x2) {\r\n  out_2x2[0] = x[0] * y[0];\r\n  out_2x2[1] = x[0] * y[1];\r\n  out_2x2[2] = x[1] * y[0];\r\n  out_2x2[3] = x[1] * y[1];\r\n}\r\nfunction norm2D(x2D) {\r\n  return Math.sqrt(x2D[0] * x2D[0] + x2D[1] * x2D[1]);\r\n}\r\nfunction normalize2D(x) {\r\n  const den = norm2D(x);\r\n  if (den !== 0.0) {\r\n    x[0] /= den;\r\n    x[1] /= den;\r\n  }\r\n  return den;\r\n}\r\nfunction rowsToMat4(row0, row1, row2, row3, mat) {\r\n  for (let i = 0; i < 4; i++) {\r\n    mat[i] = row0[i];\r\n    mat[4 + i] = row1[i];\r\n    mat[8 + i] = row2[i];\r\n    mat[12 + i] = row3[i];\r\n  }\r\n  return mat;\r\n}\r\nfunction columnsToMat4(column0, column1, column2, column3, mat) {\r\n  for (let i = 0; i < 4; i++) {\r\n    mat[4 * i] = column0[i];\r\n    mat[4 * i + 1] = column1[i];\r\n    mat[4 * i + 2] = column2[i];\r\n    mat[4 * i + 3] = column3[i];\r\n  }\r\n  return mat;\r\n}\r\nfunction rowsToMat3(row0, row1, row2, mat) {\r\n  for (let i = 0; i < 3; i++) {\r\n    mat[i] = row0[i];\r\n    mat[3 + i] = row1[i];\r\n    mat[6 + i] = row2[i];\r\n  }\r\n  return mat;\r\n}\r\nfunction columnsToMat3(column0, column1, column2, mat) {\r\n  for (let i = 0; i < 3; i++) {\r\n    mat[3 * i] = column0[i];\r\n    mat[3 * i + 1] = column1[i];\r\n    mat[3 * i + 2] = column2[i];\r\n  }\r\n  return mat;\r\n}\r\nfunction determinant2x2() {\r\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n    args[_key] = arguments[_key];\r\n  }\r\n  if (args.length === 2) {\r\n    return args[0][0] * args[1][1] - args[1][0] * args[0][1];\r\n  }\r\n  if (args.length === 4) {\r\n    return args[0] * args[3] - args[1] * args[2];\r\n  }\r\n  return Number.NaN;\r\n}\r\nfunction LUFactor3x3(mat_3x3, index_3) {\r\n  let maxI;\r\n  let tmp;\r\n  let largest;\r\n  const scale = [0, 0, 0];\r\n\r\n  // Loop over rows to get implicit scaling information\r\n  for (let i = 0; i < 3; i++) {\r\n    largest = Math.abs(mat_3x3[i * 3]);\r\n    if ((tmp = Math.abs(mat_3x3[i * 3 + 1])) > largest) {\r\n      largest = tmp;\r\n    }\r\n    if ((tmp = Math.abs(mat_3x3[i * 3 + 2])) > largest) {\r\n      largest = tmp;\r\n    }\r\n    scale[i] = 1 / largest;\r\n  }\r\n\r\n  // Loop over all columns using Crout's method\r\n\r\n  // first column\r\n  largest = scale[0] * Math.abs(mat_3x3[0]);\r\n  maxI = 0;\r\n  if ((tmp = scale[1] * Math.abs(mat_3x3[3])) >= largest) {\r\n    largest = tmp;\r\n    maxI = 1;\r\n  }\r\n  if ((tmp = scale[2] * Math.abs(mat_3x3[6])) >= largest) {\r\n    maxI = 2;\r\n  }\r\n  if (maxI !== 0) {\r\n    swapRowsMatrix_nxn(mat_3x3, 3, maxI, 0);\r\n    scale[maxI] = scale[0];\r\n  }\r\n  index_3[0] = maxI;\r\n  mat_3x3[3] /= mat_3x3[0];\r\n  mat_3x3[6] /= mat_3x3[0];\r\n\r\n  // second column\r\n  mat_3x3[4] -= mat_3x3[3] * mat_3x3[1];\r\n  mat_3x3[7] -= mat_3x3[6] * mat_3x3[1];\r\n  largest = scale[1] * Math.abs(mat_3x3[4]);\r\n  maxI = 1;\r\n  if ((tmp = scale[2] * Math.abs(mat_3x3[7])) >= largest) {\r\n    maxI = 2;\r\n    swapRowsMatrix_nxn(mat_3x3, 3, 1, 2);\r\n    scale[2] = scale[1];\r\n  }\r\n  index_3[1] = maxI;\r\n  mat_3x3[7] /= mat_3x3[4];\r\n\r\n  // third column\r\n  mat_3x3[5] -= mat_3x3[3] * mat_3x3[2];\r\n  mat_3x3[8] -= mat_3x3[6] * mat_3x3[2] + mat_3x3[7] * mat_3x3[5];\r\n  index_3[2] = 2;\r\n}\r\nfunction LUSolve3x3(mat_3x3, index_3, x_3) {\r\n  // forward substitution\r\n  let sum = x_3[index_3[0]];\r\n  x_3[index_3[0]] = x_3[0];\r\n  x_3[0] = sum;\r\n  sum = x_3[index_3[1]];\r\n  x_3[index_3[1]] = x_3[1];\r\n  x_3[1] = sum - mat_3x3[3] * x_3[0];\r\n  sum = x_3[index_3[2]];\r\n  x_3[index_3[2]] = x_3[2];\r\n  x_3[2] = sum - mat_3x3[6] * x_3[0] - mat_3x3[7] * x_3[1];\r\n\r\n  // back substitution\r\n  x_3[2] /= mat_3x3[8];\r\n  x_3[1] = (x_3[1] - mat_3x3[5] * x_3[2]) / mat_3x3[4];\r\n  x_3[0] = (x_3[0] - mat_3x3[1] * x_3[1] - mat_3x3[2] * x_3[2]) / mat_3x3[0];\r\n}\r\nfunction linearSolve3x3(mat_3x3, x_3, y_3) {\r\n  const a1 = mat_3x3[0];\r\n  const b1 = mat_3x3[1];\r\n  const c1 = mat_3x3[2];\r\n  const a2 = mat_3x3[3];\r\n  const b2 = mat_3x3[4];\r\n  const c2 = mat_3x3[5];\r\n  const a3 = mat_3x3[6];\r\n  const b3 = mat_3x3[7];\r\n  const c3 = mat_3x3[8];\r\n\r\n  // Compute the adjoint\r\n  const d1 = +determinant2x2(b2, b3, c2, c3);\r\n  const d2 = -determinant2x2(a2, a3, c2, c3);\r\n  const d3 = +determinant2x2(a2, a3, b2, b3);\r\n  const e1 = -determinant2x2(b1, b3, c1, c3);\r\n  const e2 = +determinant2x2(a1, a3, c1, c3);\r\n  const e3 = -determinant2x2(a1, a3, b1, b3);\r\n  const f1 = +determinant2x2(b1, b2, c1, c2);\r\n  const f2 = -determinant2x2(a1, a2, c1, c2);\r\n  const f3 = +determinant2x2(a1, a2, b1, b2);\r\n\r\n  // Compute the determinant\r\n  const det = a1 * d1 + b1 * d2 + c1 * d3;\r\n\r\n  // Multiply by the adjoint\r\n  const v1 = d1 * x_3[0] + e1 * x_3[1] + f1 * x_3[2];\r\n  const v2 = d2 * x_3[0] + e2 * x_3[1] + f2 * x_3[2];\r\n  const v3 = d3 * x_3[0] + e3 * x_3[1] + f3 * x_3[2];\r\n\r\n  // Divide by the determinant\r\n  y_3[0] = v1 / det;\r\n  y_3[1] = v2 / det;\r\n  y_3[2] = v3 / det;\r\n}\r\nfunction multiply3x3_vect3(mat_3x3, in_3, out_3) {\r\n  const x = mat_3x3[0] * in_3[0] + mat_3x3[1] * in_3[1] + mat_3x3[2] * in_3[2];\r\n  const y = mat_3x3[3] * in_3[0] + mat_3x3[4] * in_3[1] + mat_3x3[5] * in_3[2];\r\n  const z = mat_3x3[6] * in_3[0] + mat_3x3[7] * in_3[1] + mat_3x3[8] * in_3[2];\r\n  out_3[0] = x;\r\n  out_3[1] = y;\r\n  out_3[2] = z;\r\n}\r\nfunction multiply3x3_mat3(a_3x3, b_3x3, out_3x3) {\r\n  const copyA = [...a_3x3];\r\n  const copyB = [...b_3x3];\r\n  for (let i = 0; i < 3; i++) {\r\n    out_3x3[i] = copyA[0] * copyB[i] + copyA[1] * copyB[i + 3] + copyA[2] * copyB[i + 6];\r\n    out_3x3[i + 3] = copyA[3] * copyB[i] + copyA[4] * copyB[i + 3] + copyA[5] * copyB[i + 6];\r\n    out_3x3[i + 6] = copyA[6] * copyB[i] + copyA[7] * copyB[i + 3] + copyA[8] * copyB[i + 6];\r\n  }\r\n}\r\nfunction multiplyMatrix(a, b, rowA, colA, rowB, colB, outRowAColB) {\r\n  // we need colA == rowB\r\n  if (colA !== rowB) {\r\n    vtkErrorMacro('Number of columns of A must match number of rows of B.');\r\n  }\r\n\r\n  // If a or b is used to store the result, copying them is required\r\n  const copyA = [...a];\r\n  const copyB = [...b];\r\n  // output matrix is rowA*colB\r\n  // output row\r\n  for (let i = 0; i < rowA; i++) {\r\n    // output col\r\n    for (let j = 0; j < colB; j++) {\r\n      outRowAColB[i * colB + j] = 0;\r\n      // sum for this point\r\n      for (let k = 0; k < colA; k++) {\r\n        outRowAColB[i * colB + j] += copyA[i * colA + k] * copyB[j + colB * k];\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction transpose3x3(in_3x3, outT_3x3) {\r\n  let tmp;\r\n\r\n  // off-diagonal elements\r\n  tmp = in_3x3[3];\r\n  outT_3x3[3] = in_3x3[1];\r\n  outT_3x3[1] = tmp;\r\n  tmp = in_3x3[6];\r\n  outT_3x3[6] = in_3x3[2];\r\n  outT_3x3[2] = tmp;\r\n  tmp = in_3x3[7];\r\n  outT_3x3[7] = in_3x3[5];\r\n  outT_3x3[5] = tmp;\r\n\r\n  // on-diagonal elements\r\n  outT_3x3[0] = in_3x3[0];\r\n  outT_3x3[4] = in_3x3[4];\r\n  outT_3x3[8] = in_3x3[8];\r\n}\r\nfunction invert3x3(in_3x3, outI_3x3) {\r\n  const a1 = in_3x3[0];\r\n  const b1 = in_3x3[1];\r\n  const c1 = in_3x3[2];\r\n  const a2 = in_3x3[3];\r\n  const b2 = in_3x3[4];\r\n  const c2 = in_3x3[5];\r\n  const a3 = in_3x3[6];\r\n  const b3 = in_3x3[7];\r\n  const c3 = in_3x3[8];\r\n\r\n  // Compute the adjoint\r\n  const d1 = +determinant2x2(b2, b3, c2, c3);\r\n  const d2 = -determinant2x2(a2, a3, c2, c3);\r\n  const d3 = +determinant2x2(a2, a3, b2, b3);\r\n  const e1 = -determinant2x2(b1, b3, c1, c3);\r\n  const e2 = +determinant2x2(a1, a3, c1, c3);\r\n  const e3 = -determinant2x2(a1, a3, b1, b3);\r\n  const f1 = +determinant2x2(b1, b2, c1, c2);\r\n  const f2 = -determinant2x2(a1, a2, c1, c2);\r\n  const f3 = +determinant2x2(a1, a2, b1, b2);\r\n\r\n  // Divide by the determinant\r\n  const det = a1 * d1 + b1 * d2 + c1 * d3;\r\n  if (det === 0) {\r\n    vtkWarningMacro('Matrix has 0 determinant');\r\n  }\r\n  outI_3x3[0] = d1 / det;\r\n  outI_3x3[3] = d2 / det;\r\n  outI_3x3[6] = d3 / det;\r\n  outI_3x3[1] = e1 / det;\r\n  outI_3x3[4] = e2 / det;\r\n  outI_3x3[7] = e3 / det;\r\n  outI_3x3[2] = f1 / det;\r\n  outI_3x3[5] = f2 / det;\r\n  outI_3x3[8] = f3 / det;\r\n}\r\nfunction determinant3x3(mat_3x3) {\r\n  return mat_3x3[0] * mat_3x3[4] * mat_3x3[8] + mat_3x3[3] * mat_3x3[7] * mat_3x3[2] + mat_3x3[6] * mat_3x3[1] * mat_3x3[5] - mat_3x3[0] * mat_3x3[7] * mat_3x3[5] - mat_3x3[3] * mat_3x3[1] * mat_3x3[8] - mat_3x3[6] * mat_3x3[4] * mat_3x3[2];\r\n}\r\n\r\n/**\r\n * Returns true if elements of both arrays are equals.\r\n * @param {Array} a an array of numbers (vector, point, matrix...)\r\n * @param {Array} b an array of numbers (vector, point, matrix...)\r\n * @param {Number} eps tolerance\r\n */\r\nfunction areEquals(a, b) {\r\n  let eps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _Constants_js__WEBPACK_IMPORTED_MODULE_2__.EPSILON;\r\n  if (a.length !== b.length) {\r\n    return false;\r\n  }\r\n  function isEqual(element, index) {\r\n    return Math.abs(element - b[index]) <= eps;\r\n  }\r\n  return a.every(isEqual);\r\n}\r\nconst areMatricesEqual = areEquals;\r\nfunction identity3x3(mat_3x3) {\r\n  for (let i = 0; i < 3; i++) {\r\n    /* eslint-disable-next-line no-multi-assign */\r\n    mat_3x3[i * 3] = mat_3x3[i * 3 + 1] = mat_3x3[i * 3 + 2] = 0;\r\n    mat_3x3[i * 3 + i] = 1;\r\n  }\r\n}\r\nfunction identity(n, mat) {\r\n  for (let i = 0; i < n; i++) {\r\n    for (let j = 0; j < n; j++) {\r\n      mat[i * n + j] = 0;\r\n    }\r\n    mat[i * n + i] = 1;\r\n  }\r\n  return mat;\r\n}\r\nfunction isIdentity(mat) {\r\n  let eps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _Constants_js__WEBPACK_IMPORTED_MODULE_2__.EPSILON;\r\n  return areMatricesEqual(mat, _Constants_js__WEBPACK_IMPORTED_MODULE_2__.IDENTITY, eps);\r\n}\r\nfunction isIdentity3x3(mat) {\r\n  let eps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _Constants_js__WEBPACK_IMPORTED_MODULE_2__.EPSILON;\r\n  return areMatricesEqual(mat, _Constants_js__WEBPACK_IMPORTED_MODULE_2__.IDENTITY_3X3, eps);\r\n}\r\nfunction quaternionToMatrix3x3(quat_4, mat_3x3) {\r\n  const ww = quat_4[0] * quat_4[0];\r\n  const wx = quat_4[0] * quat_4[1];\r\n  const wy = quat_4[0] * quat_4[2];\r\n  const wz = quat_4[0] * quat_4[3];\r\n  const xx = quat_4[1] * quat_4[1];\r\n  const yy = quat_4[2] * quat_4[2];\r\n  const zz = quat_4[3] * quat_4[3];\r\n  const xy = quat_4[1] * quat_4[2];\r\n  const xz = quat_4[1] * quat_4[3];\r\n  const yz = quat_4[2] * quat_4[3];\r\n  const rr = xx + yy + zz;\r\n  // normalization factor, just in case quaternion was not normalized\r\n  let f = 1 / (ww + rr);\r\n  const s = (ww - rr) * f;\r\n  f *= 2;\r\n  mat_3x3[0] = xx * f + s;\r\n  mat_3x3[3] = (xy + wz) * f;\r\n  mat_3x3[6] = (xz - wy) * f;\r\n  mat_3x3[1] = (xy - wz) * f;\r\n  mat_3x3[4] = yy * f + s;\r\n  mat_3x3[7] = (yz + wx) * f;\r\n  mat_3x3[2] = (xz + wy) * f;\r\n  mat_3x3[5] = (yz - wx) * f;\r\n  mat_3x3[8] = zz * f + s;\r\n}\r\nfunction roundNumber(num) {\r\n  let digits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n  if (!`${num}`.includes('e')) {\r\n    return +`${Math.round(`${num}e+${digits}`)}e-${digits}`;\r\n  }\r\n  const arr = `${num}`.split('e');\r\n  let sig = '';\r\n  if (+arr[1] + digits > 0) {\r\n    sig = '+';\r\n  }\r\n  return +`${Math.round(`${+arr[0]}e${sig}${+arr[1] + digits}`)}e-${digits}`;\r\n}\r\nfunction roundVector(vector) {\r\n  let out = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 0];\r\n  let digits = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\r\n  out[0] = roundNumber(vector[0], digits);\r\n  out[1] = roundNumber(vector[1], digits);\r\n  out[2] = roundNumber(vector[2], digits);\r\n  return out;\r\n}\r\nfunction jacobiN(a, n, w, v) {\r\n  let i;\r\n  let j;\r\n  let k;\r\n  let iq;\r\n  let ip;\r\n  let numPos;\r\n  let tresh;\r\n  let theta;\r\n  let t;\r\n  let tau;\r\n  let sm;\r\n  let s;\r\n  let h;\r\n  let g;\r\n  let c;\r\n  let tmp;\r\n  const b = createArray(n);\r\n  const z = createArray(n);\r\n  const vtkROTATE = (aa, ii, jj) => {\r\n    g = aa[ii];\r\n    h = aa[jj];\r\n    aa[ii] = g - s * (h + g * tau);\r\n    aa[jj] = h + s * (g - h * tau);\r\n  };\r\n\r\n  // initialize\r\n  identity(n, v);\r\n  for (ip = 0; ip < n; ip++) {\r\n    b[ip] = w[ip] = a[ip + ip * n];\r\n    z[ip] = 0.0;\r\n  }\r\n\r\n  // begin rotation sequence\r\n  for (i = 0; i < VTK_MAX_ROTATIONS; i++) {\r\n    sm = 0.0;\r\n    for (ip = 0; ip < n - 1; ip++) {\r\n      for (iq = ip + 1; iq < n; iq++) {\r\n        sm += Math.abs(a[ip * n + iq]);\r\n      }\r\n    }\r\n    if (sm === 0.0) {\r\n      break;\r\n    }\r\n\r\n    // first 3 sweeps\r\n    if (i < 3) {\r\n      tresh = 0.2 * sm / (n * n);\r\n    } else {\r\n      tresh = 0.0;\r\n    }\r\n    for (ip = 0; ip < n - 1; ip++) {\r\n      for (iq = ip + 1; iq < n; iq++) {\r\n        g = 100.0 * Math.abs(a[ip * n + iq]);\r\n\r\n        // after 4 sweeps\r\n        if (i > 3 && Math.abs(w[ip]) + g === Math.abs(w[ip]) && Math.abs(w[iq]) + g === Math.abs(w[iq])) {\r\n          a[ip * n + iq] = 0.0;\r\n        } else if (Math.abs(a[ip * n + iq]) > tresh) {\r\n          h = w[iq] - w[ip];\r\n          if (Math.abs(h) + g === Math.abs(h)) {\r\n            t = a[ip * n + iq] / h;\r\n          } else {\r\n            theta = 0.5 * h / a[ip * n + iq];\r\n            t = 1.0 / (Math.abs(theta) + Math.sqrt(1.0 + theta * theta));\r\n            if (theta < 0.0) {\r\n              t = -t;\r\n            }\r\n          }\r\n          c = 1.0 / Math.sqrt(1 + t * t);\r\n          s = t * c;\r\n          tau = s / (1.0 + c);\r\n          h = t * a[ip * n + iq];\r\n          z[ip] -= h;\r\n          z[iq] += h;\r\n          w[ip] -= h;\r\n          w[iq] += h;\r\n          a[ip * n + iq] = 0.0;\r\n\r\n          // ip already shifted left by 1 unit\r\n          for (j = 0; j <= ip - 1; j++) {\r\n            vtkROTATE(a, j * n + ip, j * n + iq);\r\n          }\r\n          // ip and iq already shifted left by 1 unit\r\n          for (j = ip + 1; j <= iq - 1; j++) {\r\n            vtkROTATE(a, ip * n + j, j * n + iq);\r\n          }\r\n          // iq already shifted left by 1 unit\r\n          for (j = iq + 1; j < n; j++) {\r\n            vtkROTATE(a, ip * n + j, iq * n + j);\r\n          }\r\n          for (j = 0; j < n; j++) {\r\n            vtkROTATE(v, j * n + ip, j * n + iq);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (ip = 0; ip < n; ip++) {\r\n      b[ip] += z[ip];\r\n      w[ip] = b[ip];\r\n      z[ip] = 0.0;\r\n    }\r\n  }\r\n\r\n  // this is NEVER called\r\n  if (i >= VTK_MAX_ROTATIONS) {\r\n    vtkWarningMacro('vtkMath::Jacobi: Error extracting eigenfunctions');\r\n    return 0;\r\n  }\r\n\r\n  // sort eigenfunctions: these changes do not affect accuracy\r\n  for (j = 0; j < n - 1; j++) {\r\n    // boundary incorrect\r\n    k = j;\r\n    tmp = w[k];\r\n    for (i = j + 1; i < n; i++) {\r\n      // boundary incorrect, shifted already\r\n      if (w[i] >= tmp || Math.abs(w[i] - tmp) < _Constants_js__WEBPACK_IMPORTED_MODULE_2__.VTK_SMALL_NUMBER) {\r\n        // why exchange if same?\r\n        k = i;\r\n        tmp = w[k];\r\n      }\r\n    }\r\n    if (k !== j) {\r\n      w[k] = w[j];\r\n      w[j] = tmp;\r\n      swapColumnsMatrix_nxn(v, n, j, k);\r\n    }\r\n  }\r\n  // ensure eigenvector consistency (i.e., Jacobi can compute vectors that\r\n  // are negative of one another (.707,.707,0) and (-.707,-.707,0). This can\r\n  // reek havoc in hyperstreamline/other stuff. We will select the most\r\n  // positive eigenvector.\r\n  const ceil_half_n = (n >> 1) + (n & 1);\r\n  for (numPos = 0, i = 0; i < n * n; i++) {\r\n    if (v[i] >= 0.0) {\r\n      numPos++;\r\n    }\r\n  }\r\n  //    if ( numPos < ceil(double(n)/double(2.0)) )\r\n  if (numPos < ceil_half_n) {\r\n    for (i = 0; i < n; i++) {\r\n      v[i * n + j] *= -1.0;\r\n    }\r\n  }\r\n  return 1;\r\n}\r\nfunction matrix3x3ToQuaternion(mat_3x3, quat_4) {\r\n  const tmp = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n  // on-diagonal elements\r\n  tmp[0] = mat_3x3[0] + mat_3x3[4] + mat_3x3[8];\r\n  tmp[5] = mat_3x3[0] - mat_3x3[4] - mat_3x3[8];\r\n  tmp[10] = -mat_3x3[0] + mat_3x3[4] - mat_3x3[8];\r\n  tmp[15] = -mat_3x3[0] - mat_3x3[4] + mat_3x3[8];\r\n\r\n  // off-diagonal elements\r\n  tmp[1] = tmp[4] = mat_3x3[7] - mat_3x3[5];\r\n  tmp[2] = tmp[8] = mat_3x3[2] - mat_3x3[6];\r\n  tmp[3] = tmp[12] = mat_3x3[3] - mat_3x3[1];\r\n  tmp[6] = tmp[9] = mat_3x3[3] + mat_3x3[1];\r\n  tmp[7] = tmp[13] = mat_3x3[2] + mat_3x3[6];\r\n  tmp[11] = tmp[14] = mat_3x3[7] + mat_3x3[5];\r\n  const eigenvectors = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n  const eigenvalues = [0, 0, 0, 0];\r\n\r\n  // convert into format that JacobiN can use,\r\n  // then use Jacobi to find eigenvalues and eigenvectors\r\n  // tmp is copied because jacobiN may modify it\r\n  const NTemp = [...tmp];\r\n  jacobiN(NTemp, 4, eigenvalues, eigenvectors);\r\n\r\n  // the first eigenvector is the one we want\r\n  quat_4[0] = eigenvectors[0];\r\n  quat_4[1] = eigenvectors[4];\r\n  quat_4[2] = eigenvectors[8];\r\n  quat_4[3] = eigenvectors[12];\r\n}\r\nfunction multiplyQuaternion(quat_1, quat_2, quat_out) {\r\n  const ww = quat_1[0] * quat_2[0];\r\n  const wx = quat_1[0] * quat_2[1];\r\n  const wy = quat_1[0] * quat_2[2];\r\n  const wz = quat_1[0] * quat_2[3];\r\n  const xw = quat_1[1] * quat_2[0];\r\n  const xx = quat_1[1] * quat_2[1];\r\n  const xy = quat_1[1] * quat_2[2];\r\n  const xz = quat_1[1] * quat_2[3];\r\n  const yw = quat_1[2] * quat_2[0];\r\n  const yx = quat_1[2] * quat_2[1];\r\n  const yy = quat_1[2] * quat_2[2];\r\n  const yz = quat_1[2] * quat_2[3];\r\n  const zw = quat_1[3] * quat_2[0];\r\n  const zx = quat_1[3] * quat_2[1];\r\n  const zy = quat_1[3] * quat_2[2];\r\n  const zz = quat_1[3] * quat_2[3];\r\n  quat_out[0] = ww - xx - yy - zz;\r\n  quat_out[1] = wx + xw + yz - zy;\r\n  quat_out[2] = wy - xz + yw + zx;\r\n  quat_out[3] = wz + xy - yx + zw;\r\n}\r\nfunction orthogonalize3x3(a_3x3, out_3x3) {\r\n  // copy the matrix\r\n  for (let i = 0; i < 9; i++) {\r\n    out_3x3[i] = a_3x3[i];\r\n  }\r\n\r\n  // Pivot the matrix to improve accuracy\r\n  const scale = createArray(3);\r\n  const index = createArray(3);\r\n  let largest;\r\n\r\n  // Loop over rows to get implicit scaling information\r\n  for (let i = 0; i < 3; i++) {\r\n    const x1 = Math.abs(out_3x3[i * 3]);\r\n    const x2 = Math.abs(out_3x3[i * 3 + 1]);\r\n    const x3 = Math.abs(out_3x3[i * 3 + 2]);\r\n    largest = x2 > x1 ? x2 : x1;\r\n    largest = x3 > largest ? x3 : largest;\r\n    scale[i] = 1;\r\n    if (largest !== 0) {\r\n      scale[i] /= largest;\r\n    }\r\n  }\r\n\r\n  // first column\r\n  const x1 = Math.abs(out_3x3[0]) * scale[0];\r\n  const x2 = Math.abs(out_3x3[3]) * scale[1];\r\n  const x3 = Math.abs(out_3x3[6]) * scale[2];\r\n  index[0] = 0;\r\n  largest = x1;\r\n  if (x2 >= largest) {\r\n    largest = x2;\r\n    index[0] = 1;\r\n  }\r\n  if (x3 >= largest) {\r\n    index[0] = 2;\r\n  }\r\n  if (index[0] !== 0) {\r\n    // swap vectors\r\n    swapColumnsMatrix_nxn(out_3x3, 3, index[0], 0);\r\n    scale[index[0]] = scale[0];\r\n  }\r\n\r\n  // second column\r\n  const y2 = Math.abs(out_3x3[4]) * scale[1];\r\n  const y3 = Math.abs(out_3x3[7]) * scale[2];\r\n  index[1] = 1;\r\n  largest = y2;\r\n  if (y3 >= largest) {\r\n    index[1] = 2;\r\n    // swap vectors\r\n    swapColumnsMatrix_nxn(out_3x3, 3, 1, 2);\r\n  }\r\n\r\n  // third column\r\n  index[2] = 2;\r\n\r\n  // A quaternion can only describe a pure rotation, not\r\n  // a rotation with a flip, therefore the flip must be\r\n  // removed before the matrix is converted to a quaternion.\r\n  let flip = 0;\r\n  if (determinant3x3(out_3x3) < 0) {\r\n    flip = 1;\r\n    for (let i = 0; i < 9; i++) {\r\n      out_3x3[i] = -out_3x3[i];\r\n    }\r\n  }\r\n\r\n  // Do orthogonalization using a quaternion intermediate\r\n  // (this, essentially, does the orthogonalization via\r\n  // diagonalization of an appropriately constructed symmetric\r\n  // 4x4 matrix rather than by doing SVD of the 3x3 matrix)\r\n  const quat = createArray(4);\r\n  matrix3x3ToQuaternion(out_3x3, quat);\r\n  quaternionToMatrix3x3(quat, out_3x3);\r\n\r\n  // Put the flip back into the orthogonalized matrix.\r\n  if (flip) {\r\n    for (let i = 0; i < 9; i++) {\r\n      out_3x3[i] = -out_3x3[i];\r\n    }\r\n  }\r\n\r\n  // Undo the pivoting\r\n  if (index[1] !== 1) {\r\n    swapColumnsMatrix_nxn(out_3x3, 3, index[1], 1);\r\n  }\r\n  if (index[0] !== 0) {\r\n    swapColumnsMatrix_nxn(out_3x3, 3, index[0], 0);\r\n  }\r\n}\r\nfunction diagonalize3x3(a_3x3, w_3, v_3x3) {\r\n  let i;\r\n  let j;\r\n  let k;\r\n  let maxI;\r\n  let tmp;\r\n  let maxVal;\r\n\r\n  // a is copied because jacobiN may modify it\r\n  const copyA = [...a_3x3];\r\n\r\n  // diagonalize using Jacobi\r\n  jacobiN(copyA, 3, w_3, v_3x3);\r\n\r\n  // if all the eigenvalues are the same, return identity matrix\r\n  if (w_3[0] === w_3[1] && w_3[0] === w_3[2]) {\r\n    identity3x3(v_3x3);\r\n    return;\r\n  }\r\n\r\n  // transpose temporarily, it makes it easier to sort the eigenvectors\r\n  transpose3x3(v_3x3, v_3x3);\r\n\r\n  // if two eigenvalues are the same, re-orthogonalize to optimally line\r\n  // up the eigenvectors with the x, y, and z axes\r\n  for (i = 0; i < 3; i++) {\r\n    // two eigenvalues are the same\r\n    if (w_3[(i + 1) % 3] === w_3[(i + 2) % 3]) {\r\n      // find maximum element of the independent eigenvector\r\n      maxVal = Math.abs(v_3x3[i * 3]);\r\n      maxI = 0;\r\n      for (j = 1; j < 3; j++) {\r\n        if (maxVal < (tmp = Math.abs(v_3x3[i * 3 + j]))) {\r\n          maxVal = tmp;\r\n          maxI = j;\r\n        }\r\n      }\r\n      // swap the eigenvector into its proper position\r\n      if (maxI !== i) {\r\n        tmp = w_3[maxI];\r\n        w_3[maxI] = w_3[i];\r\n        w_3[i] = tmp;\r\n        swapRowsMatrix_nxn(v_3x3, 3, i, maxI);\r\n      }\r\n      // maximum element of eigenvector should be positive\r\n      if (v_3x3[maxI * 3 + maxI] < 0) {\r\n        v_3x3[maxI * 3] = -v_3x3[maxI * 3];\r\n        v_3x3[maxI * 3 + 1] = -v_3x3[maxI * 3 + 1];\r\n        v_3x3[maxI * 3 + 2] = -v_3x3[maxI * 3 + 2];\r\n      }\r\n\r\n      // re-orthogonalize the other two eigenvectors\r\n      j = (maxI + 1) % 3;\r\n      k = (maxI + 2) % 3;\r\n      v_3x3[j * 3] = 0.0;\r\n      v_3x3[j * 3 + 1] = 0.0;\r\n      v_3x3[j * 3 + 2] = 0.0;\r\n      v_3x3[j * 3 + j] = 1.0;\r\n      const vectTmp1 = cross([v_3x3[maxI * 3], v_3x3[maxI * 3 + 1], v_3x3[maxI * 3 + 2]], [v_3x3[j * 3], v_3x3[j * 3 + 1], v_3x3[j * 3 + 2]], []);\r\n      normalize(vectTmp1);\r\n      const vectTmp2 = cross(vectTmp1, [v_3x3[maxI * 3], v_3x3[maxI * 3 + 1], v_3x3[maxI * 3 + 2]], []);\r\n      for (let t = 0; t < 3; t++) {\r\n        v_3x3[k * 3 + t] = vectTmp1[t];\r\n        v_3x3[j * 3 + t] = vectTmp2[t];\r\n      }\r\n\r\n      // transpose vectors back to columns\r\n      transpose3x3(v_3x3, v_3x3);\r\n      return;\r\n    }\r\n  }\r\n\r\n  // the three eigenvalues are different, just sort the eigenvectors\r\n  // to align them with the x, y, and z axes\r\n\r\n  // find the vector with the largest x element, make that vector\r\n  // the first vector\r\n  maxVal = Math.abs(v_3x3[0]);\r\n  maxI = 0;\r\n  for (i = 1; i < 3; i++) {\r\n    if (maxVal < (tmp = Math.abs(v_3x3[i * 3]))) {\r\n      maxVal = tmp;\r\n      maxI = i;\r\n    }\r\n  }\r\n  // swap eigenvalue and eigenvector\r\n  if (maxI !== 0) {\r\n    const eigenValTmp = w_3[maxI];\r\n    w_3[maxI] = w_3[0];\r\n    w_3[0] = eigenValTmp;\r\n    swapRowsMatrix_nxn(v_3x3, 3, maxI, 0);\r\n  }\r\n  // do the same for the y element\r\n  if (Math.abs(v_3x3[4]) < Math.abs(v_3x3[7])) {\r\n    const eigenValTmp = w_3[2];\r\n    w_3[2] = w_3[1];\r\n    w_3[1] = eigenValTmp;\r\n    swapRowsMatrix_nxn(v_3x3, 3, 1, 2);\r\n  }\r\n\r\n  // ensure that the sign of the eigenvectors is correct\r\n  for (i = 0; i < 2; i++) {\r\n    if (v_3x3[i * 3 + i] < 0) {\r\n      v_3x3[i * 3] = -v_3x3[i * 3];\r\n      v_3x3[i * 3 + 1] = -v_3x3[i * 3 + 1];\r\n      v_3x3[i * 3 + 2] = -v_3x3[i * 3 + 2];\r\n    }\r\n  }\r\n  // set sign of final eigenvector to ensure that determinant is positive\r\n  if (determinant3x3(v_3x3) < 0) {\r\n    v_3x3[6] = -v_3x3[6];\r\n    v_3x3[7] = -v_3x3[7];\r\n    v_3x3[8] = -v_3x3[8];\r\n  }\r\n\r\n  // transpose the eigenvectors back again\r\n  transpose3x3(v_3x3, v_3x3);\r\n}\r\nfunction singularValueDecomposition3x3(a_3x3, u_3x3, w_3, vT_3x3) {\r\n  let i;\r\n  // copy so that A can be used for U or VT without risk\r\n  const B = [...a_3x3];\r\n\r\n  // temporarily flip if determinant is negative\r\n  const d = determinant3x3(B);\r\n  if (d < 0) {\r\n    for (i = 0; i < 9; i++) {\r\n      B[i] = -B[i];\r\n    }\r\n  }\r\n\r\n  // orthogonalize, diagonalize, etc.\r\n  orthogonalize3x3(B, u_3x3);\r\n  transpose3x3(B, B);\r\n  multiply3x3_mat3(B, u_3x3, vT_3x3);\r\n  diagonalize3x3(vT_3x3, w_3, vT_3x3);\r\n  multiply3x3_mat3(u_3x3, vT_3x3, u_3x3);\r\n  transpose3x3(vT_3x3, vT_3x3);\r\n\r\n  // re-create the flip\r\n  if (d < 0) {\r\n    w_3[0] = -w_3[0];\r\n    w_3[1] = -w_3[1];\r\n    w_3[2] = -w_3[2];\r\n  }\r\n}\r\n\r\n/**\r\n * Factor linear equations Ax = b using LU decomposition A = LU. Output factorization LU is in matrix A.\r\n * @param {Matrix} A square matrix\r\n * @param {Number} index integer array of pivot indices index[0->n-1]\r\n * @param {Number} size matrix size\r\n */\r\nfunction luFactorLinearSystem(A, index, size) {\r\n  let i;\r\n  let j;\r\n  let k;\r\n  let largest;\r\n  let maxI = 0;\r\n  let sum;\r\n  let temp1;\r\n  let temp2;\r\n  const scale = createArray(size);\r\n\r\n  //\r\n  // Loop over rows to get implicit scaling information\r\n  //\r\n  for (i = 0; i < size; i++) {\r\n    for (largest = 0.0, j = 0; j < size; j++) {\r\n      if ((temp2 = Math.abs(A[i * size + j])) > largest) {\r\n        largest = temp2;\r\n      }\r\n    }\r\n    if (largest === 0.0) {\r\n      vtkWarningMacro('Unable to factor linear system');\r\n      return 0;\r\n    }\r\n    scale[i] = 1.0 / largest;\r\n  }\r\n  //\r\n  // Loop over all columns using Crout's method\r\n  //\r\n  for (j = 0; j < size; j++) {\r\n    for (i = 0; i < j; i++) {\r\n      sum = A[i * size + j];\r\n      for (k = 0; k < i; k++) {\r\n        sum -= A[i * size + k] * A[k * size + j];\r\n      }\r\n      A[i * size + j] = sum;\r\n    }\r\n    //\r\n    // Begin search for largest pivot element\r\n    //\r\n    for (largest = 0.0, i = j; i < size; i++) {\r\n      sum = A[i * size + j];\r\n      for (k = 0; k < j; k++) {\r\n        sum -= A[i * size + k] * A[k * size + j];\r\n      }\r\n      A[i * size + j] = sum;\r\n      if ((temp1 = scale[i] * Math.abs(sum)) >= largest) {\r\n        largest = temp1;\r\n        maxI = i;\r\n      }\r\n    }\r\n    //\r\n    // Check for row interchange\r\n    //\r\n    if (j !== maxI) {\r\n      for (k = 0; k < size; k++) {\r\n        temp1 = A[maxI * size + k];\r\n        A[maxI * size + k] = A[j * size + k];\r\n        A[j * size + k] = temp1;\r\n      }\r\n      scale[maxI] = scale[j];\r\n    }\r\n    //\r\n    // Divide by pivot element and perform elimination\r\n    //\r\n    index[j] = maxI;\r\n    if (Math.abs(A[j * size + j]) <= _Constants_js__WEBPACK_IMPORTED_MODULE_2__.VTK_SMALL_NUMBER) {\r\n      vtkWarningMacro('Unable to factor linear system');\r\n      return 0;\r\n    }\r\n    if (j !== size - 1) {\r\n      temp1 = 1.0 / A[j * size + j];\r\n      for (i = j + 1; i < size; i++) {\r\n        A[i * size + j] *= temp1;\r\n      }\r\n    }\r\n  }\r\n  return 1;\r\n}\r\nfunction luSolveLinearSystem(A, index, x, size) {\r\n  let i;\r\n  let j;\r\n  let ii;\r\n  let idx;\r\n  let sum;\r\n  //\r\n  // Proceed with forward and backsubstitution for L and U\r\n  // matrices.  First, forward substitution.\r\n  //\r\n  for (ii = -1, i = 0; i < size; i++) {\r\n    idx = index[i];\r\n    sum = x[idx];\r\n    x[idx] = x[i];\r\n    if (ii >= 0) {\r\n      for (j = ii; j <= i - 1; j++) {\r\n        sum -= A[i * size + j] * x[j];\r\n      }\r\n    } else if (sum !== 0.0) {\r\n      ii = i;\r\n    }\r\n    x[i] = sum;\r\n  }\r\n  //\r\n  // Now, back substitution\r\n  //\r\n  for (i = size - 1; i >= 0; i--) {\r\n    sum = x[i];\r\n    for (j = i + 1; j < size; j++) {\r\n      sum -= A[i * size + j] * x[j];\r\n    }\r\n    x[i] = sum / A[i * size + i];\r\n  }\r\n}\r\nfunction solveLinearSystem(A, x, size) {\r\n  // if we solving something simple, just solve it\r\n  if (size === 2) {\r\n    const y = createArray(2);\r\n    const det = determinant2x2(A[0], A[1], A[2], A[3]);\r\n    if (det === 0.0) {\r\n      // Unable to solve linear system\r\n      return 0;\r\n    }\r\n    y[0] = (A[3] * x[0] - A[1] * x[1]) / det;\r\n    y[1] = (-(A[2] * x[0]) + A[0] * x[1]) / det;\r\n    x[0] = y[0];\r\n    x[1] = y[1];\r\n    return 1;\r\n  }\r\n  if (size === 1) {\r\n    if (A[0] === 0.0) {\r\n      // Unable to solve linear system\r\n      return 0;\r\n    }\r\n    x[0] /= A[0];\r\n    return 1;\r\n  }\r\n\r\n  //\r\n  // System of equations is not trivial, use Crout's method\r\n  //\r\n\r\n  // Check on allocation of working vectors\r\n  const index = createArray(size);\r\n\r\n  // Factor and solve matrix\r\n  if (luFactorLinearSystem(A, index, size) === 0) {\r\n    return 0;\r\n  }\r\n  luSolveLinearSystem(A, index, x, size);\r\n  return 1;\r\n}\r\n\r\n// Note that A is modified during the inversion !\r\nfunction invertMatrix(A, AI, size) {\r\n  let index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\r\n  let column = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\r\n  const tmp1Size = index || createArray(size);\r\n  const tmp2Size = column || createArray(size);\r\n\r\n  // Factor matrix; then begin solving for inverse one column at a time.\r\n  // Note: tmp1Size returned value is used later, tmp2Size is just working\r\n  // memory whose values are not used in LUSolveLinearSystem\r\n  if (luFactorLinearSystem(A, tmp1Size, size) === 0) {\r\n    return null;\r\n  }\r\n  for (let j = 0; j < size; j++) {\r\n    for (let i = 0; i < size; i++) {\r\n      tmp2Size[i] = 0.0;\r\n    }\r\n    tmp2Size[j] = 1.0;\r\n    luSolveLinearSystem(A, tmp1Size, tmp2Size, size);\r\n    for (let i = 0; i < size; i++) {\r\n      AI[i * size + j] = tmp2Size[i];\r\n    }\r\n  }\r\n  return AI;\r\n}\r\nfunction estimateMatrixCondition(A, size) {\r\n  let minValue = +Number.MAX_VALUE;\r\n  let maxValue = -Number.MAX_VALUE;\r\n\r\n  // find the maximum value\r\n  for (let i = 0; i < size; i++) {\r\n    for (let j = i; j < size; j++) {\r\n      if (Math.abs(A[i * size + j]) > maxValue) {\r\n        maxValue = Math.abs(A[i * size + j]);\r\n      }\r\n    }\r\n  }\r\n\r\n  // find the minimum diagonal value\r\n  for (let i = 0; i < size; i++) {\r\n    if (Math.abs(A[i * size + i]) < minValue) {\r\n      minValue = Math.abs(A[i * size + i]);\r\n    }\r\n  }\r\n  if (minValue === 0.0) {\r\n    return Number.MAX_VALUE;\r\n  }\r\n  return maxValue / minValue;\r\n}\r\nfunction jacobi(a_3x3, w, v) {\r\n  return jacobiN(a_3x3, 3, w, v);\r\n}\r\nfunction solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, mt) {\r\n  // check dimensional consistency\r\n  if (numberOfSamples < xOrder) {\r\n    vtkWarningMacro('Insufficient number of samples. Underdetermined.');\r\n    return 0;\r\n  }\r\n  let i;\r\n  let j;\r\n  let k;\r\n\r\n  // set up intermediate variables\r\n  // Allocate matrix to hold X times transpose of X\r\n  const XXt = createArray(xOrder * xOrder); // size x by x\r\n  // Allocate the array of eigenvalues and eigenvectors\r\n  const eigenvals = createArray(xOrder);\r\n  const eigenvecs = createArray(xOrder * xOrder);\r\n\r\n  // Calculate XXt upper half only, due to symmetry\r\n  for (k = 0; k < numberOfSamples; k++) {\r\n    for (i = 0; i < xOrder; i++) {\r\n      for (j = i; j < xOrder; j++) {\r\n        XXt[i * xOrder + j] += xt[k * xOrder + i] * xt[k * xOrder + j];\r\n      }\r\n    }\r\n  }\r\n\r\n  // now fill in the lower half of the XXt matrix\r\n  for (i = 0; i < xOrder; i++) {\r\n    for (j = 0; j < i; j++) {\r\n      XXt[i * xOrder + j] = XXt[j * xOrder + i];\r\n    }\r\n  }\r\n\r\n  // Compute the eigenvectors and eigenvalues\r\n  jacobiN(XXt, xOrder, eigenvals, eigenvecs);\r\n\r\n  // Smallest eigenval is at the end of the list (xOrder-1), and solution is\r\n  // corresponding eigenvec.\r\n  for (i = 0; i < xOrder; i++) {\r\n    mt[i] = eigenvecs[i * xOrder + xOrder - 1];\r\n  }\r\n  return 1;\r\n}\r\nfunction solveLeastSquares(numberOfSamples, xt, xOrder, yt, yOrder, mt) {\r\n  let checkHomogeneous = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;\r\n  // check dimensional consistency\r\n  if (numberOfSamples < xOrder || numberOfSamples < yOrder) {\r\n    vtkWarningMacro('Insufficient number of samples. Underdetermined.');\r\n    return 0;\r\n  }\r\n  const homogenFlags = createArray(yOrder);\r\n  let allHomogeneous = 1;\r\n  let hmt;\r\n  let homogRC = 0;\r\n  let i;\r\n  let j;\r\n  let k;\r\n  let someHomogeneous = 0;\r\n\r\n  // Ok, first init some flags check and see if all the systems are homogeneous\r\n  if (checkHomogeneous) {\r\n    // If Y' is zero, it's a homogeneous system and can't be solved via\r\n    // the pseudoinverse method. Detect this case, warn the user, and\r\n    // invoke SolveHomogeneousLeastSquares instead. Note that it doesn't\r\n    // really make much sense for yOrder to be greater than one in this case,\r\n    // since that's just yOrder occurrences of a 0 vector on the RHS, but\r\n    // we allow it anyway. N\r\n\r\n    // Initialize homogeneous flags on a per-right-hand-side basis\r\n    for (j = 0; j < yOrder; j++) {\r\n      homogenFlags[j] = 1;\r\n    }\r\n    for (i = 0; i < numberOfSamples; i++) {\r\n      for (j = 0; j < yOrder; j++) {\r\n        if (Math.abs(yt[i * yOrder + j]) > _Constants_js__WEBPACK_IMPORTED_MODULE_2__.VTK_SMALL_NUMBER) {\r\n          allHomogeneous = 0;\r\n          homogenFlags[j] = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    // If we've got one system, and it's homogeneous, do it and bail out quickly.\r\n    if (allHomogeneous && yOrder === 1) {\r\n      vtkWarningMacro('Detected homogeneous system (Y=0), calling SolveHomogeneousLeastSquares()');\r\n      return solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, mt);\r\n    }\r\n\r\n    // Ok, we've got more than one system of equations.\r\n    // Figure out if we need to calculate the homogeneous equation solution for\r\n    // any of them.\r\n    if (allHomogeneous) {\r\n      someHomogeneous = 1;\r\n    } else {\r\n      for (j = 0; j < yOrder; j++) {\r\n        if (homogenFlags[j]) {\r\n          someHomogeneous = 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // If necessary, solve the homogeneous problem\r\n  if (someHomogeneous) {\r\n    // hmt is the homogeneous equation version of mt, the general solution.\r\n    // hmt should be xOrder x yOrder, but since we are solving only the homogeneous part, here it is xOrder x 1\r\n    hmt = createArray(xOrder);\r\n\r\n    // Ok, solve the homogeneous problem\r\n    homogRC = solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, hmt);\r\n  }\r\n\r\n  // set up intermediate variables\r\n  const XXt = createArray(xOrder * xOrder); // size x by x\r\n  const XXtI = createArray(xOrder * xOrder); // size x by x\r\n  const XYt = createArray(xOrder * yOrder); // size x by y\r\n\r\n  // first find the pseudoinverse matrix\r\n  for (k = 0; k < numberOfSamples; k++) {\r\n    for (i = 0; i < xOrder; i++) {\r\n      // first calculate the XXt matrix, only do the upper half (symmetrical)\r\n      for (j = i; j < xOrder; j++) {\r\n        XXt[i * xOrder + j] += xt[k * xOrder + i] * xt[k * xOrder + j];\r\n      }\r\n\r\n      // now calculate the XYt matrix\r\n      for (j = 0; j < yOrder; j++) {\r\n        XYt[i * yOrder + j] += xt[k * xOrder + i] * yt[k * yOrder + j];\r\n      }\r\n    }\r\n  }\r\n\r\n  // now fill in the lower half of the XXt matrix\r\n  for (i = 0; i < xOrder; i++) {\r\n    for (j = 0; j < i; j++) {\r\n      XXt[i * xOrder + j] = XXt[j * xOrder + i];\r\n    }\r\n  }\r\n  const successFlag = invertMatrix(XXt, XXtI, xOrder);\r\n\r\n  // next get the inverse of XXt\r\n  if (successFlag) {\r\n    for (i = 0; i < xOrder; i++) {\r\n      for (j = 0; j < yOrder; j++) {\r\n        mt[i * yOrder + j] = 0.0;\r\n        for (k = 0; k < xOrder; k++) {\r\n          mt[i * yOrder + j] += XXtI[i * xOrder + k] * XYt[k * yOrder + j];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Fix up any of the solutions that correspond to the homogeneous equation\r\n  // problem.\r\n  if (someHomogeneous) {\r\n    for (j = 0; j < yOrder; j++) {\r\n      if (homogenFlags[j]) {\r\n        // Fix this one\r\n        for (i = 0; i < xOrder; i++) {\r\n          mt[i * yOrder + j] = hmt[i * yOrder];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (someHomogeneous) {\r\n    return homogRC && successFlag;\r\n  }\r\n  return successFlag;\r\n}\r\nfunction hex2float(hexStr) {\r\n  let outFloatArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0.5, 1];\r\n  switch (hexStr.length) {\r\n    case 3:\r\n      // abc => #aabbcc\r\n      outFloatArray[0] = parseInt(hexStr[0], 16) * 17 / 255;\r\n      outFloatArray[1] = parseInt(hexStr[1], 16) * 17 / 255;\r\n      outFloatArray[2] = parseInt(hexStr[2], 16) * 17 / 255;\r\n      return outFloatArray;\r\n    case 4:\r\n      // #abc => #aabbcc\r\n      outFloatArray[0] = parseInt(hexStr[1], 16) * 17 / 255;\r\n      outFloatArray[1] = parseInt(hexStr[2], 16) * 17 / 255;\r\n      outFloatArray[2] = parseInt(hexStr[3], 16) * 17 / 255;\r\n      return outFloatArray;\r\n    case 6:\r\n      // ab01df => #ab01df\r\n      outFloatArray[0] = parseInt(hexStr.substr(0, 2), 16) / 255;\r\n      outFloatArray[1] = parseInt(hexStr.substr(2, 2), 16) / 255;\r\n      outFloatArray[2] = parseInt(hexStr.substr(4, 2), 16) / 255;\r\n      return outFloatArray;\r\n    case 7:\r\n      // #ab01df\r\n      outFloatArray[0] = parseInt(hexStr.substr(1, 2), 16) / 255;\r\n      outFloatArray[1] = parseInt(hexStr.substr(3, 2), 16) / 255;\r\n      outFloatArray[2] = parseInt(hexStr.substr(5, 2), 16) / 255;\r\n      return outFloatArray;\r\n    case 9:\r\n      // #ab01df00\r\n      outFloatArray[0] = parseInt(hexStr.substr(1, 2), 16) / 255;\r\n      outFloatArray[1] = parseInt(hexStr.substr(3, 2), 16) / 255;\r\n      outFloatArray[2] = parseInt(hexStr.substr(5, 2), 16) / 255;\r\n      outFloatArray[3] = parseInt(hexStr.substr(7, 2), 16) / 255;\r\n      return outFloatArray;\r\n    default:\r\n      return outFloatArray;\r\n  }\r\n}\r\nfunction rgb2hsv(rgb, hsv) {\r\n  let h;\r\n  let s;\r\n  const [r, g, b] = rgb;\r\n  const onethird = 1.0 / 3.0;\r\n  const onesixth = 1.0 / 6.0;\r\n  const twothird = 2.0 / 3.0;\r\n  let cmax = r;\r\n  let cmin = r;\r\n  if (g > cmax) {\r\n    cmax = g;\r\n  } else if (g < cmin) {\r\n    cmin = g;\r\n  }\r\n  if (b > cmax) {\r\n    cmax = b;\r\n  } else if (b < cmin) {\r\n    cmin = b;\r\n  }\r\n  const v = cmax;\r\n  if (v > 0.0) {\r\n    s = (cmax - cmin) / cmax;\r\n  } else {\r\n    s = 0.0;\r\n  }\r\n  if (s > 0) {\r\n    if (r === cmax) {\r\n      h = onesixth * (g - b) / (cmax - cmin);\r\n    } else if (g === cmax) {\r\n      h = onethird + onesixth * (b - r) / (cmax - cmin);\r\n    } else {\r\n      h = twothird + onesixth * (r - g) / (cmax - cmin);\r\n    }\r\n    if (h < 0.0) {\r\n      h += 1.0;\r\n    }\r\n  } else {\r\n    h = 0.0;\r\n  }\r\n\r\n  // Set the values back to the array\r\n  hsv[0] = h;\r\n  hsv[1] = s;\r\n  hsv[2] = v;\r\n}\r\nfunction hsv2rgb(hsv, rgb) {\r\n  const [h, s, v] = hsv;\r\n  const onethird = 1.0 / 3.0;\r\n  const onesixth = 1.0 / 6.0;\r\n  const twothird = 2.0 / 3.0;\r\n  const fivesixth = 5.0 / 6.0;\r\n  let r;\r\n  let g;\r\n  let b;\r\n\r\n  // compute RGB from HSV\r\n  if (h > onesixth && h <= onethird) {\r\n    // green/red\r\n    g = 1.0;\r\n    r = (onethird - h) / onesixth;\r\n    b = 0.0;\r\n  } else if (h > onethird && h <= 0.5) {\r\n    // green/blue\r\n    g = 1.0;\r\n    b = (h - onethird) / onesixth;\r\n    r = 0.0;\r\n  } else if (h > 0.5 && h <= twothird) {\r\n    // blue/green\r\n    b = 1.0;\r\n    g = (twothird - h) / onesixth;\r\n    r = 0.0;\r\n  } else if (h > twothird && h <= fivesixth) {\r\n    // blue/red\r\n    b = 1.0;\r\n    r = (h - twothird) / onesixth;\r\n    g = 0.0;\r\n  } else if (h > fivesixth && h <= 1.0) {\r\n    // red/blue\r\n    r = 1.0;\r\n    b = (1.0 - h) / onesixth;\r\n    g = 0.0;\r\n  } else {\r\n    // red/green\r\n    r = 1.0;\r\n    g = h / onesixth;\r\n    b = 0.0;\r\n  }\r\n\r\n  // add Saturation to the equation.\r\n  r = s * r + (1.0 - s);\r\n  g = s * g + (1.0 - s);\r\n  b = s * b + (1.0 - s);\r\n  r *= v;\r\n  g *= v;\r\n  b *= v;\r\n\r\n  // Assign back to the array\r\n  rgb[0] = r;\r\n  rgb[1] = g;\r\n  rgb[2] = b;\r\n}\r\nfunction lab2xyz(lab, xyz) {\r\n  // LAB to XYZ\r\n  const [L, a, b] = lab;\r\n  let var_Y = (L + 16) / 116;\r\n  let var_X = a / 500 + var_Y;\r\n  let var_Z = var_Y - b / 200;\r\n  if (var_Y ** 3 > 0.008856) {\r\n    var_Y **= 3;\r\n  } else {\r\n    var_Y = (var_Y - 16.0 / 116.0) / 7.787;\r\n  }\r\n  if (var_X ** 3 > 0.008856) {\r\n    var_X **= 3;\r\n  } else {\r\n    var_X = (var_X - 16.0 / 116.0) / 7.787;\r\n  }\r\n  if (var_Z ** 3 > 0.008856) {\r\n    var_Z **= 3;\r\n  } else {\r\n    var_Z = (var_Z - 16.0 / 116.0) / 7.787;\r\n  }\r\n  const ref_X = 0.9505;\r\n  const ref_Y = 1.0;\r\n  const ref_Z = 1.089;\r\n  xyz[0] = ref_X * var_X; // ref_X = 0.9505  Observer= 2 deg Illuminant= D65\r\n  xyz[1] = ref_Y * var_Y; // ref_Y = 1.000\r\n  xyz[2] = ref_Z * var_Z; // ref_Z = 1.089\r\n}\r\n\r\nfunction xyz2lab(xyz, lab) {\r\n  const [x, y, z] = xyz;\r\n  const ref_X = 0.9505;\r\n  const ref_Y = 1.0;\r\n  const ref_Z = 1.089;\r\n  let var_X = x / ref_X; // ref_X = 0.9505  Observer= 2 deg, Illuminant= D65\r\n  let var_Y = y / ref_Y; // ref_Y = 1.000\r\n  let var_Z = z / ref_Z; // ref_Z = 1.089\r\n\r\n  if (var_X > 0.008856) var_X **= 1.0 / 3.0;else var_X = 7.787 * var_X + 16.0 / 116.0;\r\n  if (var_Y > 0.008856) var_Y **= 1.0 / 3.0;else var_Y = 7.787 * var_Y + 16.0 / 116.0;\r\n  if (var_Z > 0.008856) var_Z **= 1.0 / 3.0;else var_Z = 7.787 * var_Z + 16.0 / 116.0;\r\n  lab[0] = 116 * var_Y - 16;\r\n  lab[1] = 500 * (var_X - var_Y);\r\n  lab[2] = 200 * (var_Y - var_Z);\r\n}\r\nfunction xyz2rgb(xyz, rgb) {\r\n  const [x, y, z] = xyz;\r\n  let r = x * 3.2406 + y * -1.5372 + z * -0.4986;\r\n  let g = x * -0.9689 + y * 1.8758 + z * 0.0415;\r\n  let b = x * 0.0557 + y * -0.204 + z * 1.057;\r\n\r\n  // The following performs a \"gamma correction\" specified by the sRGB color\r\n  // space.  sRGB is defined by a canonical definition of a display monitor and\r\n  // has been standardized by the International Electrotechnical Commission (IEC\r\n  // 61966-2-1).  The nonlinearity of the correction is designed to make the\r\n  // colors more perceptually uniform.  This color space has been adopted by\r\n  // several applications including Adobe Photoshop and Microsoft Windows color\r\n  // management.  OpenGL is agnostic on its RGB color space, but it is reasonable\r\n  // to assume it is close to this one.\r\n  if (r > 0.0031308) r = 1.055 * r ** (1 / 2.4) - 0.055;else r *= 12.92;\r\n  if (g > 0.0031308) g = 1.055 * g ** (1 / 2.4) - 0.055;else g *= 12.92;\r\n  if (b > 0.0031308) b = 1.055 * b ** (1 / 2.4) - 0.055;else b *= 12.92;\r\n\r\n  // Clip colors. ideally we would do something that is perceptually closest\r\n  // (since we can see colors outside of the display gamut), but this seems to\r\n  // work well enough.\r\n  let maxVal = r;\r\n  if (maxVal < g) maxVal = g;\r\n  if (maxVal < b) maxVal = b;\r\n  if (maxVal > 1.0) {\r\n    r /= maxVal;\r\n    g /= maxVal;\r\n    b /= maxVal;\r\n  }\r\n  if (r < 0) r = 0;\r\n  if (g < 0) g = 0;\r\n  if (b < 0) b = 0;\r\n\r\n  // Push values back to array\r\n  rgb[0] = r;\r\n  rgb[1] = g;\r\n  rgb[2] = b;\r\n}\r\nfunction rgb2xyz(rgb, xyz) {\r\n  let [r, g, b] = rgb;\r\n  // The following performs a \"gamma correction\" specified by the sRGB color\r\n  // space.  sRGB is defined by a canonical definition of a display monitor and\r\n  // has been standardized by the International Electrotechnical Commission (IEC\r\n  // 61966-2-1).  The nonlinearity of the correction is designed to make the\r\n  // colors more perceptually uniform.  This color space has been adopted by\r\n  // several applications including Adobe Photoshop and Microsoft Windows color\r\n  // management.  OpenGL is agnostic on its RGB color space, but it is reasonable\r\n  // to assume it is close to this one.\r\n  if (r > 0.04045) r = ((r + 0.055) / 1.055) ** 2.4;else r /= 12.92;\r\n  if (g > 0.04045) g = ((g + 0.055) / 1.055) ** 2.4;else g /= 12.92;\r\n  if (b > 0.04045) b = ((b + 0.055) / 1.055) ** 2.4;else b /= 12.92;\r\n\r\n  // Observer. = 2 deg, Illuminant = D65\r\n  xyz[0] = r * 0.4124 + g * 0.3576 + b * 0.1805;\r\n  xyz[1] = r * 0.2126 + g * 0.7152 + b * 0.0722;\r\n  xyz[2] = r * 0.0193 + g * 0.1192 + b * 0.9505;\r\n}\r\nfunction rgb2lab(rgb, lab) {\r\n  const xyz = [0, 0, 0];\r\n  rgb2xyz(rgb, xyz);\r\n  xyz2lab(xyz, lab);\r\n}\r\nfunction lab2rgb(lab, rgb) {\r\n  const xyz = [0, 0, 0];\r\n  lab2xyz(lab, xyz);\r\n  xyz2rgb(xyz, rgb);\r\n}\r\nfunction uninitializeBounds(bounds) {\r\n  bounds[0] = 1.0;\r\n  bounds[1] = -1.0;\r\n  bounds[2] = 1.0;\r\n  bounds[3] = -1.0;\r\n  bounds[4] = 1.0;\r\n  bounds[5] = -1.0;\r\n  return bounds;\r\n}\r\nfunction areBoundsInitialized(bounds) {\r\n  return !(bounds[1] - bounds[0] < 0.0);\r\n}\r\n\r\n/**\r\n * @deprecated please use vtkBoundingBox.addPoints(vtkBoundingBox.reset([]), points)\r\n */\r\nfunction computeBoundsFromPoints(point1, point2, bounds) {\r\n  bounds[0] = Math.min(point1[0], point2[0]);\r\n  bounds[1] = Math.max(point1[0], point2[0]);\r\n  bounds[2] = Math.min(point1[1], point2[1]);\r\n  bounds[3] = Math.max(point1[1], point2[1]);\r\n  bounds[4] = Math.min(point1[2], point2[2]);\r\n  bounds[5] = Math.max(point1[2], point2[2]);\r\n  return bounds;\r\n}\r\nfunction clampValue(value, minValue, maxValue) {\r\n  if (value < minValue) {\r\n    return minValue;\r\n  }\r\n  if (value > maxValue) {\r\n    return maxValue;\r\n  }\r\n  return value;\r\n}\r\nfunction clampVector(vector, minVector, maxVector) {\r\n  let out = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [0, 0, 0];\r\n  out[0] = clampValue(vector[0], minVector[0], maxVector[0]);\r\n  out[1] = clampValue(vector[1], minVector[1], maxVector[1]);\r\n  out[2] = clampValue(vector[2], minVector[2], maxVector[2]);\r\n  return out;\r\n}\r\nfunction clampAndNormalizeValue(value, range) {\r\n  let result = 0;\r\n  if (range[0] !== range[1]) {\r\n    // clamp\r\n    if (value < range[0]) {\r\n      result = range[0];\r\n    } else if (value > range[1]) {\r\n      result = range[1];\r\n    } else {\r\n      result = value;\r\n    }\r\n    // normalize\r\n    result = (result - range[0]) / (range[1] - range[0]);\r\n  }\r\n  return result;\r\n}\r\nconst getScalarTypeFittingRange = notImplemented('GetScalarTypeFittingRange');\r\nconst getAdjustedScalarRange = notImplemented('GetAdjustedScalarRange');\r\nfunction extentIsWithinOtherExtent(extent1, extent2) {\r\n  if (!extent1 || !extent2) {\r\n    return 0;\r\n  }\r\n  for (let i = 0; i < 6; i += 2) {\r\n    if (extent1[i] < extent2[i] || extent1[i] > extent2[i + 1] || extent1[i + 1] < extent2[i] || extent1[i + 1] > extent2[i + 1]) {\r\n      return 0;\r\n    }\r\n  }\r\n  return 1;\r\n}\r\nfunction boundsIsWithinOtherBounds(bounds1_6, bounds2_6, delta_3) {\r\n  if (!bounds1_6 || !bounds2_6) {\r\n    return 0;\r\n  }\r\n  for (let i = 0; i < 6; i += 2) {\r\n    if (bounds1_6[i] + delta_3[i / 2] < bounds2_6[i] || bounds1_6[i] - delta_3[i / 2] > bounds2_6[i + 1] || bounds1_6[i + 1] + delta_3[i / 2] < bounds2_6[i] || bounds1_6[i + 1] - delta_3[i / 2] > bounds2_6[i + 1]) {\r\n      return 0;\r\n    }\r\n  }\r\n  return 1;\r\n}\r\nfunction pointIsWithinBounds(point_3, bounds_6, delta_3) {\r\n  if (!point_3 || !bounds_6 || !delta_3) {\r\n    return 0;\r\n  }\r\n  for (let i = 0; i < 3; i++) {\r\n    if (point_3[i] + delta_3[i] < bounds_6[2 * i] || point_3[i] - delta_3[i] > bounds_6[2 * i + 1]) {\r\n      return 0;\r\n    }\r\n  }\r\n  return 1;\r\n}\r\nfunction solve3PointCircle(p1, p2, p3, center) {\r\n  const v21 = createArray(3);\r\n  const v32 = createArray(3);\r\n  const v13 = createArray(3);\r\n  const v12 = createArray(3);\r\n  const v23 = createArray(3);\r\n  const v31 = createArray(3);\r\n  for (let i = 0; i < 3; ++i) {\r\n    v21[i] = p1[i] - p2[i];\r\n    v32[i] = p2[i] - p3[i];\r\n    v13[i] = p3[i] - p1[i];\r\n    v12[i] = -v21[i];\r\n    v23[i] = -v32[i];\r\n    v31[i] = -v13[i];\r\n  }\r\n  const norm12 = norm(v12);\r\n  const norm23 = norm(v23);\r\n  const norm13 = norm(v13);\r\n  const crossv21v32 = createArray(3);\r\n  cross(v21, v32, crossv21v32);\r\n  const normCross = norm(crossv21v32);\r\n  const radius = norm12 * norm23 * norm13 / (2 * normCross);\r\n  const normCross22 = 2 * normCross * normCross;\r\n  const alpha = norm23 * norm23 * dot(v21, v31) / normCross22;\r\n  const beta = norm13 * norm13 * dot(v12, v32) / normCross22;\r\n  const gamma = norm12 * norm12 * dot(v13, v23) / normCross22;\r\n  for (let i = 0; i < 3; ++i) {\r\n    center[i] = alpha * p1[i] + beta * p2[i] + gamma * p3[i];\r\n  }\r\n  return radius;\r\n}\r\nconst inf = Infinity;\r\nconst negInf = -Infinity;\r\nconst isInf = value => !Number.isFinite(value);\r\nconst {\r\n  isFinite,\r\n  isNaN\r\n} = Number;\r\nconst isNan = isNaN;\r\n\r\n// JavaScript - add-on ----------------------\r\n\r\nfunction createUninitializedBounds() {\r\n  return [].concat([Number.MAX_VALUE, -Number.MAX_VALUE,\r\n  // X\r\n  Number.MAX_VALUE, -Number.MAX_VALUE,\r\n  // Y\r\n  Number.MAX_VALUE, -Number.MAX_VALUE // Z\r\n  ]);\r\n}\r\n\r\nfunction getMajorAxisIndex(vector) {\r\n  let maxValue = -1;\r\n  let axisIndex = -1;\r\n  for (let i = 0; i < vector.length; i++) {\r\n    const value = Math.abs(vector[i]);\r\n    if (value > maxValue) {\r\n      axisIndex = i;\r\n      maxValue = value;\r\n    }\r\n  }\r\n  return axisIndex;\r\n}\r\n\r\n// Return the closest orthogonal matrix of 1, -1 and 0\r\n// It works for both column major and row major matrices\r\n// This function iteratively associate a column with a row by choosing\r\n// the greatest absolute value from the remaining row and columns\r\n// For each association, a -1 or a 1 is set in the output, depending on\r\n// the sign of the value in the original matrix\r\nfunction getSparseOrthogonalMatrix(matrix) {\r\n  let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\r\n  // Initialize rows and columns to available indices\r\n  const rows = new Array(n);\r\n  const cols = new Array(n);\r\n  for (let i = 0; i < n; ++i) {\r\n    rows[i] = i;\r\n    cols[i] = i;\r\n  }\r\n  // No need for the last iteration: i = 0\r\n  for (let i = n - 1; i > 0; i--) {\r\n    // Loop invariant:\r\n    // rows[0:i] and cols[0:i] contain the remaining rows and columns\r\n    // rows]i:n[ and cols]i:n[ contain the associations found (rows[k] is associated with cols[k])\r\n    let bestValue = -Infinity;\r\n    let bestRowI = 0;\r\n    let bestColI = 0;\r\n    for (let rowI = 0; rowI <= i; ++rowI) {\r\n      const row = rows[rowI];\r\n      for (let colI = 0; colI <= i; ++colI) {\r\n        const col = cols[colI];\r\n        const absVal = Math.abs(matrix[row + n * col]);\r\n        if (absVal > bestValue) {\r\n          bestValue = absVal;\r\n          bestRowI = rowI;\r\n          bestColI = colI;\r\n        }\r\n      }\r\n    }\r\n    // Found an association between rows[bestRowI] and cols[bestColI]\r\n    // Put both at the end of their array by swapping with i\r\n    [rows[i], rows[bestRowI]] = [rows[bestRowI], rows[i]];\r\n    [cols[i], cols[bestColI]] = [cols[bestColI], cols[i]];\r\n  }\r\n\r\n  // Convert row/column association to a matrix\r\n  const output = new Array(n * n).fill(0);\r\n  for (let i = 0; i < n; ++i) {\r\n    const matIdx = rows[i] + n * cols[i];\r\n    output[matIdx] = matrix[matIdx] < 0 ? -1 : 1;\r\n  }\r\n  return output;\r\n}\r\nfunction floatToHex2(value) {\r\n  const integer = Math.floor(value * 255);\r\n  if (integer > 15) {\r\n    return integer.toString(16);\r\n  }\r\n  return `0${integer.toString(16)}`;\r\n}\r\nfunction floatRGB2HexCode(rgbArray) {\r\n  let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '#';\r\n  return `${prefix}${rgbArray.map(floatToHex2).join('')}`;\r\n}\r\nfunction floatToChar(f) {\r\n  return Math.round(f * 255);\r\n}\r\nfunction float2CssRGBA(rgbArray) {\r\n  if (rgbArray.length === 3) {\r\n    return `rgb(${rgbArray.map(floatToChar).join(', ')})`;\r\n  }\r\n  return `rgba(${floatToChar(rgbArray[0] || 0)}, ${floatToChar(rgbArray[1] || 0)}, ${floatToChar(rgbArray[2] || 0)}, ${rgbArray[3] || 0})`;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Only Static API\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkMath = {\r\n  Pi,\r\n  radiansFromDegrees,\r\n  degreesFromRadians,\r\n  round,\r\n  floor,\r\n  ceil,\r\n  ceilLog2,\r\n  min,\r\n  max,\r\n  arrayMin,\r\n  arrayMax,\r\n  arrayRange,\r\n  isPowerOfTwo,\r\n  nearestPowerOfTwo,\r\n  factorial,\r\n  binomial,\r\n  beginCombination,\r\n  nextCombination,\r\n  randomSeed,\r\n  getSeed,\r\n  random,\r\n  gaussian,\r\n  add,\r\n  subtract,\r\n  multiplyScalar,\r\n  multiplyScalar2D,\r\n  multiplyAccumulate,\r\n  multiplyAccumulate2D,\r\n  dot,\r\n  outer,\r\n  cross,\r\n  norm,\r\n  normalize,\r\n  perpendiculars,\r\n  projectVector,\r\n  projectVector2D,\r\n  distance2BetweenPoints,\r\n  angleBetweenVectors,\r\n  gaussianAmplitude,\r\n  gaussianWeight,\r\n  dot2D,\r\n  outer2D,\r\n  norm2D,\r\n  normalize2D,\r\n  determinant2x2,\r\n  LUFactor3x3,\r\n  LUSolve3x3,\r\n  linearSolve3x3,\r\n  multiply3x3_vect3,\r\n  multiply3x3_mat3,\r\n  multiplyMatrix,\r\n  transpose3x3,\r\n  invert3x3,\r\n  identity3x3,\r\n  identity,\r\n  isIdentity,\r\n  isIdentity3x3,\r\n  determinant3x3,\r\n  quaternionToMatrix3x3,\r\n  areEquals,\r\n  areMatricesEqual,\r\n  roundNumber,\r\n  roundVector,\r\n  matrix3x3ToQuaternion,\r\n  multiplyQuaternion,\r\n  orthogonalize3x3,\r\n  diagonalize3x3,\r\n  singularValueDecomposition3x3,\r\n  solveLinearSystem,\r\n  invertMatrix,\r\n  luFactorLinearSystem,\r\n  luSolveLinearSystem,\r\n  estimateMatrixCondition,\r\n  jacobi,\r\n  jacobiN,\r\n  solveHomogeneousLeastSquares,\r\n  solveLeastSquares,\r\n  hex2float,\r\n  rgb2hsv,\r\n  hsv2rgb,\r\n  lab2xyz,\r\n  xyz2lab,\r\n  xyz2rgb,\r\n  rgb2xyz,\r\n  rgb2lab,\r\n  lab2rgb,\r\n  uninitializeBounds,\r\n  areBoundsInitialized,\r\n  computeBoundsFromPoints,\r\n  clampValue,\r\n  clampVector,\r\n  clampAndNormalizeValue,\r\n  getScalarTypeFittingRange,\r\n  getAdjustedScalarRange,\r\n  extentIsWithinOtherExtent,\r\n  boundsIsWithinOtherBounds,\r\n  pointIsWithinBounds,\r\n  solve3PointCircle,\r\n  inf,\r\n  negInf,\r\n  isInf,\r\n  isNan: isNaN,\r\n  isNaN,\r\n  isFinite,\r\n  // JS add-on\r\n  createUninitializedBounds,\r\n  getMajorAxisIndex,\r\n  getSparseOrthogonalMatrix,\r\n  floatToHex2,\r\n  floatRGB2HexCode,\r\n  float2CssRGBA\r\n};\r\n\r\nvar vtkMath$1 = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  createArray: createArray,\r\n  Pi: Pi,\r\n  radiansFromDegrees: radiansFromDegrees,\r\n  degreesFromRadians: degreesFromRadians,\r\n  round: round,\r\n  floor: floor,\r\n  ceil: ceil,\r\n  min: min,\r\n  max: max,\r\n  arrayMin: arrayMin,\r\n  arrayMax: arrayMax,\r\n  arrayRange: arrayRange,\r\n  ceilLog2: ceilLog2,\r\n  factorial: factorial,\r\n  nearestPowerOfTwo: nearestPowerOfTwo,\r\n  isPowerOfTwo: isPowerOfTwo,\r\n  binomial: binomial,\r\n  beginCombination: beginCombination,\r\n  nextCombination: nextCombination,\r\n  randomSeed: randomSeed,\r\n  getSeed: getSeed,\r\n  random: random,\r\n  gaussian: gaussian,\r\n  add: add,\r\n  subtract: subtract,\r\n  multiplyScalar: multiplyScalar,\r\n  multiplyScalar2D: multiplyScalar2D,\r\n  multiplyAccumulate: multiplyAccumulate,\r\n  multiplyAccumulate2D: multiplyAccumulate2D,\r\n  dot: dot,\r\n  outer: outer,\r\n  cross: cross,\r\n  norm: norm,\r\n  normalize: normalize,\r\n  perpendiculars: perpendiculars,\r\n  projectVector: projectVector,\r\n  dot2D: dot2D,\r\n  projectVector2D: projectVector2D,\r\n  distance2BetweenPoints: distance2BetweenPoints,\r\n  angleBetweenVectors: angleBetweenVectors,\r\n  signedAngleBetweenVectors: signedAngleBetweenVectors,\r\n  gaussianAmplitude: gaussianAmplitude,\r\n  gaussianWeight: gaussianWeight,\r\n  outer2D: outer2D,\r\n  norm2D: norm2D,\r\n  normalize2D: normalize2D,\r\n  rowsToMat4: rowsToMat4,\r\n  columnsToMat4: columnsToMat4,\r\n  rowsToMat3: rowsToMat3,\r\n  columnsToMat3: columnsToMat3,\r\n  determinant2x2: determinant2x2,\r\n  LUFactor3x3: LUFactor3x3,\r\n  LUSolve3x3: LUSolve3x3,\r\n  linearSolve3x3: linearSolve3x3,\r\n  multiply3x3_vect3: multiply3x3_vect3,\r\n  multiply3x3_mat3: multiply3x3_mat3,\r\n  multiplyMatrix: multiplyMatrix,\r\n  transpose3x3: transpose3x3,\r\n  invert3x3: invert3x3,\r\n  determinant3x3: determinant3x3,\r\n  areEquals: areEquals,\r\n  areMatricesEqual: areMatricesEqual,\r\n  identity3x3: identity3x3,\r\n  identity: identity,\r\n  isIdentity: isIdentity,\r\n  isIdentity3x3: isIdentity3x3,\r\n  quaternionToMatrix3x3: quaternionToMatrix3x3,\r\n  roundNumber: roundNumber,\r\n  roundVector: roundVector,\r\n  jacobiN: jacobiN,\r\n  matrix3x3ToQuaternion: matrix3x3ToQuaternion,\r\n  multiplyQuaternion: multiplyQuaternion,\r\n  orthogonalize3x3: orthogonalize3x3,\r\n  diagonalize3x3: diagonalize3x3,\r\n  singularValueDecomposition3x3: singularValueDecomposition3x3,\r\n  luFactorLinearSystem: luFactorLinearSystem,\r\n  luSolveLinearSystem: luSolveLinearSystem,\r\n  solveLinearSystem: solveLinearSystem,\r\n  invertMatrix: invertMatrix,\r\n  estimateMatrixCondition: estimateMatrixCondition,\r\n  jacobi: jacobi,\r\n  solveHomogeneousLeastSquares: solveHomogeneousLeastSquares,\r\n  solveLeastSquares: solveLeastSquares,\r\n  hex2float: hex2float,\r\n  rgb2hsv: rgb2hsv,\r\n  hsv2rgb: hsv2rgb,\r\n  lab2xyz: lab2xyz,\r\n  xyz2lab: xyz2lab,\r\n  xyz2rgb: xyz2rgb,\r\n  rgb2xyz: rgb2xyz,\r\n  rgb2lab: rgb2lab,\r\n  lab2rgb: lab2rgb,\r\n  uninitializeBounds: uninitializeBounds,\r\n  areBoundsInitialized: areBoundsInitialized,\r\n  computeBoundsFromPoints: computeBoundsFromPoints,\r\n  clampValue: clampValue,\r\n  clampVector: clampVector,\r\n  clampAndNormalizeValue: clampAndNormalizeValue,\r\n  getScalarTypeFittingRange: getScalarTypeFittingRange,\r\n  getAdjustedScalarRange: getAdjustedScalarRange,\r\n  extentIsWithinOtherExtent: extentIsWithinOtherExtent,\r\n  boundsIsWithinOtherBounds: boundsIsWithinOtherBounds,\r\n  pointIsWithinBounds: pointIsWithinBounds,\r\n  solve3PointCircle: solve3PointCircle,\r\n  inf: inf,\r\n  negInf: negInf,\r\n  isInf: isInf,\r\n  isFinite: isFinite,\r\n  isNaN: isNaN,\r\n  isNan: isNan,\r\n  createUninitializedBounds: createUninitializedBounds,\r\n  getMajorAxisIndex: getMajorAxisIndex,\r\n  getSparseOrthogonalMatrix: getSparseOrthogonalMatrix,\r\n  floatToHex2: floatToHex2,\r\n  floatRGB2HexCode: floatRGB2HexCode,\r\n  float2CssRGBA: float2CssRGBA,\r\n  'default': vtkMath\r\n});\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/Core/Math/index.js?")},"./node_modules/@kitware/vtk.js/Common/Core/MatrixBuilder.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ vtkMatrixBuilder)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ "./node_modules/gl-matrix/esm/mat4.js");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gl-matrix */ "./node_modules/gl-matrix/esm/common.js");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gl-matrix */ "./node_modules/gl-matrix/esm/vec3.js");\n/* harmony import */ var _Math_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Math/index.js */ "./node_modules/@kitware/vtk.js/Common/Core/Math/index.js");\n/* harmony import */ var _Math_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Math/Constants.js */ "./node_modules/@kitware/vtk.js/Common/Core/Math/Constants.js");\n\r\n\r\n\r\n\r\nconst NoOp = v => v;\r\nconst EPSILON = 1e-6;\r\nclass Transform {\r\n  constructor() {\r\n    let useDegree = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\r\n    this.matrix = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.identity(new Float64Array(16));\r\n    this.tmp = new Float64Array(3);\r\n    this.angleConv = useDegree ? gl_matrix__WEBPACK_IMPORTED_MODULE_3__.toRadian : NoOp;\r\n  }\r\n  rotateFromDirections(originDirection, targetDirection) {\r\n    const src = new Float64Array(3);\r\n    const dst = new Float64Array(3);\r\n    const transf = new Float64Array(16);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.set(src, originDirection[0], originDirection[1], originDirection[2]);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.set(dst, targetDirection[0], targetDirection[1], targetDirection[2]);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.normalize(src, src);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.normalize(dst, dst);\r\n    const cosAlpha = gl_matrix__WEBPACK_IMPORTED_MODULE_4__.dot(src, dst);\r\n    if (cosAlpha >= 1) {\r\n      return this;\r\n    }\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.cross(this.tmp, src, dst);\r\n    if (gl_matrix__WEBPACK_IMPORTED_MODULE_4__.length(this.tmp) < EPSILON) {\r\n      // cross product is 0, so pick arbitrary axis perpendicular\r\n      // to originDirection.\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_4__.cross(this.tmp, [1, 0, 0], originDirection);\r\n      if (gl_matrix__WEBPACK_IMPORTED_MODULE_4__.length(this.tmp) < EPSILON) {\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_4__.cross(this.tmp, [0, 1, 0], originDirection);\r\n      }\r\n    }\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.fromRotation(transf, Math.acos(cosAlpha), this.tmp);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.multiply(this.matrix, this.matrix, transf);\r\n    return this;\r\n  }\r\n  rotate(angle, axis) {\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.set(this.tmp, ...axis);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.normalize(this.tmp, this.tmp);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.rotate(this.matrix, this.matrix, this.angleConv(angle), this.tmp);\r\n    return this;\r\n  }\r\n  rotateX(angle) {\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.rotateX(this.matrix, this.matrix, this.angleConv(angle));\r\n    return this;\r\n  }\r\n  rotateY(angle) {\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.rotateY(this.matrix, this.matrix, this.angleConv(angle));\r\n    return this;\r\n  }\r\n  rotateZ(angle) {\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.rotateZ(this.matrix, this.matrix, this.angleConv(angle));\r\n    return this;\r\n  }\r\n  translate(x, y, z) {\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.set(this.tmp, x, y, z);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.translate(this.matrix, this.matrix, this.tmp);\r\n    return this;\r\n  }\r\n  scale(sx, sy, sz) {\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.set(this.tmp, sx, sy, sz);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.scale(this.matrix, this.matrix, this.tmp);\r\n    return this;\r\n  }\r\n  multiply(mat4x4) {\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.multiply(this.matrix, this.matrix, mat4x4);\r\n    return this;\r\n  }\r\n  multiply3x3(mat3x3) {\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.multiply(this.matrix, this.matrix, [mat3x3[0], mat3x3[1], mat3x3[2], 0, mat3x3[3], mat3x3[4], mat3x3[5], 0, mat3x3[6], mat3x3[7], mat3x3[8], 0, 0, 0, 0, 1]);\r\n    return this;\r\n  }\r\n  invert() {\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.invert(this.matrix, this.matrix);\r\n    return this;\r\n  }\r\n  identity() {\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.identity(this.matrix);\r\n    return this;\r\n  }\r\n\r\n  //-----------\r\n\r\n  apply(typedArray) {\r\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n    let nbIterations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\r\n    if ((0,_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.a)(_Math_Constants_js__WEBPACK_IMPORTED_MODULE_1__.IDENTITY, this.matrix)) {\r\n      // Make sure we can chain apply...\r\n      return this;\r\n    }\r\n    const size = nbIterations === -1 ? typedArray.length : offset + nbIterations * 3;\r\n    for (let i = offset; i < size; i += 3) {\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_4__.set(this.tmp, typedArray[i], typedArray[i + 1], typedArray[i + 2]);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_4__.transformMat4(this.tmp, this.tmp, this.matrix);\r\n      typedArray[i] = this.tmp[0];\r\n      typedArray[i + 1] = this.tmp[1];\r\n      typedArray[i + 2] = this.tmp[2];\r\n    }\r\n\r\n    // Make sure we can chain apply...\r\n    return this;\r\n  }\r\n  getMatrix() {\r\n    return this.matrix;\r\n  }\r\n  setMatrix(mat4x4) {\r\n    if (!!mat4x4 && mat4x4.length === 16) {\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_2__.copy(this.matrix, mat4x4);\r\n    }\r\n    return this;\r\n  }\r\n}\r\nfunction buildFromDegree() {\r\n  return new Transform(true);\r\n}\r\nfunction buildFromRadian() {\r\n  return new Transform(false);\r\n}\r\nvar vtkMatrixBuilder = {\r\n  buildFromDegree,\r\n  buildFromRadian\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/Core/MatrixBuilder.js?')},"./node_modules/@kitware/vtk.js/Common/Core/Points.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ vtkPoints$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _DataArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DataArray.js */ "./node_modules/@kitware/vtk.js/Common/Core/DataArray.js");\n/* harmony import */ var _DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DataArray/Constants.js */ "./node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js");\n\r\n\r\n\r\n\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\nconst INVALID_BOUNDS = [1, -1, 1, -1, 1, -1];\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkPoints methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkPoints(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkPoints\');\r\n\r\n  // Forwarding methods\r\n  publicAPI.getNumberOfPoints = publicAPI.getNumberOfTuples;\r\n  publicAPI.setNumberOfPoints = function (nbPoints) {\r\n    let dimension = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\r\n    if (publicAPI.getNumberOfPoints() !== nbPoints) {\r\n      model.size = nbPoints * dimension;\r\n      model.values = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newTypedArray(model.dataType, model.size);\r\n      publicAPI.setNumberOfComponents(dimension);\r\n      publicAPI.modified();\r\n    }\r\n  };\r\n  publicAPI.setPoint = function (idx) {\r\n    for (var _len = arguments.length, xyz = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n      xyz[_key - 1] = arguments[_key];\r\n    }\r\n    publicAPI.setTuple(idx, xyz);\r\n  };\r\n  publicAPI.getPoint = publicAPI.getTuple;\r\n  publicAPI.findPoint = publicAPI.findTuple;\r\n  publicAPI.insertNextPoint = (x, y, z) => publicAPI.insertNextTuple([x, y, z]);\r\n  publicAPI.getBounds = () => {\r\n    if (publicAPI.getNumberOfComponents() === 3) {\r\n      const xRange = publicAPI.getRange(0);\r\n      model.bounds[0] = xRange[0];\r\n      model.bounds[1] = xRange[1];\r\n      const yRange = publicAPI.getRange(1);\r\n      model.bounds[2] = yRange[0];\r\n      model.bounds[3] = yRange[1];\r\n      const zRange = publicAPI.getRange(2);\r\n      model.bounds[4] = zRange[0];\r\n      model.bounds[5] = zRange[1];\r\n      return model.bounds;\r\n    }\r\n    if (publicAPI.getNumberOfComponents() !== 2) {\r\n      vtkErrorMacro(`getBounds called on an array with components of\r\n        ${publicAPI.getNumberOfComponents()}`);\r\n      return INVALID_BOUNDS;\r\n    }\r\n    const xRange = publicAPI.getRange(0);\r\n    model.bounds[0] = xRange[0];\r\n    model.bounds[1] = xRange[1];\r\n    const yRange = publicAPI.getRange(1);\r\n    model.bounds[2] = yRange[0];\r\n    model.bounds[3] = yRange[1];\r\n    model.bounds[4] = 0;\r\n    model.bounds[5] = 0;\r\n    return model.bounds;\r\n  };\r\n\r\n  // Trigger the computation of bounds\r\n  publicAPI.computeBounds = publicAPI.getBounds;\r\n\r\n  // Initialize\r\n  publicAPI.setNumberOfComponents(model.numberOfComponents < 2 ? 3 : model.numberOfComponents);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  empty: true,\r\n  numberOfComponents: 3,\r\n  dataType: _DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_2__.VtkDataTypes.FLOAT,\r\n  bounds: [1, -1, 1, -1, 1, -1]\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n  _DataArray_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues);\r\n  vtkPoints(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, \'vtkPoints\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkPoints$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/Core/Points.js?')},"./node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkScalarsToColors$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _DataArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DataArray.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray.js\");\n/* harmony import */ var _ScalarsToColors_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ScalarsToColors/Constants.js */ \"./node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors/Constants.js\");\n/* harmony import */ var _Rendering_Core_Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Rendering/Core/Mapper/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Constants.js\");\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  ScalarMappingTarget,\r\n  VectorMode\r\n} = _ScalarsToColors_Constants_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\r\nconst {\r\n  VtkDataTypes\r\n} = _DataArray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\nconst {\r\n  ColorMode\r\n} = _Rendering_Core_Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\n\r\n// Add module-level functions or api that you want to expose statically via\r\n// the next section...\r\n\r\n// ----------------------------------------------------------------------------\r\n// Static API\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction intColorToUChar(c) {\r\n  return c;\r\n}\r\nfunction floatColorToUChar(c) {\r\n  return Math.floor(c * 255.0 + 0.5);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkScalarsToColors methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkScalarsToColors(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkScalarsToColors');\r\n  publicAPI.setVectorModeToMagnitude = () => publicAPI.setVectorMode(VectorMode.MAGNITUDE);\r\n  publicAPI.setVectorModeToComponent = () => publicAPI.setVectorMode(VectorMode.COMPONENT);\r\n  publicAPI.setVectorModeToRGBColors = () => publicAPI.setVectorMode(VectorMode.RGBCOLORS);\r\n  publicAPI.build = () => {};\r\n  publicAPI.isOpaque = () => true;\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.setAnnotations = (values, annotations) => {\r\n    if (values && !annotations || !values && annotations) {\r\n      return;\r\n    }\r\n    if (values && annotations && values.length !== annotations.length) {\r\n      vtkErrorMacro('Values and annotations do not have the same number of tuples so ignoring');\r\n      return;\r\n    }\r\n    model.annotationArray = [];\r\n    if (annotations && values) {\r\n      const num = annotations.length;\r\n      for (let i = 0; i < num; i++) {\r\n        model.annotationArray.push({\r\n          value: values[i],\r\n          annotation: String(annotations[i])\r\n        });\r\n      }\r\n    }\r\n    publicAPI.updateAnnotatedValueMap();\r\n    publicAPI.modified();\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.setAnnotation = (value, annotation) => {\r\n    let i = publicAPI.checkForAnnotatedValue(value);\r\n    let modified = false;\r\n    if (i >= 0) {\r\n      if (model.annotationArray[i].annotation !== annotation) {\r\n        model.annotationArray[i].annotation = annotation;\r\n        modified = true;\r\n      }\r\n    } else {\r\n      model.annotationArray.push({\r\n        value,\r\n        annotation\r\n      });\r\n      i = model.annotationArray.length - 1;\r\n      modified = true;\r\n    }\r\n    if (modified) {\r\n      publicAPI.updateAnnotatedValueMap();\r\n      publicAPI.modified();\r\n    }\r\n    return i;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.getNumberOfAnnotatedValues = () => model.annotationArray.length;\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.getAnnotatedValue = idx => {\r\n    if (idx < 0 || idx >= model.annotationArray.length) {\r\n      return null;\r\n    }\r\n    return model.annotationArray[idx].value;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.getAnnotation = idx => {\r\n    if (model.annotationArray[idx] === undefined) {\r\n      return null;\r\n    }\r\n    return model.annotationArray[idx].annotation;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.getAnnotatedValueIndex = val => model.annotationArray.length ? publicAPI.checkForAnnotatedValue(val) : -1;\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.removeAnnotation = value => {\r\n    const i = publicAPI.checkForAnnotatedValue(value);\r\n    const needToRemove = i >= 0;\r\n    if (needToRemove) {\r\n      model.annotationArray.splice(i, 1);\r\n      publicAPI.updateAnnotatedValueMap();\r\n      publicAPI.modified();\r\n    }\r\n    return needToRemove;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.resetAnnotations = () => {\r\n    model.annotationArray = [];\r\n    model.annotatedValueMap = [];\r\n    publicAPI.modified();\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.getAnnotationColor = (val, rgba) => {\r\n    if (model.indexedLookup) {\r\n      const i = publicAPI.getAnnotatedValueIndex(val);\r\n      publicAPI.getIndexedColor(i, rgba);\r\n    } else {\r\n      publicAPI.getColor(parseFloat(val), rgba);\r\n      rgba[3] = 1.0;\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.checkForAnnotatedValue = value => publicAPI.getAnnotatedValueIndexInternal(value);\r\n\r\n  //----------------------------------------------------------------------------\r\n  // An unsafe version of vtkScalarsToColors::CheckForAnnotatedValue for\r\n  // internal use (no pointer checks performed)\r\n  publicAPI.getAnnotatedValueIndexInternal = value => {\r\n    if (model.annotatedValueMap[value] !== undefined) {\r\n      const na = model.annotationArray.length;\r\n      return model.annotatedValueMap[value] % na;\r\n    }\r\n    // Treat as a NaN\r\n    return -1;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.getIndexedColor = (val, rgba) => {\r\n    rgba[0] = 0.0;\r\n    rgba[1] = 0.0;\r\n    rgba[2] = 0.0;\r\n    rgba[3] = 0.0;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.updateAnnotatedValueMap = () => {\r\n    model.annotatedValueMap = [];\r\n    const na = model.annotationArray.length;\r\n    for (let i = 0; i < na; i++) {\r\n      model.annotatedValueMap[model.annotationArray[i].value] = i;\r\n    }\r\n  };\r\n\r\n  // Description:\r\n  // Internal methods that map a data array into a 4-component,\r\n  // unsigned char RGBA array. The color mode determines the behavior\r\n  // of mapping. If ColorMode.DEFAULT is set, then unsigned char\r\n  // data arrays are treated as colors (and converted to RGBA if\r\n  // necessary); If ColorMode.DIRECT_SCALARS is set, then all arrays\r\n  // are treated as colors (integer types are clamped in the range 0-255,\r\n  // floating point arrays are clamped in the range 0.0-1.0. Note 'char' does\r\n  // not have enough values to represent a color so mapping this type is\r\n  // considered an error);\r\n  // otherwise, the data is mapped through this instance\r\n  // of ScalarsToColors. The component argument is used for data\r\n  // arrays with more than one component; it indicates which component\r\n  // to use to do the blending.  When the component argument is -1,\r\n  // then the this object uses its own selected technique to change a\r\n  // vector into a scalar to map.\r\n  publicAPI.mapScalars = (scalars, colorMode, componentIn) => {\r\n    const numberOfComponents = scalars.getNumberOfComponents();\r\n    let newColors = null;\r\n\r\n    // map scalars through lookup table only if needed\r\n    if (colorMode === ColorMode.DEFAULT && (scalars.getDataType() === VtkDataTypes.UNSIGNED_CHAR || scalars.getDataType() === VtkDataTypes.UNSIGNED_CHAR_CLAMPED) || colorMode === ColorMode.DIRECT_SCALARS && scalars) {\r\n      newColors = publicAPI.convertToRGBA(scalars, numberOfComponents, scalars.getNumberOfTuples());\r\n    } else {\r\n      const newscalars = {\r\n        type: 'vtkDataArray',\r\n        name: 'temp',\r\n        numberOfComponents: 4,\r\n        dataType: VtkDataTypes.UNSIGNED_CHAR\r\n      };\r\n      const s = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newTypedArray(newscalars.dataType, 4 * scalars.getNumberOfTuples());\r\n      newscalars.values = s;\r\n      newscalars.size = s.length;\r\n      newColors = _DataArray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance(newscalars);\r\n      let component = componentIn;\r\n\r\n      // If mapper did not specify a component, use the VectorMode\r\n      if (component < 0 && numberOfComponents > 1) {\r\n        publicAPI.mapVectorsThroughTable(scalars, newColors, ScalarMappingTarget.RGBA, -1, -1);\r\n      } else {\r\n        if (component < 0) {\r\n          component = 0;\r\n        }\r\n        if (component >= numberOfComponents) {\r\n          component = numberOfComponents - 1;\r\n        }\r\n\r\n        // Map the scalars to colors\r\n        publicAPI.mapScalarsThroughTable(scalars, newColors, ScalarMappingTarget.RGBA, component);\r\n      }\r\n    }\r\n    return newColors;\r\n  };\r\n  publicAPI.mapVectorsToMagnitude = (input, output, compsToUse) => {\r\n    const length = input.getNumberOfTuples();\r\n    const inIncr = input.getNumberOfComponents();\r\n    const outputV = output.getData();\r\n    const inputV = input.getData();\r\n    for (let i = 0; i < length; i++) {\r\n      let sum = 0.0;\r\n      for (let j = 0; j < compsToUse; j++) {\r\n        sum += inputV[i * inIncr + j] * inputV[i * inIncr + j];\r\n      }\r\n      outputV[i] = Math.sqrt(sum);\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Map a set of vector values through the table\r\n  publicAPI.mapVectorsThroughTable = (input, output, outputFormat, vectorComponentIn, vectorSizeIn) => {\r\n    let vectorMode = publicAPI.getVectorMode();\r\n    let vectorSize = vectorSizeIn;\r\n    let vectorComponent = vectorComponentIn;\r\n    const inComponents = input.getNumberOfComponents();\r\n    if (vectorMode === VectorMode.COMPONENT) {\r\n      // make sure vectorComponent is within allowed range\r\n      if (vectorComponent === -1) {\r\n        // if set to -1, use default value provided by table\r\n        vectorComponent = publicAPI.getVectorComponent();\r\n      }\r\n      if (vectorComponent < 0) {\r\n        vectorComponent = 0;\r\n      }\r\n      if (vectorComponent >= inComponents) {\r\n        vectorComponent = inComponents - 1;\r\n      }\r\n    } else {\r\n      // make sure vectorSize is within allowed range\r\n      if (vectorSize === -1) {\r\n        // if set to -1, use default value provided by table\r\n        vectorSize = publicAPI.getVectorSize();\r\n      }\r\n      if (vectorSize <= 0) {\r\n        vectorComponent = 0;\r\n        vectorSize = inComponents;\r\n      } else {\r\n        if (vectorComponent < 0) {\r\n          vectorComponent = 0;\r\n        }\r\n        if (vectorComponent >= inComponents) {\r\n          vectorComponent = inComponents - 1;\r\n        }\r\n        if (vectorComponent + vectorSize > inComponents) {\r\n          vectorSize = inComponents - vectorComponent;\r\n        }\r\n      }\r\n      if (vectorMode === VectorMode.MAGNITUDE && (inComponents === 1 || vectorSize === 1)) {\r\n        vectorMode = VectorMode.COMPONENT;\r\n      }\r\n    }\r\n\r\n    // increment input pointer to the first component to map\r\n    let inputOffset = 0;\r\n    if (vectorComponent > 0) {\r\n      inputOffset = vectorComponent;\r\n    }\r\n\r\n    // map according to the current vector mode\r\n    switch (vectorMode) {\r\n      case VectorMode.COMPONENT:\r\n        {\r\n          publicAPI.mapScalarsThroughTable(input, output, outputFormat, inputOffset);\r\n          break;\r\n        }\r\n      case VectorMode.RGBCOLORS:\r\n        {\r\n          // publicAPI.mapColorsToColors(\r\n          //   input, output, inComponents, vectorSize,\r\n          //   outputFormat);\r\n          break;\r\n        }\r\n\r\n      // MAGNITUDE is considered default\r\n      case VectorMode.MAGNITUDE:\r\n      default:\r\n        {\r\n          const magValues = _DataArray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance({\r\n            numberOfComponents: 1,\r\n            values: new Float32Array(input.getNumberOfTuples())\r\n          });\r\n          publicAPI.mapVectorsToMagnitude(input, magValues, vectorSize);\r\n          publicAPI.mapScalarsThroughTable(magValues, output, outputFormat, 0);\r\n          break;\r\n        }\r\n    }\r\n  };\r\n  publicAPI.luminanceToRGBA = (newColors, colors, alpha, convtFun) => {\r\n    const a = convtFun(alpha);\r\n    const values = colors.getData();\r\n    const newValues = newColors.getData();\r\n    const size = values.length;\r\n    const component = 0;\r\n    const tuple = 1;\r\n    let count = 0;\r\n    for (let i = component; i < size; i += tuple) {\r\n      const l = convtFun(values[i]);\r\n      newValues[count * 4] = l;\r\n      newValues[count * 4 + 1] = l;\r\n      newValues[count * 4 + 2] = l;\r\n      newValues[count * 4 + 3] = a;\r\n      count++;\r\n    }\r\n  };\r\n  publicAPI.luminanceAlphaToRGBA = (newColors, colors, alpha, convtFun) => {\r\n    const values = colors.getData();\r\n    const newValues = newColors.getData();\r\n    const size = values.length;\r\n    const component = 0;\r\n    const tuple = 2;\r\n    let count = 0;\r\n    for (let i = component; i < size; i += tuple) {\r\n      const l = convtFun(values[i]);\r\n      newValues[count] = l;\r\n      newValues[count + 1] = l;\r\n      newValues[count + 2] = l;\r\n      newValues[count + 3] = convtFun(values[i + 1]) * alpha;\r\n      count += 4;\r\n    }\r\n  };\r\n  publicAPI.rGBToRGBA = (newColors, colors, alpha, convtFun) => {\r\n    const a = floatColorToUChar(alpha);\r\n    const values = colors.getData();\r\n    const newValues = newColors.getData();\r\n    const size = values.length;\r\n    const component = 0;\r\n    const tuple = 3;\r\n    let count = 0;\r\n    for (let i = component; i < size; i += tuple) {\r\n      newValues[count * 4] = convtFun(values[i]);\r\n      newValues[count * 4 + 1] = convtFun(values[i + 1]);\r\n      newValues[count * 4 + 2] = convtFun(values[i + 2]);\r\n      newValues[count * 4 + 3] = a;\r\n      count++;\r\n    }\r\n  };\r\n  publicAPI.rGBAToRGBA = (newColors, colors, alpha, convtFun) => {\r\n    const values = colors.getData();\r\n    const newValues = newColors.getData();\r\n    const size = values.length;\r\n    const component = 0;\r\n    const tuple = 4;\r\n    let count = 0;\r\n    for (let i = component; i < size; i += tuple) {\r\n      newValues[count * 4] = convtFun(values[i]);\r\n      newValues[count * 4 + 1] = convtFun(values[i + 1]);\r\n      newValues[count * 4 + 2] = convtFun(values[i + 2]);\r\n      newValues[count * 4 + 3] = convtFun(values[i + 3]) * alpha;\r\n      count++;\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.convertToRGBA = (colors, numComp, numTuples) => {\r\n    let {\r\n      alpha\r\n    } = model;\r\n    if (numComp === 4 && alpha >= 1.0 && colors.getDataType() === VtkDataTypes.UNSIGNED_CHAR) {\r\n      return colors;\r\n    }\r\n    const newColors = _DataArray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance({\r\n      numberOfComponents: 4,\r\n      empty: true,\r\n      size: 4 * numTuples,\r\n      dataType: VtkDataTypes.UNSIGNED_CHAR\r\n    });\r\n    if (numTuples <= 0) {\r\n      return newColors;\r\n    }\r\n    alpha = alpha > 0 ? alpha : 0;\r\n    alpha = alpha < 1 ? alpha : 1;\r\n    let convtFun = intColorToUChar;\r\n    if (colors.getDataType() === VtkDataTypes.FLOAT || colors.getDataType() === VtkDataTypes.DOUBLE) {\r\n      convtFun = floatColorToUChar;\r\n    }\r\n    switch (numComp) {\r\n      case 1:\r\n        publicAPI.luminanceToRGBA(newColors, colors, alpha, convtFun);\r\n        break;\r\n      case 2:\r\n        publicAPI.luminanceAlphaToRGBA(newColors, colors, convtFun);\r\n        break;\r\n      case 3:\r\n        publicAPI.rGBToRGBA(newColors, colors, alpha, convtFun);\r\n        break;\r\n      case 4:\r\n        publicAPI.rGBAToRGBA(newColors, colors, alpha, convtFun);\r\n        break;\r\n      default:\r\n        vtkErrorMacro('Cannot convert colors');\r\n        return null;\r\n    }\r\n    return newColors;\r\n  };\r\n  publicAPI.usingLogScale = () => false;\r\n  publicAPI.getNumberOfAvailableColors = () => 256 * 256 * 256;\r\n  publicAPI.setRange = (min, max) => publicAPI.setMappingRange(min, max);\r\n  publicAPI.getRange = () => publicAPI.getMappingRange();\r\n  publicAPI.areScalarsOpaque = (scalars, colorMode, componentIn) => {\r\n    if (!scalars) {\r\n      return publicAPI.isOpaque();\r\n    }\r\n    const numberOfComponents = scalars.getNumberOfComponents();\r\n\r\n    // map scalars through lookup table only if needed\r\n    if (colorMode === ColorMode.DEFAULT && scalars.getDataType() === VtkDataTypes.UNSIGNED_CHAR || colorMode === ColorMode.DIRECT_SCALARS) {\r\n      // we will be using the scalars directly, so look at the number of\r\n      // components and the range\r\n      if (numberOfComponents === 3 || numberOfComponents === 1) {\r\n        return model.alpha >= 1.0;\r\n      }\r\n      // otherwise look at the range of the alpha channel\r\n      const range = scalars.getRange(numberOfComponents - 1);\r\n      return range[0] === 255;\r\n    }\r\n    return true;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  alpha: 1.0,\r\n  vectorComponent: 0,\r\n  vectorSize: -1,\r\n  vectorMode: VectorMode.COMPONENT,\r\n  mappingRange: null,\r\n  annotationArray: null,\r\n  annotatedValueMap: null,\r\n  indexedLookup: false\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Object methods\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  model.mappingRange = [0, 255];\r\n  model.annotationArray = [];\r\n  model.annotatedValueMap = [];\r\n\r\n  // Create get-set macros\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['vectorSize', 'vectorComponent', 'vectorMode', 'alpha', 'indexedLookup']);\r\n\r\n  // Create set macros for array (needs to know size)\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setArray(publicAPI, model, ['mappingRange'], 2);\r\n\r\n  // Create get macros for array\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.getArray(publicAPI, model, ['mappingRange']);\r\n\r\n  // For more macro methods, see \"Sources/macros.js\"\r\n\r\n  // Object specific methods\r\n  vtkScalarsToColors(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkScalarsToColors');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkScalarsToColors$1 = {\r\n  newInstance,\r\n  extend,\r\n  ..._ScalarsToColors_Constants_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors.js?")},"./node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ScalarMappingTarget: () => (/* binding */ ScalarMappingTarget),\n/* harmony export */   VectorMode: () => (/* binding */ VectorMode),\n/* harmony export */   "default": () => (/* binding */ vtkScalarsToColors)\n/* harmony export */ });\nconst VectorMode = {\r\n  MAGNITUDE: 0,\r\n  COMPONENT: 1,\r\n  RGBCOLORS: 2\r\n};\r\nconst ScalarMappingTarget = {\r\n  LUMINANCE: 1,\r\n  LUMINANCE_ALPHA: 2,\r\n  RGB: 3,\r\n  RGBA: 4\r\n};\r\nvar vtkScalarsToColors = {\r\n  VectorMode,\r\n  ScalarMappingTarget\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors/Constants.js?')},"./node_modules/@kitware/vtk.js/Common/Core/URLExtract.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkURLExtract)\n/* harmony export */ });\nfunction identity(i) {\r\n  return i;\r\n}\r\nfunction toNativeType(str) {\r\n  if (str === null || str === 'null') {\r\n    return null;\r\n  }\r\n  if (str === 'true') {\r\n    return true;\r\n  }\r\n  if (str === 'false') {\r\n    return false;\r\n  }\r\n  if (str === undefined || str === 'undefined') {\r\n    return undefined;\r\n  }\r\n  if (str[0] === '[' && str[str.length - 1] === ']') {\r\n    return str.substring(1, str.length - 1).split(',').map(s => toNativeType(s.trim()));\r\n  }\r\n  if (str === '' || Number.isNaN(Number(str))) {\r\n    return str;\r\n  }\r\n  return Number(str);\r\n}\r\nfunction extractURLParameters() {\r\n  let castToNativeType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\r\n  let query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.search;\r\n  const summary = {};\r\n  const convert = castToNativeType ? toNativeType : identity;\r\n  const queryTokens = (query || '').replace(/#.*/, '') // remove hash query\r\n  .replace('?', '') // Remove ? from the head\r\n  .split('&'); // extract token pair\r\n\r\n  queryTokens.forEach(token => {\r\n    const [key, value] = token.split('=').map(s => decodeURIComponent(s));\r\n    if (key) {\r\n      summary[key] = value ? convert(value) : true;\r\n    }\r\n  });\r\n  return summary;\r\n}\r\nvar vtkURLExtract = {\r\n  toNativeType,\r\n  extractURLParameters\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/Core/URLExtract.js?")},"./node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STATIC: () => (/* binding */ STATIC),\n/* harmony export */   addBounds: () => (/* binding */ addBounds),\n/* harmony export */   addPoint: () => (/* binding */ addPoint),\n/* harmony export */   addPoints: () => (/* binding */ addPoints),\n/* harmony export */   computeCornerPoints: () => (/* binding */ computeCornerPoints),\n/* harmony export */   computeLocalBounds: () => (/* binding */ computeLocalBounds),\n/* harmony export */   computeScale3: () => (/* binding */ computeScale3),\n/* harmony export */   contains: () => (/* binding */ contains),\n/* harmony export */   containsPoint: () => (/* binding */ containsPoint),\n/* harmony export */   cutWithPlane: () => (/* binding */ cutWithPlane),\n/* harmony export */   "default": () => (/* binding */ vtkBoundingBox),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   getCenter: () => (/* binding */ getCenter),\n/* harmony export */   getCorners: () => (/* binding */ getCorners),\n/* harmony export */   getDiagonalLength: () => (/* binding */ getDiagonalLength),\n/* harmony export */   getLength: () => (/* binding */ getLength),\n/* harmony export */   getLengths: () => (/* binding */ getLengths),\n/* harmony export */   getMaxLength: () => (/* binding */ getMaxLength),\n/* harmony export */   getMaxPoint: () => (/* binding */ getMaxPoint),\n/* harmony export */   getMinPoint: () => (/* binding */ getMinPoint),\n/* harmony export */   getXRange: () => (/* binding */ getXRange),\n/* harmony export */   getYRange: () => (/* binding */ getYRange),\n/* harmony export */   getZRange: () => (/* binding */ getZRange),\n/* harmony export */   inflate: () => (/* binding */ inflate),\n/* harmony export */   intersect: () => (/* binding */ intersect),\n/* harmony export */   intersectBox: () => (/* binding */ intersectBox),\n/* harmony export */   intersectPlane: () => (/* binding */ intersectPlane),\n/* harmony export */   intersects: () => (/* binding */ intersects),\n/* harmony export */   isValid: () => (/* binding */ isValid),\n/* harmony export */   reset: () => (/* binding */ reset),\n/* harmony export */   scale: () => (/* binding */ scale),\n/* harmony export */   scaleAboutCenter: () => (/* binding */ scaleAboutCenter),\n/* harmony export */   setBounds: () => (/* binding */ setBounds),\n/* harmony export */   setMaxPoint: () => (/* binding */ setMaxPoint),\n/* harmony export */   setMinPoint: () => (/* binding */ setMinPoint),\n/* harmony export */   transformBounds: () => (/* binding */ transformBounds)\n/* harmony export */ });\n/* harmony import */ var _Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Core/Math/index.js */ "./node_modules/@kitware/vtk.js/Common/Core/Math/index.js");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ "./node_modules/gl-matrix/esm/vec3.js");\n/* harmony import */ var _Plane_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Plane.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/Plane.js");\n\r\n\r\n\r\n\r\nconst INIT_BOUNDS = [Number.MAX_VALUE, -Number.MAX_VALUE,\r\n// X\r\nNumber.MAX_VALUE, -Number.MAX_VALUE,\r\n// Y\r\nNumber.MAX_VALUE, -Number.MAX_VALUE // Z\r\n];\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction equals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\r\n}\r\nfunction isValid(bounds) {\r\n  return bounds?.length >= 6 && bounds[0] <= bounds[1] && bounds[2] <= bounds[3] && bounds[4] <= bounds[5];\r\n}\r\nfunction setBounds(bounds, otherBounds) {\r\n  bounds[0] = otherBounds[0];\r\n  bounds[1] = otherBounds[1];\r\n  bounds[2] = otherBounds[2];\r\n  bounds[3] = otherBounds[3];\r\n  bounds[4] = otherBounds[4];\r\n  bounds[5] = otherBounds[5];\r\n  return bounds;\r\n}\r\nfunction reset(bounds) {\r\n  return setBounds(bounds, INIT_BOUNDS);\r\n}\r\nfunction addPoint(bounds, x, y, z) {\r\n  const [xMin, xMax, yMin, yMax, zMin, zMax] = bounds;\r\n  bounds[0] = xMin < x ? xMin : x;\r\n  bounds[1] = xMax > x ? xMax : x;\r\n  bounds[2] = yMin < y ? yMin : y;\r\n  bounds[3] = yMax > y ? yMax : y;\r\n  bounds[4] = zMin < z ? zMin : z;\r\n  bounds[5] = zMax > z ? zMax : z;\r\n  return bounds;\r\n}\r\nfunction addPoints(bounds, points) {\r\n  if (points.length === 0) {\r\n    return bounds;\r\n  }\r\n  if (Array.isArray(points[0])) {\r\n    for (let i = 0; i < points.length; ++i) {\r\n      addPoint(bounds, ...points[i]);\r\n    }\r\n  } else {\r\n    for (let i = 0; i < points.length; i += 3) {\r\n      addPoint(bounds, ...points.slice(i, i + 3));\r\n    }\r\n  }\r\n  return bounds;\r\n}\r\nfunction addBounds(bounds, xMin, xMax, yMin, yMax, zMin, zMax) {\r\n  const [_xMin, _xMax, _yMin, _yMax, _zMin, _zMax] = bounds;\r\n  if (zMax === undefined) {\r\n    bounds[0] = Math.min(xMin[0], _xMin);\r\n    bounds[1] = Math.max(xMin[1], _xMax);\r\n    bounds[2] = Math.min(xMin[2], _yMin);\r\n    bounds[3] = Math.max(xMin[3], _yMax);\r\n    bounds[4] = Math.min(xMin[4], _zMin);\r\n    bounds[5] = Math.max(xMin[5], _zMax);\r\n  } else {\r\n    bounds[0] = Math.min(xMin, _xMin);\r\n    bounds[1] = Math.max(xMax, _xMax);\r\n    bounds[2] = Math.min(yMin, _yMin);\r\n    bounds[3] = Math.max(yMax, _yMax);\r\n    bounds[4] = Math.min(zMin, _zMin);\r\n    bounds[5] = Math.max(zMax, _zMax);\r\n  }\r\n  return bounds;\r\n}\r\nfunction setMinPoint(bounds, x, y, z) {\r\n  const [xMin, xMax, yMin, yMax, zMin, zMax] = bounds;\r\n  bounds[0] = x;\r\n  bounds[1] = x > xMax ? x : xMax;\r\n  bounds[2] = y;\r\n  bounds[3] = y > yMax ? y : yMax;\r\n  bounds[4] = z;\r\n  bounds[5] = z > zMax ? z : zMax;\r\n  return xMin !== x || yMin !== y || zMin !== z;\r\n}\r\nfunction setMaxPoint(bounds, x, y, z) {\r\n  const [xMin, xMax, yMin, yMax, zMin, zMax] = bounds;\r\n  bounds[0] = x < xMin ? x : xMin;\r\n  bounds[1] = x;\r\n  bounds[2] = y < yMin ? y : yMin;\r\n  bounds[3] = y;\r\n  bounds[4] = z < zMin ? z : zMin;\r\n  bounds[5] = z;\r\n  return xMax !== x || yMax !== y || zMax !== z;\r\n}\r\nfunction inflate(bounds, delta) {\r\n  bounds[0] -= delta;\r\n  bounds[1] += delta;\r\n  bounds[2] -= delta;\r\n  bounds[3] += delta;\r\n  bounds[4] -= delta;\r\n  bounds[5] += delta;\r\n  return bounds;\r\n}\r\nfunction scale(bounds, sx, sy, sz) {\r\n  if (!isValid(bounds)) {\r\n    return false;\r\n  }\r\n  if (sx >= 0.0) {\r\n    bounds[0] *= sx;\r\n    bounds[1] *= sx;\r\n  } else {\r\n    bounds[0] = sx * bounds[1];\r\n    bounds[1] = sx * bounds[0];\r\n  }\r\n  if (sy >= 0.0) {\r\n    bounds[2] *= sy;\r\n    bounds[3] *= sy;\r\n  } else {\r\n    bounds[2] = sy * bounds[3];\r\n    bounds[3] = sy * bounds[2];\r\n  }\r\n  if (sz >= 0.0) {\r\n    bounds[4] *= sz;\r\n    bounds[5] *= sz;\r\n  } else {\r\n    bounds[4] = sz * bounds[5];\r\n    bounds[5] = sz * bounds[4];\r\n  }\r\n  return true;\r\n}\r\nfunction getCenter(bounds) {\r\n  return [0.5 * (bounds[0] + bounds[1]), 0.5 * (bounds[2] + bounds[3]), 0.5 * (bounds[4] + bounds[5])];\r\n}\r\nfunction scaleAboutCenter(bounds, sx, sy, sz) {\r\n  if (!isValid(bounds)) {\r\n    return false;\r\n  }\r\n  const center = getCenter(bounds);\r\n  bounds[0] -= center[0];\r\n  bounds[1] -= center[0];\r\n  bounds[2] -= center[1];\r\n  bounds[3] -= center[1];\r\n  bounds[4] -= center[2];\r\n  bounds[5] -= center[2];\r\n  scale(bounds, sx, sy, sz);\r\n  bounds[0] += center[0];\r\n  bounds[1] += center[0];\r\n  bounds[2] += center[1];\r\n  bounds[3] += center[1];\r\n  bounds[4] += center[2];\r\n  bounds[5] += center[2];\r\n  return true;\r\n}\r\nfunction getLength(bounds, index) {\r\n  return bounds[index * 2 + 1] - bounds[index * 2];\r\n}\r\nfunction getLengths(bounds) {\r\n  return [getLength(bounds, 0), getLength(bounds, 1), getLength(bounds, 2)];\r\n}\r\nfunction getXRange(bounds) {\r\n  return bounds.slice(0, 2);\r\n}\r\nfunction getYRange(bounds) {\r\n  return bounds.slice(2, 4);\r\n}\r\nfunction getZRange(bounds) {\r\n  return bounds.slice(4, 6);\r\n}\r\nfunction getMaxLength(bounds) {\r\n  const l = getLengths(bounds);\r\n  if (l[0] > l[1]) {\r\n    if (l[0] > l[2]) {\r\n      return l[0];\r\n    }\r\n    return l[2];\r\n  }\r\n  if (l[1] > l[2]) {\r\n    return l[1];\r\n  }\r\n  return l[2];\r\n}\r\nfunction getDiagonalLength(bounds) {\r\n  if (isValid(bounds)) {\r\n    const l = getLengths(bounds);\r\n    return Math.sqrt(l[0] * l[0] + l[1] * l[1] + l[2] * l[2]);\r\n  }\r\n  return null;\r\n}\r\nfunction getMinPoint(bounds) {\r\n  return [bounds[0], bounds[2], bounds[4]];\r\n}\r\nfunction getMaxPoint(bounds) {\r\n  return [bounds[1], bounds[3], bounds[5]];\r\n}\r\nfunction oppositeSign(a, b) {\r\n  return a <= 0 && b >= 0 || a >= 0 && b <= 0;\r\n}\r\nfunction getCorners(bounds, corners) {\r\n  let count = 0;\r\n  for (let ix = 0; ix < 2; ix++) {\r\n    for (let iy = 2; iy < 4; iy++) {\r\n      for (let iz = 4; iz < 6; iz++) {\r\n        corners[count++] = [bounds[ix], bounds[iy], bounds[iz]];\r\n      }\r\n    }\r\n  }\r\n  return corners;\r\n}\r\n\r\n// Computes the two corners with minimal and maximal coordinates\r\nfunction computeCornerPoints(bounds, point1, point2) {\r\n  point1[0] = bounds[0];\r\n  point1[1] = bounds[2];\r\n  point1[2] = bounds[4];\r\n  point2[0] = bounds[1];\r\n  point2[1] = bounds[3];\r\n  point2[2] = bounds[5];\r\n  return point1;\r\n}\r\nfunction transformBounds(bounds, transform) {\r\n  let out = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\r\n  const corners = getCorners(bounds, []);\r\n  for (let i = 0; i < corners.length; ++i) {\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.transformMat4(corners[i], corners[i], transform);\r\n  }\r\n  reset(out);\r\n  return addPoints(out, corners);\r\n}\r\nfunction computeScale3(bounds) {\r\n  let scale3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\r\n  scale3[0] = 0.5 * (bounds[1] - bounds[0]);\r\n  scale3[1] = 0.5 * (bounds[3] - bounds[2]);\r\n  scale3[2] = 0.5 * (bounds[5] - bounds[4]);\r\n  return scale3;\r\n}\r\n\r\n/**\r\n * Compute local bounds.\r\n * Not as fast as vtkPoints.getBounds() if u, v, w form a natural basis.\r\n * @param {vtkPoints} points\r\n * @param {array} u first vector\r\n * @param {array} v second vector\r\n * @param {array} w third vector\r\n */\r\nfunction computeLocalBounds(points, u, v, w) {\r\n  const bounds = [].concat(INIT_BOUNDS);\r\n  const pointsData = points.getData();\r\n  for (let i = 0; i < pointsData.length; i += 3) {\r\n    const point = [pointsData[i], pointsData[i + 1], pointsData[i + 2]];\r\n    const du = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.d)(point, u);\r\n    bounds[0] = Math.min(du, bounds[0]);\r\n    bounds[1] = Math.max(du, bounds[1]);\r\n    const dv = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.d)(point, v);\r\n    bounds[2] = Math.min(dv, bounds[2]);\r\n    bounds[3] = Math.max(dv, bounds[3]);\r\n    const dw = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.d)(point, w);\r\n    bounds[4] = Math.min(dw, bounds[4]);\r\n    bounds[5] = Math.max(dw, bounds[5]);\r\n  }\r\n  return bounds;\r\n}\r\n\r\n// The method returns a non-zero value if the bounding box is hit.\r\n// Origin[3] starts the ray, dir[3] is the vector components of the ray in the x-y-z\r\n// directions, coord[3] is the location of hit, and t is the parametric\r\n// coordinate along line. (Notes: the intersection ray dir[3] is NOT\r\n// normalized.  Valid intersections will only occur between 0<=t<=1.)\r\nfunction intersectBox(bounds, origin, dir, coord, tolerance) {\r\n  let inside = true;\r\n  const quadrant = [];\r\n  let whichPlane = 0;\r\n  const maxT = [];\r\n  const candidatePlane = [0.0, 0.0, 0.0];\r\n  const RIGHT = 0;\r\n  const LEFT = 1;\r\n  const MIDDLE = 2;\r\n\r\n  // First find closest planes\r\n  for (let i = 0; i < 3; i++) {\r\n    if (origin[i] < bounds[2 * i]) {\r\n      quadrant[i] = LEFT;\r\n      candidatePlane[i] = bounds[2 * i];\r\n      inside = false;\r\n    } else if (origin[i] > bounds[2 * i + 1]) {\r\n      quadrant[i] = RIGHT;\r\n      candidatePlane[i] = bounds[2 * i + 1];\r\n      inside = false;\r\n    } else {\r\n      quadrant[i] = MIDDLE;\r\n    }\r\n  }\r\n\r\n  // Check whether origin of ray is inside bbox\r\n  if (inside) {\r\n    coord[0] = origin[0];\r\n    coord[1] = origin[1];\r\n    coord[2] = origin[2];\r\n    tolerance[0] = 0;\r\n    return 1;\r\n  }\r\n\r\n  // Calculate parametric distance to plane\r\n  for (let i = 0; i < 3; i++) {\r\n    if (quadrant[i] !== MIDDLE && dir[i] !== 0.0) {\r\n      maxT[i] = (candidatePlane[i] - origin[i]) / dir[i];\r\n    } else {\r\n      maxT[i] = -1.0;\r\n    }\r\n  }\r\n\r\n  // Find the largest parametric value of intersection\r\n  for (let i = 0; i < 3; i++) {\r\n    if (maxT[whichPlane] < maxT[i]) {\r\n      whichPlane = i;\r\n    }\r\n  }\r\n\r\n  // Check for value intersection along line\r\n  if (maxT[whichPlane] > 1.0 || maxT[whichPlane] < 0.0) {\r\n    return 0;\r\n  }\r\n  tolerance[0] = maxT[whichPlane];\r\n\r\n  // Intersection point along line is okay. Check bbox.\r\n  for (let i = 0; i < 3; i++) {\r\n    if (whichPlane !== i) {\r\n      coord[i] = origin[i] + maxT[whichPlane] * dir[i];\r\n      if (coord[i] < bounds[2 * i] || coord[i] > bounds[2 * i + 1]) {\r\n        return 0;\r\n      }\r\n    } else {\r\n      coord[i] = candidatePlane[i];\r\n    }\r\n  }\r\n  return 1;\r\n}\r\n\r\n// Plane intersection with box\r\n// The plane is infinite in extent and defined by an origin and normal.The function indicates\r\n// whether the plane intersects, not the particulars of intersection points and such\r\n// The function returns non-zero if the plane and box intersect; zero otherwise.\r\nfunction intersectPlane(bounds, origin, normal) {\r\n  const p = [];\r\n  let d = 0;\r\n  let sign = 1;\r\n  let firstOne = 1;\r\n\r\n  // Evaluate the eight points. If there is a sign change, there is an intersection\r\n  for (let z = 4; z <= 5; ++z) {\r\n    p[2] = bounds[z];\r\n    for (let y = 2; y <= 3; ++y) {\r\n      p[1] = bounds[y];\r\n      for (let x = 0; x <= 1; ++x) {\r\n        p[0] = bounds[x];\r\n        d = _Plane_js__WEBPACK_IMPORTED_MODULE_1__["default"].evaluate(normal, origin, p);\r\n        if (firstOne) {\r\n          sign = d >= 0 ? 1 : -1;\r\n          firstOne = 0;\r\n        }\r\n        if (d === 0.0 || sign > 0 && d < 0.0 || sign < 0 && d > 0.0) {\r\n          return 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return 0; // no intersection\r\n}\r\n\r\nfunction intersect(bounds, bBounds) {\r\n  if (!(isValid(bounds) && isValid(bBounds))) {\r\n    return false;\r\n  }\r\n  const newBounds = [0, 0, 0, 0, 0, 0];\r\n  let intersection;\r\n  for (let i = 0; i < 3; i++) {\r\n    intersection = false;\r\n    if (bBounds[i * 2] >= bounds[i * 2] && bBounds[i * 2] <= bounds[i * 2 + 1]) {\r\n      intersection = true;\r\n      newBounds[i * 2] = bBounds[i * 2];\r\n    } else if (bounds[i * 2] >= bBounds[i * 2] && bounds[i * 2] <= bBounds[i * 2 + 1]) {\r\n      intersection = true;\r\n      newBounds[i * 2] = bounds[i * 2];\r\n    }\r\n    if (bBounds[i * 2 + 1] >= bounds[i * 2] && bBounds[i * 2 + 1] <= bounds[i * 2 + 1]) {\r\n      intersection = true;\r\n      newBounds[i * 2 + 1] = bBounds[2 * i + 1];\r\n    } else if (bounds[i * 2 + 1] >= bBounds[i * 2] && bounds[i * 2 + 1] <= bBounds[i * 2 + 1]) {\r\n      intersection = true;\r\n      newBounds[i * 2 + 1] = bounds[i * 2 + 1];\r\n    }\r\n    if (!intersection) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // OK they did intersect - set the box to be the result\r\n  bounds[0] = newBounds[0];\r\n  bounds[1] = newBounds[1];\r\n  bounds[2] = newBounds[2];\r\n  bounds[3] = newBounds[3];\r\n  bounds[4] = newBounds[4];\r\n  bounds[5] = newBounds[5];\r\n  return true;\r\n}\r\nfunction intersects(bounds, bBounds) {\r\n  if (!(isValid(bounds) && isValid(bBounds))) {\r\n    return false;\r\n  }\r\n  /* eslint-disable no-continue */\r\n  for (let i = 0; i < 3; i++) {\r\n    if (bBounds[i * 2] >= bounds[i * 2] && bBounds[i * 2] <= bounds[i * 2 + 1]) {\r\n      continue;\r\n    } else if (bounds[i * 2] >= bBounds[i * 2] && bounds[i * 2] <= bBounds[i * 2 + 1]) {\r\n      continue;\r\n    }\r\n    if (bBounds[i * 2 + 1] >= bounds[i * 2] && bBounds[i * 2 + 1] <= bounds[i * 2 + 1]) {\r\n      continue;\r\n    } else if (bounds[i * 2 + 1] >= bBounds[i * 2] && bounds[i * 2 + 1] <= bBounds[i * 2 + 1]) {\r\n      continue;\r\n    }\r\n    return false;\r\n  }\r\n  /* eslint-enable no-continue */\r\n\r\n  return true;\r\n}\r\nfunction containsPoint(bounds, x, y, z) {\r\n  if (x < bounds[0] || x > bounds[1]) {\r\n    return false;\r\n  }\r\n  if (y < bounds[2] || y > bounds[3]) {\r\n    return false;\r\n  }\r\n  if (z < bounds[4] || z > bounds[5]) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\nfunction contains(bounds, otherBounds) {\r\n  // if either box is not valid or they don\'t intersect\r\n  if (!intersects(bounds, otherBounds)) {\r\n    return false;\r\n  }\r\n  if (!containsPoint(bounds, ...getMinPoint(otherBounds))) {\r\n    return false;\r\n  }\r\n  if (!containsPoint(bounds, ...getMaxPoint(otherBounds))) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Returns true if plane intersects bounding box.\r\n * If so, the box is cut by the plane\r\n * @param {array} origin\r\n * @param {array} normal\r\n */\r\nfunction cutWithPlane(bounds, origin, normal) {\r\n  // Index[0..2] represents the order of traversing the corners of a cube\r\n  // in (x,y,z), (y,x,z) and (z,x,y) ordering, respectively\r\n  const index = [[0, 1, 2, 3, 4, 5, 6, 7], [0, 1, 4, 5, 2, 3, 6, 7], [0, 2, 4, 6, 1, 3, 5, 7]];\r\n\r\n  // stores the signed distance to a plane\r\n  const d = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let idx = 0;\r\n  for (let ix = 0; ix < 2; ix++) {\r\n    for (let iy = 2; iy < 4; iy++) {\r\n      for (let iz = 4; iz < 6; iz++) {\r\n        const x = [bounds[ix], bounds[iy], bounds[iz]];\r\n        d[idx++] = _Plane_js__WEBPACK_IMPORTED_MODULE_1__["default"].evaluate(normal, origin, x);\r\n      }\r\n    }\r\n  }\r\n  let dir = 2;\r\n  while (dir--) {\r\n    // in each direction, we test if the vertices of two orthogonal faces\r\n    // are on either side of the plane\r\n    if (oppositeSign(d[index[dir][0]], d[index[dir][4]]) && oppositeSign(d[index[dir][1]], d[index[dir][5]]) && oppositeSign(d[index[dir][2]], d[index[dir][6]]) && oppositeSign(d[index[dir][3]], d[index[dir][7]])) {\r\n      break;\r\n    }\r\n  }\r\n  if (dir < 0) {\r\n    return false;\r\n  }\r\n  const sign = Math.sign(normal[dir]);\r\n  const size = Math.abs((bounds[dir * 2 + 1] - bounds[dir * 2]) * normal[dir]);\r\n  let t = sign > 0 ? 1 : 0;\r\n  /* eslint-disable no-continue */\r\n  for (let i = 0; i < 4; i++) {\r\n    if (size === 0) {\r\n      continue; // shouldn\'t happen\r\n    }\r\n\r\n    const ti = Math.abs(d[index[dir][i]]) / size;\r\n    if (sign > 0 && ti < t) {\r\n      t = ti;\r\n    }\r\n    if (sign < 0 && ti > t) {\r\n      t = ti;\r\n    }\r\n  }\r\n  /* eslint-enable no-continue */\r\n  const bound = (1.0 - t) * bounds[dir * 2] + t * bounds[dir * 2 + 1];\r\n  if (sign > 0) {\r\n    bounds[dir * 2] = bound;\r\n  } else {\r\n    bounds[dir * 2 + 1] = bound;\r\n  }\r\n  return true;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Light Weight class\r\n// ----------------------------------------------------------------------------\r\n\r\nclass BoundingBox {\r\n  constructor(refBounds) {\r\n    this.bounds = refBounds;\r\n    if (!this.bounds) {\r\n      this.bounds = new Float64Array(INIT_BOUNDS);\r\n    }\r\n  }\r\n  getBounds() {\r\n    return this.bounds;\r\n  }\r\n  equals(otherBounds) {\r\n    return equals(this.bounds, otherBounds);\r\n  }\r\n  isValid() {\r\n    return isValid(this.bounds);\r\n  }\r\n  setBounds(otherBounds) {\r\n    return setBounds(this.bounds, otherBounds);\r\n  }\r\n  reset() {\r\n    return reset(this.bounds);\r\n  }\r\n  addPoint() {\r\n    for (var _len = arguments.length, xyz = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      xyz[_key] = arguments[_key];\r\n    }\r\n    return addPoint(this.bounds, ...xyz);\r\n  }\r\n  addPoints(points) {\r\n    return addPoints(this.bounds, points);\r\n  }\r\n  addBounds(xMin, xMax, yMin, yMax, zMin, zMax) {\r\n    return addBounds(this.bounds, xMin, xMax, yMin, yMax, zMin, zMax);\r\n  }\r\n  setMinPoint(x, y, z) {\r\n    return setMinPoint(this.bounds, x, y, z);\r\n  }\r\n  setMaxPoint(x, y, z) {\r\n    return setMaxPoint(this.bounds, x, y, z);\r\n  }\r\n  inflate(delta) {\r\n    return inflate(this.bounds, delta);\r\n  }\r\n  scale(sx, sy, sz) {\r\n    return scale(this.bounds, sx, sy, sz);\r\n  }\r\n  getCenter() {\r\n    return getCenter(this.bounds);\r\n  }\r\n  getLength(index) {\r\n    return getLength(this.bounds, index);\r\n  }\r\n  getLengths() {\r\n    return getLengths(this.bounds);\r\n  }\r\n  getMaxLength() {\r\n    return getMaxLength(this.bounds);\r\n  }\r\n  getDiagonalLength() {\r\n    return getDiagonalLength(this.bounds);\r\n  }\r\n  getMinPoint() {\r\n    return getMinPoint(this.bounds);\r\n  }\r\n  getMaxPoint() {\r\n    return getMaxPoint(this.bounds);\r\n  }\r\n  getXRange() {\r\n    return getXRange(this.bounds);\r\n  }\r\n  getYRange() {\r\n    return getYRange(this.bounds);\r\n  }\r\n  getZRange() {\r\n    return getZRange(this.bounds);\r\n  }\r\n  getCorners(corners) {\r\n    return getCorners(this.bounds, corners);\r\n  }\r\n  computeCornerPoints(point1, point2) {\r\n    return computeCornerPoints(this.bounds, point1, point2);\r\n  }\r\n  computeLocalBounds(u, v, w) {\r\n    return computeLocalBounds(this.bounds, u, v, w);\r\n  }\r\n  transformBounds(transform) {\r\n    let out = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\r\n    return transformBounds(this.bounds, transform, out);\r\n  }\r\n  computeScale3(scale3) {\r\n    return computeScale3(this.bounds, scale3);\r\n  }\r\n  cutWithPlane(origin, normal) {\r\n    return cutWithPlane(this.bounds, origin, normal);\r\n  }\r\n  intersectBox(origin, dir, coord, tolerance) {\r\n    return intersectBox(this.bounds, origin, dir, coord, tolerance);\r\n  }\r\n  intersectPlane(origin, normal) {\r\n    return intersectPlane(this.bounds, origin, normal);\r\n  }\r\n  intersect(otherBounds) {\r\n    return intersect(this.bounds, otherBounds);\r\n  }\r\n  intersects(otherBounds) {\r\n    return intersects(this.bounds, otherBounds);\r\n  }\r\n  containsPoint(x, y, z) {\r\n    return containsPoint(this.bounds, x, y, z);\r\n  }\r\n  contains(otherBounds) {\r\n    return intersects(this.bounds, otherBounds);\r\n  }\r\n}\r\nfunction newInstance(initialValues) {\r\n  const bounds = initialValues && initialValues.bounds;\r\n  return new BoundingBox(bounds);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Static API\r\n// ----------------------------------------------------------------------------\r\n\r\nconst STATIC = {\r\n  equals,\r\n  isValid,\r\n  setBounds,\r\n  reset,\r\n  addPoint,\r\n  addPoints,\r\n  addBounds,\r\n  setMinPoint,\r\n  setMaxPoint,\r\n  inflate,\r\n  scale,\r\n  scaleAboutCenter,\r\n  getCenter,\r\n  getLength,\r\n  getLengths,\r\n  getMaxLength,\r\n  getDiagonalLength,\r\n  getMinPoint,\r\n  getMaxPoint,\r\n  getXRange,\r\n  getYRange,\r\n  getZRange,\r\n  getCorners,\r\n  computeCornerPoints,\r\n  computeLocalBounds,\r\n  transformBounds,\r\n  computeScale3,\r\n  cutWithPlane,\r\n  intersectBox,\r\n  intersectPlane,\r\n  intersect,\r\n  intersects,\r\n  containsPoint,\r\n  contains,\r\n  INIT_BOUNDS\r\n};\r\nvar vtkBoundingBox = {\r\n  newInstance,\r\n  ...STATIC\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js?')},"./node_modules/@kitware/vtk.js/Common/DataModel/Cell.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkCell$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n/* harmony import */ var _Core_Points_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/Points.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Points.js\");\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkCell methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkCell(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkCell');\r\n  publicAPI.initialize = function (points) {\r\n    let pointIdsList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\r\n    if (!pointIdsList) {\r\n      model.points = points;\r\n      model.pointsIds = new Array(points.getNumberOfPoints());\r\n      for (let i = points.getNumberOfPoints() - 1; i >= 0; --i) {\r\n        model.pointsIds[i] = i;\r\n      }\r\n    } else {\r\n      model.pointsIds = pointIdsList;\r\n      let triangleData = model.points.getData();\r\n      if (triangleData.length !== 3 * model.pointsIds.length) {\r\n        triangleData = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newTypedArray(points.getDataType(), 3 * model.pointsIds.length);\r\n      }\r\n      const pointsData = points.getData();\r\n      model.pointsIds.forEach((pointId, index) => {\r\n        // const start = 3 * pointId;\r\n        // pointsData.set(p.subarray(start, start + 3), 3 * index);\r\n        let pointOffset = 3 * pointId;\r\n        let trianglePointOffset = 3 * index;\r\n        triangleData[trianglePointOffset] = pointsData[pointOffset];\r\n        triangleData[++trianglePointOffset] = pointsData[++pointOffset];\r\n        triangleData[++trianglePointOffset] = pointsData[++pointOffset];\r\n      });\r\n      model.points.setData(triangleData);\r\n    }\r\n  };\r\n  publicAPI.getBounds = () => {\r\n    const nbPoints = model.points.getNumberOfPoints();\r\n    const x = [];\r\n    if (nbPoints) {\r\n      model.points.getPoint(0, x);\r\n      model.bounds[0] = x[0];\r\n      model.bounds[1] = x[0];\r\n      model.bounds[2] = x[1];\r\n      model.bounds[3] = x[1];\r\n      model.bounds[4] = x[2];\r\n      model.bounds[5] = x[2];\r\n      for (let i = 1; i < nbPoints; i++) {\r\n        model.points.getPoint(i, x);\r\n        model.bounds[0] = x[0] < model.bounds[0] ? x[0] : model.bounds[0];\r\n        model.bounds[1] = x[0] > model.bounds[1] ? x[0] : model.bounds[1];\r\n        model.bounds[2] = x[1] < model.bounds[2] ? x[1] : model.bounds[2];\r\n        model.bounds[3] = x[1] > model.bounds[3] ? x[1] : model.bounds[3];\r\n        model.bounds[4] = x[2] < model.bounds[4] ? x[2] : model.bounds[4];\r\n        model.bounds[5] = x[2] > model.bounds[5] ? x[2] : model.bounds[5];\r\n      }\r\n    } else {\r\n      (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.u)(model.bounds);\r\n    }\r\n    return model.bounds;\r\n  };\r\n  publicAPI.getLength2 = () => {\r\n    publicAPI.getBounds();\r\n    let length = 0.0;\r\n    let diff = 0;\r\n    for (let i = 0; i < 3; i++) {\r\n      diff = model.bounds[2 * i + 1] - model.bounds[2 * i];\r\n      length += diff * diff;\r\n    }\r\n    return length;\r\n  };\r\n  publicAPI.getParametricDistance = pcoords => {\r\n    let pDist;\r\n    let pDistMax = 0.0;\r\n    for (let i = 0; i < 3; i++) {\r\n      if (pcoords[i] < 0.0) {\r\n        pDist = -pcoords[i];\r\n      } else if (pcoords[i] > 1.0) {\r\n        pDist = pcoords[i] - 1.0;\r\n      } else {\r\n        // inside the cell in the parametric direction\r\n        pDist = 0.0;\r\n      }\r\n      if (pDist > pDistMax) {\r\n        pDistMax = pDist;\r\n      }\r\n    }\r\n    return pDistMax;\r\n  };\r\n  publicAPI.getNumberOfPoints = () => model.points.getNumberOfPoints();\r\n  publicAPI.deepCopy = cell => {\r\n    cell.initialize(model.points, model.pointsIds);\r\n  };\r\n  publicAPI.getCellDimension = () => {}; // virtual\r\n  publicAPI.intersectWithLine = (p1, p2, tol, t, x, pcoords, subId) => {}; // virtual\r\n  publicAPI.evaluatePosition = (x, closestPoint, subId, pcoords, dist2, weights) => {\r\n    _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.vtkErrorMacro('vtkCell.evaluatePosition is not implemented.');\r\n  }; // virtual\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  bounds: [-1, -1, -1, -1, -1, -1],\r\n  pointsIds: []\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  if (!model.points) {\r\n    model.points = _Core_Points_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance();\r\n  }\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['points', 'pointsIds']);\r\n  vtkCell(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkCell');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkCell$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/Cell.js?")},"./node_modules/@kitware/vtk.js/Common/DataModel/CellLinks.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InitLink: () => (/* binding */ InitLink),\n/* harmony export */   "default": () => (/* binding */ vtkCellLinks$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _Cell_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Cell.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/Cell.js");\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\nconst InitLink = {\r\n  ncells: 0,\r\n  cells: null\r\n};\r\nfunction resize(model, sz) {\r\n  let newSize = sz;\r\n  if (sz >= model.array.length) {\r\n    newSize += model.array.length;\r\n  }\r\n  while (newSize > model.array.length) model.array.push({\r\n    ncells: 0,\r\n    cells: null\r\n  });\r\n  model.array.length = newSize;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkCellLinks methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkCellLinks(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkCellLinks\');\r\n\r\n  /**\r\n   * Build the link list array. All subclasses of vtkAbstractCellLinks\r\n   * must support this method.\r\n   */\r\n  publicAPI.buildLinks = data => {\r\n    const numPts = data.getPoints().getNumberOfPoints();\r\n    const numCells = data.getNumberOfCells();\r\n\r\n    // fill out lists with number of references to cells\r\n    const linkLoc = new Uint32Array(numPts);\r\n\r\n    // Use fast path if polydata\r\n    if (data.isA(\'vtkPolyData\')) {\r\n      // traverse data to determine number of uses of each point\r\n      for (let cellId = 0; cellId < numCells; ++cellId) {\r\n        const {\r\n          cellPointIds\r\n        } = data.getCellPoints(cellId);\r\n        cellPointIds.forEach(cellPointId => {\r\n          publicAPI.incrementLinkCount(cellPointId);\r\n        });\r\n      }\r\n\r\n      // now allocate storage for the links\r\n      publicAPI.allocateLinks(numPts);\r\n      model.maxId = numPts - 1;\r\n      for (let cellId = 0; cellId < numCells; ++cellId) {\r\n        const {\r\n          cellPointIds\r\n        } = data.getCellPoints(cellId);\r\n        cellPointIds.forEach(cellPointId => {\r\n          publicAPI.insertCellReference(cellPointId, linkLoc[cellPointId]++, cellId);\r\n        });\r\n      }\r\n    } // any other type of dataset\r\n    else {\r\n      // traverse data to determine number of uses of each point\r\n      for (let cellId = 0; cellId < numCells; cellId++) {\r\n        // TODO: Currently not supported: const cell = data.getCell(cellId);\r\n        const cell = _Cell_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance();\r\n        cell.getPointsIds().forEach(cellPointId => {\r\n          publicAPI.incrementLinkCount(cellPointId);\r\n        });\r\n      }\r\n\r\n      // now allocate storage for the links\r\n      publicAPI.allocateLinks(numPts);\r\n      model.maxId = numPts - 1;\r\n      for (let cellId = 0; cellId < numCells; ++cellId) {\r\n        // TODO: Currently not supported: const cell = data.getCell(cellId);\r\n        const cell = _Cell_js__WEBPACK_IMPORTED_MODULE_1__["default"].newInstance();\r\n        cell.getPointsIds().forEach(cellPointId => {\r\n          publicAPI.insertCellReference(cellPointId, linkLoc[cellPointId]++, cellId);\r\n        });\r\n      }\r\n    } // end else\r\n  };\r\n\r\n  /**\r\n   * Build the link list array with a provided connectivity array.\r\n   */\r\n  // publicAPI.buildLinks = (data, connectivity) => {};\r\n\r\n  /**\r\n   * Allocate the specified number of links (i.e., number of points) that\r\n   * will be built.\r\n   */\r\n  publicAPI.allocate = function (numLinks) {\r\n    let ext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\r\n    model.array = Array(numLinks).fill().map(() => ({\r\n      ncells: 0,\r\n      cells: null\r\n    }));\r\n    model.extend = ext;\r\n    model.maxId = -1;\r\n  };\r\n  publicAPI.initialize = () => {\r\n    model.array = null;\r\n  };\r\n\r\n  /**\r\n   * Get a link structure given a point id.\r\n   */\r\n  publicAPI.getLink = ptId => model.array[ptId];\r\n\r\n  /**\r\n   * Get the number of cells using the point specified by ptId.\r\n   */\r\n  publicAPI.getNcells = ptId => model.array[ptId].ncells;\r\n\r\n  /**\r\n   * Return a list of cell ids using the point.\r\n   */\r\n  publicAPI.getCells = ptId => model.array[ptId].cells;\r\n\r\n  /**\r\n   * Insert a new point into the cell-links data structure. The size parameter\r\n   * is the initial size of the list.\r\n   */\r\n  publicAPI.insertNextPoint = numLinks => {\r\n    model.array.push({\r\n      ncells: numLinks,\r\n      cells: Array(numLinks)\r\n    });\r\n    ++model.maxId;\r\n  };\r\n\r\n  /**\r\n   * Insert a cell id into the list of cells (at the end) using the cell id\r\n   * provided. (Make sure to extend the link list (if necessary) using the\r\n   * method resizeCellList().)\r\n   */\r\n  publicAPI.insertNextCellReference = (ptId, cellId) => {\r\n    model.array[ptId].cells[model.array[ptId].ncells++] = cellId;\r\n  };\r\n\r\n  /**\r\n   * Delete point (and storage) by destroying links to using cells.\r\n   */\r\n  publicAPI.deletePoint = ptId => {\r\n    model.array[ptId].ncells = 0;\r\n    model.array[ptId].cells = null;\r\n  };\r\n\r\n  /**\r\n   * Delete the reference to the cell (cellId) from the point (ptId). This\r\n   * removes the reference to the cellId from the cell list, but does not\r\n   * resize the list (recover memory with resizeCellList(), if necessary).\r\n   */\r\n  publicAPI.removeCellReference = (cellId, ptId) => {\r\n    model.array[ptId].cells = model.array[ptId].cells.filter(cell => cell !== cellId);\r\n    model.array[ptId].ncells = model.array[ptId].cells.length;\r\n  };\r\n\r\n  /**\r\n   * Add the reference to the cell (cellId) from the point (ptId). This\r\n   * adds a reference to the cellId from the cell list, but does not resize\r\n   * the list (extend memory with resizeCellList(), if necessary).\r\n   */\r\n  publicAPI.addCellReference = (cellId, ptId) => {\r\n    model.array[ptId].cells[model.array[ptId].ncells++] = cellId;\r\n  };\r\n\r\n  /**\r\n   * Change the length of a point\'s link list (i.e., list of cells using a\r\n   * point) by the size specified.\r\n   */\r\n  publicAPI.resizeCellList = (ptId, size) => {\r\n    model.array[ptId].cells.length = size;\r\n  };\r\n\r\n  /**\r\n   * Reclaim any unused memory.\r\n   */\r\n  publicAPI.squeeze = () => {\r\n    resize(model, model.maxId + 1);\r\n  };\r\n\r\n  /**\r\n   * Reset to a state of no entries without freeing the memory.\r\n   */\r\n  publicAPI.reset = () => {\r\n    model.maxId = -1;\r\n  };\r\n\r\n  /**\r\n   * Standard DeepCopy method.  Since this object contains no reference\r\n   * to other objects, there is no ShallowCopy.\r\n   */\r\n  publicAPI.deepCopy = src => {\r\n    model.array = [...src.array];\r\n    model.extend = src.extend;\r\n    model.maxId = src.maxId;\r\n  };\r\n\r\n  /**\r\n   * Increment the count of the number of cells using the point.\r\n   */\r\n  publicAPI.incrementLinkCount = ptId => {\r\n    ++model.array[ptId].ncells;\r\n  };\r\n  publicAPI.allocateLinks = n => {\r\n    for (let i = 0; i < n; ++i) {\r\n      model.array[i].cells = new Array(model.array[i].ncells);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Insert a cell id into the list of cells using the point.\r\n   */\r\n  publicAPI.insertCellReference = (ptId, pos, cellId) => {\r\n    model.array[ptId].cells[pos] = cellId;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  array: null,\r\n  // pointer to data\r\n  maxId: 0,\r\n  // maximum index inserted thus far\r\n  extend: 0 // grow array by this point\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  vtkCellLinks(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, \'vtkCellLinks\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkCellLinks$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/CellLinks.js?')},"./node_modules/@kitware/vtk.js/Common/DataModel/CellTypes.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STATIC: () => (/* binding */ STATIC),\n/* harmony export */   \"default\": () => (/* binding */ vtkCellTypes$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CellTypes/Constants.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/CellTypes/Constants.js\");\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\n\r\n/**\r\n * Given an int (as defined in vtkCellType.h) identifier for a class\r\n * return it's classname.\r\n */\r\nfunction getClassNameFromTypeId(typeId) {\r\n  return typeId < _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_1__.CellTypesStrings.length ? _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_1__.CellTypesStrings[typeId] : 'UnknownClass';\r\n}\r\n\r\n/**\r\n * Given a data object classname, return it's int identified (as\r\n * defined in vtkCellType.h)\r\n */\r\nfunction getTypeIdFromClassName(cellTypeString) {\r\n  return _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_1__.CellTypesStrings.findIndex(cellTypeString);\r\n}\r\n\r\n/**\r\n * This convenience method is a fast check to determine if a cell type\r\n * represents a linear or nonlinear cell.  This is generally much more\r\n * efficient than getting the appropriate vtkCell and checking its IsLinear\r\n * method.\r\n */\r\nfunction isLinear(type) {\r\n  return type < _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_1__.CellType.VTK_QUADRATIC_EDGE || type === _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_1__.CellType.VTK_CONVEX_POINT_SET || type === _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_1__.CellType.VTK_POLYHEDRON;\r\n}\r\nfunction hasSubCells(cellType) {\r\n  return cellType === _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_1__.CellType.VTK_TRIANGLE_STRIP || cellType === _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_1__.CellType.VTK_POLY_LINE || cellType === _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_1__.CellType.VTK_POLY_VERTEX;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Static API\r\n// ----------------------------------------------------------------------------\r\n\r\nconst STATIC = {\r\n  getClassNameFromTypeId,\r\n  getTypeIdFromClassName,\r\n  isLinear,\r\n  hasSubCells\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkCellTypes methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkCellTypes(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkCellTypes');\r\n\r\n  /**\r\n   * Allocate memory for this array. Delete old storage only if necessary.\r\n   */\r\n  publicAPI.allocate = function () {\r\n    let sz = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 512;\r\n    let ext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\r\n    model.size = sz > 0 ? sz : 1;\r\n    model.extend = ext > 0 ? ext : 1;\r\n    model.maxId = -1;\r\n    model.typeArray = new Uint8Array(sz);\r\n    model.locationArray = new Uint32Array(sz);\r\n  };\r\n\r\n  /**\r\n   * Add a cell at specified id.\r\n   */\r\n  publicAPI.insertCell = (cellId, type, loc) => {\r\n    model.typeArray[cellId] = type;\r\n    model.locationArray[cellId] = loc;\r\n    if (cellId > model.maxId) {\r\n      model.maxId = cellId;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Add a cell to the object in the next available slot.\r\n   */\r\n  publicAPI.insertNextCell = (type, loc) => {\r\n    publicAPI.insertCell(++model.maxId, type, loc);\r\n    return model.maxId;\r\n  };\r\n\r\n  /**\r\n   * Specify a group of cell types. This version is provided to maintain\r\n   * backwards compatibility and does a copy of the cellLocations\r\n   */\r\n  publicAPI.setCellTypes = (ncells, cellTypes, cellLocations) => {\r\n    model.size = ncells;\r\n    model.typeArray = cellTypes;\r\n    model.locationArray = cellLocations;\r\n    model.maxId = ncells - 1;\r\n  };\r\n\r\n  /**\r\n   * Return the location of the cell in the associated vtkCellArray.\r\n   */\r\n  publicAPI.getCellLocation = cellId => model.locationArray[cellId];\r\n\r\n  /**\r\n   * Delete cell by setting to nullptr cell type.\r\n   */\r\n  publicAPI.deleteCell = cellId => {\r\n    model.typeArray[cellId] = _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_1__.CellType.VTK_EMPTY_CELL;\r\n  };\r\n\r\n  /**\r\n   * Return the number of types in the list.\r\n   */\r\n  publicAPI.getNumberOfTypes = () => model.maxId + 1;\r\n\r\n  /**\r\n   * Return true if type specified is contained in list; false otherwise.\r\n   */\r\n  publicAPI.isType = type => {\r\n    const numTypes = publicAPI.getNumberOfTypes();\r\n    for (let i = 0; i < numTypes; ++i) {\r\n      if (type === publicAPI.getCellType(i)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Add the type specified to the end of the list. Range checking is performed.\r\n   */\r\n  publicAPI.insertNextType = type => publicAPI.insertNextCell(type, -1);\r\n\r\n  /**\r\n   * Return the type of cell.\r\n   */\r\n  publicAPI.getCellType = cellId => model.typeArray[cellId];\r\n\r\n  /**\r\n   * Reclaim any extra memory.\r\n   */\r\n  // TODO: publicAPI.squeeze = () =>  {};\r\n\r\n  /**\r\n   * Initialize object without releasing memory.\r\n   */\r\n  publicAPI.reset = () => {\r\n    model.maxId = -1;\r\n  };\r\n\r\n  /**\r\n   * Standard DeepCopy method.  Since this object contains no reference\r\n   * to other objects, there is no ShallowCopy.\r\n   */\r\n  publicAPI.deepCopy = src => {\r\n    publicAPI.allocate(src.getSize(), src.getExtend());\r\n    model.typeArray.set(src.getTypeArray());\r\n    model.locationArray.set(src.getLocationArray());\r\n    model.maxId = src.getMaxId();\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  // typeArray: null, // pointer to types array\r\n  // locationArray: null;   // pointer to array of offsets\r\n  size: 0,\r\n  // allocated size of data\r\n  maxId: -1,\r\n  // maximum index inserted thus far\r\n  extend: 1000 // grow array by this point\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['size', 'maxId', 'extend']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.getArray(publicAPI, model, ['typeArray', 'locationArray']);\r\n  vtkCellTypes(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkCellTypes');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkCellTypes$1 = {\r\n  newInstance,\r\n  extend,\r\n  ...STATIC\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/CellTypes.js?")},"./node_modules/@kitware/vtk.js/Common/DataModel/CellTypes/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CellType: () => (/* binding */ CellType),\n/* harmony export */   CellTypesStrings: () => (/* binding */ CellTypesStrings),\n/* harmony export */   \"default\": () => (/* binding */ Constants)\n/* harmony export */ });\nconst CellType = {\r\n  // Linear cells\r\n  VTK_EMPTY_CELL: 0,\r\n  VTK_VERTEX: 1,\r\n  VTK_POLY_VERTEX: 2,\r\n  VTK_LINE: 3,\r\n  VTK_POLY_LINE: 4,\r\n  VTK_TRIANGLE: 5,\r\n  VTK_TRIANGLE_STRIP: 6,\r\n  VTK_POLYGON: 7,\r\n  VTK_PIXEL: 8,\r\n  VTK_QUAD: 9,\r\n  VTK_TETRA: 10,\r\n  VTK_VOXEL: 11,\r\n  VTK_HEXAHEDRON: 12,\r\n  VTK_WEDGE: 13,\r\n  VTK_PYRAMID: 14,\r\n  VTK_PENTAGONAL_PRISM: 15,\r\n  VTK_HEXAGONAL_PRISM: 16,\r\n  // Quadratic, isoparametric cells\r\n  VTK_QUADRATIC_EDGE: 21,\r\n  VTK_QUADRATIC_TRIANGLE: 22,\r\n  VTK_QUADRATIC_QUAD: 23,\r\n  VTK_QUADRATIC_POLYGON: 36,\r\n  VTK_QUADRATIC_TETRA: 24,\r\n  VTK_QUADRATIC_HEXAHEDRON: 25,\r\n  VTK_QUADRATIC_WEDGE: 26,\r\n  VTK_QUADRATIC_PYRAMID: 27,\r\n  VTK_BIQUADRATIC_QUAD: 28,\r\n  VTK_TRIQUADRATIC_HEXAHEDRON: 29,\r\n  VTK_QUADRATIC_LINEAR_QUAD: 30,\r\n  VTK_QUADRATIC_LINEAR_WEDGE: 31,\r\n  VTK_BIQUADRATIC_QUADRATIC_WEDGE: 32,\r\n  VTK_BIQUADRATIC_QUADRATIC_HEXAHEDRON: 33,\r\n  VTK_BIQUADRATIC_TRIANGLE: 34,\r\n  // Cubic, isoparametric cell\r\n  VTK_CUBIC_LINE: 35,\r\n  // Special class of cells formed by convex group of points\r\n  VTK_CONVEX_POINT_SET: 41,\r\n  // Polyhedron cell (consisting of polygonal faces)\r\n  VTK_POLYHEDRON: 42,\r\n  // Higher order cells in parametric form\r\n  VTK_PARAMETRIC_CURVE: 51,\r\n  VTK_PARAMETRIC_SURFACE: 52,\r\n  VTK_PARAMETRIC_TRI_SURFACE: 53,\r\n  VTK_PARAMETRIC_QUAD_SURFACE: 54,\r\n  VTK_PARAMETRIC_TETRA_REGION: 55,\r\n  VTK_PARAMETRIC_HEX_REGION: 56,\r\n  // Higher order cells\r\n  VTK_HIGHER_ORDER_EDGE: 60,\r\n  VTK_HIGHER_ORDER_TRIANGLE: 61,\r\n  VTK_HIGHER_ORDER_QUAD: 62,\r\n  VTK_HIGHER_ORDER_POLYGON: 63,\r\n  VTK_HIGHER_ORDER_TETRAHEDRON: 64,\r\n  VTK_HIGHER_ORDER_WEDGE: 65,\r\n  VTK_HIGHER_ORDER_PYRAMID: 66,\r\n  VTK_HIGHER_ORDER_HEXAHEDRON: 67,\r\n  // Arbitrary order Lagrange elements (formulated separated from generic higher order cells)\r\n  VTK_LAGRANGE_CURVE: 68,\r\n  VTK_LAGRANGE_TRIANGLE: 69,\r\n  VTK_LAGRANGE_QUADRILATERAL: 70,\r\n  VTK_LAGRANGE_TETRAHEDRON: 71,\r\n  VTK_LAGRANGE_HEXAHEDRON: 72,\r\n  VTK_LAGRANGE_WEDGE: 73,\r\n  VTK_LAGRANGE_PYRAMID: 74,\r\n  VTK_NUMBER_OF_CELL_TYPES: 75\r\n};\r\n\r\n// This list should contain the cell class names in\r\n// the same order as in CellType.\r\nconst CellTypesStrings = ['vtkEmptyCell', 'vtkVertex', 'vtkPolyVertex', 'vtkLine', 'vtkPolyLine', 'vtkTriangle', 'vtkTriangleStrip', 'vtkPolygon', 'vtkPixel', 'vtkQuad', 'vtkTetra', 'vtkVoxel', 'vtkHexahedron', 'vtkWedge', 'vtkPyramid', 'vtkPentagonalPrism', 'vtkHexagonalPrism', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'vtkQuadraticEdge', 'vtkQuadraticTriangle', 'vtkQuadraticQuad', 'vtkQuadraticTetra', 'vtkQuadraticHexahedron', 'vtkQuadraticWedge', 'vtkQuadraticPyramid', 'vtkBiQuadraticQuad', 'vtkTriQuadraticHexahedron', 'vtkQuadraticLinearQuad', 'vtkQuadraticLinearWedge', 'vtkBiQuadraticQuadraticWedge', 'vtkBiQuadraticQuadraticHexahedron', 'vtkBiQuadraticTriangle', 'vtkCubicLine', 'vtkQuadraticPolygon', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'vtkConvexPointSet', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'vtkParametricCurve', 'vtkParametricSurface', 'vtkParametricTriSurface', 'vtkParametricQuadSurface', 'vtkParametricTetraRegion', 'vtkParametricHexRegion', 'UnknownClass', 'UnknownClass', 'UnknownClass', 'vtkHigherOrderEdge', 'vtkHigherOrderTriangle', 'vtkHigherOrderQuad', 'vtkHigherOrderPolygon', 'vtkHigherOrderTetrahedron', 'vtkHigherOrderWedge', 'vtkHigherOrderPyramid', 'vtkHigherOrderHexahedron'];\r\nvar Constants = {\r\n  CellType,\r\n  CellTypesStrings\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/CellTypes/Constants.js?")},"./node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ vtkDataSet$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _vtk_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vtk.js */ "./node_modules/@kitware/vtk.js/vtk.js");\n/* harmony import */ var _DataSetAttributes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DataSetAttributes.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes.js");\n/* harmony import */ var _DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DataSet/Constants.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/DataSet/Constants.js");\n\r\n\r\n\r\n\r\n\r\n// import vtkBoundingBox from \'../BoundingBox\';\r\n// import * as vtkMath from \'../../Core/Math\';\r\n//\r\n// function getBounds(dataset) {\r\n//   if (dataset.bounds) {\r\n//     return dataset.bounds;\r\n//   }\r\n//   if (dataset.type && dataset[dataset.type]) {\r\n//     const ds = dataset[dataset.type];\r\n//     if (ds.bounds) {\r\n//       return ds.bounds;\r\n//     }\r\n//     if (ds.Points && ds.Points.bounds) {\r\n//       return ds.Points.bounds;\r\n//     }\r\n\r\n//     if (ds.Points && ds.Points.values) {\r\n//       const array = ds.Points.values;\r\n//       const bbox = [...vtkBoundingBox.INIT_BOUNDS];\r\n//       const size = array.length;\r\n//       const delta = ds.Points.numberOfComponents ? ds.Points.numberOfComponents : 3;\r\n//       for (let idx = 0; idx < size; idx += delta) {\r\n//         vtkBoundingBox.addPoint(bbox, array[idx * delta], array[(idx * delta) + 1], array[(idx * delta) + 2]);\r\n//       }\r\n//       ds.Points.bounds = bbox;\r\n//       return ds.Points.bounds;\r\n//     }\r\n//   }\r\n//   return vtkMath.createUninitializedBounds();\r\n// }\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DATASET_FIELDS = [\'pointData\', \'cellData\', \'fieldData\'];\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkDataSet methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkDataSet(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkDataSet\');\r\n\r\n  // Add dataset attributes\r\n  DATASET_FIELDS.forEach(fieldName => {\r\n    if (!model[fieldName]) {\r\n      model[fieldName] = _DataSetAttributes_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();\r\n    } else {\r\n      model[fieldName] = (0,_vtk_js__WEBPACK_IMPORTED_MODULE_1__["default"])(model[fieldName]);\r\n    }\r\n  });\r\n  const superShallowCopy = publicAPI.shallowCopy;\r\n  publicAPI.shallowCopy = function (other) {\r\n    let debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n    superShallowCopy(other, debug);\r\n    DATASET_FIELDS.forEach(fieldName => {\r\n      model[fieldName] = _DataSetAttributes_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();\r\n      model[fieldName].shallowCopy(other.getReferenceByName(fieldName));\r\n    });\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  // pointData: null,\r\n  // cellData: null,\r\n  // fieldData: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Object methods\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, DATASET_FIELDS);\r\n\r\n  // Object specific methods\r\n  vtkDataSet(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, \'vtkDataSet\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkDataSet$1 = {\r\n  newInstance,\r\n  extend,\r\n  ..._DataSet_Constants_js__WEBPACK_IMPORTED_MODULE_3__["default"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js?')},"./node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkDataSetAttributes$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _DataSetAttributes_FieldData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DataSetAttributes/FieldData.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/FieldData.js\");\n/* harmony import */ var _DataSetAttributes_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DataSetAttributes/Constants.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/Constants.js\");\n/* harmony import */ var _Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Core/DataArray.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray.js\");\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  AttributeTypes,\r\n  AttributeCopyOperations\r\n} = _DataSetAttributes_Constants_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\r\nconst {\r\n  vtkWarningMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkDataSetAttributes methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkDataSetAttributes(publicAPI, model) {\r\n  const attrTypes = ['Scalars', 'Vectors', 'Normals', 'TCoords', 'Tensors', 'GlobalIds', 'PedigreeIds'];\r\n  function cleanAttributeType(attType) {\r\n    // Given an integer or string, convert the result to one of the\r\n    // strings in the \"attrTypes\" array above or null (if\r\n    // no match is found)\r\n    let cleanAttType = attrTypes.find(ee => AttributeTypes[ee.toUpperCase()] === attType || typeof attType !== 'number' && ee.toLowerCase() === attType.toLowerCase());\r\n    if (typeof cleanAttType === 'undefined') {\r\n      cleanAttType = null;\r\n    }\r\n    return cleanAttType;\r\n  }\r\n\r\n  // Set our className\r\n  model.classHierarchy.push('vtkDataSetAttributes');\r\n  const superClass = {\r\n    ...publicAPI\r\n  };\r\n  publicAPI.checkNumberOfComponents = x => true; // TODO\r\n\r\n  publicAPI.setAttribute = (arr, uncleanAttType) => {\r\n    const attType = cleanAttributeType(uncleanAttType);\r\n    if (arr && attType.toUpperCase() === 'PEDIGREEIDS' && !arr.isA('vtkDataArray')) {\r\n      vtkWarningMacro(`Cannot set attribute ${attType}. The attribute must be a vtkDataArray.`);\r\n      return -1;\r\n    }\r\n    if (arr && !publicAPI.checkNumberOfComponents(arr, attType)) {\r\n      vtkWarningMacro(`Cannot set attribute ${attType}. Incorrect number of components.`);\r\n      return -1;\r\n    }\r\n    let currentAttribute = model[`active${attType}`];\r\n    if (currentAttribute >= 0 && currentAttribute < model.arrays.length) {\r\n      if (model.arrays[currentAttribute] === arr) {\r\n        return currentAttribute;\r\n      }\r\n      // FIXME setting an array actually changes its index\r\n      publicAPI.removeArrayByIndex(currentAttribute);\r\n    }\r\n    if (arr) {\r\n      currentAttribute = publicAPI.addArray(arr);\r\n      model[`active${attType}`] = currentAttribute;\r\n    } else {\r\n      model[`active${attType}`] = -1;\r\n    }\r\n    publicAPI.modified();\r\n    return model[`active${attType}`];\r\n  };\r\n  publicAPI.getAttributes = arr => attrTypes.filter(attrType => publicAPI[`get${attrType}`]() === arr);\r\n  publicAPI.setActiveAttributeByName = (arrayName, attType) => publicAPI.setActiveAttributeByIndex(publicAPI.getArrayWithIndex(arrayName).index, attType);\r\n  publicAPI.setActiveAttributeByIndex = (arrayIdx, uncleanAttType) => {\r\n    const attType = cleanAttributeType(uncleanAttType);\r\n    if (arrayIdx >= 0 && arrayIdx < model.arrays.length) {\r\n      if (attType.toUpperCase() !== 'PEDIGREEIDS') {\r\n        const arr = publicAPI.getArrayByIndex(arrayIdx);\r\n        if (!arr.isA('vtkDataArray')) {\r\n          vtkWarningMacro(`Cannot set attribute ${attType}. Only vtkDataArray subclasses can be set as active attributes.`);\r\n          return -1;\r\n        }\r\n        if (!publicAPI.checkNumberOfComponents(arr, attType)) {\r\n          vtkWarningMacro(`Cannot set attribute ${attType}. Incorrect number of components.`);\r\n          return -1;\r\n        }\r\n      }\r\n      model[`active${attType}`] = arrayIdx;\r\n      publicAPI.modified();\r\n      return arrayIdx;\r\n    }\r\n    if (arrayIdx === -1) {\r\n      model[`active${attType}`] = arrayIdx;\r\n      publicAPI.modified();\r\n    }\r\n    return -1;\r\n  };\r\n  publicAPI.getActiveAttribute = attType => {\r\n    // Given an integer enum value or a string (with random capitalization),\r\n    // find the matching string in attrTypes.\r\n    const cleanAttType = cleanAttributeType(attType);\r\n    return publicAPI[`get${cleanAttType}`]();\r\n  };\r\n\r\n  // Override to allow proper handling of active attributes\r\n  publicAPI.removeAllArrays = () => {\r\n    attrTypes.forEach(attType => {\r\n      model[`active${attType}`] = -1;\r\n    });\r\n    superClass.removeAllArrays();\r\n  };\r\n\r\n  // Override to allow proper handling of active attributes\r\n  publicAPI.removeArrayByIndex = arrayIdx => {\r\n    if (arrayIdx !== -1) {\r\n      attrTypes.forEach(attType => {\r\n        if (arrayIdx === model[`active${attType}`]) {\r\n          model[`active${attType}`] = -1;\r\n        } else if (arrayIdx < model[`active${attType}`]) {\r\n          model[`active${attType}`] -= 1;\r\n        }\r\n      });\r\n    }\r\n    return superClass.removeArrayByIndex(arrayIdx);\r\n  };\r\n  attrTypes.forEach(value => {\r\n    const activeVal = `active${value}`;\r\n    publicAPI[`get${value}`] = () => publicAPI.getArrayByIndex(model[activeVal]);\r\n    publicAPI[`set${value}`] = da => publicAPI.setAttribute(da, value);\r\n    publicAPI[`setActive${value}`] = arrayName => publicAPI.setActiveAttributeByIndex(publicAPI.getArrayWithIndex(arrayName).index, value);\r\n    publicAPI[`copy${value}Off`] = () => {\r\n      const attType = value.toUpperCase();\r\n      model.copyAttributeFlags[AttributeCopyOperations.PASSDATA][AttributeTypes[attType]] = false;\r\n    };\r\n    publicAPI[`copy${value}On`] = () => {\r\n      const attType = value.toUpperCase();\r\n      model.copyAttributeFlags[AttributeCopyOperations.PASSDATA][AttributeTypes[attType]] = true;\r\n    };\r\n  });\r\n  publicAPI.initializeAttributeCopyFlags = () => {\r\n    // Default to copying all attributes in every circumstance:\r\n    model.copyAttributeFlags = [];\r\n    Object.keys(AttributeCopyOperations).filter(op => op !== 'ALLCOPY').forEach(attCopyOp => {\r\n      model.copyAttributeFlags[AttributeCopyOperations[attCopyOp]] = Object.keys(AttributeTypes).filter(ty => ty !== 'NUM_ATTRIBUTES').reduce((a, b) => {\r\n        a[AttributeTypes[b]] = true;\r\n        return a;\r\n      }, []);\r\n    });\r\n    // Override some operations where we don't want to copy:\r\n    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][AttributeTypes.GLOBALIDS] = false;\r\n    model.copyAttributeFlags[AttributeCopyOperations.INTERPOLATE][AttributeTypes.GLOBALIDS] = false;\r\n    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][AttributeTypes.PEDIGREEIDS] = false;\r\n  };\r\n  publicAPI.initialize = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.chain(publicAPI.initialize, publicAPI.initializeAttributeCopyFlags);\r\n\r\n  // Process dataArrays if any\r\n  if (model.dataArrays && Object.keys(model.dataArrays).length) {\r\n    Object.keys(model.dataArrays).forEach(name => {\r\n      if (!model.dataArrays[name].ref && model.dataArrays[name].type === 'vtkDataArray') {\r\n        publicAPI.addArray(_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance(model.dataArrays[name]));\r\n      }\r\n    });\r\n  }\r\n  const superShallowCopy = publicAPI.shallowCopy;\r\n  publicAPI.shallowCopy = (other, debug) => {\r\n    superShallowCopy(other, debug);\r\n    model.arrays = other.getArrays().map(arr => {\r\n      const arrNew = arr.newClone();\r\n      arrNew.shallowCopy(arr, debug);\r\n      return {\r\n        data: arrNew\r\n      };\r\n    });\r\n  };\r\n  publicAPI.initializeAttributeCopyFlags();\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  activeScalars: -1,\r\n  activeVectors: -1,\r\n  activeTensors: -1,\r\n  activeNormals: -1,\r\n  activeTCoords: -1,\r\n  activeGlobalIds: -1,\r\n  activePedigreeIds: -1\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Object methods\r\n  _DataSetAttributes_FieldData_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].extend(publicAPI, model, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['activeScalars', 'activeNormals', 'activeTCoords', 'activeVectors', 'activeTensors', 'activeGlobalIds', 'activePedigreeIds']);\r\n  if (!model.arrays) {\r\n    model.arrays = {};\r\n  }\r\n\r\n  // Object specific methods\r\n  vtkDataSetAttributes(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkDataSetAttributes');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkDataSetAttributes$1 = {\r\n  newInstance,\r\n  extend,\r\n  ..._DataSetAttributes_Constants_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes.js?")},"./node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AttributeCopyOperations: () => (/* binding */ AttributeCopyOperations),\n/* harmony export */   AttributeLimitTypes: () => (/* binding */ AttributeLimitTypes),\n/* harmony export */   AttributeTypes: () => (/* binding */ AttributeTypes),\n/* harmony export */   CellGhostTypes: () => (/* binding */ CellGhostTypes),\n/* harmony export */   DesiredOutputPrecision: () => (/* binding */ DesiredOutputPrecision),\n/* harmony export */   PointGhostTypes: () => (/* binding */ PointGhostTypes),\n/* harmony export */   \"default\": () => (/* binding */ Constants),\n/* harmony export */   ghostArrayName: () => (/* binding */ ghostArrayName)\n/* harmony export */ });\nconst AttributeTypes = {\r\n  SCALARS: 0,\r\n  VECTORS: 1,\r\n  NORMALS: 2,\r\n  TCOORDS: 3,\r\n  TENSORS: 4,\r\n  GLOBALIDS: 5,\r\n  PEDIGREEIDS: 6,\r\n  EDGEFLAG: 7,\r\n  NUM_ATTRIBUTES: 8\r\n};\r\nconst AttributeLimitTypes = {\r\n  MAX: 0,\r\n  EXACT: 1,\r\n  NOLIMIT: 2\r\n};\r\nconst CellGhostTypes = {\r\n  DUPLICATECELL: 1,\r\n  // the cell is present on multiple processors\r\n  HIGHCONNECTIVITYCELL: 2,\r\n  // the cell has more neighbors than in a regular mesh\r\n  LOWCONNECTIVITYCELL: 4,\r\n  // the cell has less neighbors than in a regular mesh\r\n  REFINEDCELL: 8,\r\n  // other cells are present that refines it.\r\n  EXTERIORCELL: 16,\r\n  // the cell is on the exterior of the data set\r\n  HIDDENCELL: 32 // the cell is needed to maintain connectivity, but the data values should be ignored.\r\n};\r\n\r\nconst PointGhostTypes = {\r\n  DUPLICATEPOINT: 1,\r\n  // the cell is present on multiple processors\r\n  HIDDENPOINT: 2 // the point is needed to maintain connectivity, but the data values should be ignored.\r\n};\r\n\r\nconst AttributeCopyOperations = {\r\n  COPYTUPLE: 0,\r\n  INTERPOLATE: 1,\r\n  PASSDATA: 2,\r\n  ALLCOPY: 3 // all of the above\r\n};\r\n\r\nconst ghostArrayName = 'vtkGhostType';\r\nconst DesiredOutputPrecision = {\r\n  DEFAULT: 0,\r\n  // use the point type that does not truncate any data\r\n  SINGLE: 1,\r\n  // use Float32Array\r\n  DOUBLE: 2 // use Float64Array\r\n};\r\n\r\nvar Constants = {\r\n  AttributeCopyOperations,\r\n  AttributeLimitTypes,\r\n  AttributeTypes,\r\n  CellGhostTypes,\r\n  DesiredOutputPrecision,\r\n  PointGhostTypes,\r\n  ghostArrayName\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/Constants.js?")},"./node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/FieldData.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkFieldData$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _vtk_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../vtk.js */ \"./node_modules/@kitware/vtk.js/vtk.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Core/DataArray.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray.js\");\n\r\n\r\n\r\n\r\nconst {\r\n  vtkErrorMacro,\r\n  vtkWarningMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m;\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkFieldData methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkFieldData(publicAPI, model) {\r\n  model.classHierarchy.push('vtkFieldData');\r\n  const superGetState = publicAPI.getState;\r\n\r\n  // Decode serialized data if any\r\n  if (model.arrays) {\r\n    model.arrays = model.arrays.map(item => ({\r\n      data: (0,_vtk_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(item.data)\r\n    }));\r\n  }\r\n  publicAPI.initialize = () => {\r\n    publicAPI.initializeFields();\r\n    publicAPI.copyAllOn();\r\n    publicAPI.clearFieldFlags();\r\n  };\r\n  publicAPI.initializeFields = () => {\r\n    model.arrays = [];\r\n    model.copyFieldFlags = {};\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.copyStructure = other => {\r\n    publicAPI.initializeFields();\r\n    model.copyFieldFlags = other.getCopyFieldFlags().map(x => x); // Deep-copy\r\n    model.arrays = other.arrays().map(x => ({\r\n      array: x\r\n    })); // Deep-copy\r\n    // TODO: Copy array information objects (once we support information objects)\r\n  };\r\n\r\n  publicAPI.getNumberOfArrays = () => model.arrays.length;\r\n  publicAPI.getNumberOfActiveArrays = () => model.arrays.length;\r\n  publicAPI.addArray = arr => {\r\n    const name = arr.getName();\r\n    const {\r\n      array,\r\n      index\r\n    } = publicAPI.getArrayWithIndex(name);\r\n    if (array != null) {\r\n      model.arrays[index] = {\r\n        data: arr\r\n      };\r\n      return index;\r\n    }\r\n    model.arrays = [].concat(model.arrays, {\r\n      data: arr\r\n    });\r\n    return model.arrays.length - 1;\r\n  };\r\n  publicAPI.removeAllArrays = () => {\r\n    model.arrays = [];\r\n  };\r\n  publicAPI.removeArray = arrayName => {\r\n    const index = model.arrays.findIndex(array => array.data.getName() === arrayName);\r\n    return publicAPI.removeArrayByIndex(index);\r\n  };\r\n  publicAPI.removeArrayByIndex = arrayIdx => {\r\n    if (arrayIdx !== -1 && arrayIdx < model.arrays.length) {\r\n      model.arrays.splice(arrayIdx, 1);\r\n      // TBD modified() ?\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  publicAPI.getArrays = () => model.arrays.map(entry => entry.data);\r\n  publicAPI.getArray = arraySpec => typeof arraySpec === 'number' ? publicAPI.getArrayByIndex(arraySpec) : publicAPI.getArrayByName(arraySpec);\r\n  publicAPI.getArrayByName = arrayName => model.arrays.reduce((a, b, i) => b.data.getName() === arrayName ? b.data : a, null);\r\n  publicAPI.getArrayWithIndex = arrayName => {\r\n    const index = model.arrays.findIndex(array => array.data.getName() === arrayName);\r\n    return {\r\n      array: index !== -1 ? model.arrays[index].data : null,\r\n      index\r\n    };\r\n  };\r\n  publicAPI.getArrayByIndex = idx => idx >= 0 && idx < model.arrays.length ? model.arrays[idx].data : null;\r\n  publicAPI.hasArray = arrayName => publicAPI.getArrayWithIndex(arrayName).index >= 0;\r\n  publicAPI.getArrayName = idx => {\r\n    const arr = model.arrays[idx];\r\n    return arr ? arr.data.getName() : '';\r\n  };\r\n  publicAPI.getCopyFieldFlags = () => model.copyFieldFlags;\r\n  publicAPI.getFlag = arrayName => model.copyFieldFlags[arrayName];\r\n  publicAPI.passData = function (other) {\r\n    let fromId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\r\n    let toId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\r\n    other.getArrays().forEach(arr => {\r\n      const copyFlag = publicAPI.getFlag(arr.getName());\r\n      if (copyFlag !== false && !(model.doCopyAllOff && copyFlag !== true) && arr) {\r\n        let destArr = publicAPI.getArrayByName(arr.getName());\r\n        if (!destArr) {\r\n          if (fromId < 0 || fromId > arr.getNumberOfTuples()) {\r\n            // TBD: should this be a deep or a shallow copy?\r\n            publicAPI.addArray(arr);\r\n            other.getAttributes(arr).forEach(attrType => {\r\n              publicAPI.setAttribute(arr, attrType);\r\n            });\r\n          } else {\r\n            const ncomps = arr.getNumberOfComponents();\r\n            let newSize = arr.getNumberOfValues();\r\n            const tId = toId > -1 ? toId : fromId;\r\n            if (newSize <= tId * ncomps) {\r\n              newSize = (tId + 1) * ncomps;\r\n            }\r\n            destArr = _Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance({\r\n              name: arr.getName(),\r\n              dataType: arr.getDataType(),\r\n              numberOfComponents: ncomps,\r\n              values: _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.newTypedArray(arr.getDataType(), newSize),\r\n              size: 0\r\n            });\r\n            destArr.insertTuple(tId, arr.getTuple(fromId));\r\n            publicAPI.addArray(destArr);\r\n            other.getAttributes(arr).forEach(attrType => {\r\n              publicAPI.setAttribute(destArr, attrType);\r\n            });\r\n          }\r\n        } else if (arr.getNumberOfComponents() === destArr.getNumberOfComponents()) {\r\n          if (fromId > -1 && fromId < arr.getNumberOfTuples()) {\r\n            const tId = toId > -1 ? toId : fromId;\r\n            destArr.insertTuple(tId, arr.getTuple(fromId));\r\n          } else {\r\n            // if `fromId` is not provided, just copy all (or as much possible)\r\n            // from `arr` to `destArr`.\r\n            destArr.insertTuples(0, arr.getTuples());\r\n          }\r\n        } else {\r\n          vtkErrorMacro('Unhandled case in passData');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  publicAPI.interpolateData = function (other) {\r\n    let fromId1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\r\n    let fromId2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\r\n    let toId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\r\n    let t = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.5;\r\n    other.getArrays().forEach(arr => {\r\n      const copyFlag = publicAPI.getFlag(arr.getName());\r\n      if (copyFlag !== false && !(model.doCopyAllOff && copyFlag !== true) && arr) {\r\n        let destArr = publicAPI.getArrayByName(arr.getName());\r\n        if (!destArr) {\r\n          if (fromId1 < 0 || fromId2 < 0 || fromId1 > arr.getNumberOfTuples()) {\r\n            // TBD: should this be a deep or a shallow copy?\r\n            publicAPI.addArray(arr);\r\n            other.getAttributes(arr).forEach(attrType => {\r\n              publicAPI.setAttribute(arr, attrType);\r\n            });\r\n          } else {\r\n            const ncomps = arr.getNumberOfComponents();\r\n            let newSize = arr.getNumberOfValues();\r\n            // TODO: Is this supposed to happen?\r\n            const tId = toId > -1 ? toId : fromId1;\r\n            if (newSize <= tId * ncomps) {\r\n              newSize = (tId + 1) * ncomps;\r\n            }\r\n            destArr = _Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance({\r\n              name: arr.getName(),\r\n              dataType: arr.getDataType(),\r\n              numberOfComponents: ncomps,\r\n              values: _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.newTypedArray(arr.getDataType(), newSize),\r\n              size: 0\r\n            });\r\n            destArr.interpolateTuple(tId, arr, fromId1, arr, fromId2, t);\r\n            publicAPI.addArray(destArr);\r\n            other.getAttributes(arr).forEach(attrType => {\r\n              publicAPI.setAttribute(destArr, attrType);\r\n            });\r\n          }\r\n        } else if (arr.getNumberOfComponents() === destArr.getNumberOfComponents()) {\r\n          if (fromId1 > -1 && fromId1 < arr.getNumberOfTuples()) {\r\n            const tId = toId > -1 ? toId : fromId1;\r\n            destArr.interpolateTuple(tId, arr, fromId1, arr, fromId2, t);\r\n            vtkWarningMacro('Unexpected case in interpolateData');\r\n          } else {\r\n            // if `fromId` is not provided, just copy all (or as much possible)\r\n            // from `arr` to `destArr`.\r\n            destArr.insertTuples(arr.getTuples());\r\n          }\r\n        } else {\r\n          vtkErrorMacro('Unhandled case in interpolateData');\r\n        }\r\n      }\r\n    });\r\n  };\r\n  publicAPI.copyFieldOn = arrayName => {\r\n    model.copyFieldFlags[arrayName] = true;\r\n  };\r\n  publicAPI.copyFieldOff = arrayName => {\r\n    model.copyFieldFlags[arrayName] = false;\r\n  };\r\n  publicAPI.copyAllOn = () => {\r\n    if (!model.doCopyAllOn || model.doCopyAllOff) {\r\n      model.doCopyAllOn = true;\r\n      model.doCopyAllOff = false;\r\n      publicAPI.modified();\r\n    }\r\n  };\r\n  publicAPI.copyAllOff = () => {\r\n    if (model.doCopyAllOn || !model.doCopyAllOff) {\r\n      model.doCopyAllOn = false;\r\n      model.doCopyAllOff = true;\r\n      publicAPI.modified();\r\n    }\r\n  };\r\n  publicAPI.clearFieldFlags = () => {\r\n    model.copyFieldFlags = {};\r\n  };\r\n  publicAPI.deepCopy = other => {\r\n    model.arrays = other.getArrays().map(arr => {\r\n      const arrNew = arr.newClone();\r\n      arrNew.deepCopy(arr);\r\n      return {\r\n        data: arrNew\r\n      };\r\n    });\r\n  };\r\n  publicAPI.copyFlags = other => other.getCopyFieldFlags().map(x => x);\r\n  // TODO: publicAPI.squeeze = () => model.arrays.forEach(entry => entry.data.squeeze());\r\n  publicAPI.reset = () => model.arrays.forEach(entry => entry.data.reset());\r\n  // TODO: getActualMemorySize\r\n  publicAPI.getMTime = () => model.arrays.reduce((a, b) => b.data.getMTime() > a ? b.data.getMTime() : a, model.mtime);\r\n  // TODO: publicAPI.getField = (ids, other) => { copy ids from other into this model's arrays }\r\n  // TODO: publicAPI.getArrayContainingComponent = (component) => ...\r\n  publicAPI.getNumberOfComponents = () => model.arrays.reduce((a, b) => a + b.data.getNumberOfComponents(), 0);\r\n  publicAPI.getNumberOfTuples = () => model.arrays.length > 0 ? model.arrays[0].getNumberOfTuples() : 0;\r\n  publicAPI.getState = () => {\r\n    const result = superGetState();\r\n    if (result) {\r\n      result.arrays = model.arrays.map(item => ({\r\n        data: item.data.getState()\r\n      }));\r\n    }\r\n    return result;\r\n  };\r\n}\r\nconst DEFAULT_VALUES = {\r\n  arrays: [],\r\n  copyFieldFlags: [],\r\n  // fields not to copy\r\n  doCopyAllOn: true,\r\n  doCopyAllOff: false\r\n};\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.obj(publicAPI, model);\r\n  vtkFieldData(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.newInstance(extend, 'vtkFieldData');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkFieldData$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/FieldData.js?")},"./node_modules/@kitware/vtk.js/Common/DataModel/DataSet/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FieldAssociations: () => (/* binding */ FieldAssociations),\n/* harmony export */   FieldDataTypes: () => (/* binding */ FieldDataTypes),\n/* harmony export */   "default": () => (/* binding */ Constants)\n/* harmony export */ });\n// Specify how data arrays can be used by data objects\r\nconst FieldDataTypes = {\r\n  UNIFORM: 0,\r\n  // data that does not vary over points/cells/etc.\r\n  DATA_OBJECT_FIELD: 0,\r\n  // to match VTK\r\n\r\n  COORDINATE: 1,\r\n  // data that specifies the location of each point\r\n  POINT_DATA: 1,\r\n  // to match VTK\r\n\r\n  POINT: 2,\r\n  // data defined at each point, but that does not specify the point location\r\n  POINT_FIELD_DATA: 2,\r\n  // to match VTK\r\n\r\n  CELL: 3,\r\n  // data defined at each cell, but that does not specify the cell\r\n  CELL_FIELD_DATA: 3,\r\n  // to match VTK\r\n\r\n  VERTEX: 4,\r\n  // data defined at each graph vertex, but that does not specify the graph vertex\r\n  VERTEX_FIELD_DATA: 4,\r\n  // to match VTK\r\n\r\n  EDGE: 5,\r\n  // data defined at each graph edge, but that does not specify the graph edge\r\n  EDGE_FIELD_DATA: 5,\r\n  // to match VTK\r\n\r\n  ROW: 6,\r\n  // data specifying a table row\r\n  ROW_DATA: 6 // to match VTK\r\n};\r\n\r\nconst FieldAssociations = {\r\n  FIELD_ASSOCIATION_POINTS: 0,\r\n  FIELD_ASSOCIATION_CELLS: 1,\r\n  FIELD_ASSOCIATION_NONE: 2,\r\n  FIELD_ASSOCIATION_POINTS_THEN_CELLS: 3,\r\n  FIELD_ASSOCIATION_VERTICES: 4,\r\n  FIELD_ASSOCIATION_EDGES: 5,\r\n  FIELD_ASSOCIATION_ROWS: 6,\r\n  NUMBER_OF_ASSOCIATIONS: 7\r\n};\r\nvar Constants = {\r\n  FieldDataTypes,\r\n  FieldAssociations\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/DataSet/Constants.js?')},"./node_modules/@kitware/vtk.js/Common/DataModel/ImageData.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ vtkImageData$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/Math/index.js */ "./node_modules/@kitware/vtk.js/Common/Core/Math/index.js");\n/* harmony import */ var _BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BoundingBox.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js");\n/* harmony import */ var _DataSet_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DataSet.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js");\n/* harmony import */ var _StructuredData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./StructuredData.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/StructuredData.js");\n/* harmony import */ var _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./StructuredData/Constants.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/StructuredData/Constants.js");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! gl-matrix */ "./node_modules/gl-matrix/esm/mat4.js");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! gl-matrix */ "./node_modules/gl-matrix/esm/vec3.js");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! gl-matrix */ "./node_modules/gl-matrix/esm/mat3.js");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkImageData methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkImageData(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkImageData\');\r\n  publicAPI.setExtent = function () {\r\n    if (model.deleted) {\r\n      vtkErrorMacro(\'instance deleted - cannot call any method\');\r\n      return false;\r\n    }\r\n    for (var _len = arguments.length, inExtent = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      inExtent[_key] = arguments[_key];\r\n    }\r\n    const extentArray = inExtent.length === 1 ? inExtent[0] : inExtent;\r\n    if (extentArray.length !== 6) {\r\n      return false;\r\n    }\r\n    const changeDetected = model.extent.some((item, index) => item !== extentArray[index]);\r\n    if (changeDetected) {\r\n      model.extent = extentArray.slice();\r\n      model.dataDescription = _StructuredData_js__WEBPACK_IMPORTED_MODULE_4__["default"].getDataDescriptionFromExtent(model.extent);\r\n      publicAPI.modified();\r\n    }\r\n    return changeDetected;\r\n  };\r\n  publicAPI.setDimensions = function () {\r\n    let i;\r\n    let j;\r\n    let k;\r\n    if (model.deleted) {\r\n      vtkErrorMacro(\'instance deleted - cannot call any method\');\r\n      return;\r\n    }\r\n    if (arguments.length === 1) {\r\n      const array = arguments.length <= 0 ? undefined : arguments[0];\r\n      i = array[0];\r\n      j = array[1];\r\n      k = array[2];\r\n    } else if (arguments.length === 3) {\r\n      i = arguments.length <= 0 ? undefined : arguments[0];\r\n      j = arguments.length <= 1 ? undefined : arguments[1];\r\n      k = arguments.length <= 2 ? undefined : arguments[2];\r\n    } else {\r\n      vtkErrorMacro(\'Bad dimension specification\');\r\n      return;\r\n    }\r\n    publicAPI.setExtent(0, i - 1, 0, j - 1, 0, k - 1);\r\n  };\r\n  publicAPI.getDimensions = () => [model.extent[1] - model.extent[0] + 1, model.extent[3] - model.extent[2] + 1, model.extent[5] - model.extent[4] + 1];\r\n  publicAPI.getNumberOfCells = () => {\r\n    const dims = publicAPI.getDimensions();\r\n    let nCells = 1;\r\n    for (let i = 0; i < 3; i++) {\r\n      if (dims[i] === 0) {\r\n        return 0;\r\n      }\r\n      if (dims[i] > 1) {\r\n        nCells *= dims[i] - 1;\r\n      }\r\n    }\r\n    return nCells;\r\n  };\r\n  publicAPI.getNumberOfPoints = () => {\r\n    const dims = publicAPI.getDimensions();\r\n    return dims[0] * dims[1] * dims[2];\r\n  };\r\n  publicAPI.getPoint = index => {\r\n    const dims = publicAPI.getDimensions();\r\n    if (dims[0] === 0 || dims[1] === 0 || dims[2] === 0) {\r\n      vtkErrorMacro(\'Requesting a point from an empty image.\');\r\n      return null;\r\n    }\r\n    const ijk = new Float64Array(3);\r\n    switch (model.dataDescription) {\r\n      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_5__.StructuredType.EMPTY:\r\n        return null;\r\n      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_5__.StructuredType.SINGLE_POINT:\r\n        break;\r\n      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_5__.StructuredType.X_LINE:\r\n        ijk[0] = index;\r\n        break;\r\n      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_5__.StructuredType.Y_LINE:\r\n        ijk[1] = index;\r\n        break;\r\n      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_5__.StructuredType.Z_LINE:\r\n        ijk[2] = index;\r\n        break;\r\n      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_5__.StructuredType.XY_PLANE:\r\n        ijk[0] = index % dims[0];\r\n        ijk[1] = index / dims[0];\r\n        break;\r\n      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_5__.StructuredType.YZ_PLANE:\r\n        ijk[1] = index % dims[1];\r\n        ijk[2] = index / dims[1];\r\n        break;\r\n      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_5__.StructuredType.XZ_PLANE:\r\n        ijk[0] = index % dims[0];\r\n        ijk[2] = index / dims[0];\r\n        break;\r\n      case _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_5__.StructuredType.XYZ_GRID:\r\n        ijk[0] = index % dims[0];\r\n        ijk[1] = index / dims[0] % dims[1];\r\n        ijk[2] = index / (dims[0] * dims[1]);\r\n        break;\r\n      default:\r\n        vtkErrorMacro(\'Invalid dataDescription\');\r\n        break;\r\n    }\r\n    const coords = [0, 0, 0];\r\n    publicAPI.indexToWorld(ijk, coords);\r\n    return coords;\r\n  };\r\n\r\n  // vtkCell *GetCell(vtkIdType cellId) VTK_OVERRIDE;\r\n  // void GetCell(vtkIdType cellId, vtkGenericCell *cell) VTK_OVERRIDE;\r\n  // void GetCellBounds(vtkIdType cellId, double bounds[6]) VTK_OVERRIDE;\r\n  // virtual vtkIdType FindPoint(double x, double y, double z)\r\n  // {\r\n  //   return this->vtkDataSet::FindPoint(x, y, z);\r\n  // }\r\n  // vtkIdType FindPoint(double x[3]) VTK_OVERRIDE;\r\n  // vtkIdType FindCell(\r\n  //   double x[3], vtkCell *cell, vtkIdType cellId, double tol2,\r\n  //   int& subId, double pcoords[3], double *weights) VTK_OVERRIDE;\r\n  // vtkIdType FindCell(\r\n  //   double x[3], vtkCell *cell, vtkGenericCell *gencell,\r\n  //   vtkIdType cellId, double tol2, int& subId,\r\n  //   double pcoords[3], double *weights) VTK_OVERRIDE;\r\n  // vtkCell *FindAndGetCell(double x[3], vtkCell *cell, vtkIdType cellId,\r\n  //                                 double tol2, int& subId, double pcoords[3],\r\n  //                                 double *weights) VTK_OVERRIDE;\r\n  // int GetCellType(vtkIdType cellId) VTK_OVERRIDE;\r\n  // void GetCellPoints(vtkIdType cellId, vtkIdList *ptIds) VTK_OVERRIDE\r\n  //   {vtkStructuredData::GetCellPoints(cellId,ptIds,this->DataDescription,\r\n  //                                     this->GetDimensions());}\r\n  // void GetPointCells(vtkIdType ptId, vtkIdList *cellIds) VTK_OVERRIDE\r\n  //   {vtkStructuredData::GetPointCells(ptId,cellIds,this->GetDimensions());}\r\n  // void ComputeBounds() VTK_OVERRIDE;\r\n  // int GetMaxCellSize() VTK_OVERRIDE {return 8;}; //voxel is the largest\r\n\r\n  publicAPI.getBounds = () => publicAPI.extentToBounds(publicAPI.getSpatialExtent());\r\n  publicAPI.extentToBounds = ex => _BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].transformBounds(ex, model.indexToWorld);\r\n  publicAPI.getSpatialExtent = () => _BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].inflate([...model.extent], 0.5);\r\n\r\n  // Internal, shouldn\'t need to call this manually.\r\n  publicAPI.computeTransforms = () => {\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_6__.fromTranslation(model.indexToWorld, model.origin);\r\n    model.indexToWorld[0] = model.direction[0];\r\n    model.indexToWorld[1] = model.direction[1];\r\n    model.indexToWorld[2] = model.direction[2];\r\n    model.indexToWorld[4] = model.direction[3];\r\n    model.indexToWorld[5] = model.direction[4];\r\n    model.indexToWorld[6] = model.direction[5];\r\n    model.indexToWorld[8] = model.direction[6];\r\n    model.indexToWorld[9] = model.direction[7];\r\n    model.indexToWorld[10] = model.direction[8];\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_6__.scale(model.indexToWorld, model.indexToWorld, model.spacing);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_6__.invert(model.worldToIndex, model.indexToWorld);\r\n  };\r\n  publicAPI.indexToWorld = function (ain) {\r\n    let aout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_7__.transformMat4(aout, ain, model.indexToWorld);\r\n    return aout;\r\n  };\r\n  publicAPI.indexToWorldVec3 = publicAPI.indexToWorld;\r\n  publicAPI.worldToIndex = function (ain) {\r\n    let aout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_7__.transformMat4(aout, ain, model.worldToIndex);\r\n    return aout;\r\n  };\r\n  publicAPI.worldToIndexVec3 = publicAPI.worldToIndex;\r\n  publicAPI.indexToWorldBounds = function (bin) {\r\n    let bout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\r\n    return _BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].transformBounds(bin, model.indexToWorld, bout);\r\n  };\r\n  publicAPI.worldToIndexBounds = function (bin) {\r\n    let bout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\r\n    return _BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].transformBounds(bin, model.worldToIndex, bout);\r\n  };\r\n\r\n  // Make sure the transform is correct\r\n  publicAPI.onModified(publicAPI.computeTransforms);\r\n  publicAPI.computeTransforms();\r\n  publicAPI.getCenter = () => _BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].getCenter(publicAPI.getBounds());\r\n  publicAPI.computeHistogram = function (worldBounds) {\r\n    let voxelFunc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\r\n    const bounds = [0, 0, 0, 0, 0, 0];\r\n    publicAPI.worldToIndexBounds(worldBounds, bounds);\r\n    const point1 = [0, 0, 0];\r\n    const point2 = [0, 0, 0];\r\n    _BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].computeCornerPoints(bounds, point1, point2);\r\n    (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.b)(point1, point1);\r\n    (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.b)(point2, point2);\r\n    const dimensions = publicAPI.getDimensions();\r\n    (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.c)(point1, [0, 0, 0], [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1], point1);\r\n    (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.c)(point2, [0, 0, 0], [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1], point2);\r\n    const yStride = dimensions[0];\r\n    const zStride = dimensions[0] * dimensions[1];\r\n    const pixels = publicAPI.getPointData().getScalars().getData();\r\n    let maximum = -Infinity;\r\n    let minimum = Infinity;\r\n    let sumOfSquares = 0;\r\n    let isum = 0;\r\n    let inum = 0;\r\n    for (let z = point1[2]; z <= point2[2]; z++) {\r\n      for (let y = point1[1]; y <= point2[1]; y++) {\r\n        let index = point1[0] + y * yStride + z * zStride;\r\n        for (let x = point1[0]; x <= point2[0]; x++) {\r\n          if (!voxelFunc || voxelFunc([x, y, z], bounds)) {\r\n            const pixel = pixels[index];\r\n            if (pixel > maximum) maximum = pixel;\r\n            if (pixel < minimum) minimum = pixel;\r\n            sumOfSquares += pixel * pixel;\r\n            isum += pixel;\r\n            inum += 1;\r\n          }\r\n          ++index;\r\n        }\r\n      }\r\n    }\r\n    const average = inum > 0 ? isum / inum : 0;\r\n    const variance = inum ? Math.abs(sumOfSquares / inum - average * average) : 0;\r\n    const sigma = Math.sqrt(variance);\r\n    return {\r\n      minimum,\r\n      maximum,\r\n      average,\r\n      variance,\r\n      sigma,\r\n      count: inum\r\n    };\r\n  };\r\n\r\n  // TODO: use the unimplemented `vtkDataSetAttributes` for scalar length, that is currently also a TODO (GetNumberOfComponents).\r\n  // Scalar data could be tuples for color information?\r\n  publicAPI.computeIncrements = function (extent) {\r\n    let numberOfComponents = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\r\n    const increments = [];\r\n    let incr = numberOfComponents;\r\n\r\n    // Calculate array increment offsets\r\n    // similar to c++ vtkImageData::ComputeIncrements\r\n    for (let idx = 0; idx < 3; ++idx) {\r\n      increments[idx] = incr;\r\n      incr *= extent[idx * 2 + 1] - extent[idx * 2] + 1;\r\n    }\r\n    return increments;\r\n  };\r\n\r\n  /**\r\n   * @param {Number[]} index the localized `[i,j,k]` pixel array position. Float values will be rounded.\r\n   * @return {Number} the corresponding flattened index in the scalar array\r\n   */\r\n  publicAPI.computeOffsetIndex = _ref => {\r\n    let [i, j, k] = _ref;\r\n    const extent = publicAPI.getExtent();\r\n    const numberOfComponents = publicAPI.getPointData().getScalars().getNumberOfComponents();\r\n    const increments = publicAPI.computeIncrements(extent, numberOfComponents);\r\n    // Use the array increments to find the pixel index\r\n    // similar to c++ vtkImageData::GetArrayPointer\r\n    // Math.floor to catch "practically 0" e^-15 scenarios.\r\n    return Math.floor((Math.round(i) - extent[0]) * increments[0] + (Math.round(j) - extent[2]) * increments[1] + (Math.round(k) - extent[4]) * increments[2]);\r\n  };\r\n\r\n  /**\r\n   * @param {Number[]} xyz the [x,y,z] Array in world coordinates\r\n   * @return {Number|NaN} the corresponding pixel\'s index in the scalar array\r\n   */\r\n  publicAPI.getOffsetIndexFromWorld = xyz => {\r\n    const extent = publicAPI.getExtent();\r\n    const index = publicAPI.worldToIndex(xyz);\r\n\r\n    // Confirm indexed i,j,k coords are within the bounds of the volume\r\n    for (let idx = 0; idx < 3; ++idx) {\r\n      if (index[idx] < extent[idx * 2] || index[idx] > extent[idx * 2 + 1]) {\r\n        vtkErrorMacro(`GetScalarPointer: Pixel ${index} is not in memory. Current extent = ${extent}`);\r\n        return NaN;\r\n      }\r\n    }\r\n\r\n    // Assumed the index here is within 0 <-> scalarData.length, but doesn\'t hurt to check upstream\r\n    return publicAPI.computeOffsetIndex(index);\r\n  };\r\n  /**\r\n   * @param {Number[]} xyz the [x,y,z] Array in world coordinates\r\n   * @param {Number?} comp the scalar component index for multi-component scalars\r\n   * @return {Number|NaN} the corresponding pixel\'s scalar value\r\n   */\r\n  publicAPI.getScalarValueFromWorld = function (xyz) {\r\n    let comp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n    const numberOfComponents = publicAPI.getPointData().getScalars().getNumberOfComponents();\r\n    if (comp < 0 || comp >= numberOfComponents) {\r\n      vtkErrorMacro(`GetScalarPointer: Scalar Component ${comp} is not within bounds. Current Scalar numberOfComponents: ${numberOfComponents}`);\r\n      return NaN;\r\n    }\r\n    const offsetIndex = publicAPI.getOffsetIndexFromWorld(xyz);\r\n    if (Number.isNaN(offsetIndex)) {\r\n      // VTK Error Macro will have been tripped already, no need to do it again,\r\n      return offsetIndex;\r\n    }\r\n    return publicAPI.getPointData().getScalars().getComponent(offsetIndex, comp);\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  direction: null,\r\n  // a mat3\r\n  indexToWorld: null,\r\n  // a mat4\r\n  worldToIndex: null,\r\n  // a mat4\r\n  spacing: [1.0, 1.0, 1.0],\r\n  origin: [0.0, 0.0, 0.0],\r\n  extent: [0, -1, 0, -1, 0, -1],\r\n  dataDescription: _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_5__.StructuredType.EMPTY\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _DataSet_js__WEBPACK_IMPORTED_MODULE_3__["default"].extend(publicAPI, model, initialValues);\r\n  if (!model.direction) {\r\n    model.direction = gl_matrix__WEBPACK_IMPORTED_MODULE_8__.identity(new Float64Array(9));\r\n  } else if (Array.isArray(model.direction)) {\r\n    model.direction = new Float64Array(model.direction.slice(0, 9));\r\n  }\r\n  model.indexToWorld = new Float64Array(16);\r\n  model.worldToIndex = new Float64Array(16);\r\n\r\n  // Set/Get methods\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, [\'indexToWorld\', \'worldToIndex\']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGetArray(publicAPI, model, [\'origin\', \'spacing\'], 3);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGetArray(publicAPI, model, [\'direction\'], 9);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.getArray(publicAPI, model, [\'extent\'], 6);\r\n\r\n  // Object specific methods\r\n  vtkImageData(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, \'vtkImageData\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkImageData$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/ImageData.js?')},"./node_modules/@kitware/vtk.js/Common/DataModel/Line.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STATIC: () => (/* binding */ STATIC),\n/* harmony export */   "default": () => (/* binding */ vtkLine$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _Line_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Line/Constants.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/Line/Constants.js");\n/* harmony import */ var _Cell_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Cell.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/Cell.js");\n/* harmony import */ var _Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Core/Math/index.js */ "./node_modules/@kitware/vtk.js/Common/Core/Math/index.js");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gl-matrix */ "./node_modules/gl-matrix/esm/quat.js");\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  IntersectionState\r\n} = _Line_Constants_js__WEBPACK_IMPORTED_MODULE_1__["default"];\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\nfunction distanceToLine(x, p1, p2) {\r\n  let closestPoint = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\r\n  const outObj = {\r\n    t: Number.MIN_VALUE,\r\n    distance: 0\r\n  };\r\n  const p21 = [];\r\n  let closest;\r\n  // Determine appropriate vector\r\n  p21[0] = p2[0] - p1[0];\r\n  p21[1] = p2[1] - p1[1];\r\n  p21[2] = p2[2] - p1[2];\r\n\r\n  // Get parametric location\r\n  const num = p21[0] * (x[0] - p1[0]) + p21[1] * (x[1] - p1[1]) + p21[2] * (x[2] - p1[2]);\r\n  const denom = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.d)(p21, p21);\r\n\r\n  // trying to avoid an expensive fabs\r\n  let tolerance = 1e-5 * num;\r\n  if (denom !== 0.0) {\r\n    outObj.t = num / denom;\r\n  }\r\n  if (tolerance < 0.0) {\r\n    tolerance = -tolerance;\r\n  }\r\n  if (-tolerance < denom && denom < tolerance) {\r\n    closest = p1;\r\n  } else if (denom <= 0.0 || outObj.t < 0.0) {\r\n    // If parametric coordinate is within 0<=p<=1, then the point is closest to\r\n    // the line.  Otherwise, it\'s closest to a point at the end of the line.\r\n    closest = p1;\r\n  } else if (outObj.t > 1.0) {\r\n    closest = p2;\r\n  } else {\r\n    closest = p21;\r\n    p21[0] = p1[0] + outObj.t * p21[0];\r\n    p21[1] = p1[1] + outObj.t * p21[1];\r\n    p21[2] = p1[2] + outObj.t * p21[2];\r\n  }\r\n  if (closestPoint) {\r\n    closestPoint[0] = closest[0];\r\n    closestPoint[1] = closest[1];\r\n    closestPoint[2] = closest[2];\r\n  }\r\n  outObj.distance = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.e)(closest, x);\r\n  return outObj;\r\n}\r\nfunction intersection(a1, a2, b1, b2, u, v) {\r\n  const a21 = [];\r\n  const b21 = [];\r\n  const b1a1 = [];\r\n  u[0] = 0.0;\r\n  v[0] = 0.0;\r\n\r\n  // Determine line vectors.\r\n  (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.s)(a2, a1, a21);\r\n  (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.s)(b2, b1, b21);\r\n  (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.s)(b1, a1, b1a1);\r\n\r\n  // Compute the system (least squares) matrix.\r\n  const A = [(0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.d)(a21, a21), -(0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.d)(a21, b21), -(0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.d)(a21, b21), (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.d)(b21, b21)];\r\n\r\n  // Compute the least squares system constant term.\r\n  const c = [];\r\n  c[0] = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.d)(a21, b1a1);\r\n  c[1] = -(0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.d)(b21, b1a1);\r\n  // Solve the system of equations\r\n  if ((0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.g)(A, c, 2) === 0) {\r\n    // The lines are colinear. Therefore, one of the four endpoints is the\r\n    // point of closest approach\r\n    let minDist = Number.MAX_VALUE;\r\n    const p = [a1, a2, b1, b2];\r\n    const l1 = [b1, b1, a1, a1];\r\n    const l2 = [b2, b2, a2, a2];\r\n    [v[0], v[0], u[0], u[0]];\r\n    [u[0], u[0], v[0], v[0]];\r\n    let obj;\r\n    for (let i = 0; i < 4; i++) {\r\n      obj = distanceToLine(p[i], l1[i], l2[i]);\r\n      if (obj.distance < minDist) {\r\n        minDist = obj.distance;\r\n      }\r\n    }\r\n    return IntersectionState.ON_LINE;\r\n  }\r\n  u[0] = c[0];\r\n  v[0] = c[1];\r\n\r\n  // Check parametric coordinates for intersection.\r\n  if (u[0] >= 0.0 && u[0] <= 1.0 && v[0] >= 0.0 && v[0] <= 1.0) {\r\n    return IntersectionState.YES_INTERSECTION;\r\n  }\r\n  return IntersectionState.NO_INTERSECTION;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Static API\r\n// ----------------------------------------------------------------------------\r\n\r\nconst STATIC = {\r\n  distanceToLine,\r\n  intersection\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkLine methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkLine(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkLine\');\r\n  function isBetweenPoints(t) {\r\n    return t >= 0.0 && t <= 1.0;\r\n  }\r\n  publicAPI.getCellDimension = () => 1;\r\n  publicAPI.intersectWithLine = (p1, p2, tol, x, pcoords) => {\r\n    const outObj = {\r\n      intersect: 0,\r\n      t: Number.MAX_VALUE,\r\n      subId: 0,\r\n      betweenPoints: null\r\n    };\r\n    pcoords[1] = 0.0;\r\n    pcoords[2] = 0.0;\r\n    const projXYZ = [];\r\n    const a1 = [];\r\n    const a2 = [];\r\n    model.points.getPoint(0, a1);\r\n    model.points.getPoint(1, a2);\r\n    const u = [];\r\n    const v = [];\r\n    const intersect = intersection(p1, p2, a1, a2, u, v);\r\n    outObj.t = u[0];\r\n    outObj.betweenPoints = isBetweenPoints(outObj.t);\r\n    pcoords[0] = v[0];\r\n    if (intersect === IntersectionState.YES_INTERSECTION) {\r\n      // make sure we are within tolerance\r\n      for (let i = 0; i < 3; i++) {\r\n        x[i] = a1[i] + pcoords[0] * (a2[i] - a1[i]);\r\n        projXYZ[i] = p1[i] + outObj.t * (p2[i] - p1[i]);\r\n      }\r\n      if ((0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.e)(x, projXYZ) <= tol * tol) {\r\n        outObj.intersect = 1;\r\n        return outObj;\r\n      }\r\n    } else {\r\n      let outDistance;\r\n      // check to see if it lies within tolerance\r\n      // one of the parametric coords must be outside 0-1\r\n      if (outObj.t < 0.0) {\r\n        outDistance = distanceToLine(p1, a1, a2, x);\r\n        if (outDistance.distance <= tol * tol) {\r\n          outObj.t = 0.0;\r\n          outObj.intersect = 1;\r\n          outObj.betweenPoints = true; // Intersection is near p1\r\n          return outObj;\r\n        }\r\n        return outObj;\r\n      }\r\n      if (outObj.t > 1.0) {\r\n        outDistance = distanceToLine(p2, a1, a2, x);\r\n        if (outDistance.distance <= tol * tol) {\r\n          outObj.t = 1.0;\r\n          outObj.intersect = 1;\r\n          outObj.betweenPoints = true; // Intersection is near p2\r\n          return outObj;\r\n        }\r\n        return outObj;\r\n      }\r\n      if (pcoords[0] < 0.0) {\r\n        pcoords[0] = 0.0;\r\n        outDistance = distanceToLine(a1, p1, p2, x);\r\n        outObj.t = outDistance.t;\r\n        if (outDistance.distance <= tol * tol) {\r\n          outObj.intersect = 1;\r\n          return outObj;\r\n        }\r\n        return outObj;\r\n      }\r\n      if (pcoords[0] > 1.0) {\r\n        pcoords[0] = 1.0;\r\n        outDistance = distanceToLine(a2, p1, p2, x);\r\n        outObj.t = outDistance.t;\r\n        if (outDistance.distance <= tol * tol) {\r\n          outObj.intersect = 1;\r\n          return outObj;\r\n        }\r\n        return outObj;\r\n      }\r\n    }\r\n    return outObj;\r\n  };\r\n  publicAPI.evaluateLocation = (pcoords, x, weights) => {\r\n    const a1 = [];\r\n    const a2 = [];\r\n    model.points.getPoint(0, a1);\r\n    model.points.getPoint(1, a2);\r\n    for (let i = 0; i < 3; i++) {\r\n      x[i] = a1[i] + pcoords[0] * (a2[i] - a1[i]);\r\n    }\r\n    weights[0] = 1.0 - pcoords[0];\r\n    weights[1] = pcoords[0];\r\n  };\r\n  publicAPI.evaluateOrientation = (pcoords, q, weights) => {\r\n    if (model.orientations) {\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_4__.slerp(q, model.orientations[0], model.orientations[1], pcoords[0]);\r\n      weights[0] = 1.0 - pcoords[0];\r\n      weights[1] = pcoords[0];\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  orientations: null // an array of two quat or null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n  _Cell_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, [\'orientations\']);\r\n  vtkLine(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, \'vtkLine\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkLine$1 = {\r\n  newInstance,\r\n  extend,\r\n  ...STATIC,\r\n  ..._Line_Constants_js__WEBPACK_IMPORTED_MODULE_1__["default"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/Line.js?')},"./node_modules/@kitware/vtk.js/Common/DataModel/Line/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IntersectionState: () => (/* binding */ IntersectionState),\n/* harmony export */   "default": () => (/* binding */ Constants)\n/* harmony export */ });\nconst IntersectionState = {\r\n  NO_INTERSECTION: 0,\r\n  YES_INTERSECTION: 1,\r\n  ON_LINE: 2\r\n};\r\nvar Constants = {\r\n  IntersectionState\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/Line/Constants.js?')},"./node_modules/@kitware/vtk.js/Common/DataModel/Plane.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STATIC: () => (/* binding */ STATIC),\n/* harmony export */   \"default\": () => (/* binding */ vtkPlane$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance),\n/* harmony export */   vtkPlane: () => (/* binding */ vtkPlane)\n/* harmony export */ });\n/* harmony import */ var _Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Core/Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n\r\n\r\n\r\nconst PLANE_TOLERANCE = 1.0e-6;\r\nconst COINCIDE = 'coincide';\r\nconst DISJOINT = 'disjoint';\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction evaluate(normal, origin, x) {\r\n  return normal[0] * (x[0] - origin[0]) + normal[1] * (x[1] - origin[1]) + normal[2] * (x[2] - origin[2]);\r\n}\r\nfunction distanceToPlane(x, origin, normal) {\r\n  const distance = normal[0] * (x[0] - origin[0]) + normal[1] * (x[1] - origin[1]) + normal[2] * (x[2] - origin[2]);\r\n  return Math.abs(distance);\r\n}\r\nfunction projectPoint(x, origin, normal, xproj) {\r\n  const xo = [];\r\n  (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.s)(x, origin, xo);\r\n  const t = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.d)(normal, xo);\r\n  xproj[0] = x[0] - t * normal[0];\r\n  xproj[1] = x[1] - t * normal[1];\r\n  xproj[2] = x[2] - t * normal[2];\r\n}\r\nfunction projectVector(v, normal, vproj) {\r\n  const t = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.d)(v, normal);\r\n  let n2 = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.d)(normal, normal);\r\n  if (n2 === 0) {\r\n    n2 = 1.0;\r\n  }\r\n  vproj[0] = v[0] - t * normal[0] / n2;\r\n  vproj[1] = v[1] - t * normal[1] / n2;\r\n  vproj[2] = v[2] - t * normal[2] / n2;\r\n  return vproj;\r\n}\r\nfunction generalizedProjectPoint(x, origin, normal, xproj) {\r\n  const xo = [];\r\n  (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.s)(x, origin, xo);\r\n  const t = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.d)(normal, xo);\r\n  const n2 = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.d)(normal, normal);\r\n  if (n2 !== 0) {\r\n    xproj[0] = x[0] - t * normal[0] / n2;\r\n    xproj[1] = x[1] - t * normal[1] / n2;\r\n    xproj[2] = x[2] - t * normal[2] / n2;\r\n  } else {\r\n    xproj[0] = x[0];\r\n    xproj[1] = x[1];\r\n    xproj[2] = x[2];\r\n  }\r\n}\r\nfunction intersectWithLine(p1, p2, origin, normal) {\r\n  const outObj = {\r\n    intersection: false,\r\n    betweenPoints: false,\r\n    t: Number.MAX_VALUE,\r\n    x: []\r\n  };\r\n  const p21 = [];\r\n  const p1Origin = [];\r\n  // Compute line vector\r\n  (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.s)(p2, p1, p21);\r\n  (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.s)(origin, p1, p1Origin);\r\n\r\n  // Compute denominator.  If ~0, line and plane are parallel.\r\n  // const num = vtkMath.dot(normal, origin) - vtkMath.dot(normal, p1);\r\n  const num = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.d)(normal, p1Origin);\r\n  const den = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.d)(normal, p21);\r\n\r\n  // If denominator with respect to numerator is \"zero\", then the line and\r\n  // plane are considered parallel.\r\n  let fabsden;\r\n  let fabstolerance;\r\n\r\n  // Trying to avoid an expensive call to fabs()\r\n  if (den < 0.0) {\r\n    fabsden = -den;\r\n  } else {\r\n    fabsden = den;\r\n  }\r\n  if (num < 0.0) {\r\n    fabstolerance = -num * PLANE_TOLERANCE;\r\n  } else {\r\n    fabstolerance = num * PLANE_TOLERANCE;\r\n  }\r\n  if (fabsden <= fabstolerance) {\r\n    return outObj;\r\n  }\r\n\r\n  // Where on the line between p1 and p2 is the intersection\r\n  // If between 0 and 1, it is between the two points. If < 0 it's before p1, if > 1 it's after p2\r\n  outObj.t = num / den;\r\n  outObj.x[0] = p1[0] + outObj.t * p21[0];\r\n  outObj.x[1] = p1[1] + outObj.t * p21[1];\r\n  outObj.x[2] = p1[2] + outObj.t * p21[2];\r\n  outObj.intersection = true;\r\n  outObj.betweenPoints = outObj.t >= 0.0 && outObj.t <= 1.0;\r\n  return outObj;\r\n}\r\nfunction intersectWithPlane(plane1Origin, plane1Normal, plane2Origin, plane2Normal) {\r\n  const outObj = {\r\n    intersection: false,\r\n    l0: [],\r\n    l1: [],\r\n    error: null\r\n  };\r\n  const cross$1 = [];\r\n  (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.j)(plane1Normal, plane2Normal, cross$1);\r\n  const absCross = cross$1.map(n => Math.abs(n));\r\n\r\n  // test if the two planes are parallel\r\n  if (absCross[0] + absCross[1] + absCross[2] < PLANE_TOLERANCE) {\r\n    // test if disjoint or coincide\r\n    const v = [];\r\n    (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.s)(plane1Origin, plane2Origin, v);\r\n    if ((0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.d)(plane1Normal, v) === 0) {\r\n      outObj.error = COINCIDE;\r\n    } else {\r\n      outObj.error = DISJOINT;\r\n    }\r\n    return outObj;\r\n  }\r\n\r\n  // Plane1 and Plane2 intersect in a line\r\n  // first determine max abs coordinate of the cross product\r\n  let maxc;\r\n  if (absCross[0] > absCross[1] && absCross[0] > absCross[2]) {\r\n    maxc = 'x';\r\n  } else if (absCross[1] > absCross[2]) {\r\n    maxc = 'y';\r\n  } else {\r\n    maxc = 'z';\r\n  }\r\n\r\n  // To get a point on the intersect line, zero the max coord, and solve for the other two\r\n  const iP = []; // intersectionPoint\r\n  // the constants in the 2 plane equations\r\n  const d1 = -(0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.d)(plane1Normal, plane1Origin);\r\n  const d2 = -(0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.d)(plane2Normal, plane2Origin);\r\n\r\n  // eslint-disable-next-line default-case\r\n  switch (maxc) {\r\n    case 'x':\r\n      // intersect with x=0\r\n      iP[0] = 0;\r\n      iP[1] = (d2 * plane1Normal[2] - d1 * plane2Normal[2]) / cross$1[0];\r\n      iP[2] = (d1 * plane2Normal[1] - d2 * plane1Normal[1]) / cross$1[0];\r\n      break;\r\n    case 'y':\r\n      // intersect with y=0\r\n      iP[0] = (d1 * plane2Normal[2] - d2 * plane1Normal[2]) / cross$1[1];\r\n      iP[1] = 0;\r\n      iP[2] = (d2 * plane1Normal[0] - d1 * plane2Normal[0]) / cross$1[1];\r\n      break;\r\n    case 'z':\r\n      // intersect with z=0\r\n      iP[0] = (d2 * plane1Normal[1] - d1 * plane2Normal[1]) / cross$1[2];\r\n      iP[1] = (d1 * plane2Normal[0] - d2 * plane1Normal[0]) / cross$1[2];\r\n      iP[2] = 0;\r\n      break;\r\n  }\r\n  outObj.l0 = iP;\r\n  (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.k)(iP, cross$1, outObj.l1);\r\n  outObj.intersection = true;\r\n  return outObj;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Static API\r\n// ----------------------------------------------------------------------------\r\n\r\nconst STATIC = {\r\n  evaluate,\r\n  distanceToPlane,\r\n  projectPoint,\r\n  projectVector,\r\n  generalizedProjectPoint,\r\n  intersectWithLine,\r\n  intersectWithPlane,\r\n  DISJOINT,\r\n  COINCIDE\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkPlane methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkPlane(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkPlane');\r\n  publicAPI.distanceToPlane = x => distanceToPlane(x, model.origin, model.normal);\r\n  publicAPI.projectPoint = (x, xproj) => {\r\n    projectPoint(x, model.origin, model.normal, xproj);\r\n  };\r\n  publicAPI.projectVector = (v, vproj) => projectVector(v, model.normal, vproj);\r\n  publicAPI.push = distance => {\r\n    if (distance === 0.0) {\r\n      return;\r\n    }\r\n    for (let i = 0; i < 3; i++) {\r\n      model.origin[i] += distance * model.normal[i];\r\n    }\r\n  };\r\n  publicAPI.generalizedProjectPoint = (x, xproj) => {\r\n    generalizedProjectPoint(x, model.origin, model.normal, xproj);\r\n  };\r\n  publicAPI.evaluateFunction = (x, y, z) => {\r\n    if (!Array.isArray(x)) {\r\n      return model.normal[0] * (x - model.origin[0]) + model.normal[1] * (y - model.origin[1]) + model.normal[2] * (z - model.origin[2]);\r\n    }\r\n    return model.normal[0] * (x[0] - model.origin[0]) + model.normal[1] * (x[1] - model.origin[1]) + model.normal[2] * (x[2] - model.origin[2]);\r\n  };\r\n  publicAPI.evaluateGradient = xyz => {\r\n    const retVal = [model.normal[0], model.normal[1], model.normal[2]];\r\n    return retVal;\r\n  };\r\n  publicAPI.intersectWithLine = (p1, p2) => intersectWithLine(p1, p2, model.origin, model.normal);\r\n  publicAPI.intersectWithPlane = (planeOrigin, planeNormal) => intersectWithPlane(planeOrigin, planeNormal, model.origin, model.normal);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  normal: [0.0, 0.0, 1.0],\r\n  origin: [0.0, 0.0, 0.0]\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Object methods\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.setGetArray(publicAPI, model, ['normal', 'origin'], 3);\r\n  vtkPlane(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.newInstance(extend, 'vtkPlane');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkPlane$1 = {\r\n  newInstance,\r\n  extend,\r\n  ...STATIC\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/Plane.js?")},"./node_modules/@kitware/vtk.js/Common/DataModel/PointSet.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ vtkPointSet$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _vtk_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vtk.js */ "./node_modules/@kitware/vtk.js/vtk.js");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _DataSet_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DataSet.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js");\n/* harmony import */ var _Core_Points_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Core/Points.js */ "./node_modules/@kitware/vtk.js/Common/Core/Points.js");\n\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkPointSet methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkPointSet(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkPointSet\');\r\n\r\n  // Create empty points\r\n  if (!model.points) {\r\n    model.points = _Core_Points_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();\r\n  } else {\r\n    model.points = (0,_vtk_js__WEBPACK_IMPORTED_MODULE_0__["default"])(model.points);\r\n  }\r\n  publicAPI.getNumberOfPoints = () => model.points.getNumberOfPoints();\r\n  publicAPI.getBounds = () => model.points.getBounds();\r\n  publicAPI.computeBounds = () => {\r\n    publicAPI.getBounds();\r\n  };\r\n  const superShallowCopy = publicAPI.shallowCopy;\r\n  publicAPI.shallowCopy = function (other) {\r\n    let debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n    superShallowCopy(other, debug);\r\n    model.points = _Core_Points_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();\r\n    model.points.shallowCopy(other.getPoints());\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  // points: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _DataSet_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.setGet(publicAPI, model, [\'points\']);\r\n\r\n  // Object specific methods\r\n  vtkPointSet(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.newInstance(extend, \'vtkPointSet\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkPointSet$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/PointSet.js?')},"./node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CELL_FACTORY: () => (/* binding */ CELL_FACTORY),\n/* harmony export */   "default": () => (/* binding */ vtkPolyData$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _vtk_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vtk.js */ "./node_modules/@kitware/vtk.js/vtk.js");\n/* harmony import */ var _Core_CellArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/CellArray.js */ "./node_modules/@kitware/vtk.js/Common/Core/CellArray.js");\n/* harmony import */ var _CellLinks_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CellLinks.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/CellLinks.js");\n/* harmony import */ var _CellTypes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./CellTypes.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/CellTypes.js");\n/* harmony import */ var _Line_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Line.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/Line.js");\n/* harmony import */ var _PointSet_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./PointSet.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/PointSet.js");\n/* harmony import */ var _Triangle_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Triangle.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/Triangle.js");\n/* harmony import */ var _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./CellTypes/Constants.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/CellTypes/Constants.js");\n/* harmony import */ var _PolyData_Constants_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./PolyData/Constants.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/PolyData/Constants.js");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  vtkWarningMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\nconst CELL_FACTORY = {\r\n  [_CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_LINE]: _Line_js__WEBPACK_IMPORTED_MODULE_5__["default"],\r\n  [_CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_POLY_LINE]: _Line_js__WEBPACK_IMPORTED_MODULE_5__["default"],\r\n  [_CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_TRIANGLE]: _Triangle_js__WEBPACK_IMPORTED_MODULE_7__["default"]\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkPolyData methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkPolyData(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkPolyData\');\r\n  function camelize(str) {\r\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, letter => letter.toUpperCase()).replace(/\\s+/g, \'\');\r\n  }\r\n\r\n  // build empty cell arrays and set methods\r\n  _PolyData_Constants_js__WEBPACK_IMPORTED_MODULE_9__.POLYDATA_FIELDS.forEach(type => {\r\n    publicAPI[`getNumberOf${camelize(type)}`] = () => model[type].getNumberOfCells();\r\n    if (!model[type]) {\r\n      model[type] = _Core_CellArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();\r\n    } else {\r\n      model[type] = (0,_vtk_js__WEBPACK_IMPORTED_MODULE_1__["default"])(model[type]);\r\n    }\r\n  });\r\n  publicAPI.getNumberOfCells = () => _PolyData_Constants_js__WEBPACK_IMPORTED_MODULE_9__.POLYDATA_FIELDS.reduce((num, cellType) => num + model[cellType].getNumberOfCells(), 0);\r\n  const superShallowCopy = publicAPI.shallowCopy;\r\n  publicAPI.shallowCopy = function (other) {\r\n    let debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n    superShallowCopy(other, debug);\r\n    _PolyData_Constants_js__WEBPACK_IMPORTED_MODULE_9__.POLYDATA_FIELDS.forEach(type => {\r\n      model[type] = _Core_CellArray_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();\r\n      model[type].shallowCopy(other.getReferenceByName(type));\r\n    });\r\n  };\r\n  publicAPI.buildCells = () => {\r\n    // here are the number of cells we have\r\n    const nVerts = publicAPI.getNumberOfVerts();\r\n    const nLines = publicAPI.getNumberOfLines();\r\n    const nPolys = publicAPI.getNumberOfPolys();\r\n    const nStrips = publicAPI.getNumberOfStrips();\r\n\r\n    // pre-allocate the space we need\r\n    const nCells = nVerts + nLines + nPolys + nStrips;\r\n    const types = new Uint8Array(nCells);\r\n    let pTypes = types;\r\n    const locs = new Uint32Array(nCells);\r\n    let pLocs = locs;\r\n\r\n    // record locations and type of each cell.\r\n    // verts\r\n    if (nVerts) {\r\n      let nextCellPts = 0;\r\n      model.verts.getCellSizes().forEach((numCellPts, index) => {\r\n        pLocs[index] = nextCellPts;\r\n        pTypes[index] = numCellPts > 1 ? _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_POLY_VERTEX : _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_VERTEX;\r\n        nextCellPts += numCellPts + 1;\r\n      });\r\n      pLocs = pLocs.subarray(nVerts);\r\n      pTypes = pTypes.subarray(nVerts);\r\n    }\r\n\r\n    // lines\r\n    if (nLines) {\r\n      let nextCellPts = 0;\r\n      model.lines.getCellSizes().forEach((numCellPts, index) => {\r\n        pLocs[index] = nextCellPts;\r\n        pTypes[index] = numCellPts > 2 ? _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_POLY_LINE : _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_LINE;\r\n        if (numCellPts === 1) {\r\n          vtkWarningMacro(\'Building VTK_LINE \', index, \' with only one point, but VTK_LINE needs at least two points. Check the input.\');\r\n        }\r\n        nextCellPts += numCellPts + 1;\r\n      });\r\n      pLocs = pLocs.subarray(nLines);\r\n      pTypes = pTypes.subarray(nLines);\r\n    }\r\n\r\n    // polys\r\n    if (nPolys) {\r\n      let nextCellPts = 0;\r\n      model.polys.getCellSizes().forEach((numCellPts, index) => {\r\n        pLocs[index] = nextCellPts;\r\n        switch (numCellPts) {\r\n          case 3:\r\n            pTypes[index] = _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_TRIANGLE;\r\n            break;\r\n          case 4:\r\n            pTypes[index] = _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_QUAD;\r\n            break;\r\n          default:\r\n            pTypes[index] = _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_POLYGON;\r\n            break;\r\n        }\r\n        if (numCellPts < 3) {\r\n          vtkWarningMacro(\'Building VTK_TRIANGLE \', index, \' with less than three points, but VTK_TRIANGLE needs at least three points. Check the input.\');\r\n        }\r\n        nextCellPts += numCellPts + 1;\r\n      });\r\n      pLocs += pLocs.subarray(nPolys);\r\n      pTypes += pTypes.subarray(nPolys);\r\n    }\r\n\r\n    // strips\r\n    if (nStrips) {\r\n      let nextCellPts = 0;\r\n      pTypes.fill(_CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_TRIANGLE_STRIP, 0, nStrips);\r\n      model.strips.getCellSizes().forEach((numCellPts, index) => {\r\n        pLocs[index] = nextCellPts;\r\n        nextCellPts += numCellPts + 1;\r\n      });\r\n    }\r\n\r\n    // set up the cell types data structure\r\n    model.cells = _CellTypes_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance();\r\n    model.cells.setCellTypes(nCells, types, locs);\r\n  };\r\n\r\n  /**\r\n   * Create upward links from points to cells that use each point. Enables\r\n   * topologically complex queries.\r\n   */\r\n  publicAPI.buildLinks = function () {\r\n    let initialSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n    if (model.cells === undefined) {\r\n      publicAPI.buildCells();\r\n    }\r\n    model.links = _CellLinks_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();\r\n    if (initialSize > 0) {\r\n      model.links.allocate(initialSize);\r\n    } else {\r\n      model.links.allocate(publicAPI.getPoints().getNumberOfPoints());\r\n    }\r\n    model.links.buildLinks(publicAPI);\r\n  };\r\n  publicAPI.getCellType = cellId => model.cells.getCellType(cellId);\r\n  publicAPI.getCellPoints = cellId => {\r\n    const cellType = publicAPI.getCellType(cellId);\r\n    let cells = null;\r\n    switch (cellType) {\r\n      case _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_VERTEX:\r\n      case _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_POLY_VERTEX:\r\n        cells = model.verts;\r\n        break;\r\n      case _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_LINE:\r\n      case _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_POLY_LINE:\r\n        cells = model.lines;\r\n        break;\r\n      case _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_TRIANGLE:\r\n      case _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_QUAD:\r\n      case _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_POLYGON:\r\n        cells = model.polys;\r\n        break;\r\n      case _CellTypes_Constants_js__WEBPACK_IMPORTED_MODULE_8__.CellType.VTK_TRIANGLE_STRIP:\r\n        cells = model.strips;\r\n        break;\r\n      default:\r\n        cells = null;\r\n        return {\r\n          type: 0,\r\n          cellPointIds: null\r\n        };\r\n    }\r\n    const loc = model.cells.getCellLocation(cellId);\r\n    const cellPointIds = cells.getCell(loc);\r\n    return {\r\n      cellType,\r\n      cellPointIds\r\n    };\r\n  };\r\n  publicAPI.getPointCells = ptId => model.links.getCells(ptId);\r\n  publicAPI.getCellEdgeNeighbors = (cellId, point1, point2) => {\r\n    const link1 = model.links.getLink(point1);\r\n    const link2 = model.links.getLink(point2);\r\n    return link1.cells.filter(cell => cell !== cellId && link2.cells.indexOf(cell) !== -1);\r\n  };\r\n\r\n  /**\r\n   * If you know the type of cell, you may provide it to improve performances.\r\n   */\r\n  publicAPI.getCell = function (cellId) {\r\n    let cellHint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\r\n    const cellInfo = publicAPI.getCellPoints(cellId);\r\n    const cell = cellHint || CELL_FACTORY[cellInfo.cellType].newInstance();\r\n    cell.initialize(publicAPI.getPoints(), cellInfo.cellPointIds);\r\n    return cell;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  // verts: null,\r\n  // lines: null,\r\n  // polys: null,\r\n  // strips: null,\r\n  // cells: null,\r\n  // links: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _PointSet_js__WEBPACK_IMPORTED_MODULE_6__["default"].extend(publicAPI, model, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, [\'cells\', \'links\']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, [\'verts\', \'lines\', \'polys\', \'strips\']);\r\n\r\n  // Object specific methods\r\n  vtkPolyData(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, \'vtkPolyData\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkPolyData$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js?')},"./node_modules/@kitware/vtk.js/Common/DataModel/PolyData/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POLYDATA_FIELDS: () => (/* binding */ POLYDATA_FIELDS),\n/* harmony export */   \"default\": () => (/* binding */ Constants)\n/* harmony export */ });\nconst POLYDATA_FIELDS = ['verts', 'lines', 'polys', 'strips'];\r\nvar Constants = {\r\n  POLYDATA_FIELDS\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/PolyData/Constants.js?")},"./node_modules/@kitware/vtk.js/Common/DataModel/SelectionNode.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkSelectionNode$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _SelectionNode_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SelectionNode/Constants.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/SelectionNode/Constants.js\");\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkSelectionNode methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkSelectionNode(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkSelectionNode');\r\n  publicAPI.getBounds = () => model.points.getBounds();\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  contentType: -1,\r\n  fieldType: -1,\r\n  properties: null,\r\n  selectionList: []\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  model.properties = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['contentType', 'fieldType', 'properties', 'selectionList']);\r\n\r\n  // Object specific methods\r\n  vtkSelectionNode(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkSelectionNode');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkSelectionNode$1 = {\r\n  newInstance,\r\n  extend,\r\n  ..._SelectionNode_Constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/SelectionNode.js?")},"./node_modules/@kitware/vtk.js/Common/DataModel/SelectionNode/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SelectionContent: () => (/* binding */ SelectionContent),\n/* harmony export */   SelectionField: () => (/* binding */ SelectionField),\n/* harmony export */   "default": () => (/* binding */ Constants)\n/* harmony export */ });\n/**\r\n * The (primary) property that describes the content of a selection\r\n * node\'s data. Other auxiliary description properties follow.\r\n * GLOBALIDS means that the selection list contains values from the\r\n * vtkDataSetAttribute array of the same name.\r\n * PEDIGREEIDS means that the selection list contains values from the\r\n * vtkDataSetAttribute array of the same name.\r\n * VALUES means the the selection list contains values from an\r\n * arbitrary attribute array (ignores any globalids attribute)\r\n * INDICES means that the selection list contains indexes into the\r\n * cell or point arrays.\r\n * FRUSTUM means the set of points and cells inside a frustum\r\n * LOCATIONS means the set of points and cells near a set of positions\r\n * THRESHOLDS means the points and cells with values within a set of ranges\r\n * getContentType() returns -1 if the content type is not set.\r\n */\r\n\r\n// Specify how data arrays can be used by data objects\r\nconst SelectionContent = {\r\n  GLOBALIDS: 0,\r\n  PEDIGREEIDS: 1,\r\n  VALUES: 2,\r\n  INDICES: 3,\r\n  FRUSTUM: 4,\r\n  LOCATIONS: 5,\r\n  THRESHOLDS: 6,\r\n  BLOCKS: 7,\r\n  QUERY: 8\r\n};\r\nconst SelectionField = {\r\n  CELL: 0,\r\n  POINT: 1,\r\n  FIELD: 2,\r\n  VERTEX: 3,\r\n  EDGE: 4,\r\n  ROW: 5\r\n};\r\nvar Constants = {\r\n  SelectionContent,\r\n  SelectionField\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/SelectionNode/Constants.js?')},"./node_modules/@kitware/vtk.js/Common/DataModel/StructuredData.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ vtkStructuredData),\n/* harmony export */   getDataDescriptionFromExtent: () => (/* binding */ getDataDescriptionFromExtent)\n/* harmony export */ });\n/* harmony import */ var _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StructuredData/Constants.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/StructuredData/Constants.js");\n\r\n\r\nconst {\r\n  StructuredType\r\n} = _StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_0__["default"];\r\nfunction getDataDescriptionFromExtent(inExt) {\r\n  let dataDim = 0;\r\n  for (let i = 0; i < 3; ++i) {\r\n    if (inExt[i * 2] < inExt[i * 2 + 1]) {\r\n      dataDim++;\r\n    }\r\n  }\r\n  if (inExt[0] > inExt[1] || inExt[2] > inExt[3] || inExt[4] > inExt[5]) {\r\n    return StructuredType.EMPTY;\r\n  }\r\n  if (dataDim === 3) {\r\n    return StructuredType.XYZ_GRID;\r\n  }\r\n  if (dataDim === 2) {\r\n    if (inExt[0] === inExt[1]) {\r\n      return StructuredType.YZ_PLANE;\r\n    }\r\n    if (inExt[2] === inExt[3]) {\r\n      return StructuredType.XZ_PLANE;\r\n    }\r\n    return StructuredType.XY_PLANE;\r\n  }\r\n  if (dataDim === 1) {\r\n    if (inExt[0] < inExt[1]) {\r\n      return StructuredType.X_LINE;\r\n    }\r\n    if (inExt[2] < inExt[3]) {\r\n      return StructuredType.Y_LINE;\r\n    }\r\n    return StructuredType.Z_LINE;\r\n  }\r\n  return StructuredType.SINGLE_POINT;\r\n}\r\nvar vtkStructuredData = {\r\n  getDataDescriptionFromExtent,\r\n  ..._StructuredData_Constants_js__WEBPACK_IMPORTED_MODULE_0__["default"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/StructuredData.js?')},"./node_modules/@kitware/vtk.js/Common/DataModel/StructuredData/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StructuredType: () => (/* binding */ StructuredType),\n/* harmony export */   "default": () => (/* binding */ Constants)\n/* harmony export */ });\nconst StructuredType = {\r\n  UNCHANGED: 0,\r\n  SINGLE_POINT: 1,\r\n  X_LINE: 2,\r\n  Y_LINE: 3,\r\n  Z_LINE: 4,\r\n  XY_PLANE: 5,\r\n  YZ_PLANE: 6,\r\n  XZ_PLANE: 7,\r\n  XYZ_GRID: 8,\r\n  EMPTY: 9\r\n};\r\nvar Constants = {\r\n  StructuredType\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/StructuredData/Constants.js?')},"./node_modules/@kitware/vtk.js/Common/DataModel/Triangle.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STATIC: () => (/* binding */ STATIC),\n/* harmony export */   "default": () => (/* binding */ vtkTriangle$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _Cell_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Cell.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/Cell.js");\n/* harmony import */ var _Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/Math/index.js */ "./node_modules/@kitware/vtk.js/Common/Core/Math/index.js");\n/* harmony import */ var _Line_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Line.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/Line.js");\n/* harmony import */ var _Plane_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Plane.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/Plane.js");\n\r\n\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction computeNormalDirection(v1, v2, v3, n) {\r\n  // order is important!!! maintain consistency with triangle vertex order\r\n  const ax = v3[0] - v2[0];\r\n  const ay = v3[1] - v2[1];\r\n  const az = v3[2] - v2[2];\r\n  const bx = v1[0] - v2[0];\r\n  const by = v1[1] - v2[1];\r\n  const bz = v1[2] - v2[2];\r\n  n[0] = ay * bz - az * by;\r\n  n[1] = az * bx - ax * bz;\r\n  n[2] = ax * by - ay * bx;\r\n}\r\nfunction computeNormal(v1, v2, v3, n) {\r\n  computeNormalDirection(v1, v2, v3, n);\r\n  const length = Math.sqrt(n[0] * n[0] + n[1] * n[1] + n[2] * n[2]);\r\n  if (length !== 0.0) {\r\n    n[0] /= length;\r\n    n[1] /= length;\r\n    n[2] /= length;\r\n  }\r\n}\r\nfunction intersectWithTriangle(p1, q1, r1, p2, q2, r2) {\r\n  let tolerance = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 1e-6;\r\n  let coplanar = false;\r\n  const pt1 = [];\r\n  const pt2 = [];\r\n  const surfaceId = [];\r\n  const n1 = [];\r\n  const n2 = [];\r\n\r\n  // Compute supporting plane normals.\r\n  computeNormal(p1, q1, r1, n1);\r\n  computeNormal(p2, q2, r2, n2);\r\n  const s1 = -(0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.d)(n1, p1);\r\n  const s2 = -(0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.d)(n2, p2);\r\n\r\n  // Compute signed distances of points p1, q1, r1 from supporting\r\n  // plane of second triangle.\r\n  const dist1 = [(0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.d)(n2, p1) + s2, (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.d)(n2, q1) + s2, (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.d)(n2, r1) + s2];\r\n\r\n  // If signs of all points are the same, all the points lie on the\r\n  // same side of the supporting plane, and we can exit early.\r\n  if (dist1[0] * dist1[1] > tolerance && dist1[0] * dist1[2] > tolerance) {\r\n    // vtkDebugMacro(<<"Same side supporting plane 1!");\r\n    return {\r\n      intersect: false,\r\n      coplanar,\r\n      pt1,\r\n      pt2,\r\n      surfaceId\r\n    };\r\n  }\r\n  // Do the same for p2, q2, r2 and supporting plane of first\r\n  // triangle.\r\n  const dist2 = [(0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.d)(n1, p2) + s1, (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.d)(n1, q2) + s1, (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.d)(n1, r2) + s1];\r\n\r\n  // If signs of all points are the same, all the points lie on the\r\n  // same side of the supporting plane, and we can exit early.\r\n  if (dist2[0] * dist2[1] > tolerance && dist2[0] * dist2[2] > tolerance) {\r\n    // vtkDebugMacro(<<"Same side supporting plane 2!");\r\n    return {\r\n      intersect: false,\r\n      coplanar,\r\n      pt1,\r\n      pt2,\r\n      surfaceId\r\n    };\r\n  }\r\n  // Check for coplanarity of the supporting planes.\r\n  if (Math.abs(n1[0] - n2[0]) < 1e-9 && Math.abs(n1[1] - n2[1]) < 1e-9 && Math.abs(n1[2] - n2[2]) < 1e-9 && Math.abs(s1 - s2) < 1e-9) {\r\n    coplanar = true;\r\n    // vtkDebugMacro(<<"Coplanar!");\r\n    return {\r\n      intersect: false,\r\n      coplanar,\r\n      pt1,\r\n      pt2,\r\n      surfaceId\r\n    };\r\n  }\r\n\r\n  // There are more efficient ways to find the intersection line (if\r\n  // it exists), but this is clear enough.\r\n  const pts1 = [p1, q1, r1];\r\n  const pts2 = [p2, q2, r2];\r\n\r\n  // Find line of intersection (L = p + t*v) between two planes.\r\n  const n1n2 = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.d)(n1, n2);\r\n  const a = (s1 - s2 * n1n2) / (n1n2 * n1n2 - 1.0);\r\n  const b = (s2 - s1 * n1n2) / (n1n2 * n1n2 - 1.0);\r\n  const p = [a * n1[0] + b * n2[0], a * n1[1] + b * n2[1], a * n1[2] + b * n2[2]];\r\n  const v = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.j)(n1, n2, []);\r\n  (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.l)(v);\r\n  let index1 = 0;\r\n  let index2 = 0;\r\n  const t1 = [];\r\n  const t2 = [];\r\n  let ts1 = 50;\r\n  let ts2 = 50;\r\n  for (let i = 0; i < 3; i++) {\r\n    const id1 = i;\r\n    const id2 = (i + 1) % 3;\r\n\r\n    // Find t coordinate on line of intersection between two planes.\r\n    const val1 = _Plane_js__WEBPACK_IMPORTED_MODULE_4__["default"].intersectWithLine(pts1[id1], pts1[id2], p2, n2);\r\n    if (val1.intersection && val1.t > 0 - tolerance && val1.t < 1 + tolerance) {\r\n      if (val1.t < 1 + tolerance && val1.t > 1 - tolerance) {\r\n        ts1 = index1;\r\n      }\r\n      t1[index1++] = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.d)(val1.x, v) - (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.d)(p, v);\r\n    }\r\n    const val2 = _Plane_js__WEBPACK_IMPORTED_MODULE_4__["default"].intersectWithLine(pts2[id1], pts2[id2], p1, n1);\r\n    if (val2.intersection && val2.t > 0 - tolerance && val2.t < 1 + tolerance) {\r\n      if (val2.t < 1 + tolerance && val2.t > 1 - tolerance) {\r\n        ts2 = index2;\r\n      }\r\n      t2[index2++] = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.d)(val2.x, v) - (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.d)(p, v);\r\n    }\r\n  }\r\n\r\n  // If the value of the index is greater than 2, the intersecting point\r\n  // actually is intersected by all three edges. In this case, set the two\r\n  // edges to the two edges where the intersecting point is not the end point\r\n  if (index1 > 2) {\r\n    index1--;\r\n    // swap\r\n    const t12 = t1[2];\r\n    t1[2] = t1[ts1];\r\n    t1[ts1] = t12;\r\n  }\r\n  if (index2 > 2) {\r\n    index2--;\r\n    const t22 = t2[2];\r\n    t2[2] = t2[ts2];\r\n    t2[ts2] = t22;\r\n  }\r\n  // Check if only one edge or all edges intersect the supporting\r\n  // planes intersection.\r\n  if (index1 !== 2 || index2 !== 2) {\r\n    // vtkDebugMacro(<<"Only one edge intersecting!");\r\n    return {\r\n      intersect: false,\r\n      coplanar,\r\n      pt1,\r\n      pt2,\r\n      surfaceId\r\n    };\r\n  }\r\n\r\n  // Check for NaNs\r\n  if (Number.isNaN(t1[0]) || Number.isNaN(t1[1]) || Number.isNaN(t2[0]) || Number.isNaN(t2[1])) {\r\n    // vtkWarningMacro(<<"NaNs!");\r\n    return {\r\n      intersect: false,\r\n      coplanar,\r\n      pt1,\r\n      pt2,\r\n      surfaceId\r\n    };\r\n  }\r\n  if (t1[0] > t1[1]) {\r\n    // swap\r\n    const t11 = t1[1];\r\n    t1[1] = t1[0];\r\n    t1[0] = t11;\r\n  }\r\n  if (t2[0] > t2[1]) {\r\n    // swap\r\n    const t21 = t2[1];\r\n    t2[1] = t2[0];\r\n    t2[0] = t21;\r\n  }\r\n  // Handle the different interval configuration cases.\r\n  let tt1;\r\n  let tt2;\r\n  if (t1[1] < t2[0] || t2[1] < t1[0]) {\r\n    // vtkDebugMacro(<<"No Overlap!");\r\n    return {\r\n      intersect: false,\r\n      coplanar,\r\n      pt1,\r\n      pt2,\r\n      surfaceId\r\n    }; // No overlap\r\n  }\r\n\r\n  if (t1[0] < t2[0]) {\r\n    if (t1[1] < t2[1]) {\r\n      // First point on surface 2, second point on surface 1\r\n      surfaceId[0] = 2;\r\n      surfaceId[1] = 1;\r\n      tt1 = t2[0];\r\n      tt2 = t1[1];\r\n    } else {\r\n      // Both points belong to lines on surface 2\r\n      surfaceId[0] = 2;\r\n      surfaceId[1] = 2;\r\n      tt1 = t2[0];\r\n      tt2 = t2[1];\r\n    }\r\n  } // t1[0] >= t2[0]\r\n  else if (t1[1] < t2[1]) {\r\n    // Both points belong to lines on surface 1\r\n    surfaceId[0] = 1;\r\n    surfaceId[1] = 1;\r\n    tt1 = t1[0];\r\n    tt2 = t1[1];\r\n  } else {\r\n    // First point on surface 1, second point on surface 2\r\n    surfaceId[0] = 1;\r\n    surfaceId[1] = 2;\r\n    tt1 = t1[0];\r\n    tt2 = t2[1];\r\n  }\r\n\r\n  // Create actual intersection points.\r\n  (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.m)(p, v, tt1, pt1);\r\n  (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.m)(p, v, tt2, pt2);\r\n  return {\r\n    intersect: true,\r\n    coplanar,\r\n    pt1,\r\n    pt2,\r\n    surfaceId\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Static API\r\n// ----------------------------------------------------------------------------\r\n\r\nconst STATIC = {\r\n  computeNormalDirection,\r\n  computeNormal,\r\n  intersectWithTriangle\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkTriangle methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkTriangle(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkTriangle\');\r\n  publicAPI.getCellDimension = () => 2;\r\n  publicAPI.intersectWithLine = (p1, p2, tol, x, pcoords) => {\r\n    const outObj = {\r\n      subId: 0,\r\n      t: Number.MAX_VALUE,\r\n      intersect: 0,\r\n      betweenPoints: false\r\n    };\r\n    pcoords[2] = 0.0;\r\n    const closestPoint = [];\r\n    const tol2 = tol * tol;\r\n\r\n    // Get normal for triangle\r\n    const pt1 = [];\r\n    const pt2 = [];\r\n    const pt3 = [];\r\n    model.points.getPoint(0, pt1);\r\n    model.points.getPoint(1, pt2);\r\n    model.points.getPoint(2, pt3);\r\n    const n = [];\r\n    const weights = [];\r\n    computeNormal(pt1, pt2, pt3, n);\r\n    if (n[0] !== 0 || n[1] !== 0 || n[2] !== 0) {\r\n      // Intersect plane of triangle with line\r\n      const plane = _Plane_js__WEBPACK_IMPORTED_MODULE_4__["default"].intersectWithLine(p1, p2, pt1, n);\r\n      outObj.betweenPoints = plane.betweenPoints;\r\n      outObj.t = plane.t;\r\n      x[0] = plane.x[0];\r\n      x[1] = plane.x[1];\r\n      x[2] = plane.x[2];\r\n      if (!plane.intersection) {\r\n        pcoords[0] = 0.0;\r\n        pcoords[1] = 0.0;\r\n        outObj.intersect = 0;\r\n        return outObj;\r\n      }\r\n\r\n      // Evaluate position\r\n      const inside = publicAPI.evaluatePosition(x, closestPoint, pcoords, weights);\r\n      if (inside.evaluation >= 0) {\r\n        if (inside.dist2 <= tol2) {\r\n          outObj.intersect = 1;\r\n          return outObj;\r\n        }\r\n        outObj.intersect = inside.evaluation;\r\n        return outObj;\r\n      }\r\n    }\r\n\r\n    // Normals are null, so the triangle is degenerated and\r\n    // we still need to check intersection between line and\r\n    // the longest edge.\r\n    const dist2Pt1Pt2 = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.e)(pt1, pt2);\r\n    const dist2Pt2Pt3 = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.e)(pt2, pt3);\r\n    const dist2Pt3Pt1 = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.e)(pt3, pt1);\r\n    if (!model.line) {\r\n      model.line = _Line_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();\r\n    }\r\n    if (dist2Pt1Pt2 > dist2Pt2Pt3 && dist2Pt1Pt2 > dist2Pt3Pt1) {\r\n      model.line.getPoints().setPoint(0, pt1);\r\n      model.line.getPoints().setPoint(1, pt2);\r\n    } else if (dist2Pt2Pt3 > dist2Pt3Pt1 && dist2Pt2Pt3 > dist2Pt1Pt2) {\r\n      model.line.getPoints().setPoint(0, pt2);\r\n      model.line.getPoints().setPoint(1, pt3);\r\n    } else {\r\n      model.line.getPoints().setPoint(0, pt3);\r\n      model.line.getPoints().setPoint(1, pt1);\r\n    }\r\n    const intersectLine = model.line.intersectWithLine(p1, p2, tol, x, pcoords);\r\n    outObj.betweenPoints = intersectLine.betweenPoints;\r\n    outObj.t = intersectLine.t;\r\n    if (intersectLine.intersect) {\r\n      const pt3Pt1 = [];\r\n      const pt3Pt2 = [];\r\n      const pt3X = [];\r\n      // Compute r and s manually, using dot and norm.\r\n      for (let i = 0; i < 3; i++) {\r\n        pt3Pt1[i] = pt1[i] - pt3[i];\r\n        pt3Pt2[i] = pt2[i] - pt3[i];\r\n        pt3X[i] = x[i] - pt3[i];\r\n      }\r\n      pcoords[0] = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.d)(pt3X, pt3Pt1) / dist2Pt3Pt1;\r\n      pcoords[1] = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.d)(pt3X, pt3Pt2) / dist2Pt2Pt3;\r\n      outObj.intersect = 1;\r\n      return outObj;\r\n    }\r\n    pcoords[0] = 0.0;\r\n    pcoords[1] = 0.0;\r\n    outObj.intersect = 0;\r\n    return outObj;\r\n  };\r\n  publicAPI.evaluatePosition = (x, closestPoint, pcoords, weights) => {\r\n    // will return obj\r\n    const outObj = {\r\n      subId: 0,\r\n      dist2: 0,\r\n      evaluation: -1\r\n    };\r\n    let i;\r\n    let j;\r\n    const pt1 = [];\r\n    const pt2 = [];\r\n    const pt3 = [];\r\n    const n = [];\r\n    let fabsn;\r\n    const rhs = [];\r\n    const c1 = [];\r\n    const c2 = [];\r\n    let det = 0;\r\n    let idx = 0;\r\n    const indices = [];\r\n    let dist2Point;\r\n    let dist2Line1;\r\n    let dist2Line2;\r\n    let closest = [];\r\n    const closestPoint1 = [];\r\n    const closestPoint2 = [];\r\n    const cp = [];\r\n    outObj.subId = 0;\r\n    pcoords[2] = 0.0;\r\n\r\n    // Get normal for triangle, only the normal direction is needed, i.e. the\r\n    // normal need not be normalized (unit length)\r\n    //\r\n    model.points.getPoint(1, pt1);\r\n    model.points.getPoint(2, pt2);\r\n    model.points.getPoint(0, pt3);\r\n    computeNormalDirection(pt1, pt2, pt3, n);\r\n\r\n    // Project point to plane\r\n    _Plane_js__WEBPACK_IMPORTED_MODULE_4__["default"].generalizedProjectPoint(x, pt1, n, cp);\r\n\r\n    // Construct matrices.  Since we have over determined system, need to find\r\n    // which 2 out of 3 equations to use to develop equations. (Any 2 should\r\n    // work since we\'ve projected point to plane.)\r\n    let maxComponent = 0.0;\r\n    for (i = 0; i < 3; i++) {\r\n      // trying to avoid an expensive call to fabs()\r\n      if (n[i] < 0) {\r\n        fabsn = -n[i];\r\n      } else {\r\n        fabsn = n[i];\r\n      }\r\n      if (fabsn > maxComponent) {\r\n        maxComponent = fabsn;\r\n        idx = i;\r\n      }\r\n    }\r\n    for (j = 0, i = 0; i < 3; i++) {\r\n      if (i !== idx) {\r\n        indices[j++] = i;\r\n      }\r\n    }\r\n    for (i = 0; i < 2; i++) {\r\n      rhs[i] = cp[indices[i]] - pt3[indices[i]];\r\n      c1[i] = pt1[indices[i]] - pt3[indices[i]];\r\n      c2[i] = pt2[indices[i]] - pt3[indices[i]];\r\n    }\r\n    det = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.o)(c1, c2);\r\n    if (det === 0.0) {\r\n      pcoords[0] = 0.0;\r\n      pcoords[1] = 0.0;\r\n      outObj.evaluation = -1;\r\n      return outObj;\r\n    }\r\n    pcoords[0] = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.o)(rhs, c2) / det;\r\n    pcoords[1] = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.o)(c1, rhs) / det;\r\n\r\n    // Okay, now find closest point to element\r\n    weights[0] = 1 - (pcoords[0] + pcoords[1]);\r\n    weights[1] = pcoords[0];\r\n    weights[2] = pcoords[1];\r\n    if (weights[0] >= 0.0 && weights[0] <= 1.0 && weights[1] >= 0.0 && weights[1] <= 1.0 && weights[2] >= 0.0 && weights[2] <= 1.0) {\r\n      // projection distance\r\n      if (closestPoint) {\r\n        outObj.dist2 = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.e)(cp, x);\r\n        closestPoint[0] = cp[0];\r\n        closestPoint[1] = cp[1];\r\n        closestPoint[2] = cp[2];\r\n      }\r\n      outObj.evaluation = 1;\r\n    } else {\r\n      let t;\r\n      if (closestPoint) {\r\n        if (weights[1] < 0.0 && weights[2] < 0.0) {\r\n          dist2Point = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.e)(x, pt3);\r\n          dist2Line1 = _Line_js__WEBPACK_IMPORTED_MODULE_3__["default"].distanceToLine(x, pt1, pt3, t, closestPoint1);\r\n          dist2Line2 = _Line_js__WEBPACK_IMPORTED_MODULE_3__["default"].distanceToLine(x, pt3, pt2, t, closestPoint2);\r\n          if (dist2Point < dist2Line1) {\r\n            outObj.dist2 = dist2Point;\r\n            closest = pt3;\r\n          } else {\r\n            outObj.dist2 = dist2Line1;\r\n            closest = closestPoint1;\r\n          }\r\n          if (dist2Line2 < outObj.dist2) {\r\n            outObj.dist2 = dist2Line2;\r\n            closest = closestPoint2;\r\n          }\r\n          for (i = 0; i < 3; i++) {\r\n            closestPoint[i] = closest[i];\r\n          }\r\n        } else if (weights[2] < 0.0 && weights[0] < 0.0) {\r\n          dist2Point = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.e)(x, pt1);\r\n          dist2Line1 = _Line_js__WEBPACK_IMPORTED_MODULE_3__["default"].distanceToLine(x, pt1, pt3, t, closestPoint1);\r\n          dist2Line2 = _Line_js__WEBPACK_IMPORTED_MODULE_3__["default"].distanceToLine(x, pt1, pt2, t, closestPoint2);\r\n          if (dist2Point < dist2Line1) {\r\n            outObj.dist2 = dist2Point;\r\n            closest = pt1;\r\n          } else {\r\n            outObj.dist2 = dist2Line1;\r\n            closest = closestPoint1;\r\n          }\r\n          if (dist2Line2 < outObj.dist2) {\r\n            outObj.dist2 = dist2Line2;\r\n            closest = closestPoint2;\r\n          }\r\n          for (i = 0; i < 3; i++) {\r\n            closestPoint[i] = closest[i];\r\n          }\r\n        } else if (weights[1] < 0.0 && weights[0] < 0.0) {\r\n          dist2Point = (0,_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.e)(x, pt2);\r\n          dist2Line1 = _Line_js__WEBPACK_IMPORTED_MODULE_3__["default"].distanceToLine(x, pt2, pt3, t, closestPoint1);\r\n          dist2Line2 = _Line_js__WEBPACK_IMPORTED_MODULE_3__["default"].distanceToLine(x, pt1, pt2, t, closestPoint2);\r\n          if (dist2Point < dist2Line1) {\r\n            outObj.dist2 = dist2Point;\r\n            closest = pt2;\r\n          } else {\r\n            outObj.dist2 = dist2Line1;\r\n            closest = closestPoint1;\r\n          }\r\n          if (dist2Line2 < outObj.dist2) {\r\n            outObj.dist2 = dist2Line2;\r\n            closest = closestPoint2;\r\n          }\r\n          for (i = 0; i < 3; i++) {\r\n            closestPoint[i] = closest[i];\r\n          }\r\n        } else if (weights[0] < 0.0) {\r\n          const lineDistance = _Line_js__WEBPACK_IMPORTED_MODULE_3__["default"].distanceToLine(x, pt1, pt2, closestPoint);\r\n          outObj.dist2 = lineDistance.distance;\r\n        } else if (weights[1] < 0.0) {\r\n          const lineDistance = _Line_js__WEBPACK_IMPORTED_MODULE_3__["default"].distanceToLine(x, pt2, pt3, closestPoint);\r\n          outObj.dist2 = lineDistance.distance;\r\n        } else if (weights[2] < 0.0) {\r\n          const lineDistance = _Line_js__WEBPACK_IMPORTED_MODULE_3__["default"].distanceToLine(x, pt1, pt3, closestPoint);\r\n          outObj.dist2 = lineDistance.distance;\r\n        }\r\n      }\r\n      outObj.evaluation = 0;\r\n    }\r\n    return outObj;\r\n  };\r\n  publicAPI.evaluateLocation = (pcoords, x, weights) => {\r\n    const p0 = [];\r\n    const p1 = [];\r\n    const p2 = [];\r\n    model.points.getPoint(0, p0);\r\n    model.points.getPoint(1, p1);\r\n    model.points.getPoint(2, p2);\r\n    const u3 = 1.0 - pcoords[0] - pcoords[1];\r\n    for (let i = 0; i < 3; i++) {\r\n      x[i] = p0[i] * u3 + p1[i] * pcoords[0] + p2[i] * pcoords[1];\r\n    }\r\n    weights[0] = u3;\r\n    weights[1] = pcoords[0];\r\n    weights[2] = pcoords[1];\r\n  };\r\n  publicAPI.getParametricDistance = pcoords => {\r\n    let pDist;\r\n    let pDistMax = 0.0;\r\n    const pc = [];\r\n    pc[0] = pcoords[0];\r\n    pc[1] = pcoords[1];\r\n    pc[2] = 1.0 - pcoords[0] - pcoords[1];\r\n    for (let i = 0; i < 3; i++) {\r\n      if (pc[i] < 0.0) {\r\n        pDist = -pc[i];\r\n      } else if (pc[i] > 1.0) {\r\n        pDist = pc[i] - 1.0;\r\n      } else {\r\n        // inside the cell in the parametric direction\r\n        pDist = 0.0;\r\n      }\r\n      if (pDist > pDistMax) {\r\n        pDistMax = pDist;\r\n      }\r\n    }\r\n    return pDistMax;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n  _Cell_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues);\r\n  vtkTriangle(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, \'vtkTriangle\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkTriangle$1 = {\r\n  newInstance,\r\n  extend,\r\n  ...STATIC\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Common/DataModel/Triangle.js?')},"./node_modules/@kitware/vtk.js/IO/Core/BinaryHelper.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BinaryHelper)\n/* harmony export */ });\n/**\r\n * Converts a binary buffer in an ArrayBuffer to a string.\r\n *\r\n * Note this does not take encoding into consideration, so don't\r\n * expect proper Unicode or any other encoding.\r\n */\r\nfunction arrayBufferToString(arrayBuffer) {\r\n  const decoder = new TextDecoder('latin1');\r\n  return decoder.decode(arrayBuffer);\r\n}\r\n\r\n/**\r\n * Extracts binary data out of a file ArrayBuffer given a prefix/suffix.\r\n */\r\nfunction extractBinary(arrayBuffer, prefixRegex) {\r\n  let suffixRegex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\r\n  const str = arrayBufferToString(arrayBuffer);\r\n  const prefixMatch = prefixRegex.exec(str);\r\n  if (!prefixMatch) {\r\n    return {\r\n      text: str\r\n    };\r\n  }\r\n  const dataStartIndex = prefixMatch.index + prefixMatch[0].length;\r\n  const strFirstHalf = str.substring(0, dataStartIndex);\r\n  let retVal = null;\r\n  const suffixMatch = suffixRegex ? suffixRegex.exec(str) : null;\r\n  if (suffixMatch) {\r\n    const strSecondHalf = str.substr(suffixMatch.index);\r\n    retVal = {\r\n      text: strFirstHalf + strSecondHalf,\r\n      binaryBuffer: arrayBuffer.slice(dataStartIndex, suffixMatch.index)\r\n    };\r\n  } else {\r\n    // no suffix, so just take all the data starting from dataStartIndex\r\n    retVal = {\r\n      text: strFirstHalf,\r\n      binaryBuffer: arrayBuffer.slice(dataStartIndex)\r\n    };\r\n  }\r\n  return retVal;\r\n}\r\nvar BinaryHelper = {\r\n  arrayBufferToString,\r\n  extractBinary\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/IO/Core/BinaryHelper.js?")},"./node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DataAccessHelper),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   has: () => (/* binding */ has),\n/* harmony export */   registerType: () => (/* binding */ registerType)\n/* harmony export */ });\nconst TYPE_MAPPING = {};\r\nfunction has(type) {\r\n  return !!TYPE_MAPPING[type];\r\n}\r\nfunction get() {\r\n  let type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http';\r\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  return TYPE_MAPPING[type](options);\r\n}\r\nfunction registerType(type, fn) {\r\n  TYPE_MAPPING[type] = fn;\r\n}\r\nvar DataAccessHelper = {\r\n  get,\r\n  has,\r\n  registerType\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper.js?")},"./node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/LiteHttpDataAccessHelper.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LiteHttpDataAccessHelper)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Common_Core_Endian_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../Common/Core/Endian.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Endian.js\");\n/* harmony import */ var _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../Common/Core/DataArray/Constants.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js\");\n/* harmony import */ var _DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../DataAccessHelper.js */ \"./node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper.js\");\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  vtkErrorMacro,\r\n  vtkDebugMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\nconst REJECT_COMPRESSION = () => {\r\n  vtkErrorMacro('LiteHttpDataAccessHelper does not support compression. Need to register HttpDataAccessHelper instead.');\r\n  return Promise.reject(new Error('LiteHttpDataAccessHelper does not support compression. Need to register HttpDataAccessHelper instead.'));\r\n};\r\n\r\n/* eslint-disable prefer-promise-reject-errors */\r\nlet requestCount = 0;\r\nfunction openAsyncXHR(method, url) {\r\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  const xhr = new XMLHttpRequest();\r\n  xhr.open(method, url, true);\r\n  if (options.headers) {\r\n    Object.entries(options.headers).forEach(_ref => {\r\n      let [key, value] = _ref;\r\n      return xhr.setRequestHeader(key, value);\r\n    });\r\n  }\r\n  if (options.progressCallback) {\r\n    xhr.addEventListener('progress', options.progressCallback);\r\n  }\r\n  return xhr;\r\n}\r\nfunction fetchBinary(url) {\r\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  return new Promise((resolve, reject) => {\r\n    const xhr = openAsyncXHR('GET', url, options);\r\n    xhr.onreadystatechange = e => {\r\n      if (xhr.readyState === 4) {\r\n        if (xhr.status === 200 || xhr.status === 0) {\r\n          resolve(xhr.response);\r\n        } else {\r\n          reject({\r\n            xhr,\r\n            e\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    // Make request\r\n    xhr.responseType = 'arraybuffer';\r\n    xhr.send();\r\n  });\r\n}\r\nfunction fetchArray(instance, baseURL, array) {\r\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\r\n  if (options && options.compression) {\r\n    return REJECT_COMPRESSION();\r\n  }\r\n  if (array.ref && !array.ref.pending) {\r\n    return new Promise((resolve, reject) => {\r\n      const url = [baseURL, array.ref.basepath, array.ref.id].join('/');\r\n      const xhr = openAsyncXHR('GET', url, options);\r\n      xhr.onreadystatechange = e => {\r\n        if (xhr.readyState === 1) {\r\n          array.ref.pending = true;\r\n          if (++requestCount === 1 && instance?.invokeBusy) {\r\n            instance.invokeBusy(true);\r\n          }\r\n        }\r\n        if (xhr.readyState === 4) {\r\n          array.ref.pending = false;\r\n          if (xhr.status === 200 || xhr.status === 0) {\r\n            array.buffer = xhr.response;\r\n            if (array.ref.encode === 'JSON') {\r\n              array.values = JSON.parse(array.buffer);\r\n            } else {\r\n              if (_Common_Core_Endian_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ENDIANNESS !== array.ref.encode && _Common_Core_Endian_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ENDIANNESS) {\r\n                // Need to swap bytes\r\n                vtkDebugMacro(`Swap bytes of ${array.name}`);\r\n                _Common_Core_Endian_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].swapBytes(array.buffer, _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_2__.DataTypeByteSize[array.dataType]);\r\n              }\r\n              array.values = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newTypedArray(array.dataType, array.buffer);\r\n            }\r\n            if (array.values.length !== array.size) {\r\n              vtkErrorMacro(`Error in FetchArray: ${array.name}, does not have the proper array size. Got ${array.values.length}, instead of ${array.size}`);\r\n            }\r\n\r\n            // Done with the ref and work\r\n            delete array.ref;\r\n            if (--requestCount === 0 && instance?.invokeBusy) {\r\n              instance.invokeBusy(false);\r\n            }\r\n            if (instance?.modified) {\r\n              instance.modified();\r\n            }\r\n            resolve(array);\r\n          } else {\r\n            reject({\r\n              xhr,\r\n              e\r\n            });\r\n          }\r\n        }\r\n      };\r\n\r\n      // Make request\r\n      xhr.responseType = array.dataType !== 'string' ? 'arraybuffer' : 'text';\r\n      xhr.send();\r\n    });\r\n  }\r\n  return Promise.resolve(array);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction fetchJSON(instance, url) {\r\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  if (options && options.compression) {\r\n    return REJECT_COMPRESSION();\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    const xhr = openAsyncXHR('GET', url, options);\r\n    xhr.onreadystatechange = e => {\r\n      if (xhr.readyState === 1) {\r\n        if (++requestCount === 1 && instance?.invokeBusy) {\r\n          instance.invokeBusy(true);\r\n        }\r\n      }\r\n      if (xhr.readyState === 4) {\r\n        if (--requestCount === 0 && instance?.invokeBusy) {\r\n          instance.invokeBusy(false);\r\n        }\r\n        if (xhr.status === 200 || xhr.status === 0) {\r\n          resolve(JSON.parse(xhr.responseText));\r\n        } else {\r\n          reject({\r\n            xhr,\r\n            e\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    // Make request\r\n    xhr.responseType = 'text';\r\n    xhr.send();\r\n  });\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction fetchText(instance, url) {\r\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  if (options && options.compression) {\r\n    return REJECT_COMPRESSION();\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    const xhr = openAsyncXHR('GET', url, options);\r\n    xhr.onreadystatechange = e => {\r\n      if (xhr.readyState === 1) {\r\n        if (++requestCount === 1 && instance?.invokeBusy) {\r\n          instance.invokeBusy(true);\r\n        }\r\n      }\r\n      if (xhr.readyState === 4) {\r\n        if (--requestCount === 0 && instance?.invokeBusy) {\r\n          instance.invokeBusy(false);\r\n        }\r\n        if (xhr.status === 200 || xhr.status === 0) {\r\n          resolve(xhr.responseText);\r\n        } else {\r\n          reject({\r\n            xhr,\r\n            e\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    // Make request\r\n    xhr.responseType = 'text';\r\n    xhr.send();\r\n  });\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction fetchImage(instance, url) {\r\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    if (options.crossOrigin) {\r\n      img.crossOrigin = options.crossOrigin;\r\n    }\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n    img.src = url;\r\n  });\r\n}\r\n/* eslint-enable prefer-promise-reject-errors */\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst LiteHttpDataAccessHelper = {\r\n  fetchArray,\r\n  fetchJSON,\r\n  fetchText,\r\n  fetchBinary,\r\n  // Only for HTTP\r\n  fetchImage\r\n};\r\n\r\n// The lite version should never override a full feature one...\r\nif (!(0,_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_3__.has)('http')) {\r\n  (0,_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_3__.registerType)('http', options => LiteHttpDataAccessHelper);\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/LiteHttpDataAccessHelper.js?")},"./node_modules/@kitware/vtk.js/IO/Geometry/STLReader.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkSTLReader$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _Core_BinaryHelper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Core/BinaryHelper.js */ \"./node_modules/@kitware/vtk.js/IO/Core/BinaryHelper.js\");\n/* harmony import */ var _Core_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/DataAccessHelper.js */ \"./node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray.js\");\n/* harmony import */ var _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/MatrixBuilder.js */ \"./node_modules/@kitware/vtk.js/Common/Core/MatrixBuilder.js\");\n/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js\");\n/* harmony import */ var _Core_DataAccessHelper_LiteHttpDataAccessHelper_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Core/DataAccessHelper/LiteHttpDataAccessHelper.js */ \"./node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/LiteHttpDataAccessHelper.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HttpDataAccessHelper'; // HTTP + zip\r\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/HtmlDataAccessHelper'; // html + base64 + zip\r\n// import 'vtk.js/Sources/IO/Core/DataAccessHelper/JSZipDataAccessHelper'; // zip\r\n\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_2__.m;\r\nfunction parseHeader(headerString) {\r\n  const headerSubStr = headerString.split(' ');\r\n  const fieldValues = headerSubStr.filter(e => e.indexOf('=') > -1);\r\n  const header = {};\r\n  for (let i = 0; i < fieldValues.length; ++i) {\r\n    const fieldValueStr = fieldValues[i];\r\n    const fieldValueSubStr = fieldValueStr.split('=');\r\n    if (fieldValueSubStr.length === 2) {\r\n      header[fieldValueSubStr[0]] = fieldValueSubStr[1];\r\n    }\r\n  }\r\n  return header;\r\n}\r\nfunction addValuesToArray(src, dst) {\r\n  for (let i = 0; i < src.length; i++) {\r\n    dst.push(src[i]);\r\n  }\r\n}\r\n\r\n// facet normal ni nj nk\r\n//     outer loop\r\n//         vertex v1x v1y v1z\r\n//         vertex v2x v2y v2z\r\n//         vertex v3x v3y v3z\r\n//     endloop\r\n// endfacet\r\nfunction readTriangle(lines, offset, points, cellArray, cellNormals) {\r\n  const normalLine = lines[offset];\r\n  if (normalLine === undefined) {\r\n    return -1;\r\n  }\r\n  if (normalLine.indexOf('endfacet') !== -1) {\r\n    return offset + 1;\r\n  }\r\n  if (normalLine.indexOf('facet') === -1) {\r\n    return offset + 1; // Move to next line\r\n  }\r\n\r\n  let nbVertex = 0;\r\n  let nbConsumedLines = 2;\r\n  const firstVertexIndex = points.length / 3;\r\n  const normal = normalLine.split(/[ \\t]+/).filter(i => i).slice(-3).map(Number);\r\n  addValuesToArray(normal, cellNormals);\r\n  while (lines[offset + nbConsumedLines].indexOf('vertex') !== -1) {\r\n    const line = lines[offset + nbConsumedLines];\r\n    const coords = line.split(/[ \\t]+/).filter(i => i).slice(-3).map(Number);\r\n    addValuesToArray(coords, points);\r\n    nbVertex++;\r\n    nbConsumedLines++;\r\n  }\r\n  cellArray.push(nbVertex);\r\n  for (let i = 0; i < nbVertex; i++) {\r\n    cellArray.push(firstVertexIndex + i);\r\n  }\r\n  while (lines[offset + nbConsumedLines] && lines[offset + nbConsumedLines].indexOf('endfacet') !== -1) {\r\n    nbConsumedLines++;\r\n  }\r\n  // +1 (endfacet) +1 (next facet)\r\n  return offset + nbConsumedLines + 2;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkSTLReader methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkSTLReader(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkSTLReader');\r\n\r\n  // Create default dataAccessHelper if not available\r\n  if (!model.dataAccessHelper) {\r\n    model.dataAccessHelper = _Core_DataAccessHelper_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get('http');\r\n  }\r\n\r\n  // Internal method to fetch Array\r\n  function fetchData(url) {\r\n    let option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    const compression = option.compression !== undefined ? option.compression : model.compression;\r\n    const progressCallback = option.progressCallback !== undefined ? option.progressCallback : model.progressCallback;\r\n    if (option.binary) {\r\n      return model.dataAccessHelper.fetchBinary(url, {\r\n        compression,\r\n        progressCallback\r\n      });\r\n    }\r\n    return model.dataAccessHelper.fetchText(publicAPI, url, {\r\n      compression,\r\n      progressCallback\r\n    });\r\n  }\r\n\r\n  // Set DataSet url\r\n  publicAPI.setUrl = function (url) {\r\n    let option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\r\n      binary: true\r\n    };\r\n    model.url = url;\r\n\r\n    // Remove the file in the URL\r\n    const path = url.split('/');\r\n    path.pop();\r\n    model.baseURL = path.join('/');\r\n\r\n    // Fetch metadata\r\n    return publicAPI.loadData(option);\r\n  };\r\n\r\n  // Fetch the actual data arrays\r\n  publicAPI.loadData = function () {\r\n    let option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    const promise = fetchData(model.url, option);\r\n    promise.then(publicAPI.parse);\r\n    return promise;\r\n  };\r\n  publicAPI.parse = content => {\r\n    if (typeof content === 'string') {\r\n      publicAPI.parseAsText(content);\r\n    } else {\r\n      publicAPI.parseAsArrayBuffer(content);\r\n    }\r\n  };\r\n  publicAPI.parseAsArrayBuffer = content => {\r\n    if (!content) {\r\n      return;\r\n    }\r\n    if (content !== model.parseData) {\r\n      publicAPI.modified();\r\n    } else {\r\n      return;\r\n    }\r\n    model.parseData = content;\r\n\r\n    // ascii/binary detection\r\n    let isBinary = false;\r\n    // 80=STL header, 4=uint32 of num of triangles (le)\r\n    const dview = new DataView(content, 0, 80 + 4);\r\n    const numTriangles = dview.getUint32(80, true);\r\n    // 50 bytes per triangle\r\n    isBinary = 84 + numTriangles * 50 === content.byteLength;\r\n\r\n    // Check if ascii format\r\n    if (!isBinary) {\r\n      publicAPI.parseAsText(_Core_BinaryHelper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].arrayBufferToString(content));\r\n      return;\r\n    }\r\n\r\n    // Binary parsing\r\n    // Header\r\n    const headerData = content.slice(0, 80);\r\n    const headerStr = _Core_BinaryHelper_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].arrayBufferToString(headerData);\r\n    const header = parseHeader(headerStr);\r\n\r\n    // Data\r\n    const dataView = new DataView(content, 84);\r\n    // global.dataview = dataView;\r\n    const nbFaces = (content.byteLength - 84) / 50;\r\n    const pointValues = new Float32Array(nbFaces * 9);\r\n    const normalValues = new Float32Array(nbFaces * 3);\r\n    const cellValues = new Uint32Array(nbFaces * 4);\r\n    const cellDataValues = new Uint16Array(nbFaces);\r\n    let cellOffset = 0;\r\n    for (let faceIdx = 0; faceIdx < nbFaces; faceIdx++) {\r\n      const offset = faceIdx * 50;\r\n      normalValues[faceIdx * 3 + 0] = dataView.getFloat32(offset + 0, true);\r\n      normalValues[faceIdx * 3 + 1] = dataView.getFloat32(offset + 4, true);\r\n      normalValues[faceIdx * 3 + 2] = dataView.getFloat32(offset + 8, true);\r\n      pointValues[faceIdx * 9 + 0] = dataView.getFloat32(offset + 12, true);\r\n      pointValues[faceIdx * 9 + 1] = dataView.getFloat32(offset + 16, true);\r\n      pointValues[faceIdx * 9 + 2] = dataView.getFloat32(offset + 20, true);\r\n      pointValues[faceIdx * 9 + 3] = dataView.getFloat32(offset + 24, true);\r\n      pointValues[faceIdx * 9 + 4] = dataView.getFloat32(offset + 28, true);\r\n      pointValues[faceIdx * 9 + 5] = dataView.getFloat32(offset + 32, true);\r\n      pointValues[faceIdx * 9 + 6] = dataView.getFloat32(offset + 36, true);\r\n      pointValues[faceIdx * 9 + 7] = dataView.getFloat32(offset + 40, true);\r\n      pointValues[faceIdx * 9 + 8] = dataView.getFloat32(offset + 44, true);\r\n      cellValues[cellOffset++] = 3;\r\n      cellValues[cellOffset++] = faceIdx * 3 + 0;\r\n      cellValues[cellOffset++] = faceIdx * 3 + 1;\r\n      cellValues[cellOffset++] = faceIdx * 3 + 2;\r\n      cellDataValues[faceIdx] = dataView.getUint16(offset + 48, true);\r\n    }\r\n\r\n    // Rotate points\r\n    const orientationField = 'SPACE';\r\n    if (orientationField in header && header[orientationField] !== 'LPS') {\r\n      const XYZ = header[orientationField];\r\n      const mat4 = new Float32Array(16);\r\n      mat4[15] = 1;\r\n      switch (XYZ[0]) {\r\n        case 'L':\r\n          mat4[0] = 1;\r\n          break;\r\n        case 'R':\r\n          mat4[0] = -1;\r\n          break;\r\n        default:\r\n          vtkErrorMacro(`Can not convert STL file from ${XYZ} to LPS space: ` + `permutations not supported. Use itk.js STL reader instead.`);\r\n          return;\r\n      }\r\n      switch (XYZ[1]) {\r\n        case 'P':\r\n          mat4[5] = 1;\r\n          break;\r\n        case 'A':\r\n          mat4[5] = -1;\r\n          break;\r\n        default:\r\n          vtkErrorMacro(`Can not convert STL file from ${XYZ} to LPS space: ` + `permutations not supported. Use itk.js STL reader instead.`);\r\n          return;\r\n      }\r\n      switch (XYZ[2]) {\r\n        case 'S':\r\n          mat4[10] = 1;\r\n          break;\r\n        case 'I':\r\n          mat4[10] = -1;\r\n          break;\r\n        default:\r\n          vtkErrorMacro(`Can not convert STL file from ${XYZ} to LPS space: ` + `permutations not supported. Use itk.js STL reader instead.`);\r\n          return;\r\n      }\r\n      _Common_Core_MatrixBuilder_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].buildFromDegree().setMatrix(mat4).apply(pointValues).apply(normalValues);\r\n    }\r\n    const polydata = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance();\r\n    polydata.getPoints().setData(pointValues, 3);\r\n    polydata.getPolys().setData(cellValues);\r\n    polydata.getCellData().setScalars(_Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance({\r\n      name: 'Attribute',\r\n      values: cellDataValues\r\n    }));\r\n    polydata.getCellData().setNormals(_Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance({\r\n      name: 'Normals',\r\n      values: normalValues,\r\n      numberOfComponents: 3\r\n    }));\r\n\r\n    // Add new output\r\n    model.output[0] = polydata;\r\n  };\r\n  publicAPI.parseAsText = content => {\r\n    if (!content) {\r\n      return;\r\n    }\r\n    if (content !== model.parseData) {\r\n      publicAPI.modified();\r\n    } else {\r\n      return;\r\n    }\r\n    model.parseData = content;\r\n    const lines = content.split('\\n');\r\n    let offset = 1;\r\n    const points = [];\r\n    const cellArray = [];\r\n    const cellNormals = [];\r\n    while (offset !== -1) {\r\n      offset = readTriangle(lines, offset, points, cellArray, cellNormals);\r\n    }\r\n    const polydata = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance();\r\n    polydata.getPoints().setData(Float32Array.from(points), 3);\r\n    polydata.getPolys().setData(Uint32Array.from(cellArray));\r\n    polydata.getCellData().setNormals(_Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance({\r\n      name: 'Normals',\r\n      values: Float32Array.from(cellNormals),\r\n      numberOfComponents: 3\r\n    }));\r\n\r\n    // Add new output\r\n    model.output[0] = polydata;\r\n  };\r\n  publicAPI.requestData = (inData, outData) => {\r\n    publicAPI.parse(model.parseData);\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  // baseURL: null,\r\n  // dataAccessHelper: null,\r\n  // url: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_2__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_2__.m.get(publicAPI, model, ['url', 'baseURL']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_2__.m.setGet(publicAPI, model, ['dataAccessHelper']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_2__.m.algo(publicAPI, model, 0, 1);\r\n\r\n  // vtkSTLReader methods\r\n  vtkSTLReader(publicAPI, model);\r\n\r\n  // To support destructuring\r\n  if (!model.compression) {\r\n    model.compression = null;\r\n  }\r\n  if (!model.progressCallback) {\r\n    model.progressCallback = null;\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_2__.m.newInstance(extend, 'vtkSTLReader');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkSTLReader$1 = {\r\n  extend,\r\n  newInstance\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/IO/Geometry/STLReader.js?")},"./node_modules/@kitware/vtk.js/Interaction/Style/InteractorStyleTrackballCamera.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkInteractorStyleTrackballCamera$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Rendering_Core_InteractorStyle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Rendering/Core/InteractorStyle.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/InteractorStyle.js\");\n/* harmony import */ var _Rendering_Core_InteractorStyle_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Rendering/Core/InteractorStyle/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/InteractorStyle/Constants.js\");\n/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n/* harmony import */ var _Rendering_Core_RenderWindowInteractor_Constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Rendering/Core/RenderWindowInteractor/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor/Constants.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  States\r\n} = _Rendering_Core_InteractorStyle_Constants_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\r\n\r\n/* eslint-disable no-lonely-if */\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkInteractorStyleTrackballCamera methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkInteractorStyleTrackballCamera(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkInteractorStyleTrackballCamera');\r\n\r\n  // Public API methods\r\n  publicAPI.handleMouseMove = callData => {\r\n    const pos = callData.position;\r\n    const renderer = callData.pokedRenderer;\r\n    switch (model.state) {\r\n      case States.IS_ROTATE:\r\n        publicAPI.handleMouseRotate(renderer, pos);\r\n        publicAPI.invokeInteractionEvent({\r\n          type: 'InteractionEvent'\r\n        });\r\n        break;\r\n      case States.IS_PAN:\r\n        publicAPI.handleMousePan(renderer, pos);\r\n        publicAPI.invokeInteractionEvent({\r\n          type: 'InteractionEvent'\r\n        });\r\n        break;\r\n      case States.IS_DOLLY:\r\n        publicAPI.handleMouseDolly(renderer, pos);\r\n        publicAPI.invokeInteractionEvent({\r\n          type: 'InteractionEvent'\r\n        });\r\n        break;\r\n      case States.IS_SPIN:\r\n        publicAPI.handleMouseSpin(renderer, pos);\r\n        publicAPI.invokeInteractionEvent({\r\n          type: 'InteractionEvent'\r\n        });\r\n        break;\r\n    }\r\n    model.previousPosition = pos;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.handleButton3D = ed => {\r\n    if (ed && ed.pressed && ed.device === _Rendering_Core_RenderWindowInteractor_Constants_js__WEBPACK_IMPORTED_MODULE_4__.Device.RightController && (ed.input === _Rendering_Core_RenderWindowInteractor_Constants_js__WEBPACK_IMPORTED_MODULE_4__.Input.Trigger || ed.input === _Rendering_Core_RenderWindowInteractor_Constants_js__WEBPACK_IMPORTED_MODULE_4__.Input.TrackPad)) {\r\n      publicAPI.startCameraPose();\r\n      return;\r\n    }\r\n    if (ed && !ed.pressed && ed.device === _Rendering_Core_RenderWindowInteractor_Constants_js__WEBPACK_IMPORTED_MODULE_4__.Device.RightController && (ed.input === _Rendering_Core_RenderWindowInteractor_Constants_js__WEBPACK_IMPORTED_MODULE_4__.Input.Trigger || ed.input === _Rendering_Core_RenderWindowInteractor_Constants_js__WEBPACK_IMPORTED_MODULE_4__.Input.TrackPad) && model.state === States.IS_CAMERA_POSE) {\r\n      publicAPI.endCameraPose();\r\n      // return;\r\n    }\r\n  };\r\n\r\n  publicAPI.handleMove3D = ed => {\r\n    switch (model.state) {\r\n      case States.IS_CAMERA_POSE:\r\n        publicAPI.updateCameraPose(ed);\r\n        break;\r\n    }\r\n  };\r\n  publicAPI.updateCameraPose = ed => {\r\n    // move the world in the direction of the\r\n    // controller\r\n    const camera = ed.pokedRenderer.getActiveCamera();\r\n    const oldTrans = camera.getPhysicalTranslation();\r\n\r\n    // look at the y axis to determine how fast / what direction to move\r\n    const speed = 0.5; // ed.gamepad.axes[1];\r\n\r\n    // 0.05 meters / frame movement\r\n    const pscale = speed * 0.05 * camera.getPhysicalScale();\r\n\r\n    // convert orientation to world coordinate direction\r\n    const dir = camera.physicalOrientationToWorldDirection([ed.orientation.x, ed.orientation.y, ed.orientation.z, ed.orientation.w]);\r\n    camera.setPhysicalTranslation(oldTrans[0] + dir[0] * pscale, oldTrans[1] + dir[1] * pscale, oldTrans[2] + dir[2] * pscale);\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.handleLeftButtonPress = callData => {\r\n    const pos = callData.position;\r\n    model.previousPosition = pos;\r\n    if (callData.shiftKey) {\r\n      if (callData.controlKey || callData.altKey) {\r\n        publicAPI.startDolly();\r\n      } else {\r\n        publicAPI.startPan();\r\n      }\r\n    } else {\r\n      if (callData.controlKey || callData.altKey) {\r\n        publicAPI.startSpin();\r\n      } else {\r\n        publicAPI.startRotate();\r\n      }\r\n    }\r\n  };\r\n\r\n  //--------------------------------------------------------------------------\r\n  publicAPI.handleLeftButtonRelease = () => {\r\n    switch (model.state) {\r\n      case States.IS_DOLLY:\r\n        publicAPI.endDolly();\r\n        break;\r\n      case States.IS_PAN:\r\n        publicAPI.endPan();\r\n        break;\r\n      case States.IS_SPIN:\r\n        publicAPI.endSpin();\r\n        break;\r\n      case States.IS_ROTATE:\r\n        publicAPI.endRotate();\r\n        break;\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.handleStartMouseWheel = () => {\r\n    publicAPI.startDolly();\r\n  };\r\n\r\n  //--------------------------------------------------------------------------\r\n  publicAPI.handleEndMouseWheel = () => {\r\n    publicAPI.endDolly();\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.handleStartPinch = callData => {\r\n    model.previousScale = callData.scale;\r\n    publicAPI.startDolly();\r\n  };\r\n\r\n  //--------------------------------------------------------------------------\r\n  publicAPI.handleEndPinch = () => {\r\n    publicAPI.endDolly();\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.handleStartRotate = callData => {\r\n    model.previousRotation = callData.rotation;\r\n    publicAPI.startRotate();\r\n  };\r\n\r\n  //--------------------------------------------------------------------------\r\n  publicAPI.handleEndRotate = () => {\r\n    publicAPI.endRotate();\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.handleStartPan = callData => {\r\n    model.previousTranslation = callData.translation;\r\n    publicAPI.startPan();\r\n  };\r\n\r\n  //--------------------------------------------------------------------------\r\n  publicAPI.handleEndPan = () => {\r\n    publicAPI.endPan();\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.handlePinch = callData => {\r\n    publicAPI.dollyByFactor(callData.pokedRenderer, callData.scale / model.previousScale);\r\n    model.previousScale = callData.scale;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.handlePan = callData => {\r\n    const camera = callData.pokedRenderer.getActiveCamera();\r\n\r\n    // Calculate the focal depth since we'll be using it a lot\r\n    let viewFocus = camera.getFocalPoint();\r\n    viewFocus = publicAPI.computeWorldToDisplay(callData.pokedRenderer, viewFocus[0], viewFocus[1], viewFocus[2]);\r\n    const focalDepth = viewFocus[2];\r\n    const trans = callData.translation;\r\n    const lastTrans = model.previousTranslation;\r\n    const newPickPoint = publicAPI.computeDisplayToWorld(callData.pokedRenderer, viewFocus[0] + trans[0] - lastTrans[0], viewFocus[1] + trans[1] - lastTrans[1], focalDepth);\r\n\r\n    // Has to recalc old mouse point since the viewport has moved,\r\n    // so can't move it outside the loop\r\n    const oldPickPoint = publicAPI.computeDisplayToWorld(callData.pokedRenderer, viewFocus[0], viewFocus[1], focalDepth);\r\n\r\n    // Camera motion is reversed\r\n    const motionVector = [];\r\n    motionVector[0] = oldPickPoint[0] - newPickPoint[0];\r\n    motionVector[1] = oldPickPoint[1] - newPickPoint[1];\r\n    motionVector[2] = oldPickPoint[2] - newPickPoint[2];\r\n    viewFocus = camera.getFocalPoint();\r\n    const viewPoint = camera.getPosition();\r\n    camera.setFocalPoint(motionVector[0] + viewFocus[0], motionVector[1] + viewFocus[1], motionVector[2] + viewFocus[2]);\r\n    camera.setPosition(motionVector[0] + viewPoint[0], motionVector[1] + viewPoint[1], motionVector[2] + viewPoint[2]);\r\n    if (model._interactor.getLightFollowCamera()) {\r\n      callData.pokedRenderer.updateLightsGeometryToFollowCamera();\r\n    }\r\n    camera.orthogonalizeViewUp();\r\n    model.previousTranslation = callData.translation;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.handleRotate = callData => {\r\n    const camera = callData.pokedRenderer.getActiveCamera();\r\n    camera.roll(callData.rotation - model.previousRotation);\r\n    camera.orthogonalizeViewUp();\r\n    model.previousRotation = callData.rotation;\r\n  };\r\n\r\n  //--------------------------------------------------------------------------\r\n  publicAPI.handleMouseRotate = (renderer, position) => {\r\n    if (!model.previousPosition) {\r\n      return;\r\n    }\r\n    const rwi = model._interactor;\r\n    const dx = position.x - model.previousPosition.x;\r\n    const dy = position.y - model.previousPosition.y;\r\n    const size = rwi.getView().getViewportSize(renderer);\r\n    let deltaElevation = -0.1;\r\n    let deltaAzimuth = -0.1;\r\n    if (size[0] && size[1]) {\r\n      deltaElevation = -20.0 / size[1];\r\n      deltaAzimuth = -20.0 / size[0];\r\n    }\r\n    const rxf = dx * deltaAzimuth * model.motionFactor;\r\n    const ryf = dy * deltaElevation * model.motionFactor;\r\n    const camera = renderer.getActiveCamera();\r\n    if (!Number.isNaN(rxf) && !Number.isNaN(ryf)) {\r\n      camera.azimuth(rxf);\r\n      camera.elevation(ryf);\r\n      camera.orthogonalizeViewUp();\r\n    }\r\n    if (model.autoAdjustCameraClippingRange) {\r\n      renderer.resetCameraClippingRange();\r\n    }\r\n    if (rwi.getLightFollowCamera()) {\r\n      renderer.updateLightsGeometryToFollowCamera();\r\n    }\r\n  };\r\n\r\n  //--------------------------------------------------------------------------\r\n  publicAPI.handleMouseSpin = (renderer, position) => {\r\n    if (!model.previousPosition) {\r\n      return;\r\n    }\r\n    const rwi = model._interactor;\r\n    const camera = renderer.getActiveCamera();\r\n    const center = rwi.getView().getViewportCenter(renderer);\r\n    const oldAngle = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.A)(Math.atan2(model.previousPosition.y - center[1], model.previousPosition.x - center[0]));\r\n    const newAngle = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.A)(Math.atan2(position.y - center[1], position.x - center[0])) - oldAngle;\r\n    if (!Number.isNaN(newAngle)) {\r\n      camera.roll(newAngle);\r\n      camera.orthogonalizeViewUp();\r\n    }\r\n  };\r\n\r\n  //--------------------------------------------------------------------------\r\n  publicAPI.handleMousePan = (renderer, position) => {\r\n    if (!model.previousPosition) {\r\n      return;\r\n    }\r\n    const camera = renderer.getActiveCamera();\r\n\r\n    // Calculate the focal depth since we'll be using it a lot\r\n    let viewFocus = camera.getFocalPoint();\r\n    viewFocus = publicAPI.computeWorldToDisplay(renderer, viewFocus[0], viewFocus[1], viewFocus[2]);\r\n    const focalDepth = viewFocus[2];\r\n    const newPickPoint = publicAPI.computeDisplayToWorld(renderer, position.x, position.y, focalDepth);\r\n\r\n    // Has to recalc old mouse point since the viewport has moved,\r\n    // so can't move it outside the loop\r\n    const oldPickPoint = publicAPI.computeDisplayToWorld(renderer, model.previousPosition.x, model.previousPosition.y, focalDepth);\r\n\r\n    // Camera motion is reversed\r\n    const motionVector = [];\r\n    motionVector[0] = oldPickPoint[0] - newPickPoint[0];\r\n    motionVector[1] = oldPickPoint[1] - newPickPoint[1];\r\n    motionVector[2] = oldPickPoint[2] - newPickPoint[2];\r\n    viewFocus = camera.getFocalPoint();\r\n    const viewPoint = camera.getPosition();\r\n    camera.setFocalPoint(motionVector[0] + viewFocus[0], motionVector[1] + viewFocus[1], motionVector[2] + viewFocus[2]);\r\n    camera.setPosition(motionVector[0] + viewPoint[0], motionVector[1] + viewPoint[1], motionVector[2] + viewPoint[2]);\r\n    if (model._interactor.getLightFollowCamera()) {\r\n      renderer.updateLightsGeometryToFollowCamera();\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.handleMouseDolly = (renderer, position) => {\r\n    if (!model.previousPosition) {\r\n      return;\r\n    }\r\n    const dy = position.y - model.previousPosition.y;\r\n    const rwi = model._interactor;\r\n    const center = rwi.getView().getViewportCenter(renderer);\r\n    const dyf = model.motionFactor * dy / center[1];\r\n    publicAPI.dollyByFactor(renderer, 1.1 ** dyf);\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.handleMouseWheel = callData => {\r\n    const dyf = 1 - callData.spinY / model.zoomFactor;\r\n    publicAPI.dollyByFactor(callData.pokedRenderer, dyf);\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.dollyByFactor = (renderer, factor) => {\r\n    if (Number.isNaN(factor)) {\r\n      return;\r\n    }\r\n    const camera = renderer.getActiveCamera();\r\n    if (camera.getParallelProjection()) {\r\n      camera.setParallelScale(camera.getParallelScale() / factor);\r\n    } else {\r\n      camera.dolly(factor);\r\n      if (model.autoAdjustCameraClippingRange) {\r\n        renderer.resetCameraClippingRange();\r\n      }\r\n    }\r\n    if (model._interactor.getLightFollowCamera()) {\r\n      renderer.updateLightsGeometryToFollowCamera();\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  motionFactor: 10.0,\r\n  zoomFactor: 10.0\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _Rendering_Core_InteractorStyle_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].extend(publicAPI, model, initialValues);\r\n\r\n  // Create get-set macros\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['motionFactor', 'zoomFactor']);\r\n\r\n  // For more macro methods, see \"Sources/macros.js\"\r\n\r\n  // Object specific methods\r\n  vtkInteractorStyleTrackballCamera(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkInteractorStyleTrackballCamera');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkInteractorStyleTrackballCamera$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Interaction/Style/InteractorStyleTrackballCamera.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkAbstractMapper$1),\n/* harmony export */   extend: () => (/* binding */ extend)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkAbstractMapper methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkAbstractMapper(publicAPI, model) {\r\n  model.classHierarchy.push('vtkAbstractMapper');\r\n  publicAPI.update = () => {\r\n    publicAPI.getInputData();\r\n  };\r\n  publicAPI.addClippingPlane = plane => {\r\n    if (!plane.isA('vtkPlane')) {\r\n      return false;\r\n    }\r\n    if (!model.clippingPlanes.includes(plane)) {\r\n      model.clippingPlanes.push(plane);\r\n      publicAPI.modified();\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  publicAPI.getNumberOfClippingPlanes = () => model.clippingPlanes.length;\r\n  publicAPI.removeAllClippingPlanes = () => {\r\n    if (model.clippingPlanes.length === 0) {\r\n      return false;\r\n    }\r\n    model.clippingPlanes.length = 0;\r\n    publicAPI.modified();\r\n    return true;\r\n  };\r\n  publicAPI.removeClippingPlane = clippingPlane => {\r\n    const i = model.clippingPlanes.indexOf(clippingPlane);\r\n    if (i === -1) {\r\n      return false;\r\n    }\r\n    model.clippingPlanes.splice(i, 1);\r\n    publicAPI.modified();\r\n    return true;\r\n  };\r\n  publicAPI.getClippingPlanes = () => model.clippingPlanes;\r\n  publicAPI.setClippingPlanes = planes => {\r\n    if (!planes) {\r\n      return;\r\n    }\r\n    if (!Array.isArray(planes)) {\r\n      publicAPI.addClippingPlane(planes);\r\n    } else {\r\n      const nbPlanes = planes.length;\r\n      for (let i = 0; i < nbPlanes && i < 6; i++) {\r\n        publicAPI.addClippingPlane(planes[i]);\r\n      }\r\n    }\r\n  };\r\n  publicAPI.getClippingPlaneInDataCoords = (propMatrix, i, hnormal) => {\r\n    const clipPlanes = model.clippingPlanes;\r\n    const mat = propMatrix;\r\n    if (clipPlanes) {\r\n      const n = clipPlanes.length;\r\n      if (i >= 0 && i < n) {\r\n        // Get the plane\r\n        const plane = clipPlanes[i];\r\n        const normal = plane.getNormal();\r\n        const origin = plane.getOrigin();\r\n\r\n        // Compute the plane equation\r\n        const v1 = normal[0];\r\n        const v2 = normal[1];\r\n        const v3 = normal[2];\r\n        const v4 = -(v1 * origin[0] + v2 * origin[1] + v3 * origin[2]);\r\n\r\n        // Transform normal from world to data coords\r\n        hnormal[0] = v1 * mat[0] + v2 * mat[4] + v3 * mat[8] + v4 * mat[12];\r\n        hnormal[1] = v1 * mat[1] + v2 * mat[5] + v3 * mat[9] + v4 * mat[13];\r\n        hnormal[2] = v1 * mat[2] + v2 * mat[6] + v3 * mat[10] + v4 * mat[14];\r\n        hnormal[3] = v1 * mat[3] + v2 * mat[7] + v3 * mat[11] + v4 * mat[15];\r\n        return;\r\n      }\r\n    }\r\n    _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.vtkErrorMacro(`Clipping plane index ${i} is out of range.`);\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  clippingPlanes: []\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Object methods\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.algo(publicAPI, model, 1, 0);\r\n  if (!model.clippingPlanes) {\r\n    model.clippingPlanes = [];\r\n  }\r\n  vtkAbstractMapper(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\nvar vtkAbstractMapper$1 = {\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper3D.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ vtkAbstractMapper3D$1),\n/* harmony export */   extend: () => (/* binding */ extend)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _AbstractMapper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AbstractMapper.js */ "./node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper.js");\n/* harmony import */ var _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/DataModel/BoundingBox.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js");\n/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "./node_modules/@kitware/vtk.js/Common/Core/Math/index.js");\n\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkAbstractMapper methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkAbstractMapper3D(publicAPI, model) {\r\n  publicAPI.getBounds = () => {\r\n    _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.vtkErrorMacro(`vtkAbstractMapper3D.getBounds - NOT IMPLEMENTED`);\r\n    return (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.F)();\r\n  };\r\n  publicAPI.getCenter = () => {\r\n    const bounds = publicAPI.getBounds();\r\n    model.center = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValid(bounds) ? _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].getCenter(bounds) : null;\r\n    return model.center?.slice();\r\n  };\r\n  publicAPI.getLength = () => {\r\n    const bounds = publicAPI.getBounds();\r\n    return _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].getDiagonalLength(bounds);\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst defaultValues = initialValues => ({\r\n  bounds: [..._Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_2__["default"].INIT_BOUNDS],\r\n  center: [0, 0, 0],\r\n  viewSpecificProperties: {},\r\n  ...initialValues\r\n});\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, defaultValues(initialValues));\r\n  // Inheritance\r\n  _AbstractMapper_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, [\'viewSpecificProperties\']);\r\n  vtkAbstractMapper3D(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkAbstractMapper3D$1 = {\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper3D.js?')},"./node_modules/@kitware/vtk.js/Rendering/Core/Actor.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkActor$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/DataModel/BoundingBox.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js\");\n/* harmony import */ var _Prop3D_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Prop3D.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Prop3D.js\");\n/* harmony import */ var _Property_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Property.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Property.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  vtkDebugMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkActor methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkActor(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkActor');\r\n\r\n  // Capture 'parentClass' api for internal use\r\n  const superClass = {\r\n    ...publicAPI\r\n  };\r\n  publicAPI.getActors = () => [publicAPI];\r\n  publicAPI.getIsOpaque = () => {\r\n    if (model.forceOpaque) {\r\n      return true;\r\n    }\r\n    if (model.forceTranslucent) {\r\n      return false;\r\n    }\r\n    // make sure we have a property\r\n    if (!model.property) {\r\n      // force creation of a property\r\n      publicAPI.getProperty();\r\n    }\r\n    let isOpaque = model.property.getOpacity() >= 1.0;\r\n\r\n    // are we using an opaque texture, if any?\r\n    isOpaque = isOpaque && (!model.texture || !model.texture.isTranslucent());\r\n\r\n    // are we using an opaque scalar array, if any?\r\n    isOpaque = isOpaque && (!model.mapper || model.mapper.getIsOpaque());\r\n    return isOpaque;\r\n  };\r\n  publicAPI.hasTranslucentPolygonalGeometry = () => {\r\n    if (model.mapper === null) {\r\n      return false;\r\n    }\r\n    // make sure we have a property\r\n    if (model.property === null) {\r\n      // force creation of a property\r\n      publicAPI.setProperty(publicAPI.makeProperty());\r\n    }\r\n\r\n    // is this actor opaque ?\r\n    return !publicAPI.getIsOpaque();\r\n  };\r\n  publicAPI.makeProperty = _Property_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance;\r\n  publicAPI.getProperty = () => {\r\n    if (model.property === null) {\r\n      model.property = publicAPI.makeProperty();\r\n    }\r\n    return model.property;\r\n  };\r\n  publicAPI.getBounds = () => {\r\n    if (model.mapper === null) {\r\n      return model.bounds;\r\n    }\r\n\r\n    // Check for the special case when the mapper's bounds are unknown\r\n    const bds = model.mapper.getBounds();\r\n    if (!bds || bds.length !== 6) {\r\n      return bds;\r\n    }\r\n\r\n    // Check for the special case when the actor is empty.\r\n    if (bds[0] > bds[1]) {\r\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\r\n      model.bounds = [1, -1, 1, -1, 1, -1];\r\n      model.boundsMTime.modified();\r\n      return bds;\r\n    }\r\n\r\n    // Check if we have cached values for these bounds - we cache the\r\n    // values returned by model.mapper.getBounds() and we store the time\r\n    // of caching. If the values returned this time are different, or\r\n    // the modified time of this class is newer than the cached time,\r\n    // then we need to rebuild.\r\n    if (!model.mapperBounds || bds[0] !== model.mapperBounds[0] || bds[1] !== model.mapperBounds[1] || bds[2] !== model.mapperBounds[2] || bds[3] !== model.mapperBounds[3] || bds[4] !== model.mapperBounds[4] || bds[5] !== model.mapperBounds[5] || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\r\n      vtkDebugMacro('Recomputing bounds...');\r\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\r\n      const bbox = [];\r\n      _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getCorners(bds, bbox);\r\n      publicAPI.computeMatrix();\r\n      const tmp4 = new Float64Array(16);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_4__.transpose(tmp4, model.matrix);\r\n      bbox.forEach(pt => gl_matrix__WEBPACK_IMPORTED_MODULE_5__.transformMat4(pt, pt, tmp4));\r\n\r\n      /* eslint-disable no-multi-assign */\r\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\r\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\r\n      /* eslint-enable no-multi-assign */\r\n\r\n      model.bounds = model.bounds.map((d, i) => i % 2 === 0 ? bbox.reduce((a, b) => a > b[i / 2] ? b[i / 2] : a, d) : bbox.reduce((a, b) => a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a, d));\r\n      model.boundsMTime.modified();\r\n    }\r\n    return model.bounds;\r\n  };\r\n  publicAPI.getMTime = () => {\r\n    let mt = superClass.getMTime();\r\n    if (model.property !== null) {\r\n      const time = model.property.getMTime();\r\n      mt = time > mt ? time : mt;\r\n    }\r\n    if (model.backfaceProperty !== null) {\r\n      const time = model.backfaceProperty.getMTime();\r\n      mt = time > mt ? time : mt;\r\n    }\r\n    return mt;\r\n  };\r\n  publicAPI.getRedrawMTime = () => {\r\n    let mt = model.mtime;\r\n    if (model.mapper !== null) {\r\n      let time = model.mapper.getMTime();\r\n      mt = time > mt ? time : mt;\r\n      if (model.mapper.getInput() !== null) {\r\n        // FIXME !!! getInputAlgorithm / getInput\r\n        model.mapper.getInputAlgorithm().update();\r\n        time = model.mapper.getInput().getMTime();\r\n        mt = time > mt ? time : mt;\r\n      }\r\n    }\r\n    return mt;\r\n  };\r\n  publicAPI.getSupportsSelection = () => model.mapper ? model.mapper.getSupportsSelection() : false;\r\n  publicAPI.processSelectorPixelBuffers = (selector, pixelOffsets) => {\r\n    if (model.mapper && model.mapper.processSelectorPixelBuffers) {\r\n      model.mapper.processSelectorPixelBuffers(selector, pixelOffsets);\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  mapper: null,\r\n  property: null,\r\n  backfaceProperty: null,\r\n  forceOpaque: false,\r\n  forceTranslucent: false,\r\n  bounds: [1, -1, 1, -1, 1, -1]\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _Prop3D_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(publicAPI, model, initialValues);\r\n\r\n  // vtkTimeStamp\r\n  model.boundsMTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.boundsMTime);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.set(publicAPI, model, ['property']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['backfaceProperty', 'forceOpaque', 'forceTranslucent', 'mapper']);\r\n\r\n  // Object methods\r\n  vtkActor(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkActor');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkActor$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Actor.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/Camera.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_VALUES: () => (/* binding */ DEFAULT_VALUES),\n/* harmony export */   \"default\": () => (/* binding */ vtkCamera$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec4.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/quat.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n\r\n\r\n\r\n\r\nconst {\r\n  vtkDebugMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\n\r\n/* eslint-disable new-cap */\r\n\r\n/*\r\n * Convenience function to access elements of a gl-matrix.  If it turns\r\n * out I have rows and columns swapped everywhere, then I'll just change\r\n * the order of 'row' and 'col' parameters in this function\r\n */\r\n// function getMatrixElement(matrix, row, col) {\r\n//   const idx = (row * 4) + col;\r\n//   return matrix[idx];\r\n// }\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkCamera methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkCamera(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkCamera');\r\n\r\n  // Set up private variables and methods\r\n  const origin = new Float64Array(3);\r\n  const dopbasis = new Float64Array([0.0, 0.0, -1.0]);\r\n  const upbasis = new Float64Array([0.0, 1.0, 0.0]);\r\n  const tmpMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.identity(new Float64Array(16));\r\n  const tmpMatrix2 = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.identity(new Float64Array(16));\r\n  const tmpvec1 = new Float64Array(3);\r\n  const tmpvec2 = new Float64Array(3);\r\n  const tmpvec3 = new Float64Array(3);\r\n  const rotateMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.identity(new Float64Array(16));\r\n  const trans = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.identity(new Float64Array(16));\r\n  const newPosition = new Float64Array(3);\r\n  const newFocalPoint = new Float64Array(3);\r\n\r\n  // Internal Functions that don't need to be public\r\n  function computeViewPlaneNormal() {\r\n    // VPN is -DOP\r\n    model.viewPlaneNormal[0] = -model.directionOfProjection[0];\r\n    model.viewPlaneNormal[1] = -model.directionOfProjection[1];\r\n    model.viewPlaneNormal[2] = -model.directionOfProjection[2];\r\n  }\r\n  publicAPI.orthogonalizeViewUp = () => {\r\n    const vt = publicAPI.getViewMatrix();\r\n    model.viewUp[0] = vt[4];\r\n    model.viewUp[1] = vt[5];\r\n    model.viewUp[2] = vt[6];\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.setPosition = (x, y, z) => {\r\n    if (x === model.position[0] && y === model.position[1] && z === model.position[2]) {\r\n      return;\r\n    }\r\n    model.position[0] = x;\r\n    model.position[1] = y;\r\n    model.position[2] = z;\r\n\r\n    // recompute the focal distance\r\n    publicAPI.computeDistance();\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.setFocalPoint = (x, y, z) => {\r\n    if (x === model.focalPoint[0] && y === model.focalPoint[1] && z === model.focalPoint[2]) {\r\n      return;\r\n    }\r\n    model.focalPoint[0] = x;\r\n    model.focalPoint[1] = y;\r\n    model.focalPoint[2] = z;\r\n\r\n    // recompute the focal distance\r\n    publicAPI.computeDistance();\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.setDistance = d => {\r\n    if (model.distance === d) {\r\n      return;\r\n    }\r\n    model.distance = d;\r\n    if (model.distance < 1e-20) {\r\n      model.distance = 1e-20;\r\n      vtkDebugMacro('Distance is set to minimum.');\r\n    }\r\n\r\n    // we want to keep the camera pointing in the same direction\r\n    const vec = model.directionOfProjection;\r\n\r\n    // recalculate FocalPoint\r\n    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\r\n    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\r\n    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\r\n    publicAPI.modified();\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  // This method must be called when the focal point or camera position changes\r\n  publicAPI.computeDistance = () => {\r\n    const dx = model.focalPoint[0] - model.position[0];\r\n    const dy = model.focalPoint[1] - model.position[1];\r\n    const dz = model.focalPoint[2] - model.position[2];\r\n    model.distance = Math.sqrt(dx * dx + dy * dy + dz * dz);\r\n    if (model.distance < 1e-20) {\r\n      model.distance = 1e-20;\r\n      vtkDebugMacro('Distance is set to minimum.');\r\n      const vec = model.directionOfProjection;\r\n\r\n      // recalculate FocalPoint\r\n      model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\r\n      model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\r\n      model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\r\n    }\r\n    model.directionOfProjection[0] = dx / model.distance;\r\n    model.directionOfProjection[1] = dy / model.distance;\r\n    model.directionOfProjection[2] = dz / model.distance;\r\n    computeViewPlaneNormal();\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Move the position of the camera along the view plane normal. Moving\r\n  // towards the focal point (e.g., > 1) is a dolly-in, moving away\r\n  // from the focal point (e.g., < 1) is a dolly-out.\r\n  publicAPI.dolly = amount => {\r\n    if (amount <= 0.0) {\r\n      return;\r\n    }\r\n\r\n    // dolly moves the camera towards the focus\r\n    const d = model.distance / amount;\r\n    publicAPI.setPosition(model.focalPoint[0] - d * model.directionOfProjection[0], model.focalPoint[1] - d * model.directionOfProjection[1], model.focalPoint[2] - d * model.directionOfProjection[2]);\r\n  };\r\n  publicAPI.roll = angle => {\r\n    const eye = model.position;\r\n    const at = model.focalPoint;\r\n    const up = model.viewUp;\r\n    const viewUpVec4 = new Float64Array([up[0], up[1], up[2], 0.0]);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.identity(rotateMatrix);\r\n    const viewDir = new Float64Array([at[0] - eye[0], at[1] - eye[1], at[2] - eye[2]]);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.rotate(rotateMatrix, rotateMatrix, (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.r)(angle), viewDir);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_3__.transformMat4(viewUpVec4, viewUpVec4, rotateMatrix);\r\n    model.viewUp[0] = viewUpVec4[0];\r\n    model.viewUp[1] = viewUpVec4[1];\r\n    model.viewUp[2] = viewUpVec4[2];\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.azimuth = angle => {\r\n    const fp = model.focalPoint;\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.identity(trans);\r\n\r\n    // translate the focal point to the origin,\r\n    // rotate about view up,\r\n    // translate back again\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.translate(trans, trans, fp);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.rotate(trans, trans, (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.r)(angle), model.viewUp);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.translate(trans, trans, [-fp[0], -fp[1], -fp[2]]);\r\n\r\n    // apply the transform to the position\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.transformMat4(newPosition, model.position, trans);\r\n    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);\r\n  };\r\n  publicAPI.yaw = angle => {\r\n    const position = model.position;\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.identity(trans);\r\n\r\n    // translate the camera to the origin,\r\n    // rotate about axis,\r\n    // translate back again\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.translate(trans, trans, position);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.rotate(trans, trans, (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.r)(angle), model.viewUp);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.translate(trans, trans, [-position[0], -position[1], -position[2]]);\r\n\r\n    // apply the transform to the position\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.transformMat4(newFocalPoint, model.focalPoint, trans);\r\n    publicAPI.setFocalPoint(newFocalPoint[0], newFocalPoint[1], newFocalPoint[2]);\r\n  };\r\n  publicAPI.elevation = angle => {\r\n    const fp = model.focalPoint;\r\n\r\n    // get the eye / camera position from the viewMatrix\r\n    const vt = publicAPI.getViewMatrix();\r\n    const axis = [-vt[0], -vt[1], -vt[2]];\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.identity(trans);\r\n\r\n    // translate the focal point to the origin,\r\n    // rotate about view up,\r\n    // translate back again\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.translate(trans, trans, fp);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.rotate(trans, trans, (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.r)(angle), axis);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.translate(trans, trans, [-fp[0], -fp[1], -fp[2]]);\r\n\r\n    // apply the transform to the position\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.transformMat4(newPosition, model.position, trans);\r\n    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);\r\n  };\r\n  publicAPI.pitch = angle => {\r\n    const position = model.position;\r\n    const vt = publicAPI.getViewMatrix();\r\n    const axis = [vt[0], vt[1], vt[2]];\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.identity(trans);\r\n\r\n    // translate the camera to the origin,\r\n    // rotate about axis,\r\n    // translate back again\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.translate(trans, trans, position);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.rotate(trans, trans, (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.r)(angle), axis);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.translate(trans, trans, [-position[0], -position[1], -position[2]]);\r\n\r\n    // apply the transform to the focal point\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.transformMat4(newFocalPoint, model.focalPoint, trans);\r\n    publicAPI.setFocalPoint(...newFocalPoint);\r\n  };\r\n  publicAPI.zoom = factor => {\r\n    if (factor <= 0) {\r\n      return;\r\n    }\r\n    if (model.parallelProjection) {\r\n      model.parallelScale /= factor;\r\n    } else {\r\n      model.viewAngle /= factor;\r\n    }\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.translate = (x, y, z) => {\r\n    const offset = [x, y, z];\r\n    (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.k)(model.position, offset, model.position);\r\n    (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.k)(model.focalPoint, offset, model.focalPoint);\r\n    publicAPI.computeDistance();\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.applyTransform = transformMat4 => {\r\n    const vuOld = [...model.viewUp, 1.0];\r\n    const posNew = [];\r\n    const fpNew = [];\r\n    const vuNew = [];\r\n    vuOld[0] += model.position[0];\r\n    vuOld[1] += model.position[1];\r\n    vuOld[2] += model.position[2];\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_3__.transformMat4(posNew, [...model.position, 1.0], transformMat4);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_3__.transformMat4(fpNew, [...model.focalPoint, 1.0], transformMat4);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_3__.transformMat4(vuNew, vuOld, transformMat4);\r\n    vuNew[0] -= posNew[0];\r\n    vuNew[1] -= posNew[1];\r\n    vuNew[2] -= posNew[2];\r\n    publicAPI.setPosition(...posNew.slice(0, 3));\r\n    publicAPI.setFocalPoint(...fpNew.slice(0, 3));\r\n    publicAPI.setViewUp(...vuNew.slice(0, 3));\r\n  };\r\n  publicAPI.getThickness = () => model.clippingRange[1] - model.clippingRange[0];\r\n  publicAPI.setThickness = thickness => {\r\n    let t = thickness;\r\n    if (t < 1e-20) {\r\n      t = 1e-20;\r\n      vtkDebugMacro('Thickness is set to minimum.');\r\n    }\r\n    publicAPI.setClippingRange(model.clippingRange[0], model.clippingRange[0] + t);\r\n  };\r\n  publicAPI.setThicknessFromFocalPoint = thickness => {\r\n    let t = thickness;\r\n    if (t < 1e-20) {\r\n      t = 1e-20;\r\n      vtkDebugMacro('Thickness is set to minimum.');\r\n    }\r\n    publicAPI.setClippingRange(model.distance - t / 2, model.distance + t / 2);\r\n  };\r\n\r\n  // Unimplemented functions\r\n  publicAPI.setRoll = angle => {}; // dependency on GetOrientation() and a model.ViewTransform object, see https://github.com/Kitware/VTK/blob/master/Common/Transforms/vtkTransform.cxx and https://vtk.org/doc/nightly/html/classvtkTransform.html\r\n  publicAPI.getRoll = () => {};\r\n  publicAPI.setObliqueAngles = (alpha, beta) => {};\r\n  publicAPI.getOrientation = () => {};\r\n  publicAPI.getOrientationWXYZ = () => {};\r\n  publicAPI.getFrustumPlanes = aspect => {\r\n    // Return array of 24 params (4 params for each of 6 plane equations)\r\n  };\r\n  publicAPI.getCameraLightTransformMatrix = matrix => {\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.copy(matrix, model.cameraLightTransform);\r\n    return matrix;\r\n  };\r\n  publicAPI.computeCameraLightTransform = () => {\r\n    // not sure if this is the correct transformation, based on the same funciton in VTK\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.copy(tmpMatrix, publicAPI.getViewMatrix());\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.invert(tmpMatrix, tmpMatrix);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.fromScaling(tmpMatrix2, [model.distance, model.distance, model.distance]);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.multiply(tmpMatrix, tmpMatrix, tmpMatrix2);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.identity(model.cameraLightTransform);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.translate(model.cameraLightTransform, tmpMatrix, [0.0, 0.0, -1.0]);\r\n  };\r\n  publicAPI.deepCopy = sourceCamera => {};\r\n  publicAPI.physicalOrientationToWorldDirection = ori => {\r\n    // push the x axis through the orientation quat\r\n    const oriq = gl_matrix__WEBPACK_IMPORTED_MODULE_5__.fromValues(ori[0], ori[1], ori[2], ori[3]);\r\n    const coriq = gl_matrix__WEBPACK_IMPORTED_MODULE_5__.create();\r\n    const qdir = gl_matrix__WEBPACK_IMPORTED_MODULE_5__.fromValues(0.0, 0.0, 1.0, 0.0);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_5__.conjugate(coriq, oriq);\r\n\r\n    // rotate the z axis by the quat\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_5__.multiply(qdir, oriq, qdir);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_5__.multiply(qdir, qdir, coriq);\r\n\r\n    // return the z axis in world coords\r\n    return [qdir[0], qdir[1], qdir[2]];\r\n  };\r\n  publicAPI.getPhysicalToWorldMatrix = result => {\r\n    publicAPI.getWorldToPhysicalMatrix(result);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.invert(result, result);\r\n  };\r\n  publicAPI.getWorldToPhysicalMatrix = result => {\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.identity(result);\r\n\r\n    // now the physical to vtk world rotation tform\r\n    const physVRight = [3];\r\n    (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.j)(model.physicalViewNorth, model.physicalViewUp, physVRight);\r\n    result[0] = physVRight[0];\r\n    result[1] = physVRight[1];\r\n    result[2] = physVRight[2];\r\n    result[4] = model.physicalViewUp[0];\r\n    result[5] = model.physicalViewUp[1];\r\n    result[6] = model.physicalViewUp[2];\r\n    result[8] = -model.physicalViewNorth[0];\r\n    result[9] = -model.physicalViewNorth[1];\r\n    result[10] = -model.physicalViewNorth[2];\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.transpose(result, result);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.set(tmpvec1, 1 / model.physicalScale, 1 / model.physicalScale, 1 / model.physicalScale);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.scale(result, result, tmpvec1);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.translate(result, result, model.physicalTranslation);\r\n  };\r\n  publicAPI.computeViewParametersFromViewMatrix = vmat => {\r\n    // invert to get view to world\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.invert(tmpMatrix, vmat);\r\n\r\n    // note with glmatrix operations happen in\r\n    // the reverse order\r\n    // mat.scale\r\n    // mat.translate\r\n    // will result in the translation then the scale\r\n    // mat.mult(a,b)\r\n    // results in perform the B transformation then A\r\n\r\n    // then extract the params position, orientation\r\n    // push 0,0,0 through to get a translation\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.transformMat4(tmpvec1, origin, tmpMatrix);\r\n    publicAPI.computeDistance();\r\n    const oldDist = model.distance;\r\n    publicAPI.setPosition(tmpvec1[0], tmpvec1[1], tmpvec1[2]);\r\n\r\n    // push basis vectors to get orientation\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.transformMat4(tmpvec2, dopbasis, tmpMatrix);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.subtract(tmpvec2, tmpvec2, tmpvec1);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.normalize(tmpvec2, tmpvec2);\r\n    publicAPI.setDirectionOfProjection(tmpvec2[0], tmpvec2[1], tmpvec2[2]);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.transformMat4(tmpvec3, upbasis, tmpMatrix);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.subtract(tmpvec3, tmpvec3, tmpvec1);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.normalize(tmpvec3, tmpvec3);\r\n    publicAPI.setViewUp(tmpvec3[0], tmpvec3[1], tmpvec3[2]);\r\n    publicAPI.setDistance(oldDist);\r\n  };\r\n\r\n  // the provided matrix should include\r\n  // translation and orientation only\r\n  // mat is physical to view\r\n  publicAPI.computeViewParametersFromPhysicalMatrix = mat => {\r\n    // get the WorldToPhysicalMatrix\r\n    publicAPI.getWorldToPhysicalMatrix(tmpMatrix);\r\n\r\n    // first convert the physical -> view matrix to be\r\n    // world -> view\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.multiply(tmpMatrix, mat, tmpMatrix);\r\n    publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);\r\n  };\r\n  publicAPI.setViewMatrix = mat => {\r\n    model.viewMatrix = mat;\r\n    if (model.viewMatrix) {\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_2__.copy(tmpMatrix, model.viewMatrix);\r\n      publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_2__.transpose(model.viewMatrix, model.viewMatrix);\r\n    }\r\n  };\r\n  publicAPI.getViewMatrix = () => {\r\n    if (model.viewMatrix) {\r\n      return model.viewMatrix;\r\n    }\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.lookAt(tmpMatrix, model.position,\r\n    // eye\r\n    model.focalPoint,\r\n    // at\r\n    model.viewUp // up\r\n    );\r\n\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.transpose(tmpMatrix, tmpMatrix);\r\n    const result = new Float64Array(16);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.copy(result, tmpMatrix);\r\n    return result;\r\n  };\r\n  publicAPI.setProjectionMatrix = mat => {\r\n    model.projectionMatrix = mat;\r\n  };\r\n  publicAPI.getProjectionMatrix = (aspect, nearz, farz) => {\r\n    const result = new Float64Array(16);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.identity(result);\r\n    if (model.projectionMatrix) {\r\n      const scale = 1 / model.physicalScale;\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_4__.set(tmpvec1, scale, scale, scale);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_2__.copy(result, model.projectionMatrix);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_2__.scale(result, result, tmpvec1);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_2__.transpose(result, result);\r\n      return result;\r\n    }\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.identity(tmpMatrix);\r\n\r\n    // FIXME: Not sure what to do about adjust z buffer here\r\n    // adjust Z-buffer range\r\n    // this->ProjectionTransform->AdjustZBuffer( -1, +1, nearz, farz );\r\n    const cWidth = model.clippingRange[1] - model.clippingRange[0];\r\n    const cRange = [model.clippingRange[0] + (nearz + 1) * cWidth / 2.0, model.clippingRange[0] + (farz + 1) * cWidth / 2.0];\r\n    if (model.parallelProjection) {\r\n      // set up a rectangular parallelipiped\r\n      const width = model.parallelScale * aspect;\r\n      const height = model.parallelScale;\r\n      const xmin = (model.windowCenter[0] - 1.0) * width;\r\n      const xmax = (model.windowCenter[0] + 1.0) * width;\r\n      const ymin = (model.windowCenter[1] - 1.0) * height;\r\n      const ymax = (model.windowCenter[1] + 1.0) * height;\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_2__.ortho(tmpMatrix, xmin, xmax, ymin, ymax, cRange[0], cRange[1]);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_2__.transpose(tmpMatrix, tmpMatrix);\r\n    } else if (model.useOffAxisProjection) {\r\n      throw new Error('Off-Axis projection is not supported at this time');\r\n    } else {\r\n      const tmp = Math.tan((0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.r)(model.viewAngle) / 2.0);\r\n      let width;\r\n      let height;\r\n      if (model.useHorizontalViewAngle === true) {\r\n        width = model.clippingRange[0] * tmp;\r\n        height = model.clippingRange[0] * tmp / aspect;\r\n      } else {\r\n        width = model.clippingRange[0] * tmp * aspect;\r\n        height = model.clippingRange[0] * tmp;\r\n      }\r\n      const xmin = (model.windowCenter[0] - 1.0) * width;\r\n      const xmax = (model.windowCenter[0] + 1.0) * width;\r\n      const ymin = (model.windowCenter[1] - 1.0) * height;\r\n      const ymax = (model.windowCenter[1] + 1.0) * height;\r\n      const znear = cRange[0];\r\n      const zfar = cRange[1];\r\n      tmpMatrix[0] = 2.0 * znear / (xmax - xmin);\r\n      tmpMatrix[5] = 2.0 * znear / (ymax - ymin);\r\n      tmpMatrix[2] = (xmin + xmax) / (xmax - xmin);\r\n      tmpMatrix[6] = (ymin + ymax) / (ymax - ymin);\r\n      tmpMatrix[10] = -(znear + zfar) / (zfar - znear);\r\n      tmpMatrix[14] = -1.0;\r\n      tmpMatrix[11] = -2.0 * znear * zfar / (zfar - znear);\r\n      tmpMatrix[15] = 0.0;\r\n    }\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.copy(result, tmpMatrix);\r\n    return result;\r\n  };\r\n  publicAPI.getCompositeProjectionMatrix = (aspect, nearz, farz) => {\r\n    const vMat = publicAPI.getViewMatrix();\r\n    const pMat = publicAPI.getProjectionMatrix(aspect, nearz, farz);\r\n    // mats are transposed so the order is A then B\r\n    // we reuse pMat as it is a copy so we can do what we want with it\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.multiply(pMat, vMat, pMat);\r\n    return pMat;\r\n  };\r\n  publicAPI.setDirectionOfProjection = (x, y, z) => {\r\n    if (model.directionOfProjection[0] === x && model.directionOfProjection[1] === y && model.directionOfProjection[2] === z) {\r\n      return;\r\n    }\r\n    model.directionOfProjection[0] = x;\r\n    model.directionOfProjection[1] = y;\r\n    model.directionOfProjection[2] = z;\r\n    const vec = model.directionOfProjection;\r\n\r\n    // recalculate FocalPoint\r\n    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\r\n    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\r\n    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\r\n    computeViewPlaneNormal();\r\n  };\r\n\r\n  // used to handle convert js device orientation angles\r\n  // when you use this method the camera will adjust to the\r\n  // device orientation such that the physicalViewUp you set\r\n  // in world coordinates looks up, and the physicalViewNorth\r\n  // you set in world coorindates will (maybe) point north\r\n  //\r\n  // NOTE WARNING - much of the documentation out there on how\r\n  // orientation works is seriously wrong. Even worse the Chrome\r\n  // device orientation simulator is completely wrong and should\r\n  // never be used. OMG it is so messed up.\r\n  //\r\n  // how it seems to work on iOS is that the device orientation\r\n  // is specified in extrinsic angles with a alpha, beta, gamma\r\n  // convention with axes of Z, X, Y (the code below substitutes\r\n  // the physical coordinate system for these axes to get the right\r\n  // modified coordinate system.\r\n  publicAPI.setDeviceAngles = (alpha, beta, gamma, screen) => {\r\n    const physVRight = [3];\r\n    (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.j)(model.physicalViewNorth, model.physicalViewUp, physVRight);\r\n\r\n    // phone to physical coordinates\r\n    const rotmat = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.identity(new Float64Array(16));\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.rotate(rotmat, rotmat, (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.r)(alpha), model.physicalViewUp);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.rotate(rotmat, rotmat, (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.r)(beta), physVRight);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.rotate(rotmat, rotmat, (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.r)(gamma), model.physicalViewNorth);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.rotate(rotmat, rotmat, (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.r)(-screen), model.physicalViewUp);\r\n    const dop = new Float64Array([-model.physicalViewUp[0], -model.physicalViewUp[1], -model.physicalViewUp[2]]);\r\n    const vup = new Float64Array(model.physicalViewNorth);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.transformMat4(dop, dop, rotmat);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.transformMat4(vup, vup, rotmat);\r\n    publicAPI.setDirectionOfProjection(dop[0], dop[1], dop[2]);\r\n    publicAPI.setViewUp(vup[0], vup[1], vup[2]);\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.setOrientationWXYZ = (degrees, x, y, z) => {\r\n    const quatMat = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.identity(new Float64Array(16));\r\n    if (degrees !== 0.0 && (x !== 0.0 || y !== 0.0 || z !== 0.0)) {\r\n      // convert to radians\r\n      const angle = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.r)(degrees);\r\n      const q = gl_matrix__WEBPACK_IMPORTED_MODULE_5__.create();\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_5__.setAxisAngle(q, [x, y, z], angle);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_2__.fromQuat(quatMat, q);\r\n    }\r\n    const newdop = new Float64Array(3);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.transformMat4(newdop, [0.0, 0.0, -1.0], quatMat);\r\n    const newvup = new Float64Array(3);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.transformMat4(newvup, [0.0, 1.0, 0.0], quatMat);\r\n    publicAPI.setDirectionOfProjection(...newdop);\r\n    publicAPI.setViewUp(...newvup);\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.computeClippingRange = bounds => {\r\n    let vn = null;\r\n    let position = null;\r\n    vn = model.viewPlaneNormal;\r\n    position = model.position;\r\n    const a = -vn[0];\r\n    const b = -vn[1];\r\n    const c = -vn[2];\r\n    const d = -(a * position[0] + b * position[1] + c * position[2]);\r\n\r\n    // Set the max near clipping plane and the min far clipping plane\r\n    const range = [a * bounds[0] + b * bounds[2] + c * bounds[4] + d, 1e-18];\r\n\r\n    // Find the closest / farthest bounding box vertex\r\n    for (let k = 0; k < 2; k++) {\r\n      for (let j = 0; j < 2; j++) {\r\n        for (let i = 0; i < 2; i++) {\r\n          const dist = a * bounds[i] + b * bounds[2 + j] + c * bounds[4 + k] + d;\r\n          range[0] = dist < range[0] ? dist : range[0];\r\n          range[1] = dist > range[1] ? dist : range[1];\r\n        }\r\n      }\r\n    }\r\n    return range;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  position: [0, 0, 1],\r\n  focalPoint: [0, 0, 0],\r\n  viewUp: [0, 1, 0],\r\n  directionOfProjection: [0, 0, -1],\r\n  parallelProjection: false,\r\n  useHorizontalViewAngle: false,\r\n  viewAngle: 30,\r\n  parallelScale: 1,\r\n  clippingRange: [0.01, 1000.01],\r\n  windowCenter: [0, 0],\r\n  viewPlaneNormal: [0, 0, 1],\r\n  useOffAxisProjection: false,\r\n  screenBottomLeft: [-0.5, -0.5, -0.5],\r\n  screenBottomRight: [0.5, -0.5, -0.5],\r\n  screenTopRight: [0.5, 0.5, -0.5],\r\n  freezeFocalPoint: false,\r\n  projectionMatrix: null,\r\n  viewMatrix: null,\r\n  cameraLightTransform: gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create(),\r\n  // used for world to physical transformations\r\n  physicalTranslation: [0, 0, 0],\r\n  physicalScale: 1.0,\r\n  physicalViewUp: [0, 1, 0],\r\n  physicalViewNorth: [0, 0, -1]\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['distance']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['parallelProjection', 'useHorizontalViewAngle', 'viewAngle', 'parallelScale', 'useOffAxisProjection', 'freezeFocalPoint', 'physicalScale']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.getArray(publicAPI, model, ['directionOfProjection', 'viewPlaneNormal', 'position', 'focalPoint']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGetArray(publicAPI, model, ['clippingRange', 'windowCenter'], 2);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGetArray(publicAPI, model, ['viewUp', 'screenBottomLeft', 'screenBottomRight', 'screenTopRight', 'physicalTranslation', 'physicalViewUp', 'physicalViewNorth'], 3);\r\n\r\n  // Object methods\r\n  vtkCamera(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkCamera');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkCamera$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Camera.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/CubeAxesActor.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkCubeAxesActor$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! d3-scale */ \"./node_modules/d3-scale/src/linear.js\");\n/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Actor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Actor.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Actor.js\");\n/* harmony import */ var _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/DataModel/BoundingBox.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js\");\n/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray.js\");\n/* harmony import */ var _Mapper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Mapper.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js\");\n/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js\");\n/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Texture.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Texture.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkCubeAxesActor\r\n// ----------------------------------------------------------------------------\r\n// faces are -x x -y y -z z\r\n// point 0 is 0,0,0 and then +x fastest changing, +y then +z\r\nconst faceNormals = [[-1, 0, 0], [1, 0, 0], [0, -1, 0], [0, 1, 0], [0, 0, -1], [0, 0, 1]];\r\nconst faceEdges = [[8, 7, 11, 3], [9, 1, 10, 5], [4, 9, 0, 8], [2, 11, 6, 10], [0, 3, 2, 1], [4, 5, 6, 7]];\r\nconst edgePoints = [[0, 1], [1, 3], [2, 3], [0, 2], [4, 5], [5, 7], [6, 7], [4, 6], [0, 4], [1, 5], [3, 7], [2, 6]];\r\nconst edgeAxes = [0, 1, 0, 1, 0, 1, 0, 1, 2, 2, 2, 2];\r\nconst faceAxes = [[1, 2], [1, 2], [0, 2], [0, 2], [0, 1], [0, 1]];\r\n\r\n//\r\n// Developer note: This class is broken into the main class and a helper\r\n// class. The main class holds view independent properties (those properties\r\n// that do not change as the view's resolution/aspect ratio change). The\r\n// helper class is instantiated one per view and holds properties that can\r\n// depend on view specific values such as resolution. The helper class code\r\n// could have been left to the View specific implementation (such as\r\n// vtkWebGPUCubeAxesActor) but is instead placed here to it can be shared by\r\n// multiple rendering backends.\r\n//\r\n\r\n// some shared temp variables to reduce heap allocs\r\nconst ptv3 = new Float64Array(3);\r\nconst pt2v3 = new Float64Array(3);\r\nconst tmpv3 = new Float64Array(3);\r\nconst tmp2v3 = new Float64Array(3);\r\nconst xDir = new Float64Array(3);\r\nconst yDir = new Float64Array(3);\r\nconst invmat = new Float64Array(16);\r\nfunction applyTextStyle(ctx, style) {\r\n  ctx.strokeStyle = style.strokeColor;\r\n  ctx.lineWidth = style.strokeSize;\r\n  ctx.fillStyle = style.fontColor;\r\n  ctx.font = `${style.fontStyle} ${style.fontSize}px ${style.fontFamily}`;\r\n}\r\nfunction defaultGenerateTicks(dataBounds) {\r\n  const ticks = [];\r\n  const tickStrings = [];\r\n  for (let i = 0; i < 3; i++) {\r\n    const scale = d3_scale__WEBPACK_IMPORTED_MODULE_8__[\"default\"]().domain([dataBounds[i * 2], dataBounds[i * 2 + 1]]);\r\n    ticks[i] = scale.ticks(5);\r\n    const format = scale.tickFormat(5);\r\n    tickStrings[i] = ticks[i].map(format);\r\n  }\r\n  return {\r\n    ticks,\r\n    tickStrings\r\n  };\r\n}\r\n\r\n// many properties of this actor depend on the API specific view The main\r\n// dependency being the resolution as that drives what font sizes to use.\r\n// Bacause of this we need to do some of the calculations in a API specific\r\n// subclass. But... we don't want a lot of duplicated code between WebGL and\r\n// WebGPU for example so we have this helper class, that is designed to be\r\n// fairly API independent so that API specific views can call this to do\r\n// most of the work.\r\nfunction vtkCubeAxesActorHelper(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkCubeAxesActorHelper');\r\n  publicAPI.setRenderable = renderable => {\r\n    if (model.renderable === renderable) {\r\n      return;\r\n    }\r\n    model.renderable = renderable;\r\n    model.tmActor.addTexture(model.renderable.getTmTexture());\r\n    model.tmActor.setProperty(renderable.getProperty());\r\n    model.tmActor.setParentProp(renderable);\r\n    publicAPI.modified();\r\n  };\r\n\r\n  // called by updateTexturePolyData\r\n  publicAPI.createPolyDataForOneLabel = (text, pos, cmat, imat, dir, offset, results) => {\r\n    const value = model.renderable.get_tmAtlas().get(text);\r\n    if (!value) {\r\n      return;\r\n    }\r\n    const coords = model.renderable.getTextPolyData().getPoints().getData();\r\n\r\n    // compute pixel to distance factors\r\n    const size = model.lastSize;\r\n    ptv3[0] = coords[pos * 3];\r\n    ptv3[1] = coords[pos * 3 + 1];\r\n    ptv3[2] = coords[pos * 3 + 2];\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_9__.transformMat4(tmpv3, ptv3, cmat);\r\n    // moving 0.1 in NDC\r\n    tmpv3[0] += 0.1;\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_9__.transformMat4(pt2v3, tmpv3, imat);\r\n    // results in WC move of\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_9__.subtract(xDir, pt2v3, ptv3);\r\n    tmpv3[0] -= 0.1;\r\n    tmpv3[1] += 0.1;\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_9__.transformMat4(pt2v3, tmpv3, imat);\r\n    // results in WC move of\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_9__.subtract(yDir, pt2v3, ptv3);\r\n    for (let i = 0; i < 3; i++) {\r\n      xDir[i] /= 0.5 * 0.1 * size[0];\r\n      yDir[i] /= 0.5 * 0.1 * size[1];\r\n    }\r\n\r\n    // have to find the four corners of the texture polygon for this label\r\n    // convert anchor point to View Coords\r\n    let ptIdx = results.ptIdx;\r\n    let cellIdx = results.cellIdx;\r\n    ptv3[0] = coords[pos * 3];\r\n    ptv3[1] = coords[pos * 3 + 1];\r\n    ptv3[2] = coords[pos * 3 + 2];\r\n    // horizontal left, right, or middle alignment based on dir[0]\r\n    if (dir[0] < -0.5) {\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_9__.scale(tmpv3, xDir, dir[0] * offset - value.width);\r\n    } else if (dir[0] > 0.5) {\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_9__.scale(tmpv3, xDir, dir[0] * offset);\r\n    } else {\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_9__.scale(tmpv3, xDir, dir[0] * offset - value.width / 2.0);\r\n    }\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_9__.add(ptv3, ptv3, tmpv3);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_9__.scale(tmpv3, yDir, dir[1] * offset - value.height / 2.0);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_9__.add(ptv3, ptv3, tmpv3);\r\n    results.points[ptIdx * 3] = ptv3[0];\r\n    results.points[ptIdx * 3 + 1] = ptv3[1];\r\n    results.points[ptIdx * 3 + 2] = ptv3[2];\r\n    results.tcoords[ptIdx * 2] = value.tcoords[0];\r\n    results.tcoords[ptIdx * 2 + 1] = value.tcoords[1];\r\n    ptIdx++;\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_9__.scale(tmpv3, xDir, value.width);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_9__.add(ptv3, ptv3, tmpv3);\r\n    results.points[ptIdx * 3] = ptv3[0];\r\n    results.points[ptIdx * 3 + 1] = ptv3[1];\r\n    results.points[ptIdx * 3 + 2] = ptv3[2];\r\n    results.tcoords[ptIdx * 2] = value.tcoords[2];\r\n    results.tcoords[ptIdx * 2 + 1] = value.tcoords[3];\r\n    ptIdx++;\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_9__.scale(tmpv3, yDir, value.height);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_9__.add(ptv3, ptv3, tmpv3);\r\n    results.points[ptIdx * 3] = ptv3[0];\r\n    results.points[ptIdx * 3 + 1] = ptv3[1];\r\n    results.points[ptIdx * 3 + 2] = ptv3[2];\r\n    results.tcoords[ptIdx * 2] = value.tcoords[4];\r\n    results.tcoords[ptIdx * 2 + 1] = value.tcoords[5];\r\n    ptIdx++;\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_9__.scale(tmpv3, xDir, value.width);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_9__.subtract(ptv3, ptv3, tmpv3);\r\n    results.points[ptIdx * 3] = ptv3[0];\r\n    results.points[ptIdx * 3 + 1] = ptv3[1];\r\n    results.points[ptIdx * 3 + 2] = ptv3[2];\r\n    results.tcoords[ptIdx * 2] = value.tcoords[6];\r\n    results.tcoords[ptIdx * 2 + 1] = value.tcoords[7];\r\n    ptIdx++;\r\n\r\n    // add the two triangles to represent the quad\r\n    results.polys[cellIdx * 4] = 3;\r\n    results.polys[cellIdx * 4 + 1] = ptIdx - 4;\r\n    results.polys[cellIdx * 4 + 2] = ptIdx - 3;\r\n    results.polys[cellIdx * 4 + 3] = ptIdx - 2;\r\n    cellIdx++;\r\n    results.polys[cellIdx * 4] = 3;\r\n    results.polys[cellIdx * 4 + 1] = ptIdx - 4;\r\n    results.polys[cellIdx * 4 + 2] = ptIdx - 2;\r\n    results.polys[cellIdx * 4 + 3] = ptIdx - 1;\r\n    results.ptIdx += 4;\r\n    results.cellIdx += 2;\r\n  };\r\n\r\n  // update the polydata associated with drawing the text labels\r\n  // specifically the quads used for each label and their associated tcoords\r\n  // etc. This changes every time the camera viewpoint changes\r\n  publicAPI.updateTexturePolyData = () => {\r\n    const cmat = model.camera.getCompositeProjectionMatrix(model.lastAspectRatio, -1, 1);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_10__.transpose(cmat, cmat);\r\n\r\n    // update the polydata\r\n    const numLabels = model.renderable.getTextValues().length;\r\n    const numPts = numLabels * 4;\r\n    const numTris = numLabels * 2;\r\n    const points = new Float64Array(numPts * 3);\r\n    const polys = new Uint16Array(numTris * 4);\r\n    const tcoords = new Float32Array(numPts * 2);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_10__.invert(invmat, cmat);\r\n    const results = {\r\n      ptIdx: 0,\r\n      cellIdx: 0,\r\n      polys,\r\n      points,\r\n      tcoords\r\n    };\r\n    let ptIdx = 0;\r\n    let textIdx = 0;\r\n    let axisIdx = 0;\r\n    const coords = model.renderable.getTextPolyData().getPoints().getData();\r\n    const textValues = model.renderable.getTextValues();\r\n    while (ptIdx < coords.length / 3) {\r\n      // compute the direction to move out\r\n      ptv3[0] = coords[ptIdx * 3];\r\n      ptv3[1] = coords[ptIdx * 3 + 1];\r\n      ptv3[2] = coords[ptIdx * 3 + 2];\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_9__.transformMat4(tmpv3, ptv3, cmat);\r\n      ptv3[0] = coords[ptIdx * 3 + 3];\r\n      ptv3[1] = coords[ptIdx * 3 + 4];\r\n      ptv3[2] = coords[ptIdx * 3 + 5];\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_9__.transformMat4(tmp2v3, ptv3, cmat);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_9__.subtract(tmpv3, tmpv3, tmp2v3);\r\n      const dir = [tmpv3[0], tmpv3[1]];\r\n      (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.P)(dir);\r\n\r\n      // write the axis label\r\n      publicAPI.createPolyDataForOneLabel(textValues[textIdx], ptIdx, cmat, invmat, dir, model.renderable.getAxisTitlePixelOffset(), results);\r\n      ptIdx += 2;\r\n      textIdx++;\r\n\r\n      // write the tick labels\r\n      for (let t = 0; t < model.renderable.getTickCounts()[axisIdx]; t++) {\r\n        publicAPI.createPolyDataForOneLabel(textValues[textIdx], ptIdx, cmat, invmat, dir, model.renderable.getTickLabelPixelOffset(), results);\r\n        ptIdx++;\r\n        textIdx++;\r\n      }\r\n      axisIdx++;\r\n    }\r\n    const tcoordDA = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance({\r\n      numberOfComponents: 2,\r\n      values: tcoords,\r\n      name: 'TextureCoordinates'\r\n    });\r\n    model.tmPolyData.getPointData().setTCoords(tcoordDA);\r\n    model.tmPolyData.getPoints().setData(points, 3);\r\n    model.tmPolyData.getPoints().modified();\r\n    model.tmPolyData.getPolys().setData(polys, 1);\r\n    model.tmPolyData.getPolys().modified();\r\n    model.tmPolyData.modified();\r\n  };\r\n  publicAPI.updateAPISpecificData = (size, camera, renderWindow) => {\r\n    // has the size changed?\r\n    if (model.lastSize[0] !== size[0] || model.lastSize[1] !== size[1]) {\r\n      model.lastSize[0] = size[0];\r\n      model.lastSize[1] = size[1];\r\n      model.lastAspectRatio = size[0] / size[1];\r\n      model.forceUpdate = true;\r\n    }\r\n    model.camera = camera;\r\n\r\n    // compute bounds for label quads whenever the camera changes\r\n    publicAPI.updateTexturePolyData();\r\n  };\r\n}\r\nconst newCubeAxesActorHelper = _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.newInstance(function (publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\r\n    renderable: null\r\n  };\r\n  Object.assign(model, {}, initialValues);\r\n\r\n  // Inheritance\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.obj(publicAPI, model);\r\n  model.tmPolyData = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].newInstance();\r\n  model.tmMapper = _Mapper_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance();\r\n  model.tmMapper.setInputData(model.tmPolyData);\r\n  model.tmActor = _Actor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance({\r\n    parentProp: publicAPI\r\n  });\r\n  model.tmActor.setMapper(model.tmMapper);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.setGet(publicAPI, model, ['renderable']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.get(publicAPI, model, ['lastSize', 'lastAspectRatio', 'axisTextStyle', 'tickTextStyle', 'tmActor', 'ticks']);\r\n  model.forceUpdate = false;\r\n  model.lastRedrawTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.obj(model.lastRedrawTime, {\r\n    mtime: 0\r\n  });\r\n  model.lastRebuildTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.obj(model.lastRebuildTime, {\r\n    mtime: 0\r\n  });\r\n  model.lastSize = [-1, -1];\r\n\r\n  // internal variables\r\n  model.lastTickBounds = [];\r\n  vtkCubeAxesActorHelper(publicAPI, model);\r\n}, 'vtkCubeAxesActorHelper');\r\nfunction vtkCubeAxesActor(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkCubeAxesActor');\r\n  publicAPI.setCamera = cam => {\r\n    if (model.camera === cam) {\r\n      return;\r\n    }\r\n    if (model.cameraModifiedSub) {\r\n      model.cameraModifiedSub.unsubscribe();\r\n      model.cameraModifiedSub = null;\r\n    }\r\n    model.camera = cam;\r\n    if (cam) {\r\n      model.cameraModifiedSub = cam.onModified(publicAPI.update);\r\n    }\r\n    publicAPI.update();\r\n    publicAPI.modified();\r\n  };\r\n\r\n  // estimate from a camera model what faces to draw\r\n  // return true if the list of faces to draw has changed\r\n  publicAPI.computeFacesToDraw = () => {\r\n    const cmat = model.camera.getViewMatrix();\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_10__.transpose(cmat, cmat);\r\n    let changed = false;\r\n    const length = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getDiagonalLength(model.dataBounds);\r\n    const faceDot = Math.sin(model.faceVisibilityAngle * Math.PI / 180.0);\r\n    for (let f = 0; f < 6; f++) {\r\n      let drawit = false;\r\n      const faceAxis = Math.floor(f / 2);\r\n      const otherAxis1 = (faceAxis + 1) % 3;\r\n      const otherAxis2 = (faceAxis + 2) % 3;\r\n      // only for non degenerate axes\r\n      if (model.dataBounds[otherAxis1 * 2] !== model.dataBounds[otherAxis1 * 2 + 1] && model.dataBounds[otherAxis2 * 2] !== model.dataBounds[otherAxis2 * 2 + 1]) {\r\n        // for each face transform the center and off center to get a direction vector\r\n        ptv3[faceAxis] = model.dataBounds[f] - 0.1 * length * faceNormals[f][faceAxis];\r\n        ptv3[otherAxis1] = 0.5 * (model.dataBounds[otherAxis1 * 2] + model.dataBounds[otherAxis1 * 2 + 1]);\r\n        ptv3[otherAxis2] = 0.5 * (model.dataBounds[otherAxis2 * 2] + model.dataBounds[otherAxis2 * 2 + 1]);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_9__.transformMat4(tmpv3, ptv3, cmat);\r\n        ptv3[faceAxis] = model.dataBounds[f];\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_9__.transformMat4(tmp2v3, ptv3, cmat);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_9__.subtract(tmpv3, tmp2v3, tmpv3);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_9__.normalize(tmpv3, tmpv3);\r\n        // tmpv3 now holds the face normal vector\r\n        drawit = tmpv3[2] > faceDot;\r\n        // for perspctive we need the view direction to the plane\r\n        if (!model.camera.getParallelProjection()) {\r\n          gl_matrix__WEBPACK_IMPORTED_MODULE_9__.normalize(tmp2v3, tmp2v3);\r\n          drawit = gl_matrix__WEBPACK_IMPORTED_MODULE_9__.dot(tmp2v3, tmpv3) > faceDot;\r\n        }\r\n      }\r\n      if (drawit !== model.lastFacesToDraw[f]) {\r\n        model.lastFacesToDraw[f] = drawit;\r\n        changed = true;\r\n      }\r\n    }\r\n    return changed;\r\n  };\r\n\r\n  // update the polydata that represents the boundingd edges and gridlines\r\n  publicAPI.updatePolyData = (facesToDraw, edgesToDraw, ticks) => {\r\n    // compute the number of points and lines required\r\n    let numPts = 0;\r\n    let numLines = 0;\r\n    numPts += 8; // always start with the 8 cube points\r\n\r\n    // count edgesToDraw\r\n    let numEdgesToDraw = 0;\r\n    for (let e = 0; e < 12; e++) {\r\n      if (edgesToDraw[e] > 0) {\r\n        numEdgesToDraw++;\r\n      }\r\n    }\r\n    numLines += numEdgesToDraw;\r\n\r\n    // add values for gridlines\r\n    if (model.gridLines) {\r\n      for (let f = 0; f < 6; f++) {\r\n        if (facesToDraw[f]) {\r\n          numPts += ticks[faceAxes[f][0]].length * 2 + ticks[faceAxes[f][1]].length * 2;\r\n          numLines += ticks[faceAxes[f][0]].length + ticks[faceAxes[f][1]].length;\r\n        }\r\n      }\r\n    }\r\n\r\n    // now allocate the memory\r\n    const points = new Float64Array(numPts * 3);\r\n    const lines = new Uint32Array(numLines * 3);\r\n    let ptIdx = 0;\r\n    let lineIdx = 0;\r\n\r\n    // add the 8 corner points\r\n    for (let z = 0; z < 2; z++) {\r\n      for (let y = 0; y < 2; y++) {\r\n        for (let x = 0; x < 2; x++) {\r\n          points[ptIdx * 3] = model.dataBounds[x];\r\n          points[ptIdx * 3 + 1] = model.dataBounds[2 + y];\r\n          points[ptIdx * 3 + 2] = model.dataBounds[4 + z];\r\n          ptIdx++;\r\n        }\r\n      }\r\n    }\r\n\r\n    // draw the edges\r\n    for (let e = 0; e < 12; e++) {\r\n      if (edgesToDraw[e] > 0) {\r\n        lines[lineIdx * 3] = 2;\r\n        lines[lineIdx * 3 + 1] = edgePoints[e][0];\r\n        lines[lineIdx * 3 + 2] = edgePoints[e][1];\r\n        lineIdx++;\r\n      }\r\n    }\r\n\r\n    // now handle gridlines\r\n    // grid lines are tick[axis1] + ticks[axes2] lines each having two points\r\n    // for simplicity we don;t worry about duplicating points, this is tiny\r\n\r\n    if (model.gridLines) {\r\n      // for each visible face\r\n      // add the points\r\n      for (let f = 0; f < 6; f++) {\r\n        if (facesToDraw[f]) {\r\n          const faceIdx = Math.floor(f / 2);\r\n          let aticks = ticks[faceAxes[f][0]];\r\n          for (let t = 0; t < aticks.length; t++) {\r\n            points[ptIdx * 3 + faceIdx] = model.dataBounds[f];\r\n            points[ptIdx * 3 + faceAxes[f][0]] = aticks[t];\r\n            points[ptIdx * 3 + faceAxes[f][1]] = model.dataBounds[faceAxes[f][1] * 2];\r\n            ptIdx++;\r\n            points[ptIdx * 3 + faceIdx] = model.dataBounds[f];\r\n            points[ptIdx * 3 + faceAxes[f][0]] = aticks[t];\r\n            points[ptIdx * 3 + faceAxes[f][1]] = model.dataBounds[faceAxes[f][1] * 2 + 1];\r\n            ptIdx++;\r\n            lines[lineIdx * 3] = 2;\r\n            lines[lineIdx * 3 + 1] = ptIdx - 2;\r\n            lines[lineIdx * 3 + 2] = ptIdx - 1;\r\n            lineIdx++;\r\n          }\r\n          aticks = ticks[faceAxes[f][1]];\r\n          for (let t = 0; t < aticks.length; t++) {\r\n            points[ptIdx * 3 + faceIdx] = model.dataBounds[f];\r\n            points[ptIdx * 3 + faceAxes[f][1]] = aticks[t];\r\n            points[ptIdx * 3 + faceAxes[f][0]] = model.dataBounds[faceAxes[f][0] * 2];\r\n            ptIdx++;\r\n            points[ptIdx * 3 + faceIdx] = model.dataBounds[f];\r\n            points[ptIdx * 3 + faceAxes[f][1]] = aticks[t];\r\n            points[ptIdx * 3 + faceAxes[f][0]] = model.dataBounds[faceAxes[f][0] * 2 + 1];\r\n            ptIdx++;\r\n            lines[lineIdx * 3] = 2;\r\n            lines[lineIdx * 3 + 1] = ptIdx - 2;\r\n            lines[lineIdx * 3 + 2] = ptIdx - 1;\r\n            lineIdx++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    model.polyData.getPoints().setData(points, 3);\r\n    model.polyData.getPoints().modified();\r\n    model.polyData.getLines().setData(lines, 1);\r\n    model.polyData.getLines().modified();\r\n    model.polyData.modified();\r\n  };\r\n\r\n  // update the data that represents where to put the labels\r\n  // in world coordinates. This only changes when faces to draw changes\r\n  // of dataBounds changes\r\n  publicAPI.updateTextData = (facesToDraw, edgesToDraw, ticks, tickStrings) => {\r\n    // count outside edgesToDraw\r\n    let textPointCount = 0;\r\n    for (let e = 0; e < 12; e++) {\r\n      if (edgesToDraw[e] === 1) {\r\n        textPointCount += 2;\r\n        textPointCount += ticks[edgeAxes[e]].length;\r\n      }\r\n    }\r\n    const points = model.polyData.getPoints().getData();\r\n    const textPoints = new Float64Array(textPointCount * 3);\r\n    let ptIdx = 0;\r\n    let textIdx = 0;\r\n    let axisCount = 0;\r\n    for (let f = 0; f < 6; f++) {\r\n      if (facesToDraw[f]) {\r\n        for (let e = 0; e < 4; e++) {\r\n          const edgeIdx = faceEdges[f][e];\r\n          if (edgesToDraw[edgeIdx] === 1) {\r\n            const edgeAxis = edgeAxes[edgeIdx];\r\n            // add a middle point on the edge\r\n            const ptIdx1 = edgePoints[edgeIdx][0] * 3;\r\n            const ptIdx2 = edgePoints[edgeIdx][1] * 3;\r\n            textPoints[ptIdx * 3] = 0.5 * (points[ptIdx1] + points[ptIdx2]);\r\n            textPoints[ptIdx * 3 + 1] = 0.5 * (points[ptIdx1 + 1] + points[ptIdx2 + 1]);\r\n            textPoints[ptIdx * 3 + 2] = 0.5 * (points[ptIdx1 + 2] + points[ptIdx2 + 2]);\r\n            ptIdx++;\r\n            // add a middle face point, we use this to\r\n            // move the labels away from the edge in the right direction\r\n            const faceIdx = Math.floor(f / 2);\r\n            textPoints[ptIdx * 3 + faceIdx] = model.dataBounds[f];\r\n            textPoints[ptIdx * 3 + faceAxes[f][0]] = 0.5 * (model.dataBounds[faceAxes[f][0] * 2] + model.dataBounds[faceAxes[f][0] * 2 + 1]);\r\n            textPoints[ptIdx * 3 + faceAxes[f][1]] = 0.5 * (model.dataBounds[faceAxes[f][1] * 2] + model.dataBounds[faceAxes[f][1] * 2 + 1]);\r\n            ptIdx++;\r\n            // set the text\r\n            model.textValues[textIdx] = model.axisLabels[edgeAxis];\r\n            textIdx++;\r\n\r\n            // now add the tick marks along the edgeAxis\r\n            const otherAxis1 = (edgeAxis + 1) % 3;\r\n            const otherAxis2 = (edgeAxis + 2) % 3;\r\n            const aticks = ticks[edgeAxis];\r\n            const atickStrings = tickStrings[edgeAxis];\r\n            model.tickCounts[axisCount] = aticks.length;\r\n            for (let t = 0; t < aticks.length; t++) {\r\n              textPoints[ptIdx * 3 + edgeAxis] = aticks[t];\r\n              textPoints[ptIdx * 3 + otherAxis1] = points[ptIdx1 + otherAxis1];\r\n              textPoints[ptIdx * 3 + otherAxis2] = points[ptIdx1 + otherAxis2];\r\n              ptIdx++;\r\n              // set the text\r\n              model.textValues[textIdx] = atickStrings[t];\r\n              textIdx++;\r\n            }\r\n            axisCount++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    model.textPolyData.getPoints().setData(textPoints, 3);\r\n    model.textPolyData.modified();\r\n  };\r\n\r\n  // main method to rebuild the cube axes, gets called on camera modify\r\n  // and changes to key members\r\n  publicAPI.update = () => {\r\n    // Can't do anything if we don't have a camera...\r\n    if (!model.camera) {\r\n      return;\r\n    }\r\n\r\n    // compute what faces to draw\r\n    const facesChanged = publicAPI.computeFacesToDraw();\r\n    const facesToDraw = model.lastFacesToDraw;\r\n\r\n    // have the bounds changed?\r\n    let boundsChanged = false;\r\n    for (let i = 0; i < 6; i++) {\r\n      if (model.dataBounds[i] !== model.lastTickBounds[i]) {\r\n        boundsChanged = true;\r\n        model.lastTickBounds[i] = model.dataBounds[i];\r\n      }\r\n    }\r\n\r\n    // did something significant change? If so rebuild a lot of things\r\n    if (facesChanged || boundsChanged || model.forceUpdate) {\r\n      // compute the edges to draw\r\n      // for each drawn face, mark edges, all single mark edges we draw\r\n      const edgesToDraw = new Array(12).fill(0);\r\n      for (let f = 0; f < 6; f++) {\r\n        if (facesToDraw[f]) {\r\n          for (let e = 0; e < 4; e++) {\r\n            edgesToDraw[faceEdges[f][e]]++;\r\n          }\r\n        }\r\n      }\r\n\r\n      // compute tick marks for axes\r\n      const t = model.generateTicks(model.dataBounds);\r\n\r\n      // update gridlines / edge lines\r\n      publicAPI.updatePolyData(facesToDraw, edgesToDraw, t.ticks);\r\n\r\n      // compute label world coords and text\r\n      publicAPI.updateTextData(facesToDraw, edgesToDraw, t.ticks, t.tickStrings);\r\n\r\n      // rebuild the texture only when force or changed bounds, face\r\n      // visibility changes do to change the atlas\r\n      if (boundsChanged || model.forceUpdate) {\r\n        publicAPI.updateTextureAtlas(t.tickStrings);\r\n      }\r\n    }\r\n    model.forceUpdate = false;\r\n  };\r\n\r\n  // create the texture map atlas that contains the rendering of\r\n  // all the text strings. Only needs to be called when the text strings\r\n  // have changed (labels and ticks)\r\n  publicAPI.updateTextureAtlas = tickStrings => {\r\n    // compute the width and height we need\r\n\r\n    // set the text properties\r\n    model.tmContext.textBaseline = 'bottom';\r\n    model.tmContext.textAlign = 'left';\r\n\r\n    // first the three labels\r\n    model._tmAtlas.clear();\r\n    let maxWidth = 0;\r\n    let totalHeight = 1; // start one pixel in so we have a border\r\n    for (let i = 0; i < 3; i++) {\r\n      if (!model._tmAtlas.has(model.axisLabels[i])) {\r\n        applyTextStyle(model.tmContext, model.axisTextStyle);\r\n        const metrics = model.tmContext.measureText(model.axisLabels[i]);\r\n        const entry = {\r\n          height: metrics.actualBoundingBoxAscent + 2,\r\n          startingHeight: totalHeight,\r\n          width: metrics.width + 2,\r\n          textStyle: model.axisTextStyle\r\n        };\r\n        model._tmAtlas.set(model.axisLabels[i], entry);\r\n        totalHeight += entry.height;\r\n        if (maxWidth < entry.width) {\r\n          maxWidth = entry.width;\r\n        }\r\n      }\r\n      // and the ticks\r\n      applyTextStyle(model.tmContext, model.tickTextStyle);\r\n      for (let t = 0; t < tickStrings[i].length; t++) {\r\n        if (!model._tmAtlas.has(tickStrings[i][t])) {\r\n          const metrics = model.tmContext.measureText(tickStrings[i][t]);\r\n          const entry = {\r\n            height: metrics.actualBoundingBoxAscent + 2,\r\n            startingHeight: totalHeight,\r\n            width: metrics.width + 2,\r\n            textStyle: model.tickTextStyle\r\n          };\r\n          model._tmAtlas.set(tickStrings[i][t], entry);\r\n          totalHeight += entry.height;\r\n          if (maxWidth < entry.width) {\r\n            maxWidth = entry.width;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // always use power of two to avoid interpolation\r\n    // in cases where PO2 is required\r\n    maxWidth = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.Q)(maxWidth);\r\n    totalHeight = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.Q)(totalHeight);\r\n\r\n    // set the tcoord values\r\n    model._tmAtlas.forEach(value => {\r\n      value.tcoords = [0.0, (totalHeight - value.startingHeight - value.height) / totalHeight, value.width / maxWidth, (totalHeight - value.startingHeight - value.height) / totalHeight, value.width / maxWidth, (totalHeight - value.startingHeight) / totalHeight, 0.0, (totalHeight - value.startingHeight) / totalHeight];\r\n    });\r\n\r\n    // make sure we have power of two dimensions\r\n    model.tmCanvas.width = maxWidth;\r\n    model.tmCanvas.height = totalHeight;\r\n    model.tmContext.textBaseline = 'bottom';\r\n    model.tmContext.textAlign = 'left';\r\n    model.tmContext.clearRect(0, 0, maxWidth, totalHeight);\r\n\r\n    // draw the text onto the texture\r\n    model._tmAtlas.forEach((value, key) => {\r\n      applyTextStyle(model.tmContext, value.textStyle);\r\n      model.tmContext.fillText(key, 1, value.startingHeight + value.height - 1);\r\n    });\r\n    model.tmTexture.setCanvas(model.tmCanvas);\r\n    model.tmTexture.modified();\r\n  };\r\n\r\n  // Make sure the data is correct\r\n  publicAPI.onModified(() => {\r\n    model.forceUpdate = true;\r\n    publicAPI.update();\r\n  });\r\n  publicAPI.setTickTextStyle = tickStyle => {\r\n    model.tickTextStyle = {\r\n      ...model.tickTextStyle,\r\n      ...tickStyle\r\n    };\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.setAxisTextStyle = axisStyle => {\r\n    model.axisTextStyle = {\r\n      ...model.axisTextStyle,\r\n      ...axisStyle\r\n    };\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.get_tmAtlas = () => model._tmAtlas;\r\n\r\n  // try to get the bounds for the annotation. This is complicated\r\n  // as it relies on the pixel size of the window. Every time the camera\r\n  // changes the bounds change. This method simplifies by just expanding\r\n  // the grid bounds by a user specified factor.\r\n  publicAPI.getBounds = () => {\r\n    publicAPI.update();\r\n    _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setBounds(model.bounds, model.gridActor.getBounds());\r\n    _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].scaleAboutCenter(model.bounds, model.boundsScaleFactor, model.boundsScaleFactor, model.boundsScaleFactor);\r\n    return model.bounds;\r\n  };\r\n\r\n  // Make sure the grid share the actor property\r\n  const _setProp = _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.chain(publicAPI.setProperty, model.gridActor.setProperty);\r\n  publicAPI.setProperty = p => _setProp(p)[0];\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction defaultValues(publicAPI, model, initialValues) {\r\n  return {\r\n    boundsScaleFactor: 1.3,\r\n    camera: null,\r\n    dataBounds: [..._Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].INIT_BOUNDS],\r\n    faceVisibilityAngle: 8,\r\n    gridLines: true,\r\n    axisLabels: null,\r\n    axisTitlePixelOffset: 35.0,\r\n    tickLabelPixelOffset: 12.0,\r\n    generateTicks: defaultGenerateTicks,\r\n    ...initialValues,\r\n    axisTextStyle: {\r\n      fontColor: 'white',\r\n      fontStyle: 'normal',\r\n      fontSize: 18,\r\n      fontFamily: 'serif',\r\n      ...initialValues?.axisTextStyle\r\n    },\r\n    tickTextStyle: {\r\n      fontColor: 'white',\r\n      fontStyle: 'normal',\r\n      fontSize: 14,\r\n      fontFamily: 'serif',\r\n      ...initialValues?.tickTextStyle\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  // Inheritance\r\n  _Actor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(publicAPI, model, defaultValues(publicAPI, model, initialValues));\r\n\r\n  // internal variables\r\n  model.lastFacesToDraw = [false, false, false, false, false, false];\r\n  model.axisLabels = ['X-Axis', 'Y-Axis', 'Z-Axis'];\r\n  model.tickCounts = [];\r\n  model.textValues = [];\r\n  model.lastTickBounds = [];\r\n  model.tmCanvas = document.createElement('canvas');\r\n  model.tmContext = model.tmCanvas.getContext('2d');\r\n  model._tmAtlas = new Map();\r\n\r\n  // for texture atlas\r\n  model.tmTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].newInstance({\r\n    resizable: true\r\n  });\r\n  model.tmTexture.setInterpolate(false);\r\n  publicAPI.getProperty().setDiffuse(0.0);\r\n  publicAPI.getProperty().setAmbient(1.0);\r\n  model.gridMapper = _Mapper_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance();\r\n  model.polyData = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].newInstance();\r\n  model.gridMapper.setInputData(model.polyData);\r\n  model.gridActor = _Actor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance();\r\n  model.gridActor.setMapper(model.gridMapper);\r\n  model.gridActor.setProperty(publicAPI.getProperty());\r\n  model.gridActor.setParentProp(publicAPI);\r\n  model.textPolyData = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].newInstance();\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.setGet(publicAPI, model, ['axisTitlePixelOffset', 'boundsScaleFactor', 'faceVisibilityAngle', 'gridLines', 'tickLabelPixelOffset', 'generateTicks']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.setGetArray(publicAPI, model, ['dataBounds'], 6);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.setGetArray(publicAPI, model, ['axisLabels'], 3);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.get(publicAPI, model, ['axisTextStyle', 'tickTextStyle', 'camera', 'tmTexture', 'textValues', 'textPolyData', 'tickCounts', 'gridActor']);\r\n\r\n  // Object methods\r\n  vtkCubeAxesActor(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.newInstance(extend, 'vtkCubeAxesActor');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkCubeAxesActor$1 = {\r\n  newInstance,\r\n  extend,\r\n  newCubeAxesActorHelper,\r\n  defaultGenerateTicks\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/CubeAxesActor.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/HardwareSelector.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkHardwareSelector$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Common_DataModel_DataSet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/DataModel/DataSet.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js\");\n\r\n\r\n\r\nconst {\r\n  FieldAssociations\r\n} = _Common_DataModel_DataSet_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkHardwareSelector methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkHardwareSelector(publicAPI, model) {\r\n  model.classHierarchy.push('vtkHardwareSelector');\r\n\r\n  // get the source data that is used for generating a selection. This\r\n  // must be called at least once before calling generateSelection. In\r\n  // raster based backends this method will capture the buffers. You can\r\n  // call this once and then make multiple calls to generateSelection.\r\n  publicAPI.getSourceDataAsync = async (renderer, fx1, fy1, fx2, fy2) => {};\r\n  publicAPI.selectAsync = async (renderer, fx1, fy1, fx2, fy2) => {\r\n    const srcData = await publicAPI.getSourceDataAsync(renderer, fx1, fy1, fx2, fy2);\r\n    if (srcData) {\r\n      return srcData.generateSelection(fx1, fy1, fx2, fy2);\r\n    }\r\n    return [];\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  fieldAssociation: FieldAssociations.FIELD_ASSOCIATION_CELLS,\r\n  captureZValues: false\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['fieldAssociation', 'captureZValues']);\r\n\r\n  // Object methods\r\n  vtkHardwareSelector(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkHardwareSelector');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkHardwareSelector$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/HardwareSelector.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/InteractorObserver.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STATIC: () => (/* binding */ STATIC),\n/* harmony export */   \"default\": () => (/* binding */ vtkInteractorObserver$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _RenderWindowInteractor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RenderWindowInteractor.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor.js\");\n\r\n\r\n\r\nconst {\r\n  vtkErrorMacro,\r\n  VOID\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\n\r\n//----------------------------------------------------------------------------\r\n// Description:\r\n// Transform from world to display coordinates.\r\nfunction computeWorldToDisplay(renderer, x, y, z) {\r\n  const view = renderer.getRenderWindow().getViews()[0];\r\n  return view.worldToDisplay(x, y, z, renderer);\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n// Description:\r\n// Transform from display to world coordinates.\r\nfunction computeDisplayToWorld(renderer, x, y, z) {\r\n  const view = renderer.getRenderWindow().getViews()[0];\r\n  return view.displayToWorld(x, y, z, renderer);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Static API\r\n// ----------------------------------------------------------------------------\r\nconst STATIC = {\r\n  computeWorldToDisplay,\r\n  computeDisplayToWorld\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkInteractorObserver methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkInteractorObserver(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkInteractorObserver');\r\n  const superClass = {\r\n    ...publicAPI\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  function unsubscribeFromEvents() {\r\n    while (model.subscribedEvents.length) {\r\n      model.subscribedEvents.pop().unsubscribe();\r\n    }\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Check what events we can handle and register callbacks\r\n  function subscribeToEvents() {\r\n    _RenderWindowInteractor_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handledEvents.forEach(eventName => {\r\n      if (publicAPI[`handle${eventName}`]) {\r\n        model.subscribedEvents.push(model._interactor[`on${eventName}`](callData => {\r\n          if (model.processEvents) {\r\n            return publicAPI[`handle${eventName}`](callData);\r\n          }\r\n          return VOID;\r\n        }, model.priority));\r\n      }\r\n    });\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Public API methods\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.setInteractor = i => {\r\n    if (i === model._interactor) {\r\n      return;\r\n    }\r\n    unsubscribeFromEvents();\r\n    model._interactor = i;\r\n    if (i && model.enabled) {\r\n      subscribeToEvents();\r\n    }\r\n    publicAPI.modified();\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.setEnabled = enable => {\r\n    if (enable === model.enabled) {\r\n      return;\r\n    }\r\n    unsubscribeFromEvents();\r\n    if (enable) {\r\n      if (model._interactor) {\r\n        subscribeToEvents();\r\n      } else {\r\n        vtkErrorMacro(`\r\n          The interactor must be set before subscribing to events\r\n        `);\r\n      }\r\n    }\r\n    model.enabled = enable;\r\n    publicAPI.modified();\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Description:\r\n  // Transform from display to world coordinates.\r\n  publicAPI.computeDisplayToWorld = (renderer, x, y, z) => {\r\n    if (!renderer) {\r\n      return null;\r\n    }\r\n    return model._interactor.getView().displayToWorld(x, y, z, renderer);\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Description:\r\n  // Transform from world to display coordinates.\r\n  publicAPI.computeWorldToDisplay = (renderer, x, y, z) => {\r\n    if (!renderer) {\r\n      return null;\r\n    }\r\n    return model._interactor.getView().worldToDisplay(x, y, z, renderer);\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n\r\n  publicAPI.setPriority = priority => {\r\n    const modified = superClass.setPriority(priority);\r\n    if (modified && model._interactor) {\r\n      unsubscribeFromEvents();\r\n      subscribeToEvents();\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  enabled: true,\r\n  // _interactor: null,\r\n  priority: 0.0,\r\n  processEvents: true,\r\n  subscribedEvents: []\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Object methods\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.event(publicAPI, model, 'InteractionEvent');\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.event(publicAPI, model, 'StartInteractionEvent');\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.event(publicAPI, model, 'EndInteractionEvent');\r\n\r\n  // Create get-only macros\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['_interactor', 'enabled']);\r\n\r\n  // Create get-set macros\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['priority', 'processEvents']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.moveToProtected(publicAPI, model, ['interactor']);\r\n\r\n  // For more macro methods, see \"Sources/macros.js\"\r\n\r\n  // Object specific methods\r\n  vtkInteractorObserver(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkInteractorObserver');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkInteractorObserver$1 = {\r\n  newInstance,\r\n  extend,\r\n  ...STATIC\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/InteractorObserver.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/InteractorStyle.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkInteractorStyle$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _InteractorObserver_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./InteractorObserver.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/InteractorObserver.js\");\n/* harmony import */ var _InteractorStyle_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./InteractorStyle/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/InteractorStyle/Constants.js\");\n\r\n\r\n\r\n\r\nconst {\r\n  States\r\n} = _InteractorStyle_Constants_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\n\r\n// Add module-level functions or api that you want to expose statically via\r\n// the next section...\r\n\r\nconst stateNames = {\r\n  Rotate: States.IS_ROTATE,\r\n  Pan: States.IS_PAN,\r\n  Spin: States.IS_SPIN,\r\n  Dolly: States.IS_DOLLY,\r\n  CameraPose: States.IS_CAMERA_POSE,\r\n  WindowLevel: States.IS_WINDOW_LEVEL,\r\n  Slice: States.IS_SLICE\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkInteractorStyle methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkInteractorStyle(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkInteractorStyle');\r\n\r\n  // Public API methods\r\n  // create bunch of Start/EndState methods\r\n  Object.keys(stateNames).forEach(key => {\r\n    _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.event(publicAPI, model, `Start${key}Event`);\r\n    publicAPI[`start${key}`] = () => {\r\n      if (model.state !== States.IS_NONE) {\r\n        return;\r\n      }\r\n      model.state = stateNames[key];\r\n      model._interactor.requestAnimation(publicAPI);\r\n      publicAPI.invokeStartInteractionEvent({\r\n        type: 'StartInteractionEvent'\r\n      });\r\n      publicAPI[`invokeStart${key}Event`]({\r\n        type: `Start${key}Event`\r\n      });\r\n    };\r\n    _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.event(publicAPI, model, `End${key}Event`);\r\n    publicAPI[`end${key}`] = () => {\r\n      if (model.state !== stateNames[key]) {\r\n        return;\r\n      }\r\n      model.state = States.IS_NONE;\r\n      model._interactor.cancelAnimation(publicAPI);\r\n      publicAPI.invokeEndInteractionEvent({\r\n        type: 'EndInteractionEvent'\r\n      });\r\n      publicAPI[`invokeEnd${key}Event`]({\r\n        type: `End${key}Event`\r\n      });\r\n      model._interactor.render();\r\n    };\r\n  });\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.handleKeyPress = callData => {\r\n    const rwi = model._interactor;\r\n    let ac = null;\r\n    switch (callData.key) {\r\n      case 'r':\r\n      case 'R':\r\n        callData.pokedRenderer.resetCamera();\r\n        rwi.render();\r\n        break;\r\n      case 'w':\r\n      case 'W':\r\n        ac = callData.pokedRenderer.getActors();\r\n        ac.forEach(anActor => {\r\n          const prop = anActor.getProperty();\r\n          if (prop.setRepresentationToWireframe) {\r\n            prop.setRepresentationToWireframe();\r\n          }\r\n        });\r\n        rwi.render();\r\n        break;\r\n      case 's':\r\n      case 'S':\r\n        ac = callData.pokedRenderer.getActors();\r\n        ac.forEach(anActor => {\r\n          const prop = anActor.getProperty();\r\n          if (prop.setRepresentationToSurface) {\r\n            prop.setRepresentationToSurface();\r\n          }\r\n        });\r\n        rwi.render();\r\n        break;\r\n      case 'v':\r\n      case 'V':\r\n        ac = callData.pokedRenderer.getActors();\r\n        ac.forEach(anActor => {\r\n          const prop = anActor.getProperty();\r\n          if (prop.setRepresentationToPoints) {\r\n            prop.setRepresentationToPoints();\r\n          }\r\n        });\r\n        rwi.render();\r\n        break;\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  state: States.IS_NONE,\r\n  handleObservers: 1,\r\n  autoAdjustCameraClippingRange: 1\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _InteractorObserver_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].extend(publicAPI, model, initialValues);\r\n\r\n  // Object specific methods\r\n  vtkInteractorStyle(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkInteractorStyle');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkInteractorStyle$1 = {\r\n  newInstance,\r\n  extend,\r\n  ..._InteractorStyle_Constants_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/InteractorStyle.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/InteractorStyle/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   States: () => (/* binding */ States),\n/* harmony export */   "default": () => (/* binding */ vtkInteractorStyleConstants)\n/* harmony export */ });\nconst States = {\r\n  IS_START: 0,\r\n  IS_NONE: 0,\r\n  IS_ROTATE: 1,\r\n  IS_PAN: 2,\r\n  IS_SPIN: 3,\r\n  IS_DOLLY: 4,\r\n  IS_CAMERA_POSE: 11,\r\n  IS_WINDOW_LEVEL: 1024,\r\n  IS_SLICE: 1025\r\n};\r\nvar vtkInteractorStyleConstants = {\r\n  States\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/InteractorStyle/Constants.js?')},"./node_modules/@kitware/vtk.js/Rendering/Core/Light.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LIGHT_TYPES: () => (/* binding */ LIGHT_TYPES),\n/* harmony export */   \"default\": () => (/* binding */ vtkLight$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst LIGHT_TYPES = ['HeadLight', 'CameraLight', 'SceneLight'];\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkLight methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkLight(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkLight');\r\n  const tmpVec = new Float64Array(3);\r\n  publicAPI.getTransformedPosition = () => {\r\n    if (model.transformMatrix) {\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_2__.transformMat4(tmpVec, model.position, model.transformMatrix);\r\n    } else {\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_2__.set(tmpVec, model.position[0], model.position[1], model.position[2]);\r\n    }\r\n    return tmpVec;\r\n  };\r\n  publicAPI.getTransformedFocalPoint = () => {\r\n    if (model.transformMatrix) {\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_2__.transformMat4(tmpVec, model.focalPoint, model.transformMatrix);\r\n    } else {\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_2__.set(tmpVec, model.focalPoint[0], model.focalPoint[1], model.focalPoint[2]);\r\n    }\r\n    return tmpVec;\r\n  };\r\n  publicAPI.getDirection = () => {\r\n    if (model.directionMTime < model.mtime) {\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_2__.sub(model.direction, model.focalPoint, model.position);\r\n      (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.l)(model.direction);\r\n      model.directionMTime = model.mtime;\r\n    }\r\n    return model.direction;\r\n  };\r\n\r\n  // Sets the direction from a vec3 instead of a focal point\r\n  publicAPI.setDirection = directionVector => {\r\n    const newFocalPoint = new Float64Array(3);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.sub(newFocalPoint, model.position, directionVector);\r\n    model.focalPoint = newFocalPoint;\r\n  };\r\n  publicAPI.setDirectionAngle = (elevation, azimuth) => {\r\n    const elevationRadians = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.r)(elevation);\r\n    const azimuthRadians = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.r)(azimuth);\r\n    publicAPI.setPosition(Math.cos(elevationRadians) * Math.sin(azimuthRadians), Math.sin(elevationRadians), Math.cos(elevationRadians) * Math.cos(azimuthRadians));\r\n    publicAPI.setFocalPoint(0, 0, 0);\r\n    publicAPI.setPositional(0);\r\n  };\r\n  publicAPI.setLightTypeToHeadLight = () => {\r\n    publicAPI.setLightType('HeadLight');\r\n  };\r\n  publicAPI.setLightTypeToCameraLight = () => {\r\n    publicAPI.setLightType('CameraLight');\r\n  };\r\n  publicAPI.setLightTypeToSceneLight = () => {\r\n    publicAPI.setTransformMatrix(null);\r\n    publicAPI.setLightType('SceneLight');\r\n  };\r\n  publicAPI.lightTypeIsHeadLight = () => model.lightType === 'HeadLight';\r\n  publicAPI.lightTypeIsSceneLight = () => model.lightType === 'SceneLight';\r\n  publicAPI.lightTypeIsCameraLight = () => model.lightType === 'CameraLight';\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  switch: true,\r\n  intensity: 1,\r\n  color: [1, 1, 1],\r\n  position: [0, 0, 1],\r\n  focalPoint: [0, 0, 0],\r\n  positional: false,\r\n  exponent: 1,\r\n  coneAngle: 30,\r\n  coneFalloff: 5,\r\n  attenuationValues: [1, 0, 0],\r\n  transformMatrix: null,\r\n  lightType: 'SceneLight',\r\n  shadowAttenuation: 1,\r\n  direction: [0, 0, 0],\r\n  directionMTime: 0\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['intensity', 'switch', 'positional', 'exponent', 'coneAngle', 'coneFalloff', 'transformMatrix', 'lightType', 'shadowAttenuation', 'attenuationValues']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGetArray(publicAPI, model, ['color', 'position', 'focalPoint', 'attenuationValues'], 3);\r\n\r\n  // Object methods\r\n  vtkLight(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkLight');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkLight$1 = {\r\n  newInstance,\r\n  extend,\r\n  LIGHT_TYPES\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Light.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkMapper$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _AbstractMapper3D_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AbstractMapper3D.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper3D.js\");\n/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray.js\");\n/* harmony import */ var _Common_DataModel_ImageData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/DataModel/ImageData.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/ImageData.js\");\n/* harmony import */ var _Common_Core_LookupTable_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/LookupTable.js */ \"./node_modules/@kitware/vtk.js/Common/Core/LookupTable.js\");\n/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n/* harmony import */ var _Common_Core_ScalarsToColors_Constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../Common/Core/ScalarsToColors/Constants.js */ \"./node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors/Constants.js\");\n/* harmony import */ var _Mapper_CoincidentTopologyHelper_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Mapper/CoincidentTopologyHelper.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Mapper/CoincidentTopologyHelper.js\");\n/* harmony import */ var _Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Mapper/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Constants.js\");\n/* harmony import */ var _Common_DataModel_DataSet_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../Common/DataModel/DataSet.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js\");\n/* harmony import */ var _OpenGL_HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../OpenGL/HardwareSelector/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector/Constants.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  FieldAssociations\r\n} = _Common_DataModel_DataSet_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"];\r\nconst {\r\n  staticOffsetAPI,\r\n  otherStaticMethods\r\n} = _Mapper_CoincidentTopologyHelper_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\r\nconst {\r\n  ColorMode,\r\n  ScalarMode,\r\n  GetArray\r\n} = _Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"];\r\nconst {\r\n  VectorMode\r\n} = _Common_Core_ScalarsToColors_Constants_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\r\nconst {\r\n  VtkDataTypes\r\n} = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction notImplemented(method) {\r\n  return () => _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.vtkErrorMacro(`vtkMapper::${method} - NOT IMPLEMENTED`);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkMapper methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkMapper(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkMapper');\r\n  publicAPI.getBounds = () => {\r\n    const input = publicAPI.getInputData();\r\n    if (!input) {\r\n      model.bounds = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__.F)();\r\n    } else {\r\n      if (!model.static) {\r\n        publicAPI.update();\r\n      }\r\n      model.bounds = input.getBounds();\r\n    }\r\n    return model.bounds;\r\n  };\r\n  publicAPI.setForceCompileOnly = v => {\r\n    model.forceCompileOnly = v;\r\n    // make sure we do NOT call modified()\r\n  };\r\n\r\n  publicAPI.setSelectionWebGLIdsToVTKIds = selectionWebGLIdsToVTKIds => {\r\n    model.selectionWebGLIdsToVTKIds = selectionWebGLIdsToVTKIds;\r\n    // make sure we do NOT call modified()\r\n    // this attribute is only used when processing a selection made with the hardware selector\r\n    // the mtime of the mapper doesn't need to be changed\r\n  };\r\n\r\n  publicAPI.createDefaultLookupTable = () => {\r\n    model.lookupTable = _Common_Core_LookupTable_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance();\r\n  };\r\n  publicAPI.getColorModeAsString = () => _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.enumToString(ColorMode, model.colorMode);\r\n  publicAPI.setColorModeToDefault = () => publicAPI.setColorMode(0);\r\n  publicAPI.setColorModeToMapScalars = () => publicAPI.setColorMode(1);\r\n  publicAPI.setColorModeToDirectScalars = () => publicAPI.setColorMode(2);\r\n  publicAPI.getScalarModeAsString = () => _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.enumToString(ScalarMode, model.scalarMode);\r\n  publicAPI.setScalarModeToDefault = () => publicAPI.setScalarMode(0);\r\n  publicAPI.setScalarModeToUsePointData = () => publicAPI.setScalarMode(1);\r\n  publicAPI.setScalarModeToUseCellData = () => publicAPI.setScalarMode(2);\r\n  publicAPI.setScalarModeToUsePointFieldData = () => publicAPI.setScalarMode(3);\r\n  publicAPI.setScalarModeToUseCellFieldData = () => publicAPI.setScalarMode(4);\r\n  publicAPI.setScalarModeToUseFieldData = () => publicAPI.setScalarMode(5);\r\n  publicAPI.getAbstractScalars = (input, scalarMode, arrayAccessMode, arrayId, arrayName) => {\r\n    // make sure we have an input\r\n    if (!input || !model.scalarVisibility) {\r\n      return {\r\n        scalars: null,\r\n        cellFLag: false\r\n      };\r\n    }\r\n    let scalars = null;\r\n    let cellFlag = false;\r\n\r\n    // get and scalar data according to scalar mode\r\n    if (scalarMode === ScalarMode.DEFAULT) {\r\n      scalars = input.getPointData().getScalars();\r\n      if (!scalars) {\r\n        scalars = input.getCellData().getScalars();\r\n        cellFlag = true;\r\n      }\r\n    } else if (scalarMode === ScalarMode.USE_POINT_DATA) {\r\n      scalars = input.getPointData().getScalars();\r\n    } else if (scalarMode === ScalarMode.USE_CELL_DATA) {\r\n      scalars = input.getCellData().getScalars();\r\n      cellFlag = true;\r\n    } else if (scalarMode === ScalarMode.USE_POINT_FIELD_DATA) {\r\n      const pd = input.getPointData();\r\n      if (arrayAccessMode === GetArray.BY_ID) {\r\n        scalars = pd.getArrayByIndex(arrayId);\r\n      } else {\r\n        scalars = pd.getArrayByName(arrayName);\r\n      }\r\n    } else if (scalarMode === ScalarMode.USE_CELL_FIELD_DATA) {\r\n      const cd = input.getCellData();\r\n      cellFlag = true;\r\n      if (arrayAccessMode === GetArray.BY_ID) {\r\n        scalars = cd.getArrayByIndex(arrayId);\r\n      } else {\r\n        scalars = cd.getArrayByName(arrayName);\r\n      }\r\n    } else if (scalarMode === ScalarMode.USE_FIELD_DATA) {\r\n      const fd = input.getFieldData();\r\n      if (arrayAccessMode === GetArray.BY_ID) {\r\n        scalars = fd.getArrayByIndex(arrayId);\r\n      } else {\r\n        scalars = fd.getArrayByName(arrayName);\r\n      }\r\n    }\r\n    return {\r\n      scalars,\r\n      cellFlag\r\n    };\r\n  };\r\n  publicAPI.mapScalars = (input, alpha) => {\r\n    const scalars = publicAPI.getAbstractScalars(input, model.scalarMode, model.arrayAccessMode, model.arrayId, model.colorByArrayName).scalars;\r\n    if (!scalars) {\r\n      model.colorCoordinates = null;\r\n      model.colorTextureMap = null;\r\n      model.colorMapColors = null;\r\n      return;\r\n    }\r\n\r\n    // we want to only recompute when something has changed\r\n    const toString = `${publicAPI.getMTime()}${scalars.getMTime()}${alpha}`;\r\n    if (model.colorBuildString === toString) return;\r\n    if (!model.useLookupTableScalarRange) {\r\n      publicAPI.getLookupTable().setRange(model.scalarRange[0], model.scalarRange[1]);\r\n    }\r\n\r\n    // Decide between texture color or vertex color.\r\n    // Cell data always uses vertex color.\r\n    // Only point data can use both texture and vertex coloring.\r\n    if (publicAPI.canUseTextureMapForColoring(input)) {\r\n      publicAPI.mapScalarsToTexture(scalars, alpha);\r\n    } else {\r\n      model.colorCoordinates = null;\r\n      model.colorTextureMap = null;\r\n      const lut = publicAPI.getLookupTable();\r\n      if (lut) {\r\n        // Ensure that the lookup table is built\r\n        lut.build();\r\n        model.colorMapColors = lut.mapScalars(scalars, model.colorMode, model.fieldDataTupleId);\r\n      }\r\n    }\r\n    model.colorBuildString = `${publicAPI.getMTime()}${scalars.getMTime()}${alpha}`;\r\n  };\r\n\r\n  //-----------------------------------------------------------------------------\r\n  publicAPI.scalarToTextureCoordinate = (scalarValue,\r\n  // Input scalar\r\n  rangeMin,\r\n  // range[0]\r\n  invRangeWidth) => {\r\n    // 1/(range[1]-range[0])\r\n    let texCoordS = 0.5; // Scalar value is arbitrary when NaN\r\n    let texCoordT = 1.0; // 1.0 in t coordinate means NaN\r\n    if (!(0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_5__.i)(scalarValue)) {\r\n      // 0.0 in t coordinate means not NaN.  So why am I setting it to 0.49?\r\n      // Because when you are mapping scalars and you have a NaN adjacent to\r\n      // anything else, the interpolation everywhere should be NaN.  Thus, I\r\n      // want the NaN color everywhere except right on the non-NaN neighbors.\r\n      // To simulate this, I set the t coord for the real numbers close to\r\n      // the threshold so that the interpolation almost immediately looks up\r\n      // the NaN value.\r\n      texCoordT = 0.49;\r\n      texCoordS = (scalarValue - rangeMin) * invRangeWidth;\r\n\r\n      // Some implementations apparently don't handle relatively large\r\n      // numbers (compared to the range [0.0, 1.0]) very well. In fact,\r\n      // values above 1122.0f appear to cause texture wrap-around on\r\n      // some systems even when edge clamping is enabled. Why 1122.0f? I\r\n      // don't know. For safety, we'll clamp at +/- 1000. This will\r\n      // result in incorrect images when the texture value should be\r\n      // above or below 1000, but I don't have a better solution.\r\n      if (texCoordS > 1000.0) {\r\n        texCoordS = 1000.0;\r\n      } else if (texCoordS < -1000.0) {\r\n        texCoordS = -1000.0;\r\n      }\r\n    }\r\n    return {\r\n      texCoordS,\r\n      texCoordT\r\n    };\r\n  };\r\n\r\n  //-----------------------------------------------------------------------------\r\n  publicAPI.createColorTextureCoordinates = (input, output, numScalars, numComps, component, range, tableRange, tableNumberOfColors, useLogScale) => {\r\n    // We have to change the range used for computing texture\r\n    // coordinates slightly to accommodate the special above- and\r\n    // below-range colors that are the first and last texels,\r\n    // respectively.\r\n    const scalarTexelWidth = (range[1] - range[0]) / tableNumberOfColors;\r\n    const paddedRange = [];\r\n    paddedRange[0] = range[0] - scalarTexelWidth;\r\n    paddedRange[1] = range[1] + scalarTexelWidth;\r\n    const invRangeWidth = 1.0 / (paddedRange[1] - paddedRange[0]);\r\n    const outputV = output.getData();\r\n    const inputV = input.getData();\r\n    let count = 0;\r\n    let outputCount = 0;\r\n    if (component < 0 || component >= numComps) {\r\n      for (let scalarIdx = 0; scalarIdx < numScalars; ++scalarIdx) {\r\n        let sum = 0;\r\n        for (let compIdx = 0; compIdx < numComps; ++compIdx) {\r\n          sum += inputV[count] * inputV[count];\r\n          count++;\r\n        }\r\n        let magnitude = Math.sqrt(sum);\r\n        if (useLogScale) {\r\n          magnitude = _Common_Core_LookupTable_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].applyLogScale(magnitude, tableRange, range);\r\n        }\r\n        const outputs = publicAPI.scalarToTextureCoordinate(magnitude, paddedRange[0], invRangeWidth);\r\n        outputV[outputCount] = outputs.texCoordS;\r\n        outputV[outputCount + 1] = outputs.texCoordT;\r\n        outputCount += 2;\r\n      }\r\n    } else {\r\n      count += component;\r\n      for (let scalarIdx = 0; scalarIdx < numScalars; ++scalarIdx) {\r\n        let inputValue = inputV[count];\r\n        if (useLogScale) {\r\n          inputValue = _Common_Core_LookupTable_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].applyLogScale(inputValue, tableRange, range);\r\n        }\r\n        const outputs = publicAPI.scalarToTextureCoordinate(inputValue, paddedRange[0], invRangeWidth);\r\n        outputV[outputCount] = outputs.texCoordS;\r\n        outputV[outputCount + 1] = outputs.texCoordT;\r\n        outputCount += 2;\r\n        count += numComps;\r\n      }\r\n    }\r\n  };\r\n  publicAPI.mapScalarsToTexture = (scalars, alpha) => {\r\n    const range = model.lookupTable.getRange();\r\n    const useLogScale = model.lookupTable.usingLogScale();\r\n    if (useLogScale) {\r\n      // convert range to log.\r\n      _Common_Core_LookupTable_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getLogRange(range, range);\r\n    }\r\n    const origAlpha = model.lookupTable.getAlpha();\r\n\r\n    // Get rid of vertex color array.  Only texture or vertex coloring\r\n    // can be active at one time.  The existence of the array is the\r\n    // signal to use that technique.\r\n    model.colorMapColors = null;\r\n\r\n    // If the lookup table has changed, then recreate the color texture map.\r\n    // Set a new lookup table changes this->MTime.\r\n    if (model.colorTextureMap == null || publicAPI.getMTime() > model.colorTextureMap.getMTime() || model.lookupTable.getMTime() > model.colorTextureMap.getMTime() || model.lookupTable.getAlpha() !== alpha) {\r\n      model.lookupTable.setAlpha(alpha);\r\n      model.colorTextureMap = null;\r\n\r\n      // Get the texture map from the lookup table.\r\n      // Create a dummy ramp of scalars.\r\n      // In the future, we could extend vtkScalarsToColors.\r\n      model.lookupTable.build();\r\n      let numberOfColors = model.lookupTable.getNumberOfAvailableColors();\r\n      if (numberOfColors > 4094) {\r\n        numberOfColors = 4094;\r\n      }\r\n      if (numberOfColors < 64) {\r\n        numberOfColors = 64;\r\n      }\r\n      numberOfColors += 2;\r\n      const k = (range[1] - range[0]) / (numberOfColors - 2);\r\n      const newArray = new Float64Array(numberOfColors * 2);\r\n      for (let i = 0; i < numberOfColors; ++i) {\r\n        newArray[i] = range[0] + i * k - k / 2.0; // minus k / 2 to start at below range color\r\n        if (useLogScale) {\r\n          newArray[i] = 10.0 ** newArray[i];\r\n        }\r\n      }\r\n      // Dimension on NaN.\r\n      for (let i = 0; i < numberOfColors; ++i) {\r\n        newArray[i + numberOfColors] = NaN;\r\n      }\r\n      model.colorTextureMap = _Common_DataModel_ImageData_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance();\r\n      model.colorTextureMap.setExtent(0, numberOfColors - 1, 0, 1, 0, 0);\r\n      const tmp = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance({\r\n        numberOfComponents: 1,\r\n        values: newArray\r\n      });\r\n      model.colorTextureMap.getPointData().setScalars(model.lookupTable.mapScalars(tmp, model.colorMode, 0));\r\n      model.lookupTable.setAlpha(origAlpha);\r\n    }\r\n\r\n    // Create new coordinates if necessary.\r\n    // Need to compare lookup table in case the range has changed.\r\n    if (!model.colorCoordinates || publicAPI.getMTime() > model.colorCoordinates.getMTime() || publicAPI.getInputData(0).getMTime() > model.colorCoordinates.getMTime() || model.lookupTable.getMTime() > model.colorCoordinates.getMTime()) {\r\n      // Get rid of old colors\r\n      model.colorCoordinates = null;\r\n\r\n      // Now create the color texture coordinates.\r\n      const numComps = scalars.getNumberOfComponents();\r\n      const num = scalars.getNumberOfTuples();\r\n\r\n      // const fArray = new FloatArray(num * 2);\r\n      model.colorCoordinates = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance({\r\n        numberOfComponents: 2,\r\n        values: new Float32Array(num * 2)\r\n      });\r\n      let scalarComponent = model.lookupTable.getVectorComponent();\r\n      // Although I like the feature of applying magnitude to single component\r\n      // scalars, it is not how the old MapScalars for vertex coloring works.\r\n      if (model.lookupTable.getVectorMode() === VectorMode.MAGNITUDE && scalars.getNumberOfComponents() > 1) {\r\n        scalarComponent = -1;\r\n      }\r\n      publicAPI.createColorTextureCoordinates(scalars, model.colorCoordinates, num, numComps, scalarComponent, range, model.lookupTable.getRange(), model.colorTextureMap.getPointData().getScalars().getNumberOfTuples() / 2 - 2, useLogScale);\r\n    }\r\n  };\r\n  publicAPI.getIsOpaque = () => {\r\n    const input = publicAPI.getInputData();\r\n    const gasResult = publicAPI.getAbstractScalars(input, model.scalarMode, model.arrayAccessMode, model.arrayId, model.colorByArrayName);\r\n    const scalars = gasResult.scalars;\r\n    if (!model.scalarVisibility || scalars == null) {\r\n      // No scalar colors.\r\n      return true;\r\n    }\r\n    const lut = publicAPI.getLookupTable();\r\n    if (lut) {\r\n      // Ensure that the lookup table is built\r\n      lut.build();\r\n      return lut.areScalarsOpaque(scalars, model.colorMode, -1);\r\n    }\r\n    return true;\r\n  };\r\n  publicAPI.canUseTextureMapForColoring = input => {\r\n    if (!model.interpolateScalarsBeforeMapping) {\r\n      return false; // user doesn't want us to use texture maps at all.\r\n    }\r\n\r\n    // index color does not use textures\r\n    if (model.lookupTable && model.lookupTable.getIndexedLookup()) {\r\n      return false;\r\n    }\r\n    const gasResult = publicAPI.getAbstractScalars(input, model.scalarMode, model.arrayAccessMode, model.arrayId, model.colorByArrayName);\r\n    const scalars = gasResult.scalars;\r\n    if (!scalars) {\r\n      // no scalars on this dataset, we don't care if texture is used at all.\r\n      return false;\r\n    }\r\n    if (gasResult.cellFlag) {\r\n      return false; // cell data colors, don't use textures.\r\n    }\r\n\r\n    if (model.colorMode === ColorMode.DEFAULT && scalars.getDataType() === VtkDataTypes.UNSIGNED_CHAR || model.colorMode === ColorMode.DIRECT_SCALARS) {\r\n      // Don't use texture is direct coloring using RGB unsigned chars is\r\n      // requested.\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  publicAPI.clearColorArrays = () => {\r\n    model.colorMapColors = null;\r\n    model.colorCoordinates = null;\r\n    model.colorTextureMap = null;\r\n  };\r\n  publicAPI.getLookupTable = () => {\r\n    if (!model.lookupTable) {\r\n      publicAPI.createDefaultLookupTable();\r\n    }\r\n    return model.lookupTable;\r\n  };\r\n  publicAPI.getMTime = () => {\r\n    let mt = model.mtime;\r\n    if (model.lookupTable !== null) {\r\n      const time = model.lookupTable.getMTime();\r\n      mt = time > mt ? time : mt;\r\n    }\r\n    return mt;\r\n  };\r\n  publicAPI.getPrimitiveCount = () => {\r\n    const input = publicAPI.getInputData();\r\n    const pcount = {\r\n      points: input.getPoints().getNumberOfValues() / 3,\r\n      verts: input.getVerts().getNumberOfValues() - input.getVerts().getNumberOfCells(),\r\n      lines: input.getLines().getNumberOfValues() - 2 * input.getLines().getNumberOfCells(),\r\n      triangles: input.getPolys().getNumberOfValues() - 3 * input.getPolys().getNumberOfCells()\r\n    };\r\n    return pcount;\r\n  };\r\n  publicAPI.acquireInvertibleLookupTable = notImplemented('AcquireInvertibleLookupTable');\r\n  publicAPI.valueToColor = notImplemented('ValueToColor');\r\n  publicAPI.colorToValue = notImplemented('ColorToValue');\r\n  publicAPI.useInvertibleColorFor = notImplemented('UseInvertibleColorFor');\r\n  publicAPI.clearInvertibleColor = notImplemented('ClearInvertibleColor');\r\n  publicAPI.processSelectorPixelBuffers = (selector, pixelOffsets) => {\r\n    /* eslint-disable no-bitwise */\r\n    if (!selector || !model.selectionWebGLIdsToVTKIds || !model.populateSelectionSettings) {\r\n      return;\r\n    }\r\n    const rawLowData = selector.getRawPixelBuffer(_OpenGL_HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_10__.PassTypes.ID_LOW24);\r\n    const rawHighData = selector.getRawPixelBuffer(_OpenGL_HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_10__.PassTypes.ID_HIGH24);\r\n    const currentPass = selector.getCurrentPass();\r\n    const fieldAssociation = selector.getFieldAssociation();\r\n    let idMap = null;\r\n    if (fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_POINTS) {\r\n      idMap = model.selectionWebGLIdsToVTKIds.points;\r\n    } else if (fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_CELLS) {\r\n      idMap = model.selectionWebGLIdsToVTKIds.cells;\r\n    }\r\n    if (!idMap) {\r\n      return;\r\n    }\r\n    pixelOffsets.forEach(pos => {\r\n      if (currentPass === _OpenGL_HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_10__.PassTypes.ID_LOW24) {\r\n        let inValue = 0;\r\n        if (rawHighData) {\r\n          inValue += rawHighData[pos];\r\n          inValue *= 256;\r\n        }\r\n        inValue += rawLowData[pos + 2];\r\n        inValue *= 256;\r\n        inValue += rawLowData[pos + 1];\r\n        inValue *= 256;\r\n        inValue += rawLowData[pos];\r\n        const outValue = idMap[inValue];\r\n        const lowData = selector.getPixelBuffer(_OpenGL_HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_10__.PassTypes.ID_LOW24);\r\n        lowData[pos] = outValue & 0xff;\r\n        lowData[pos + 1] = (outValue & 0xff00) >> 8;\r\n        lowData[pos + 2] = (outValue & 0xff0000) >> 16;\r\n      } else if (currentPass === _OpenGL_HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_10__.PassTypes.ID_HIGH24 && rawHighData) {\r\n        let inValue = 0;\r\n        inValue += rawHighData[pos];\r\n        inValue *= 256;\r\n        inValue += rawLowData[pos];\r\n        inValue *= 256;\r\n        inValue += rawLowData[pos + 1];\r\n        inValue *= 256;\r\n        inValue += rawLowData[pos + 2];\r\n        const outValue = idMap[inValue];\r\n        const highData = selector.getPixelBuffer(_OpenGL_HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_10__.PassTypes.ID_HIGH24);\r\n        highData[pos] = (outValue & 0xff000000) >> 24;\r\n      }\r\n    });\r\n    /* eslint-enable no-bitwise */\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  colorMapColors: null,\r\n  // Same as this->Colors\r\n\r\n  static: false,\r\n  lookupTable: null,\r\n  scalarVisibility: true,\r\n  scalarRange: [0, 1],\r\n  useLookupTableScalarRange: false,\r\n  colorMode: 0,\r\n  scalarMode: 0,\r\n  arrayAccessMode: 1,\r\n  // By_NAME\r\n\r\n  renderTime: 0,\r\n  colorByArrayName: null,\r\n  fieldDataTupleId: -1,\r\n  populateSelectionSettings: true,\r\n  selectionWebGLIdsToVTKIds: null,\r\n  interpolateScalarsBeforeMapping: false,\r\n  colorCoordinates: null,\r\n  colorTextureMap: null,\r\n  forceCompileOnly: 0,\r\n  useInvertibleColors: false,\r\n  invertibleScalars: null,\r\n  customShaderAttributes: []\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _AbstractMapper3D_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].extend(publicAPI, model, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['colorCoordinates', 'colorMapColors', 'colorTextureMap', 'selectionWebGLIdsToVTKIds']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['colorByArrayName', 'arrayAccessMode', 'colorMode', 'fieldDataTupleId', 'interpolateScalarsBeforeMapping', 'lookupTable', 'populateSelectionSettings', 'renderTime', 'scalarMode', 'scalarVisibility', 'static', 'useLookupTableScalarRange', 'customShaderAttributes' // point data array names that will be transferred to the VBO\r\n  ]);\r\n\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGetArray(publicAPI, model, ['scalarRange'], 2);\r\n  _Mapper_CoincidentTopologyHelper_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].implementCoincidentTopologyMethods(publicAPI, model);\r\n\r\n  // Object methods\r\n  vtkMapper(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkMapper');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkMapper$1 = {\r\n  newInstance,\r\n  extend,\r\n  ...staticOffsetAPI,\r\n  ...otherStaticMethods,\r\n  ..._Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/Mapper2D.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkMapper2D$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _AbstractMapper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AbstractMapper.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/AbstractMapper.js\");\n/* harmony import */ var _Common_Core_LookupTable_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/LookupTable.js */ \"./node_modules/@kitware/vtk.js/Common/Core/LookupTable.js\");\n/* harmony import */ var _Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Mapper/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Constants.js\");\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  ColorMode,\r\n  ScalarMode,\r\n  GetArray\r\n} = _Mapper_Constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\r\n\r\n// ---------------------------------------------------------------------------\r\n// vtkMapper2D methods\r\n// ---------------------------------------------------------------------------\r\n\r\nfunction vtkMapper2D(publicAPI, model) {\r\n  // Set out className\r\n  model.classHierarchy.push('vtkMapper2D');\r\n  publicAPI.createDefaultLookupTable = () => {\r\n    model.lookupTable = _Common_Core_LookupTable_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance();\r\n  };\r\n  publicAPI.getColorModeAsString = () => _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.enumToString(ColorMode, model.colorMode);\r\n  publicAPI.setColorModeToDefault = () => publicAPI.setColorMode(0);\r\n  publicAPI.setColorModeToMapScalars = () => publicAPI.setColorMode(1);\r\n  publicAPI.setColorModeToDirectScalars = () => publicAPI.setColorMode(2);\r\n  publicAPI.getScalarModeAsString = () => _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.enumToString(ScalarMode, model.scalarMode);\r\n  publicAPI.setScalarModeToDefault = () => publicAPI.setScalarMode(0);\r\n  publicAPI.setScalarModeToUsePointData = () => publicAPI.setScalarMode(1);\r\n  publicAPI.setScalarModeToUseCellData = () => publicAPI.setScalarMode(2);\r\n  publicAPI.setScalarModeToUsePointFieldData = () => publicAPI.setScalarMode(3);\r\n  publicAPI.setScalarModeToUseCellFieldData = () => publicAPI.setScalarMode(4);\r\n  publicAPI.setScalarModeToUseFieldData = () => publicAPI.setScalarMode(5);\r\n  publicAPI.getAbstractScalars = (input, scalarMode, arrayAccessMode, arrayId, arrayName) => {\r\n    // make sure we have an input\r\n    if (!input || !model.scalarVisibility) {\r\n      return {\r\n        scalars: null,\r\n        cellFLag: false\r\n      };\r\n    }\r\n    let scalars = null;\r\n    let cellFlag = false;\r\n\r\n    // get scalar data and point/cell attribute according to scalar mode\r\n    if (scalarMode === ScalarMode.DEFAULT) {\r\n      scalars = input.getPointData().getScalars();\r\n      if (!scalars) {\r\n        scalars = input.getCellData().getScalars();\r\n        cellFlag = true;\r\n      }\r\n    } else if (scalarMode === ScalarMode.USE_POINT_DATA) {\r\n      scalars = input.getPointData().getScalars();\r\n    } else if (scalarMode === ScalarMode.USE_CELL_DATA) {\r\n      scalars = input.getCellData().getScalars();\r\n      cellFlag = true;\r\n    } else if (scalarMode === ScalarMode.USE_POINT_FIELD_DATA) {\r\n      const pd = input.getPointData();\r\n      if (arrayAccessMode === GetArray.BY_ID) {\r\n        scalars = pd.getArrayByIndex(arrayId);\r\n      } else {\r\n        scalars = pd.getArrayByName(arrayName);\r\n      }\r\n    } else if (scalarMode === ScalarMode.USE_CELL_FIELD_DATA) {\r\n      const cd = input.getCellData();\r\n      cellFlag = true;\r\n      if (arrayAccessMode === GetArray.BY_ID) {\r\n        scalars = cd.getArrayByIndex(arrayId);\r\n      } else {\r\n        scalars = cd.getArrayByName(arrayName);\r\n      }\r\n    } else if (scalarMode === ScalarMode.USE_FIELD_DATA) {\r\n      const fd = input.getFieldData();\r\n      if (arrayAccessMode === GetArray.BY_ID) {\r\n        scalars = fd.getArrayByIndex(arrayId);\r\n      } else {\r\n        scalars = fd.getArrayByName(arrayName);\r\n      }\r\n    }\r\n    return {\r\n      scalars,\r\n      cellFlag\r\n    };\r\n  };\r\n  publicAPI.getLookupTable = () => {\r\n    if (!model.lookupTable) {\r\n      publicAPI.createDefaultLookupTable();\r\n    }\r\n    return model.lookupTable;\r\n  };\r\n  publicAPI.getMTime = () => {\r\n    let mt = model.mtime;\r\n    if (model.lookupTable !== null) {\r\n      const time = model.lookupTable.getMTime();\r\n      mt = time > mt ? time : mt;\r\n    }\r\n    return mt;\r\n  };\r\n  publicAPI.mapScalars = (input, alpha) => {\r\n    const scalars = publicAPI.getAbstractScalars(input, model.scalarMode, model.arrayAccessMode, model.arrayId, model.colorByArrayName).scalars;\r\n    if (!scalars) {\r\n      model.colorMapColors = null;\r\n      return;\r\n    }\r\n\r\n    // we want to only recompute when something has changed\r\n    const toString = `${publicAPI.getMTime()}${scalars.getMTime()}${alpha}`;\r\n    if (model.colorBuildString === toString) return;\r\n    if (!model.useLookupTableScalarRange) {\r\n      publicAPI.getLookupTable().setRange(model.scalarRange[0], model.scalarRange[1]);\r\n    }\r\n    const lut = publicAPI.getLookupTable();\r\n    if (lut) {\r\n      // Ensure that the lookup table is built\r\n      lut.build();\r\n      model.colorMapColors = lut.mapScalars(scalars, model.colorMode, model.fieldDataTupleId);\r\n    }\r\n    model.colorBuildString = `${publicAPI.getMTime()}${scalars.getMTime()}${alpha}`;\r\n  };\r\n  publicAPI.getPrimitiveCount = () => {\r\n    const input = publicAPI.getInputData();\r\n    const pcount = {\r\n      points: input.getPoints().getNumberOfValues() / 3,\r\n      verts: input.getVerts().getNumberOfValues() - input.getVerts().getNumberOfCells(),\r\n      lines: input.getLines().getNumberOfValues() - 2 * input.getLines().getNumberOfCells(),\r\n      triangles: input.getPolys().getNumberOfValues() - 3 * input.getPolys().getNumberOfCells()\r\n    };\r\n    return pcount;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  static: false,\r\n  lookupTable: null,\r\n  scalarVisibility: false,\r\n  scalarRange: [0, 1],\r\n  useLookupTableScalarRange: false,\r\n  colorMode: 0,\r\n  scalarMode: 0,\r\n  arrayAccessMode: 1,\r\n  // By_NAME\r\n\r\n  renderTime: 0,\r\n  colorByArrayName: null,\r\n  transformCoordinate: null,\r\n  viewSpecificProperties: null,\r\n  customShaderAttributes: []\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _AbstractMapper_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].extend(publicAPI, model, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['colorMapColors']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['arrayAccessMode', 'colorByArrayName', 'colorMode', 'lookupTable', 'renderTime', 'scalarMode', 'scalarVisibility', 'static', 'transformCoordinate', 'useLookupTableScalarRange', 'viewSpecificProperties', 'customShaderAttributes' // point data array names that will be transferred to the VBO\r\n  ]);\r\n\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGetArray(publicAPI, model, ['scalarRange'], 2);\r\n  if (!model.viewSpecificProperties) {\r\n    model.viewSpecificProperties = {};\r\n  }\r\n\r\n  // Object methods\r\n  vtkMapper2D(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkMapper2D');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkMapper2D$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Mapper2D.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/Mapper/CoincidentTopologyHelper.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CATEGORIES: () => (/* binding */ CATEGORIES),\n/* harmony export */   "default": () => (/* binding */ CoincidentTopologyHelper)\n/* harmony export */ });\n/* harmony import */ var _Static_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Static.js */ "./node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Static.js");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n\r\n\r\n\r\n/* eslint-disable arrow-body-style */\r\nfunction addCoincidentTopologyMethods(publicAPI, model, nameList) {\r\n  nameList.forEach(item => {\r\n    publicAPI[`get${item.method}`] = () => model[item.key];\r\n    publicAPI[`set${item.method}`] = (factor, offset) => {\r\n      model[item.key] = {\r\n        factor,\r\n        offset\r\n      };\r\n    };\r\n  });\r\n}\r\nconst CATEGORIES = [\'Polygon\', \'Line\', \'Point\'];\r\n\r\n// CoincidentTopology static methods ------------------------------------------\r\n\r\nconst staticOffsetModel = {\r\n  Polygon: {\r\n    factor: 2,\r\n    offset: 0\r\n  },\r\n  Line: {\r\n    factor: 1,\r\n    offset: -1\r\n  },\r\n  Point: {\r\n    factor: 0,\r\n    offset: -2\r\n  }\r\n};\r\nconst staticOffsetAPI = {};\r\naddCoincidentTopologyMethods(staticOffsetAPI, staticOffsetModel, CATEGORIES.map(key => ({\r\n  key,\r\n  method: `ResolveCoincidentTopology${key}OffsetParameters`\r\n})));\r\nfunction implementCoincidentTopologyMethods(publicAPI, model) {\r\n  if (model.resolveCoincidentTopology === undefined) {\r\n    model.resolveCoincidentTopology = false;\r\n  }\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.setGet(publicAPI, model, [\'resolveCoincidentTopology\']);\r\n\r\n  // Relative methods\r\n  model.topologyOffset = {\r\n    Polygon: {\r\n      factor: 0,\r\n      offset: 0\r\n    },\r\n    Line: {\r\n      factor: 0,\r\n      offset: 0\r\n    },\r\n    Point: {\r\n      factor: 0,\r\n      offset: 0\r\n    }\r\n  };\r\n\r\n  // Add Static methods to our instance\r\n  Object.keys(_Static_js__WEBPACK_IMPORTED_MODULE_0__["default"]).forEach(methodName => {\r\n    publicAPI[methodName] = _Static_js__WEBPACK_IMPORTED_MODULE_0__["default"][methodName];\r\n  });\r\n  Object.keys(staticOffsetAPI).forEach(methodName => {\r\n    publicAPI[methodName] = staticOffsetAPI[methodName];\r\n  });\r\n  addCoincidentTopologyMethods(publicAPI, model.topologyOffset, CATEGORIES.map(key => ({\r\n    key,\r\n    method: `RelativeCoincidentTopology${key}OffsetParameters`\r\n  })));\r\n  publicAPI.getCoincidentTopologyPolygonOffsetParameters = () => {\r\n    const globalValue = staticOffsetAPI.getResolveCoincidentTopologyPolygonOffsetParameters();\r\n    const localValue = publicAPI.getRelativeCoincidentTopologyPolygonOffsetParameters();\r\n    return {\r\n      factor: globalValue.factor + localValue.factor,\r\n      offset: globalValue.offset + localValue.offset\r\n    };\r\n  };\r\n  publicAPI.getCoincidentTopologyLineOffsetParameters = () => {\r\n    const globalValue = staticOffsetAPI.getResolveCoincidentTopologyLineOffsetParameters();\r\n    const localValue = publicAPI.getRelativeCoincidentTopologyLineOffsetParameters();\r\n    return {\r\n      factor: globalValue.factor + localValue.factor,\r\n      offset: globalValue.offset + localValue.offset\r\n    };\r\n  };\r\n  publicAPI.getCoincidentTopologyPointOffsetParameter = () => {\r\n    const globalValue = staticOffsetAPI.getResolveCoincidentTopologyPointOffsetParameters();\r\n    const localValue = publicAPI.getRelativeCoincidentTopologyPointOffsetParameters();\r\n    return {\r\n      factor: globalValue.factor + localValue.factor,\r\n      offset: globalValue.offset + localValue.offset\r\n    };\r\n  };\r\n}\r\nvar CoincidentTopologyHelper = {\r\n  implementCoincidentTopologyMethods,\r\n  staticOffsetAPI,\r\n  otherStaticMethods: _Static_js__WEBPACK_IMPORTED_MODULE_0__["default"],\r\n  CATEGORIES\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Mapper/CoincidentTopologyHelper.js?')},"./node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ColorMode: () => (/* binding */ ColorMode),\n/* harmony export */   GetArray: () => (/* binding */ GetArray),\n/* harmony export */   ScalarMode: () => (/* binding */ ScalarMode),\n/* harmony export */   "default": () => (/* binding */ Constants)\n/* harmony export */ });\nconst ColorMode = {\r\n  DEFAULT: 0,\r\n  MAP_SCALARS: 1,\r\n  DIRECT_SCALARS: 2\r\n};\r\nconst ScalarMode = {\r\n  DEFAULT: 0,\r\n  USE_POINT_DATA: 1,\r\n  USE_CELL_DATA: 2,\r\n  USE_POINT_FIELD_DATA: 3,\r\n  USE_CELL_FIELD_DATA: 4,\r\n  USE_FIELD_DATA: 5\r\n};\r\nconst GetArray = {\r\n  BY_ID: 0,\r\n  BY_NAME: 1\r\n};\r\nvar Constants = {\r\n  ColorMode,\r\n  GetArray,\r\n  ScalarMode\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Constants.js?')},"./node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Static.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RESOLVE_COINCIDENT_TOPOLOGY_MODE: () => (/* binding */ RESOLVE_COINCIDENT_TOPOLOGY_MODE),\n/* harmony export */   \"default\": () => (/* binding */ otherStaticMethods),\n/* harmony export */   getResolveCoincidentTopology: () => (/* binding */ getResolveCoincidentTopology),\n/* harmony export */   getResolveCoincidentTopologyAsString: () => (/* binding */ getResolveCoincidentTopologyAsString),\n/* harmony export */   getResolveCoincidentTopologyPolygonOffsetFaces: () => (/* binding */ getResolveCoincidentTopologyPolygonOffsetFaces),\n/* harmony export */   setResolveCoincidentTopology: () => (/* binding */ setResolveCoincidentTopology),\n/* harmony export */   setResolveCoincidentTopologyPolygonOffsetFaces: () => (/* binding */ setResolveCoincidentTopologyPolygonOffsetFaces),\n/* harmony export */   setResolveCoincidentTopologyToDefault: () => (/* binding */ setResolveCoincidentTopologyToDefault),\n/* harmony export */   setResolveCoincidentTopologyToOff: () => (/* binding */ setResolveCoincidentTopologyToOff),\n/* harmony export */   setResolveCoincidentTopologyToPolygonOffset: () => (/* binding */ setResolveCoincidentTopologyToPolygonOffset)\n/* harmony export */ });\nlet resolveCoincidentTopologyPolygonOffsetFaces = 1;\r\nlet resolveCoincidentTopology = 0;\r\nconst RESOLVE_COINCIDENT_TOPOLOGY_MODE = ['VTK_RESOLVE_OFF', 'VTK_RESOLVE_POLYGON_OFFSET'];\r\nfunction getResolveCoincidentTopologyPolygonOffsetFaces() {\r\n  return resolveCoincidentTopologyPolygonOffsetFaces;\r\n}\r\nfunction setResolveCoincidentTopologyPolygonOffsetFaces(value) {\r\n  resolveCoincidentTopologyPolygonOffsetFaces = value;\r\n}\r\nfunction getResolveCoincidentTopology() {\r\n  return resolveCoincidentTopology;\r\n}\r\nfunction setResolveCoincidentTopology() {\r\n  let mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n  resolveCoincidentTopology = mode;\r\n}\r\nfunction setResolveCoincidentTopologyToDefault() {\r\n  setResolveCoincidentTopology(0); // VTK_RESOLVE_OFF\r\n}\r\n\r\nfunction setResolveCoincidentTopologyToOff() {\r\n  setResolveCoincidentTopology(0); // VTK_RESOLVE_OFF\r\n}\r\n\r\nfunction setResolveCoincidentTopologyToPolygonOffset() {\r\n  setResolveCoincidentTopology(1); // VTK_RESOLVE_POLYGON_OFFSET\r\n}\r\n\r\nfunction getResolveCoincidentTopologyAsString() {\r\n  return RESOLVE_COINCIDENT_TOPOLOGY_MODE[resolveCoincidentTopology];\r\n}\r\nvar otherStaticMethods = {\r\n  getResolveCoincidentTopologyAsString,\r\n  getResolveCoincidentTopologyPolygonOffsetFaces,\r\n  getResolveCoincidentTopology,\r\n  setResolveCoincidentTopology,\r\n  setResolveCoincidentTopologyPolygonOffsetFaces,\r\n  setResolveCoincidentTopologyToDefault,\r\n  setResolveCoincidentTopologyToOff,\r\n  setResolveCoincidentTopologyToPolygonOffset\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Mapper/Static.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/Prop.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkProp$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Prop_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Prop/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Prop/Constants.js\");\n\r\n\r\n\r\nconst {\r\n  CoordinateSystem\r\n} = _Prop_Constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\nfunction notImplemented(method) {\r\n  return () => _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.vtkErrorMacro(`vtkProp::${method} - NOT IMPLEMENTED`);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkProp methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkProp(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkProp');\r\n  publicAPI.getMTime = () => {\r\n    let m1 = model.mtime;\r\n    for (let index = 0; index < model.textures.length; ++index) {\r\n      const m2 = model.textures[index].getMTime();\r\n      if (m2 > m1) {\r\n        m1 = m2;\r\n      }\r\n    }\r\n    return m1;\r\n  };\r\n  publicAPI.processSelectorPixelBuffers = (selector, pixeloffsets) => {};\r\n  publicAPI.getNestedProps = () => null;\r\n  publicAPI.getActors = () => [];\r\n  publicAPI.getActors2D = () => [];\r\n  publicAPI.getVolumes = () => [];\r\n  publicAPI.pick = notImplemented('pick');\r\n  publicAPI.hasKey = notImplemented('hasKey');\r\n  publicAPI.getNestedVisibility = () => model.visibility && (!model._parentProp || model._parentProp.getNestedVisibility());\r\n  publicAPI.getNestedPickable = () => model.pickable && (!model._parentProp || model._parentProp.getNestedPickable());\r\n  publicAPI.getNestedDragable = () => model.dragable && (!model._parentProp || model._parentProp.getNestedDragable());\r\n  publicAPI.getRedrawMTime = () => model.mtime;\r\n  publicAPI.setEstimatedRenderTime = t => {\r\n    model.estimatedRenderTime = t;\r\n    model.savedEstimatedRenderTime = t;\r\n  };\r\n  publicAPI.restoreEstimatedRenderTime = () => {\r\n    model.estimatedRenderTime = model.savedEstimatedRenderTime;\r\n  };\r\n  publicAPI.addEstimatedRenderTime = t => {\r\n    model.estimatedRenderTime += t;\r\n  };\r\n  publicAPI.setAllocatedRenderTime = t => {\r\n    model.allocatedRenderTime = t;\r\n    model.savedEstimatedRenderTime = model.estimatedRenderTime;\r\n    model.estimatedRenderTime = 0;\r\n  };\r\n  publicAPI.getSupportsSelection = () => false;\r\n  publicAPI.getTextures = () => model.textures;\r\n  publicAPI.hasTexture = texture => model.textures.indexOf(texture) !== -1;\r\n  publicAPI.addTexture = texture => {\r\n    if (texture && !publicAPI.hasTexture(texture)) {\r\n      model.textures = model.textures.concat(texture);\r\n      publicAPI.modified();\r\n    }\r\n  };\r\n  publicAPI.removeTexture = texture => {\r\n    const newTextureList = model.textures.filter(item => item !== texture);\r\n    if (model.textures.length !== newTextureList.length) {\r\n      model.textures = newTextureList;\r\n      publicAPI.modified();\r\n    }\r\n  };\r\n  publicAPI.removeAllTextures = () => {\r\n    model.textures = [];\r\n    publicAPI.modified();\r\n  };\r\n\r\n  // not all mappers support all coordinate systems\r\n  publicAPI.setCoordinateSystemToWorld = () => publicAPI.setCoordinateSystem(CoordinateSystem.WORLD);\r\n  publicAPI.setCoordinateSystemToDisplay = () => publicAPI.setCoordinateSystem(CoordinateSystem.DISPLAY);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  // _parentProp: null,\r\n  allocatedRenderTime: 10,\r\n  coordinateSystem: CoordinateSystem.WORLD,\r\n  dragable: true,\r\n  estimatedRenderTime: 0,\r\n  paths: null,\r\n  pickable: true,\r\n  renderTimeMultiplier: 1,\r\n  savedEstimatedRenderTime: 0,\r\n  textures: [],\r\n  useBounds: true,\r\n  visibility: true\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['estimatedRenderTime', 'allocatedRenderTime']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['_parentProp', 'coordinateSystem', 'dragable', 'pickable', 'renderTimeMultiplier', 'useBounds', 'visibility']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.moveToProtected(publicAPI, model, ['parentProp']);\r\n\r\n  // Object methods\r\n  vtkProp(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkProp');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkProp$1 = {\r\n  newInstance,\r\n  extend,\r\n  ..._Prop_Constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Prop.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/Prop3D.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ vtkProp3D$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gl-matrix */ "./node_modules/gl-matrix/esm/quat.js");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gl-matrix */ "./node_modules/gl-matrix/esm/mat4.js");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/DataModel/BoundingBox.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js");\n/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ "./node_modules/@kitware/vtk.js/Common/Core/Math/index.js");\n/* harmony import */ var _Prop_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Prop.js */ "./node_modules/@kitware/vtk.js/Rendering/Core/Prop.js");\n\r\n\r\n\r\n\r\n\r\n\r\nconst VTK_EPSILON = 1e-6;\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkProp3D methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkProp3D(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkProp3D\');\r\n  publicAPI.addPosition = deltaXYZ => {\r\n    model.position = model.position.map((value, index) => value + deltaXYZ[index]);\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.getOrientationWXYZ = () => {\r\n    const q = gl_matrix__WEBPACK_IMPORTED_MODULE_4__.create();\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_5__.getRotation(q, model.rotation);\r\n    const oaxis = new Float64Array(3);\r\n    const w = gl_matrix__WEBPACK_IMPORTED_MODULE_4__.getAxisAngle(oaxis, q);\r\n    return [(0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.A)(w), oaxis[0], oaxis[1], oaxis[2]];\r\n  };\r\n  publicAPI.getOrientationQuaternion = function () {\r\n    let out = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n    return gl_matrix__WEBPACK_IMPORTED_MODULE_5__.getRotation(out, model.rotation);\r\n  };\r\n  publicAPI.rotateX = val => {\r\n    if (val === 0.0) {\r\n      return;\r\n    }\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_5__.rotateX(model.rotation, model.rotation, (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.r)(val));\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.rotateY = val => {\r\n    if (val === 0.0) {\r\n      return;\r\n    }\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_5__.rotateY(model.rotation, model.rotation, (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.r)(val));\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.rotateZ = val => {\r\n    if (val === 0.0) {\r\n      return;\r\n    }\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_5__.rotateZ(model.rotation, model.rotation, (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.r)(val));\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.rotateWXYZ = (degrees, x, y, z) => {\r\n    if (degrees === 0.0 || x === 0.0 && y === 0.0 && z === 0.0) {\r\n      return;\r\n    }\r\n\r\n    // convert to radians\r\n    const angle = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.r)(degrees);\r\n    const q = gl_matrix__WEBPACK_IMPORTED_MODULE_4__.create();\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_4__.setAxisAngle(q, [x, y, z], angle);\r\n    const quatMat = new Float64Array(16);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_5__.fromQuat(quatMat, q);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_5__.multiply(model.rotation, model.rotation, quatMat);\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.rotateQuaternion = orientationQuaternion => {\r\n    if (Math.abs(orientationQuaternion[3]) >= 1 - VTK_EPSILON) {\r\n      return;\r\n    }\r\n    const oriQuatMat = gl_matrix__WEBPACK_IMPORTED_MODULE_5__.fromQuat(new Float64Array(16), orientationQuaternion);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_5__.multiply(model.rotation, model.rotation, oriQuatMat);\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.setOrientation = (x, y, z) => {\r\n    if (x === model.orientation[0] && y === model.orientation[1] && z === model.orientation[2]) {\r\n      return false;\r\n    }\r\n    model.orientation = [x, y, z];\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_5__.identity(model.rotation);\r\n    publicAPI.rotateZ(z);\r\n    publicAPI.rotateX(x);\r\n    publicAPI.rotateY(y);\r\n    publicAPI.modified();\r\n    return true;\r\n  };\r\n  publicAPI.setUserMatrix = matrix => {\r\n    if ((0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_2__.a)(model.userMatrix, matrix)) {\r\n      return false;\r\n    }\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_5__.copy(model.userMatrix, matrix);\r\n    publicAPI.modified();\r\n    return true;\r\n  };\r\n  publicAPI.getMatrix = () => {\r\n    publicAPI.computeMatrix();\r\n    return model.matrix;\r\n  };\r\n  publicAPI.computeMatrix = () => {\r\n    // check whether or not need to rebuild the matrix\r\n    if (publicAPI.getMTime() > model.matrixMTime.getMTime()) {\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_5__.identity(model.matrix);\r\n      if (model.userMatrix) {\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_5__.multiply(model.matrix, model.matrix, model.userMatrix);\r\n      }\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_5__.translate(model.matrix, model.matrix, model.origin);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_5__.translate(model.matrix, model.matrix, model.position);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_5__.multiply(model.matrix, model.matrix, model.rotation);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_5__.scale(model.matrix, model.matrix, model.scale);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_5__.translate(model.matrix, model.matrix, [-model.origin[0], -model.origin[1], -model.origin[2]]);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_5__.transpose(model.matrix, model.matrix);\r\n\r\n      // check for identity\r\n      model.isIdentity = true;\r\n      for (let i = 0; i < 4; ++i) {\r\n        for (let j = 0; j < 4; ++j) {\r\n          if ((i === j ? 1.0 : 0.0) !== model.matrix[i + j * 4]) {\r\n            model.isIdentity = false;\r\n          }\r\n        }\r\n      }\r\n      model.matrixMTime.modified();\r\n    }\r\n  };\r\n  publicAPI.getCenter = () => _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_1__["default"].getCenter(model.bounds);\r\n  publicAPI.getLength = () => _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_1__["default"].getLength(model.bounds);\r\n  publicAPI.getXRange = () => _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_1__["default"].getXRange(model.bounds);\r\n  publicAPI.getYRange = () => _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_1__["default"].getYRange(model.bounds);\r\n  publicAPI.getZRange = () => _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_1__["default"].getZRange(model.bounds);\r\n  publicAPI.getUserMatrix = () => model.userMatrix;\r\n  function updateIdentityFlag() {\r\n    publicAPI.computeMatrix();\r\n  }\r\n  publicAPI.onModified(updateIdentityFlag);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  origin: [0, 0, 0],\r\n  position: [0, 0, 0],\r\n  orientation: [0, 0, 0],\r\n  rotation: null,\r\n  scale: [1, 1, 1],\r\n  bounds: [1, -1, 1, -1, 1, -1],\r\n  userMatrix: null,\r\n  userMatrixMTime: null,\r\n  cachedProp3D: null,\r\n  isIdentity: true,\r\n  matrixMTime: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _Prop_js__WEBPACK_IMPORTED_MODULE_3__["default"].extend(publicAPI, model, initialValues);\r\n  model.matrixMTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.matrixMTime);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, [\'bounds\', \'isIdentity\']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.getArray(publicAPI, model, [\'orientation\']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGetArray(publicAPI, model, [\'origin\', \'position\', \'scale\'], 3);\r\n\r\n  // Object internal instance\r\n  model.matrix = gl_matrix__WEBPACK_IMPORTED_MODULE_5__.identity(new Float64Array(16));\r\n  model.rotation = gl_matrix__WEBPACK_IMPORTED_MODULE_5__.identity(new Float64Array(16));\r\n  model.userMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_5__.identity(new Float64Array(16));\r\n  model.transform = null; // FIXME\r\n\r\n  // Object methods\r\n  vtkProp3D(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, \'vtkProp3D\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkProp3D$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Prop3D.js?')},"./node_modules/@kitware/vtk.js/Rendering/Core/Prop/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CoordinateSystem: () => (/* binding */ CoordinateSystem),\n/* harmony export */   "default": () => (/* binding */ Constants)\n/* harmony export */ });\nconst CoordinateSystem = {\r\n  DISPLAY: 0,\r\n  WORLD: 1\r\n};\r\nvar Constants = {\r\n  CoordinateSystem\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Prop/Constants.js?')},"./node_modules/@kitware/vtk.js/Rendering/Core/Property.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkProperty$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Property_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Property/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js\");\n\r\n\r\n\r\nconst {\r\n  Representation,\r\n  Interpolation\r\n} = _Property_Constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\nfunction notImplemented(method) {\r\n  return () => _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.vtkErrorMacro(`vtkProperty::${method} - NOT IMPLEMENTED`);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkProperty methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkProperty(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkProperty');\r\n  publicAPI.setColor = (r, g, b) => {\r\n    if (Array.isArray(r)) {\r\n      if (model.color[0] !== r[0] || model.color[1] !== r[1] || model.color[2] !== r[2]) {\r\n        model.color[0] = r[0];\r\n        model.color[1] = r[1];\r\n        model.color[2] = r[2];\r\n        publicAPI.modified();\r\n      }\r\n    } else if (model.color[0] !== r || model.color[1] !== g || model.color[2] !== b) {\r\n      model.color[0] = r;\r\n      model.color[1] = g;\r\n      model.color[2] = b;\r\n      publicAPI.modified();\r\n    }\r\n    publicAPI.setDiffuseColor(model.color);\r\n    publicAPI.setAmbientColor(model.color);\r\n    publicAPI.setSpecularColor(model.color);\r\n  };\r\n  publicAPI.computeCompositeColor = notImplemented('ComputeCompositeColor');\r\n  publicAPI.getColor = () => {\r\n    // Inline computeCompositeColor\r\n    let norm = 0.0;\r\n    if (model.ambient + model.diffuse + model.specular > 0) {\r\n      norm = 1.0 / (model.ambient + model.diffuse + model.specular);\r\n    }\r\n    for (let i = 0; i < 3; i++) {\r\n      model.color[i] = norm * (model.ambient * model.ambientColor[i] + model.diffuse * model.diffuseColor[i] + model.specular * model.specularColor[i]);\r\n    }\r\n    return [].concat(model.color);\r\n  };\r\n  publicAPI.setSpecularPower = specularPower => {\r\n    const roughness = 1 / Math.max(1.0, specularPower);\r\n    if (model.roughness !== roughness || model.specularPower !== specularPower) {\r\n      model.specularPower = specularPower; // Specular power still needs to be set as long as webgl is using it (otherwise testShaderReplacementsClear fails)\r\n      model.roughness = roughness;\r\n      publicAPI.modified();\r\n    }\r\n  };\r\n  publicAPI.addShaderVariable = notImplemented('AddShaderVariable');\r\n  publicAPI.setInterpolationToFlat = () => publicAPI.setInterpolation(Interpolation.FLAT);\r\n  publicAPI.setInterpolationToGouraud = () => publicAPI.setInterpolation(Interpolation.GOURAUD);\r\n  publicAPI.setInterpolationToPhong = () => publicAPI.setInterpolation(Interpolation.PHONG);\r\n  publicAPI.getInterpolationAsString = () => _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.enumToString(Interpolation, model.interpolation);\r\n  publicAPI.setRepresentationToWireframe = () => publicAPI.setRepresentation(Representation.WIREFRAME);\r\n  publicAPI.setRepresentationToSurface = () => publicAPI.setRepresentation(Representation.SURFACE);\r\n  publicAPI.setRepresentationToPoints = () => publicAPI.setRepresentation(Representation.POINTS);\r\n  publicAPI.getRepresentationAsString = () => _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.enumToString(Representation, model.representation);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  color: [1, 1, 1],\r\n  ambientColor: [1, 1, 1],\r\n  diffuseColor: [1, 1, 1],\r\n  specularColor: [1, 1, 1],\r\n  edgeColor: [0, 0, 0],\r\n  ambient: 0,\r\n  diffuse: 1,\r\n  metallic: 0,\r\n  roughness: 0.6,\r\n  normalStrength: 1,\r\n  emission: 1,\r\n  baseIOR: 1.45,\r\n  specular: 0,\r\n  specularPower: 1,\r\n  opacity: 1,\r\n  interpolation: Interpolation.GOURAUD,\r\n  representation: Representation.SURFACE,\r\n  edgeVisibility: false,\r\n  backfaceCulling: false,\r\n  frontfaceCulling: false,\r\n  pointSize: 1,\r\n  lineWidth: 1,\r\n  lighting: true,\r\n  shading: false,\r\n  materialName: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['lighting', 'interpolation', 'ambient', 'diffuse', 'metallic', 'roughness', 'normalStrength', 'emission', 'baseIOR', 'specular', 'specularPower', 'opacity', 'edgeVisibility', 'lineWidth', 'pointSize', 'backfaceCulling', 'frontfaceCulling', 'representation', 'diffuseTexture', 'metallicTexture', 'roughnessTexture', 'normalTexture', 'ambientOcclusionTexture', 'emissionTexture']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGetArray(publicAPI, model, ['ambientColor', 'specularColor', 'diffuseColor', 'edgeColor'], 3);\r\n\r\n  // Object methods\r\n  vtkProperty(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkProperty');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkProperty$1 = {\r\n  newInstance,\r\n  extend,\r\n  ..._Property_Constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Property.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/Property2D.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkProperty2D$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Property2D_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Property2D/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Property2D/Constants.js\");\n/* harmony import */ var _Property_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Property/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js\");\n\r\n\r\n\r\n\r\nconst {\r\n  DisplayLocation\r\n} = _Property2D_Constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkProperty2D methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkProperty2D(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkProperty2D');\r\n  publicAPI.setDisplayLocationToBackground = () => publicAPI.setDisplayLocation(DisplayLocation.BACKGROUND);\r\n  publicAPI.setDisplayLocationToForeground = () => publicAPI.setDisplayLocation(DisplayLocation.FOREGROUND);\r\n  publicAPI.setRepresentationToWireframe = () => publicAPI.setRepresentation(_Property_Constants_js__WEBPACK_IMPORTED_MODULE_2__.Representation.WIREFRAME);\r\n  publicAPI.setRepresentationToSurface = () => publicAPI.setRepresentation(_Property_Constants_js__WEBPACK_IMPORTED_MODULE_2__.Representation.SURFACE);\r\n  publicAPI.setRepresentationToPoints = () => publicAPI.setRepresentation(_Property_Constants_js__WEBPACK_IMPORTED_MODULE_2__.Representation.POINTS);\r\n  publicAPI.getRepresentationAsString = () => _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.enumToString(_Property_Constants_js__WEBPACK_IMPORTED_MODULE_2__.Representation, model.representation);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\nconst DEFAULT_VALUES = {\r\n  color: [1, 1, 1],\r\n  opacity: 1,\r\n  pointSize: 1,\r\n  lineWidth: 1,\r\n  representation: _Property_Constants_js__WEBPACK_IMPORTED_MODULE_2__.Representation.SURFACE,\r\n  displayLocation: DisplayLocation.FOREGROUND\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['opacity', 'lineWidth', 'pointSize', 'displayLocation', 'representation']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGetArray(publicAPI, model, ['color'], 3);\r\n\r\n  // Object methods\r\n  vtkProperty2D(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkProperty2D');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkProperty2D$1 = {\r\n  newInstance,\r\n  extend,\r\n  ..._Property2D_Constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Property2D.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/Property2D/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DisplayLocation: () => (/* binding */ DisplayLocation),\n/* harmony export */   "default": () => (/* binding */ Constants)\n/* harmony export */ });\nconst DisplayLocation = {\r\n  BACKGROUND: 0,\r\n  FOREGROUND: 1\r\n};\r\nvar Constants = {\r\n  DisplayLocation\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Property2D/Constants.js?')},"./node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Interpolation: () => (/* binding */ Interpolation),\n/* harmony export */   Representation: () => (/* binding */ Representation),\n/* harmony export */   Shading: () => (/* binding */ Shading),\n/* harmony export */   "default": () => (/* binding */ PropertyConst)\n/* harmony export */ });\nconst Shading = {\r\n  FLAT: 0,\r\n  GOURAUD: 1,\r\n  PHONG: 2\r\n};\r\nconst Representation = {\r\n  POINTS: 0,\r\n  WIREFRAME: 1,\r\n  SURFACE: 2\r\n};\r\nconst Interpolation = Shading;\r\nvar PropertyConst = {\r\n  Shading,\r\n  Representation,\r\n  Interpolation\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js?')},"./node_modules/@kitware/vtk.js/Rendering/Core/RenderWindow.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkRenderWindow$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   listViewAPIs: () => (/* binding */ listViewAPIs),\n/* harmony export */   newAPISpecificView: () => (/* binding */ newAPISpecificView),\n/* harmony export */   newInstance: () => (/* binding */ newInstance),\n/* harmony export */   registerViewConstructor: () => (/* binding */ registerViewConstructor)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n\r\n\r\nconst DEFAULT_VIEW_API = 'WebGL';\r\nconst VIEW_CONSTRUCTORS = Object.create(null);\r\n\r\n// ----------------------------------------------------------------------------\r\n// static methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction registerViewConstructor(name, constructor) {\r\n  VIEW_CONSTRUCTORS[name] = constructor;\r\n}\r\nfunction listViewAPIs() {\r\n  return Object.keys(VIEW_CONSTRUCTORS);\r\n}\r\nfunction newAPISpecificView(name) {\r\n  let initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  return VIEW_CONSTRUCTORS[name] && VIEW_CONSTRUCTORS[name](initialValues);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkRenderWindow methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkRenderWindow(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkRenderWindow');\r\n\r\n  // Add renderer\r\n  publicAPI.addRenderer = renderer => {\r\n    if (publicAPI.hasRenderer(renderer)) {\r\n      return;\r\n    }\r\n    renderer.setRenderWindow(publicAPI);\r\n    model.renderers.push(renderer);\r\n\r\n    // for (this->Renderers->InitTraversal(rsit);\r\n    //      (aren = this->Renderers->GetNextRenderer(rsit)); )\r\n    //   {\r\n    //   aren->SetAllocatedRenderTime\r\n    //     (1.0/(this->DesiredUpdateRate*this->Renderers->GetNumberOfItems()));\r\n    //   }\r\n\r\n    publicAPI.modified();\r\n  };\r\n\r\n  // Remove renderer\r\n  publicAPI.removeRenderer = renderer => {\r\n    model.renderers = model.renderers.filter(r => r !== renderer);\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.hasRenderer = ren => model.renderers.indexOf(ren) !== -1;\r\n\r\n  // get an API specific view of this data\r\n  publicAPI.newAPISpecificView = function (name) {\r\n    let initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    return newAPISpecificView(name || model.defaultViewAPI, initialValues);\r\n  };\r\n\r\n  // Add renderer\r\n  publicAPI.addView = view => {\r\n    if (publicAPI.hasView(view)) {\r\n      return;\r\n    }\r\n    view.setRenderable(publicAPI);\r\n    model._views.push(view);\r\n    publicAPI.modified();\r\n  };\r\n\r\n  // Remove renderer\r\n  publicAPI.removeView = view => {\r\n    model._views = model._views.filter(r => r !== view);\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.hasView = view => model._views.indexOf(view) !== -1;\r\n\r\n  // handle any pre render initializations\r\n  publicAPI.preRender = () => {\r\n    model.renderers.forEach(ren => {\r\n      // make sure we have a camera\r\n      if (!ren.isActiveCameraCreated()) {\r\n        ren.resetCamera();\r\n      }\r\n    });\r\n  };\r\n  publicAPI.render = () => {\r\n    publicAPI.preRender();\r\n    if (model.interactor) {\r\n      model.interactor.render();\r\n    } else {\r\n      model._views.forEach(view => view.traverseAllPasses());\r\n    }\r\n  };\r\n  publicAPI.getStatistics = () => {\r\n    const results = {\r\n      propCount: 0,\r\n      invisiblePropCount: 0,\r\n      gpuMemoryMB: 0\r\n    };\r\n    model._views.forEach(v => {\r\n      if (v.getGraphicsMemoryInfo) results.gpuMemoryMB += v.getGraphicsMemoryInfo() / 1e6;\r\n    });\r\n    model.renderers.forEach(ren => {\r\n      const props = ren.getViewProps();\r\n      const gren = model._views[0].getViewNodeFor(ren);\r\n      props.forEach(prop => {\r\n        if (prop.getVisibility()) {\r\n          results.propCount += 1;\r\n          const mpr = prop.getMapper && prop.getMapper();\r\n          if (mpr && mpr.getPrimitiveCount) {\r\n            const gmpr = gren.getViewNodeFor(mpr);\r\n            if (gmpr) {\r\n              if (gmpr.getAllocatedGPUMemoryInBytes) {\r\n                results.gpuMemoryMB += gmpr.getAllocatedGPUMemoryInBytes() / 1e6;\r\n              }\r\n              const pcount = mpr.getPrimitiveCount();\r\n              Object.keys(pcount).forEach(keyName => {\r\n                if (!results[keyName]) {\r\n                  results[keyName] = 0;\r\n                }\r\n                results[keyName] += pcount[keyName];\r\n              });\r\n            }\r\n          }\r\n        } else {\r\n          results.invisiblePropCount += 1;\r\n        }\r\n      });\r\n    });\r\n    results.str = Object.keys(results).map(keyName => `${keyName}: ${results[keyName]}`).join('\\n');\r\n    return results;\r\n  };\r\n  publicAPI.captureImages = function () {\r\n    let format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\r\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setImmediate(publicAPI.render);\r\n    return model._views.map(view => view.captureNextImage ? view.captureNextImage(format, opts) : undefined).filter(i => !!i);\r\n  };\r\n  publicAPI.addRenderWindow = child => {\r\n    if (model.childRenderWindows.includes(child)) {\r\n      return false;\r\n    }\r\n    model.childRenderWindows.push(child);\r\n    publicAPI.modified();\r\n    return true;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  defaultViewAPI: DEFAULT_VIEW_API,\r\n  renderers: [],\r\n  views: [],\r\n  interactor: null,\r\n  neverRendered: true,\r\n  numberOfLayers: 1,\r\n  childRenderWindows: []\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['interactor', 'numberOfLayers', '_views', 'defaultViewAPI']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['neverRendered']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.getArray(publicAPI, model, ['renderers', 'childRenderWindows']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.moveToProtected(publicAPI, model, ['views']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.event(publicAPI, model, 'completion');\r\n\r\n  // Object methods\r\n  vtkRenderWindow(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkRenderWindow');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkRenderWindow$1 = {\r\n  newInstance,\r\n  extend,\r\n  registerViewConstructor,\r\n  listViewAPIs,\r\n  newAPISpecificView\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/RenderWindow.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkRenderWindowInteractor$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n/* harmony import */ var _RenderWindowInteractor_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RenderWindowInteractor/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor/Constants.js\");\n\r\n\r\n\r\n\r\nconst {\r\n  Device,\r\n  Input\r\n} = _RenderWindowInteractor_Constants_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\r\nconst {\r\n  vtkWarningMacro,\r\n  vtkErrorMacro,\r\n  normalizeWheel,\r\n  vtkOnceErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\n\r\nconst EMPTY_MOUSE_EVENT = {\r\n  ctrlKey: false,\r\n  altKey: false,\r\n  shiftKey: false\r\n};\r\nconst deviceInputMap = {\r\n  'xr-standard': [Input.Trigger, Input.Grip, Input.TrackPad, Input.Thumbstick, Input.A, Input.B]\r\n};\r\nconst handledEvents = ['StartAnimation', 'Animation', 'EndAnimation', 'PointerEnter', 'PointerLeave', 'MouseEnter', 'MouseLeave', 'StartMouseMove', 'MouseMove', 'EndMouseMove', 'LeftButtonPress', 'LeftButtonRelease', 'MiddleButtonPress', 'MiddleButtonRelease', 'RightButtonPress', 'RightButtonRelease', 'KeyPress', 'KeyDown', 'KeyUp', 'StartMouseWheel', 'MouseWheel', 'EndMouseWheel', 'StartPinch', 'Pinch', 'EndPinch', 'StartPan', 'Pan', 'EndPan', 'StartRotate', 'Rotate', 'EndRotate', 'Button3D', 'Move3D', 'StartPointerLock', 'EndPointerLock', 'StartInteraction', 'Interaction', 'EndInteraction', 'AnimationFrameRateUpdate'];\r\nfunction preventDefault(event) {\r\n  if (event.cancelable) {\r\n    event.preventDefault();\r\n  }\r\n}\r\nfunction pointerCacheToPositions(cache) {\r\n  const positions = Object.create(null);\r\n  cache.forEach(_ref => {\r\n    let {\r\n      pointerId,\r\n      position\r\n    } = _ref;\r\n    positions[pointerId] = position;\r\n  });\r\n  return positions;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkRenderWindowInteractor methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkRenderWindowInteractor(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkRenderWindowInteractor');\r\n\r\n  // Capture \"parentClass\" api for internal use\r\n  const superClass = {\r\n    ...publicAPI\r\n  };\r\n\r\n  // Initialize list of requesters\r\n  const animationRequesters = new Set();\r\n\r\n  // map from pointerId to { pointerId: number, position: [x, y] }\r\n  const pointerCache = new Map();\r\n\r\n  // Factor to apply on wheel spin.\r\n  let wheelCoefficient = 1;\r\n\r\n  // Public API methods\r\n\r\n  //----------------------------------------------------------------------\r\n  publicAPI.start = () => {\r\n    // Let the compositing handle the event loop if it wants to.\r\n    // if (publicAPI.HasObserver(vtkCommand::StartEvent) && !publicAPI.HandleEventLoop) {\r\n    //   publicAPI.invokeEvent({ type: 'StartEvent' });\r\n    //   return;\r\n    // }\r\n\r\n    // As a convenience, initialize if we aren't initialized yet.\r\n    if (!model.initialized) {\r\n      publicAPI.initialize();\r\n      if (!model.initialized) {\r\n        return;\r\n      }\r\n    }\r\n    // Pass execution to the subclass which will run the event loop,\r\n    // this will not return until TerminateApp is called.\r\n    publicAPI.startEventLoop();\r\n  };\r\n\r\n  //----------------------------------------------------------------------\r\n  publicAPI.setRenderWindow = aren => {\r\n    vtkErrorMacro('you want to call setView(view) instead of setRenderWindow on a vtk.js interactor');\r\n  };\r\n\r\n  //----------------------------------------------------------------------\r\n  publicAPI.setInteractorStyle = style => {\r\n    if (model.interactorStyle !== style) {\r\n      if (model.interactorStyle != null) {\r\n        model.interactorStyle.setInteractor(null);\r\n      }\r\n      model.interactorStyle = style;\r\n      if (model.interactorStyle != null) {\r\n        if (model.interactorStyle.getInteractor() !== publicAPI) {\r\n          model.interactorStyle.setInteractor(publicAPI);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //---------------------------------------------------------------------\r\n  publicAPI.initialize = () => {\r\n    model.initialized = true;\r\n    publicAPI.enable();\r\n    publicAPI.render();\r\n  };\r\n  publicAPI.enable = () => publicAPI.setEnabled(true);\r\n  publicAPI.disable = () => publicAPI.setEnabled(false);\r\n  publicAPI.startEventLoop = () => vtkWarningMacro('empty event loop');\r\n  function updateCurrentRenderer(x, y) {\r\n    if (!model._forcedRenderer) {\r\n      model.currentRenderer = publicAPI.findPokedRenderer(x, y);\r\n    }\r\n  }\r\n  publicAPI.getCurrentRenderer = () => {\r\n    if (model.currentRenderer) {\r\n      return model.currentRenderer;\r\n    }\r\n    updateCurrentRenderer(0, 0);\r\n    return model.currentRenderer;\r\n  };\r\n  function _getScreenEventPositionFor(source) {\r\n    const canvas = model._view.getCanvas();\r\n    const bounds = canvas.getBoundingClientRect();\r\n    const scaleX = canvas.width / bounds.width;\r\n    const scaleY = canvas.height / bounds.height;\r\n    const position = {\r\n      x: scaleX * (source.clientX - bounds.left),\r\n      y: scaleY * (bounds.height - source.clientY + bounds.top),\r\n      z: 0\r\n    };\r\n\r\n    // if multitouch, do not update the current renderer\r\n    if (pointerCache.size <= 1 || !model.currentRenderer) {\r\n      updateCurrentRenderer(position.x, position.y);\r\n    }\r\n    return position;\r\n  }\r\n  // Allow user to override it\r\n  const getScreenEventPositionFor = model._getScreenEventPositionFor || _getScreenEventPositionFor;\r\n  function getModifierKeysFor(event) {\r\n    return {\r\n      controlKey: event.ctrlKey,\r\n      altKey: event.altKey,\r\n      shiftKey: event.shiftKey\r\n    };\r\n  }\r\n  function getKeysFor(event) {\r\n    const modifierKeys = getModifierKeysFor(event);\r\n    const keys = {\r\n      key: event.key,\r\n      keyCode: event.charCode,\r\n      ...modifierKeys\r\n    };\r\n    return keys;\r\n  }\r\n  function getDeviceTypeFor(event) {\r\n    return event.pointerType || '';\r\n  }\r\n  const _bindEvents = () => {\r\n    if (model.container === null) {\r\n      return;\r\n    }\r\n    const {\r\n      container\r\n    } = model;\r\n    container.addEventListener('contextmenu', preventDefault);\r\n    container.addEventListener('wheel', publicAPI.handleWheel);\r\n    container.addEventListener('DOMMouseScroll', publicAPI.handleWheel);\r\n    container.addEventListener('pointerenter', publicAPI.handlePointerEnter);\r\n    container.addEventListener('pointerleave', publicAPI.handlePointerLeave);\r\n    container.addEventListener('pointermove', publicAPI.handlePointerMove, {\r\n      passive: false\r\n    });\r\n    container.addEventListener('pointerdown', publicAPI.handlePointerDown, {\r\n      passive: false\r\n    });\r\n    container.addEventListener('pointerup', publicAPI.handlePointerUp);\r\n    container.addEventListener('pointercancel', publicAPI.handlePointerCancel);\r\n    document.addEventListener('keypress', publicAPI.handleKeyPress);\r\n    document.addEventListener('keydown', publicAPI.handleKeyDown);\r\n    document.addEventListener('keyup', publicAPI.handleKeyUp);\r\n    document.addEventListener('pointerlockchange', publicAPI.handlePointerLockChange);\r\n\r\n    // using touchAction is more performant than preventDefault\r\n    // in a touchstart handler.\r\n    container.style.touchAction = 'none';\r\n    container.style.userSelect = 'none';\r\n    // disables tap highlight for when cursor is pointer\r\n    container.style.webkitTapHighlightColor = 'rgba(0,0,0,0)';\r\n  };\r\n\r\n  // For backward compatibility.\r\n  // Necessary for using unbind/bindEvent without calling setContainer.\r\n  publicAPI.bindEvents = container => {\r\n    if (container === null) {\r\n      return;\r\n    }\r\n    const res = superClass.setContainer(container);\r\n    if (res) {\r\n      _bindEvents();\r\n    }\r\n  };\r\n  const _unbindEvents = () => {\r\n    // Clear any previous timeouts and state variables that control mouse / touchpad behavior.\r\n    clearTimeout(model.moveTimeoutID);\r\n    clearTimeout(model.wheelTimeoutID);\r\n    model.moveTimeoutID = 0;\r\n    model.wheelTimeoutID = 0;\r\n    wheelCoefficient = 1.0;\r\n    const {\r\n      container\r\n    } = model;\r\n    if (container) {\r\n      container.removeEventListener('contextmenu', preventDefault);\r\n      container.removeEventListener('wheel', publicAPI.handleWheel);\r\n      container.removeEventListener('DOMMouseScroll', publicAPI.handleWheel);\r\n      container.removeEventListener('pointerenter', publicAPI.handlePointerEnter);\r\n      container.removeEventListener('pointerleave', publicAPI.handlePointerLeave);\r\n      container.removeEventListener('pointermove', publicAPI.handlePointerMove, {\r\n        passive: false\r\n      });\r\n      container.removeEventListener('pointerdown', publicAPI.handlePointerDown, {\r\n        passive: false\r\n      });\r\n      container.removeEventListener('pointerup', publicAPI.handlePointerUp);\r\n      container.removeEventListener('pointercancel', publicAPI.handlePointerCancel);\r\n    }\r\n    document.removeEventListener('keypress', publicAPI.handleKeyPress);\r\n    document.removeEventListener('keydown', publicAPI.handleKeyDown);\r\n    document.removeEventListener('keyup', publicAPI.handleKeyUp);\r\n    document.removeEventListener('pointerlockchange', publicAPI.handlePointerLockChange);\r\n    pointerCache.clear();\r\n  };\r\n  publicAPI.unbindEvents = () => {\r\n    _unbindEvents();\r\n    superClass.setContainer(null);\r\n  };\r\n  publicAPI.handleKeyPress = event => {\r\n    const data = getKeysFor(event);\r\n    publicAPI.keyPressEvent(data);\r\n  };\r\n  publicAPI.handleKeyDown = event => {\r\n    const data = getKeysFor(event);\r\n    publicAPI.keyDownEvent(data);\r\n  };\r\n  publicAPI.handleKeyUp = event => {\r\n    const data = getKeysFor(event);\r\n    publicAPI.keyUpEvent(data);\r\n  };\r\n  publicAPI.handlePointerEnter = event => {\r\n    const callData = {\r\n      ...getModifierKeysFor(event),\r\n      position: getScreenEventPositionFor(event),\r\n      deviceType: getDeviceTypeFor(event)\r\n    };\r\n    publicAPI.pointerEnterEvent(callData);\r\n    if (callData.deviceType === 'mouse') {\r\n      publicAPI.mouseEnterEvent(callData);\r\n    }\r\n  };\r\n  publicAPI.handlePointerLeave = event => {\r\n    const callData = {\r\n      ...getModifierKeysFor(event),\r\n      position: getScreenEventPositionFor(event),\r\n      deviceType: getDeviceTypeFor(event)\r\n    };\r\n    publicAPI.pointerLeaveEvent(callData);\r\n    if (callData.deviceType === 'mouse') {\r\n      publicAPI.mouseLeaveEvent(callData);\r\n    }\r\n  };\r\n  publicAPI.handlePointerDown = event => {\r\n    if (event.button > 2 || publicAPI.isPointerLocked()) {\r\n      // ignore events from extra mouse buttons such as `back` and `forward`\r\n      return;\r\n    }\r\n    if (model.preventDefaultOnPointerDown) {\r\n      preventDefault(event);\r\n    }\r\n    if (event.target.hasPointerCapture(event.pointerId)) {\r\n      event.target.releasePointerCapture(event.pointerId);\r\n    }\r\n    model.container.setPointerCapture(event.pointerId);\r\n    if (pointerCache.has(event.pointerId)) {\r\n      vtkWarningMacro('[RenderWindowInteractor] duplicate pointerId detected');\r\n    }\r\n    pointerCache.set(event.pointerId, {\r\n      pointerId: event.pointerId,\r\n      position: getScreenEventPositionFor(event)\r\n    });\r\n    switch (event.pointerType) {\r\n      case 'pen':\r\n      case 'touch':\r\n        publicAPI.handleTouchStart(event);\r\n        break;\r\n      case 'mouse':\r\n      default:\r\n        publicAPI.handleMouseDown(event);\r\n        break;\r\n    }\r\n  };\r\n  publicAPI.handlePointerUp = event => {\r\n    if (pointerCache.has(event.pointerId)) {\r\n      if (model.preventDefaultOnPointerUp) {\r\n        preventDefault(event);\r\n      }\r\n      pointerCache.delete(event.pointerId);\r\n      model.container.releasePointerCapture(event.pointerId);\r\n      switch (event.pointerType) {\r\n        case 'pen':\r\n        case 'touch':\r\n          publicAPI.handleTouchEnd(event);\r\n          break;\r\n        case 'mouse':\r\n        default:\r\n          publicAPI.handleMouseUp(event);\r\n          break;\r\n      }\r\n    }\r\n  };\r\n  publicAPI.handlePointerCancel = event => {\r\n    if (pointerCache.has(event.pointerId)) {\r\n      pointerCache.delete(event.pointerId);\r\n      switch (event.pointerType) {\r\n        case 'pen':\r\n        case 'touch':\r\n          publicAPI.handleTouchEnd(event);\r\n          break;\r\n        case 'mouse':\r\n        default:\r\n          publicAPI.handleMouseUp(event);\r\n          break;\r\n      }\r\n    }\r\n  };\r\n  publicAPI.handlePointerMove = event => {\r\n    if (pointerCache.has(event.pointerId)) {\r\n      const pointer = pointerCache.get(event.pointerId);\r\n      pointer.position = getScreenEventPositionFor(event);\r\n    }\r\n    switch (event.pointerType) {\r\n      case 'pen':\r\n      case 'touch':\r\n        publicAPI.handleTouchMove(event);\r\n        break;\r\n      case 'mouse':\r\n      default:\r\n        publicAPI.handleMouseMove(event);\r\n        break;\r\n    }\r\n  };\r\n  publicAPI.handleMouseDown = event => {\r\n    const callData = {\r\n      ...getModifierKeysFor(event),\r\n      position: getScreenEventPositionFor(event),\r\n      deviceType: getDeviceTypeFor(event)\r\n    };\r\n    switch (event.button) {\r\n      case 0:\r\n        publicAPI.leftButtonPressEvent(callData);\r\n        break;\r\n      case 1:\r\n        publicAPI.middleButtonPressEvent(callData);\r\n        break;\r\n      case 2:\r\n        publicAPI.rightButtonPressEvent(callData);\r\n        break;\r\n      default:\r\n        vtkErrorMacro(`Unknown mouse button pressed: ${event.button}`);\r\n        break;\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------\r\n  publicAPI.requestPointerLock = () => {\r\n    if (model.container) {\r\n      model.container.requestPointerLock();\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------\r\n  publicAPI.exitPointerLock = () => document.exitPointerLock?.();\r\n\r\n  //----------------------------------------------------------------------\r\n  publicAPI.isPointerLocked = () => !!model.container && document.pointerLockElement === model.container;\r\n\r\n  //----------------------------------------------------------------------\r\n  publicAPI.handlePointerLockChange = () => {\r\n    if (publicAPI.isPointerLocked()) {\r\n      publicAPI.startPointerLockEvent();\r\n    } else {\r\n      publicAPI.endPointerLockEvent();\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------\r\n  function forceRender() {\r\n    if (model._view && model.enabled && model.enableRender) {\r\n      model.inRender = true;\r\n      model._view.traverseAllPasses();\r\n      model.inRender = false;\r\n    }\r\n    // outside the above test so that third-party code can redirect\r\n    // the render to the appropriate class\r\n    publicAPI.invokeRenderEvent();\r\n  }\r\n  publicAPI.requestAnimation = requestor => {\r\n    if (requestor === undefined) {\r\n      vtkErrorMacro(`undefined requester, can not start animating`);\r\n      return;\r\n    }\r\n    if (animationRequesters.has(requestor)) {\r\n      vtkWarningMacro(`requester is already registered for animating`);\r\n      return;\r\n    }\r\n    animationRequesters.add(requestor);\r\n    if (!model.animationRequest && animationRequesters.size === 1 && !model.xrAnimation) {\r\n      model._animationStartTime = Date.now();\r\n      model._animationFrameCount = 0;\r\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\r\n      publicAPI.startAnimationEvent();\r\n    }\r\n  };\r\n\r\n  // continue animating for at least the specified duration of\r\n  // milliseconds.\r\n  publicAPI.extendAnimation = duration => {\r\n    const newEnd = Date.now() + duration;\r\n    model._animationExtendedEnd = Math.max(model._animationExtendedEnd, newEnd);\r\n    if (!model.animationRequest && animationRequesters.size === 0 && !model.xrAnimation) {\r\n      model._animationStartTime = Date.now();\r\n      model._animationFrameCount = 0;\r\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\r\n      publicAPI.startAnimationEvent();\r\n    }\r\n  };\r\n  publicAPI.isAnimating = () => model.xrAnimation || model.animationRequest !== null;\r\n  publicAPI.cancelAnimation = function (requestor) {\r\n    let skipWarning = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n    if (!animationRequesters.has(requestor)) {\r\n      if (!skipWarning) {\r\n        const requestStr = requestor && requestor.getClassName ? requestor.getClassName() : requestor;\r\n        vtkWarningMacro(`${requestStr} did not request an animation`);\r\n      }\r\n      return;\r\n    }\r\n    animationRequesters.delete(requestor);\r\n    if (model.animationRequest && animationRequesters.size === 0 && Date.now() > model._animationExtendedEnd) {\r\n      cancelAnimationFrame(model.animationRequest);\r\n      model.animationRequest = null;\r\n      publicAPI.endAnimationEvent();\r\n      publicAPI.render();\r\n    }\r\n  };\r\n  publicAPI.switchToXRAnimation = () => {\r\n    // cancel existing animation if any\r\n    if (model.animationRequest) {\r\n      cancelAnimationFrame(model.animationRequest);\r\n      model.animationRequest = null;\r\n    }\r\n    model.xrAnimation = true;\r\n  };\r\n  publicAPI.returnFromXRAnimation = () => {\r\n    model.xrAnimation = false;\r\n    if (animationRequesters.size !== 0) {\r\n      model.recentAnimationFrameRate = 10.0;\r\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\r\n    }\r\n  };\r\n  publicAPI.updateXRGamepads = (xrSession, xrFrame, xrRefSpace) => {\r\n    // watch for when buttons change state and fire events\r\n    xrSession.inputSources.forEach(inputSource => {\r\n      const gripPose = inputSource.gripSpace == null ? null : xrFrame.getPose(inputSource.gripSpace, xrRefSpace);\r\n      const targetRayPose = inputSource.gripSpace == null ? null : xrFrame.getPose(inputSource.targetRaySpace, xrRefSpace);\r\n      const gamepad = inputSource.gamepad;\r\n      const hand = inputSource.handedness;\r\n      if (!gamepad) {\r\n        return;\r\n      }\r\n      if (!(gamepad.index in model.lastGamepadValues)) {\r\n        model.lastGamepadValues[gamepad.index] = {\r\n          left: {\r\n            buttons: {}\r\n          },\r\n          right: {\r\n            buttons: {}\r\n          },\r\n          none: {\r\n            buttons: {}\r\n          }\r\n        };\r\n      }\r\n      for (let buttonIdx = 0; buttonIdx < gamepad.buttons.length; ++buttonIdx) {\r\n        if (!(buttonIdx in model.lastGamepadValues[gamepad.index][hand].buttons)) {\r\n          model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] = false;\r\n        }\r\n        if (model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] !== gamepad.buttons[buttonIdx].pressed && gripPose != null) {\r\n          publicAPI.button3DEvent({\r\n            gamepad,\r\n            position: gripPose.transform.position,\r\n            orientation: gripPose.transform.orientation,\r\n            targetPosition: targetRayPose.transform.position,\r\n            targetOrientation: targetRayPose.transform.orientation,\r\n            pressed: gamepad.buttons[buttonIdx].pressed,\r\n            device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController,\r\n            input: deviceInputMap[gamepad.mapping] && deviceInputMap[gamepad.mapping][buttonIdx] ? deviceInputMap[gamepad.mapping][buttonIdx] : Input.Trigger\r\n          });\r\n          model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] = gamepad.buttons[buttonIdx].pressed;\r\n        }\r\n        if (model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] && gripPose != null) {\r\n          publicAPI.move3DEvent({\r\n            gamepad,\r\n            position: gripPose.transform.position,\r\n            orientation: gripPose.transform.orientation,\r\n            targetPosition: targetRayPose.transform.position,\r\n            targetOrientation: targetRayPose.transform.orientation,\r\n            device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  publicAPI.handleMouseMove = event => {\r\n    const callData = {\r\n      ...getModifierKeysFor(event),\r\n      position: getScreenEventPositionFor(event),\r\n      deviceType: getDeviceTypeFor(event)\r\n    };\r\n    if (model.moveTimeoutID === 0) {\r\n      publicAPI.startMouseMoveEvent(callData);\r\n    } else {\r\n      publicAPI.mouseMoveEvent(callData);\r\n      clearTimeout(model.moveTimeoutID);\r\n    }\r\n\r\n    // start a timer to keep us animating while we get mouse move events\r\n    model.moveTimeoutID = setTimeout(() => {\r\n      publicAPI.endMouseMoveEvent();\r\n      model.moveTimeoutID = 0;\r\n    }, 200);\r\n  };\r\n  publicAPI.handleAnimation = () => {\r\n    const currTime = Date.now();\r\n    model._animationFrameCount++;\r\n    if (currTime - model._animationStartTime > 1000.0 && model._animationFrameCount > 1) {\r\n      model.recentAnimationFrameRate = 1000.0 * (model._animationFrameCount - 1) / (currTime - model._animationStartTime);\r\n      model.lastFrameTime = 1.0 / model.recentAnimationFrameRate;\r\n      publicAPI.animationFrameRateUpdateEvent();\r\n      model._animationStartTime = currTime;\r\n      model._animationFrameCount = 1;\r\n    }\r\n    publicAPI.animationEvent();\r\n    forceRender();\r\n    if (animationRequesters.size > 0 || Date.now() < model._animationExtendedEnd) {\r\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\r\n    } else {\r\n      cancelAnimationFrame(model.animationRequest);\r\n      model.animationRequest = null;\r\n      publicAPI.endAnimationEvent();\r\n      publicAPI.render();\r\n    }\r\n  };\r\n  publicAPI.handleWheel = event => {\r\n    preventDefault(event);\r\n\r\n    /**\r\n     * wheel event values can vary significantly across browsers, platforms\r\n     * and devices [1]. `normalizeWheel` uses facebook's solution from their\r\n     * fixed-data-table repository [2].\r\n     *\r\n     * [1] https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel\r\n     * [2] https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\r\n     *\r\n     * This code will return an object with properties:\r\n     *\r\n     *   spinX   -- normalized spin speed (use for zoom) - x plane\r\n     *   spinY   -- \" - y plane\r\n     *   pixelX  -- normalized distance (to pixels) - x plane\r\n     *   pixelY  -- \" - y plane\r\n     *\r\n     */\r\n    const callData = {\r\n      ...normalizeWheel(event),\r\n      ...getModifierKeysFor(event),\r\n      position: getScreenEventPositionFor(event),\r\n      deviceType: getDeviceTypeFor(event)\r\n    };\r\n\r\n    // Wheel events are thought to scroll pages (i.e. multiple lines at once).\r\n    // See normalizeWheel() documentation for more context.\r\n    // While trackpad wheel events are many small (<1) wheel spins,\r\n    // mouse wheel events have absolute spin values higher than 1.\r\n    // Here the first spin value is \"recorded\", and used to normalize\r\n    // all the following mouse wheel events.\r\n    if (model.wheelTimeoutID === 0) {\r\n      // we attempt to distinguish between trackpads and mice\r\n      // .3 will be larger than the first trackpad event,\r\n      // but small enough to detect some common edge case mice\r\n      if (Math.abs(callData.spinY) >= 0.3) {\r\n        // Event is coming from mouse wheel\r\n        wheelCoefficient = Math.abs(callData.spinY);\r\n      } else {\r\n        // Event is coming from trackpad\r\n        wheelCoefficient = 1;\r\n      }\r\n    }\r\n    callData.spinY /= wheelCoefficient;\r\n    if (model.wheelTimeoutID === 0) {\r\n      publicAPI.startMouseWheelEvent(callData);\r\n      publicAPI.mouseWheelEvent(callData);\r\n    } else {\r\n      publicAPI.mouseWheelEvent(callData);\r\n      clearTimeout(model.wheelTimeoutID);\r\n    }\r\n    if (model.mouseScrollDebounceByPass) {\r\n      publicAPI.extendAnimation(600);\r\n      publicAPI.endMouseWheelEvent();\r\n      model.wheelTimeoutID = 0;\r\n    } else {\r\n      // start a timer to keep us animating while we get wheel events\r\n      model.wheelTimeoutID = setTimeout(() => {\r\n        publicAPI.extendAnimation(600);\r\n        publicAPI.endMouseWheelEvent();\r\n        model.wheelTimeoutID = 0;\r\n      }, 200);\r\n    }\r\n  };\r\n  publicAPI.handleMouseUp = event => {\r\n    const callData = {\r\n      ...getModifierKeysFor(event),\r\n      position: getScreenEventPositionFor(event),\r\n      deviceType: getDeviceTypeFor(event)\r\n    };\r\n    switch (event.button) {\r\n      case 0:\r\n        publicAPI.leftButtonReleaseEvent(callData);\r\n        break;\r\n      case 1:\r\n        publicAPI.middleButtonReleaseEvent(callData);\r\n        break;\r\n      case 2:\r\n        publicAPI.rightButtonReleaseEvent(callData);\r\n        break;\r\n      default:\r\n        vtkErrorMacro(`Unknown mouse button released: ${event.button}`);\r\n        break;\r\n    }\r\n  };\r\n  publicAPI.handleTouchStart = event => {\r\n    const pointers = [...pointerCache.values()];\r\n    // If multitouch\r\n    if (model.recognizeGestures && pointers.length > 1) {\r\n      const positions = pointerCacheToPositions(pointerCache);\r\n      // did we just transition to multitouch?\r\n      if (pointers.length === 2) {\r\n        const callData = {\r\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\r\n          position: pointers[0].position,\r\n          deviceType: getDeviceTypeFor(event)\r\n        };\r\n        publicAPI.leftButtonReleaseEvent(callData);\r\n      }\r\n      // handle the gesture\r\n      publicAPI.recognizeGesture('TouchStart', positions);\r\n    } else if (pointers.length === 1) {\r\n      const callData = {\r\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\r\n        position: getScreenEventPositionFor(event),\r\n        deviceType: getDeviceTypeFor(event)\r\n      };\r\n      publicAPI.leftButtonPressEvent(callData);\r\n    }\r\n  };\r\n  publicAPI.handleTouchMove = event => {\r\n    const pointers = [...pointerCache.values()];\r\n    if (model.recognizeGestures && pointers.length > 1) {\r\n      const positions = pointerCacheToPositions(pointerCache);\r\n      publicAPI.recognizeGesture('TouchMove', positions);\r\n    } else if (pointers.length === 1) {\r\n      const callData = {\r\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\r\n        position: pointers[0].position,\r\n        deviceType: getDeviceTypeFor(event)\r\n      };\r\n      publicAPI.mouseMoveEvent(callData);\r\n    }\r\n  };\r\n  publicAPI.handleTouchEnd = event => {\r\n    const pointers = [...pointerCache.values()];\r\n    if (model.recognizeGestures) {\r\n      // No more fingers down\r\n      if (pointers.length === 0) {\r\n        const callData = {\r\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\r\n          position: getScreenEventPositionFor(event),\r\n          deviceType: getDeviceTypeFor(event)\r\n        };\r\n        publicAPI.leftButtonReleaseEvent(callData);\r\n      } else if (pointers.length === 1) {\r\n        // If one finger left, end touch and start button press\r\n        const positions = pointerCacheToPositions(pointerCache);\r\n        publicAPI.recognizeGesture('TouchEnd', positions);\r\n        const callData = {\r\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\r\n          position: pointers[0].position,\r\n          deviceType: getDeviceTypeFor(event)\r\n        };\r\n        publicAPI.leftButtonPressEvent(callData);\r\n      } else {\r\n        // If more than one finger left, keep touch move\r\n        const positions = pointerCacheToPositions(pointerCache);\r\n        publicAPI.recognizeGesture('TouchMove', positions);\r\n      }\r\n    } else if (pointers.length === 1) {\r\n      const callData = {\r\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\r\n        position: pointers[0].position,\r\n        deviceType: getDeviceTypeFor(event)\r\n      };\r\n      publicAPI.leftButtonReleaseEvent(callData);\r\n    }\r\n  };\r\n  publicAPI.setView = val => {\r\n    if (model._view === val) {\r\n      return;\r\n    }\r\n    model._view = val;\r\n    model._view.getRenderable().setInteractor(publicAPI);\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.getFirstRenderer = () => model._view?.getRenderable()?.getRenderersByReference()?.[0];\r\n  publicAPI.findPokedRenderer = function () {\r\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n    if (!model._view) {\r\n      return null;\r\n    }\r\n    // The original order of renderers needs to remain as\r\n    // the first one is the one we want to manipulate the camera on.\r\n    const rc = model._view?.getRenderable()?.getRenderers();\r\n    if (!rc || rc.length === 0) {\r\n      return null;\r\n    }\r\n    rc.sort((a, b) => a.getLayer() - b.getLayer());\r\n    let interactiveren = null;\r\n    let viewportren = null;\r\n    let currentRenderer = null;\r\n    let count = rc.length;\r\n    while (count--) {\r\n      const aren = rc[count];\r\n      if (model._view.isInViewport(x, y, aren) && aren.getInteractive()) {\r\n        currentRenderer = aren;\r\n        break;\r\n      }\r\n      if (interactiveren === null && aren.getInteractive()) {\r\n        // Save this renderer in case we can't find one in the viewport that\r\n        // is interactive.\r\n        interactiveren = aren;\r\n      }\r\n      if (viewportren === null && model._view.isInViewport(x, y, aren)) {\r\n        // Save this renderer in case we can't find one in the viewport that\r\n        // is interactive.\r\n        viewportren = aren;\r\n      }\r\n    }\r\n\r\n    // We must have a value.  If we found an interactive renderer before, that's\r\n    // better than a non-interactive renderer.\r\n    if (currentRenderer === null) {\r\n      currentRenderer = interactiveren;\r\n    }\r\n\r\n    // We must have a value.  If we found a renderer that is in the viewport,\r\n    // that is better than any old viewport (but not as good as an interactive\r\n    // one).\r\n    if (currentRenderer === null) {\r\n      currentRenderer = viewportren;\r\n    }\r\n\r\n    // We must have a value - take anything.\r\n    if (currentRenderer == null) {\r\n      currentRenderer = rc[0];\r\n    }\r\n    return currentRenderer;\r\n  };\r\n\r\n  // only render if we are not animating. If we are animating\r\n  // then renders will happen naturally anyhow and we definitely\r\n  // do not want extra renders as the make the apparent interaction\r\n  // rate slower.\r\n  publicAPI.render = () => {\r\n    if (!publicAPI.isAnimating() && !model.inRender) {\r\n      forceRender();\r\n    }\r\n  };\r\n\r\n  // create the generic Event methods\r\n  handledEvents.forEach(eventName => {\r\n    const lowerFirst = eventName.charAt(0).toLowerCase() + eventName.slice(1);\r\n    publicAPI[`${lowerFirst}Event`] = arg => {\r\n      // Check that interactor enabled\r\n      if (!model.enabled) {\r\n        return;\r\n      }\r\n\r\n      // Check that a poked renderer exists\r\n      const renderer = publicAPI.getCurrentRenderer();\r\n      if (!renderer) {\r\n        vtkOnceErrorMacro(`\r\n          Can not forward events without a current renderer on the interactor.\r\n        `);\r\n        return;\r\n      }\r\n\r\n      // Pass the eventName and the poked renderer\r\n      const callData = {\r\n        type: eventName,\r\n        pokedRenderer: model.currentRenderer,\r\n        firstRenderer: publicAPI.getFirstRenderer(),\r\n        // Add the arguments to the call data\r\n        ...arg\r\n      };\r\n\r\n      // Call invoke\r\n      publicAPI[`invoke${eventName}`](callData);\r\n    };\r\n  });\r\n\r\n  // we know we are in multitouch now, so start recognizing\r\n  publicAPI.recognizeGesture = (event, positions) => {\r\n    // more than two pointers we ignore\r\n    if (Object.keys(positions).length > 2) {\r\n      return;\r\n    }\r\n    if (!model.startingEventPositions) {\r\n      model.startingEventPositions = {};\r\n    }\r\n\r\n    // store the initial positions\r\n    if (event === 'TouchStart') {\r\n      Object.keys(positions).forEach(key => {\r\n        model.startingEventPositions[key] = positions[key];\r\n      });\r\n      // we do not know what the gesture is yet\r\n      model.currentGesture = 'Start';\r\n      return;\r\n    }\r\n\r\n    // end the gesture if needed\r\n    if (event === 'TouchEnd') {\r\n      if (model.currentGesture === 'Pinch') {\r\n        publicAPI.render();\r\n        publicAPI.endPinchEvent();\r\n      }\r\n      if (model.currentGesture === 'Rotate') {\r\n        publicAPI.render();\r\n        publicAPI.endRotateEvent();\r\n      }\r\n      if (model.currentGesture === 'Pan') {\r\n        publicAPI.render();\r\n        publicAPI.endPanEvent();\r\n      }\r\n      model.currentGesture = 'Start';\r\n      model.startingEventPositions = {};\r\n      return;\r\n    }\r\n\r\n    // what are the two pointers we are working with\r\n    let count = 0;\r\n    const posVals = [];\r\n    const startVals = [];\r\n    Object.keys(positions).forEach(key => {\r\n      posVals[count] = positions[key];\r\n      startVals[count] = model.startingEventPositions[key];\r\n      count++;\r\n    });\r\n\r\n    // The meat of the algorithm\r\n    // on move events we analyze them to determine what type\r\n    // of movement it is and then deal with it.\r\n    // calculate the distances\r\n    const originalDistance = Math.sqrt((startVals[0].x - startVals[1].x) * (startVals[0].x - startVals[1].x) + (startVals[0].y - startVals[1].y) * (startVals[0].y - startVals[1].y));\r\n    const newDistance = Math.sqrt((posVals[0].x - posVals[1].x) * (posVals[0].x - posVals[1].x) + (posVals[0].y - posVals[1].y) * (posVals[0].y - posVals[1].y));\r\n\r\n    // calculate rotations\r\n    let originalAngle = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.A)(Math.atan2(startVals[1].y - startVals[0].y, startVals[1].x - startVals[0].x));\r\n    let newAngle = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.A)(Math.atan2(posVals[1].y - posVals[0].y, posVals[1].x - posVals[0].x));\r\n\r\n    // angles are cyclic so watch for that, 1 and 359 are only 2 apart :)\r\n    let angleDeviation = newAngle - originalAngle;\r\n    newAngle = newAngle + 180.0 >= 360.0 ? newAngle - 180.0 : newAngle + 180.0;\r\n    originalAngle = originalAngle + 180.0 >= 360.0 ? originalAngle - 180.0 : originalAngle + 180.0;\r\n    if (Math.abs(newAngle - originalAngle) < Math.abs(angleDeviation)) {\r\n      angleDeviation = newAngle - originalAngle;\r\n    }\r\n\r\n    // calculate the translations\r\n    const trans = [];\r\n    trans[0] = (posVals[0].x - startVals[0].x + posVals[1].x - startVals[1].x) / 2.0;\r\n    trans[1] = (posVals[0].y - startVals[0].y + posVals[1].y - startVals[1].y) / 2.0;\r\n    if (event === 'TouchMove') {\r\n      // OK we want to\r\n      // - immediately respond to the user\r\n      // - allow the user to zoom without panning (saves focal point)\r\n      // - allow the user to rotate without panning (saves focal point)\r\n\r\n      // do we know what gesture we are doing yet? If not\r\n      // see if we can figure it out\r\n      if (model.currentGesture === 'Start') {\r\n        // pinch is a move to/from the center point\r\n        // rotate is a move along the circumference\r\n        // pan is a move of the center point\r\n        // compute the distance along each of these axes in pixels\r\n        // the first to break thresh wins\r\n        let thresh = 0.01 * Math.sqrt(model.container.clientWidth * model.container.clientWidth + model.container.clientHeight * model.container.clientHeight);\r\n        if (thresh < 15.0) {\r\n          thresh = 15.0;\r\n        }\r\n        const pinchDistance = Math.abs(newDistance - originalDistance);\r\n        const rotateDistance = newDistance * 3.1415926 * Math.abs(angleDeviation) / 360.0;\r\n        const panDistance = Math.sqrt(trans[0] * trans[0] + trans[1] * trans[1]);\r\n        if (pinchDistance > thresh && pinchDistance > rotateDistance && pinchDistance > panDistance) {\r\n          model.currentGesture = 'Pinch';\r\n          const callData = {\r\n            scale: 1.0,\r\n            touches: positions\r\n          };\r\n          publicAPI.startPinchEvent(callData);\r\n        } else if (rotateDistance > thresh && rotateDistance > panDistance) {\r\n          model.currentGesture = 'Rotate';\r\n          const callData = {\r\n            rotation: 0.0,\r\n            touches: positions\r\n          };\r\n          publicAPI.startRotateEvent(callData);\r\n        } else if (panDistance > thresh) {\r\n          model.currentGesture = 'Pan';\r\n          const callData = {\r\n            translation: [0, 0],\r\n            touches: positions\r\n          };\r\n          publicAPI.startPanEvent(callData);\r\n        }\r\n      } else {\r\n        // if we have found a specific type of movement then\r\n        // handle it\r\n        if (model.currentGesture === 'Rotate') {\r\n          const callData = {\r\n            rotation: angleDeviation,\r\n            touches: positions\r\n          };\r\n          publicAPI.rotateEvent(callData);\r\n        }\r\n        if (model.currentGesture === 'Pinch') {\r\n          const callData = {\r\n            scale: newDistance / originalDistance,\r\n            touches: positions\r\n          };\r\n          publicAPI.pinchEvent(callData);\r\n        }\r\n        if (model.currentGesture === 'Pan') {\r\n          const callData = {\r\n            translation: trans,\r\n            touches: positions\r\n          };\r\n          publicAPI.panEvent(callData);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  publicAPI.handleVisibilityChange = () => {\r\n    model._animationStartTime = Date.now();\r\n    model._animationFrameCount = 0;\r\n  };\r\n  publicAPI.setCurrentRenderer = r => {\r\n    model._forcedRenderer = !!r;\r\n    model.currentRenderer = r;\r\n  };\r\n  publicAPI.setContainer = container => {\r\n    _unbindEvents();\r\n    const res = superClass.setContainer(container ?? null);\r\n    if (res) {\r\n      _bindEvents();\r\n    }\r\n    return res;\r\n  };\r\n\r\n  // Stop animating if the renderWindowInteractor is deleted.\r\n  publicAPI.delete = () => {\r\n    while (animationRequesters.size) {\r\n      publicAPI.cancelAnimation(animationRequesters.values().next().value);\r\n    }\r\n    if (typeof document.hidden !== 'undefined') {\r\n      document.removeEventListener('visibilitychange', publicAPI.handleVisibilityChange);\r\n    }\r\n    if (model.container) {\r\n      publicAPI.setContainer(null);\r\n    }\r\n    superClass.delete();\r\n  };\r\n\r\n  // Use the Page Visibility API to detect when we switch away from or back to\r\n  // this tab, and reset the animationFrameStart. When tabs are not active, browsers\r\n  // will stop calling requestAnimationFrame callbacks.\r\n  if (typeof document.hidden !== 'undefined') {\r\n    document.addEventListener('visibilitychange', publicAPI.handleVisibilityChange, false);\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  renderWindow: null,\r\n  interactorStyle: null,\r\n  picker: null,\r\n  pickingManager: null,\r\n  initialized: false,\r\n  enabled: false,\r\n  enableRender: true,\r\n  currentRenderer: null,\r\n  lightFollowCamera: true,\r\n  desiredUpdateRate: 30.0,\r\n  stillUpdateRate: 2.0,\r\n  container: null,\r\n  // _view: null,\r\n  recognizeGestures: true,\r\n  currentGesture: 'Start',\r\n  animationRequest: null,\r\n  lastFrameTime: 0.1,\r\n  recentAnimationFrameRate: 10.0,\r\n  wheelTimeoutID: 0,\r\n  moveTimeoutID: 0,\r\n  lastGamepadValues: {},\r\n  preventDefaultOnPointerDown: false,\r\n  preventDefaultOnPointerUp: false,\r\n  mouseScrollDebounceByPass: false\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Object methods\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n\r\n  // run animation at least until this time\r\n  model._animationExtendedEnd = 0;\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.event(publicAPI, model, 'RenderEvent');\r\n  handledEvents.forEach(eventName => _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.event(publicAPI, model, eventName));\r\n\r\n  // Create get-only macros\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['initialized', 'interactorStyle', 'lastFrameTime', 'recentAnimationFrameRate', '_view']);\r\n\r\n  // Create get-set macros\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['container', 'lightFollowCamera', 'enabled', 'enableRender', 'recognizeGestures', 'desiredUpdateRate', 'stillUpdateRate', 'picker', 'preventDefaultOnPointerDown', 'preventDefaultOnPointerUp', 'mouseScrollDebounceByPass']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.moveToProtected(publicAPI, model, ['view']);\r\n\r\n  // For more macro methods, see \"Sources/macros.js\"\r\n\r\n  // Object specific methods\r\n  vtkRenderWindowInteractor(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkRenderWindowInteractor');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkRenderWindowInteractor$1 = {\r\n  newInstance,\r\n  extend,\r\n  handledEvents,\r\n  ..._RenderWindowInteractor_Constants_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Axis: () => (/* binding */ Axis),\n/* harmony export */   Device: () => (/* binding */ Device),\n/* harmony export */   Input: () => (/* binding */ Input),\n/* harmony export */   "default": () => (/* binding */ Constants)\n/* harmony export */ });\nconst Device = {\r\n  Unknown: 0,\r\n  LeftController: 1,\r\n  RightController: 2\r\n};\r\nconst Input = {\r\n  Unknown: 0,\r\n  Trigger: 1,\r\n  TrackPad: 2,\r\n  Grip: 3,\r\n  Thumbstick: 4,\r\n  A: 5,\r\n  B: 6,\r\n  ApplicationMenu: 7 // Not exposed in WebXR API\r\n};\r\n\r\nconst Axis = {\r\n  Unknown: 0,\r\n  TouchpadX: 1,\r\n  TouchpadY: 2,\r\n  ThumbstickX: 3,\r\n  ThumbstickY: 4\r\n};\r\nvar Constants = {\r\n  Device,\r\n  Input,\r\n  Axis\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor/Constants.js?')},"./node_modules/@kitware/vtk.js/Rendering/Core/Renderer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkRenderer$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Camera_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Camera.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Camera.js\");\n/* harmony import */ var _Light_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Light.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Light.js\");\n/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n/* harmony import */ var _Viewport_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Viewport.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Viewport.js\");\n/* harmony import */ var _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Common/DataModel/BoundingBox.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/BoundingBox.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  vtkDebugMacro,\r\n  vtkErrorMacro,\r\n  vtkWarningMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.c;\r\nfunction notImplemented(method) {\r\n  return () => vtkErrorMacro(`vtkRenderer::${method} - NOT IMPLEMENTED`);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkRenderer methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkRenderer(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkRenderer');\r\n\r\n  // Events\r\n  const COMPUTE_VISIBLE_PROP_BOUNDS_EVENT = {\r\n    type: 'ComputeVisiblePropBoundsEvent',\r\n    renderer: publicAPI\r\n  };\r\n  const RESET_CAMERA_CLIPPING_RANGE_EVENT = {\r\n    type: 'ResetCameraClippingRangeEvent',\r\n    renderer: publicAPI\r\n  };\r\n  const RESET_CAMERA_EVENT = {\r\n    type: 'ResetCameraEvent',\r\n    renderer: publicAPI\r\n  };\r\n  publicAPI.updateCamera = () => {\r\n    if (!model.activeCamera) {\r\n      vtkDebugMacro('No cameras are on, creating one.');\r\n      // the get method will automagically create a camera\r\n      // and reset it since one hasn't been specified yet.\r\n      publicAPI.getActiveCameraAndResetIfCreated();\r\n    }\r\n\r\n    // update the viewing transformation\r\n    model.activeCamera.render(publicAPI);\r\n    return true;\r\n  };\r\n  publicAPI.updateLightsGeometryToFollowCamera = () => {\r\n    // only update the light's geometry if this Renderer is tracking\r\n    // this lights.  That allows one renderer to view the lights that\r\n    // another renderer is setting up.\r\n    const camera = publicAPI.getActiveCameraAndResetIfCreated();\r\n    model.lights.forEach(light => {\r\n      if (light.lightTypeIsSceneLight()) ; else if (light.lightTypeIsHeadLight()) {\r\n        // update position and orientation of light to match camera.\r\n        light.setPositionFrom(camera.getPositionByReference());\r\n        light.setFocalPointFrom(camera.getFocalPointByReference());\r\n        light.modified(camera.getMTime());\r\n      } else if (light.lightTypeIsCameraLight()) {\r\n        light.setTransformMatrix(camera.getCameraLightTransformMatrix(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create()));\r\n      } else {\r\n        vtkErrorMacro('light has unknown light type', light.get());\r\n      }\r\n    });\r\n  };\r\n  publicAPI.updateLightGeometry = () => {\r\n    if (model.lightFollowCamera) {\r\n      // only update the light's geometry if this Renderer is tracking\r\n      // this lights.  That allows one renderer to view the lights that\r\n      // another renderer is setting up.\r\n      return publicAPI.updateLightsGeometryToFollowCamera();\r\n    }\r\n    return true;\r\n  };\r\n  publicAPI.allocateTime = notImplemented('allocateTime');\r\n  publicAPI.updateGeometry = notImplemented('updateGeometry');\r\n  publicAPI.getVTKWindow = () => model._renderWindow;\r\n  publicAPI.setLayer = layer => {\r\n    vtkDebugMacro(publicAPI.getClassName(), publicAPI, 'setting Layer to ', layer);\r\n    if (model.layer !== layer) {\r\n      model.layer = layer;\r\n      publicAPI.modified();\r\n    }\r\n    publicAPI.setPreserveColorBuffer(!!layer);\r\n  };\r\n  publicAPI.setActiveCamera = camera => {\r\n    if (model.activeCamera === camera) {\r\n      return false;\r\n    }\r\n    model.activeCamera = camera;\r\n    publicAPI.modified();\r\n    publicAPI.invokeEvent({\r\n      type: 'ActiveCameraEvent',\r\n      camera\r\n    });\r\n    return true;\r\n  };\r\n  publicAPI.makeCamera = () => {\r\n    const camera = _Camera_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n    publicAPI.invokeEvent({\r\n      type: 'CreateCameraEvent',\r\n      camera\r\n    });\r\n    return camera;\r\n  };\r\n\r\n  // Replace the set/get macro method\r\n  publicAPI.getActiveCamera = () => {\r\n    if (!model.activeCamera) {\r\n      model.activeCamera = publicAPI.makeCamera();\r\n    }\r\n    return model.activeCamera;\r\n  };\r\n  publicAPI.getActiveCameraAndResetIfCreated = () => {\r\n    if (!model.activeCamera) {\r\n      publicAPI.getActiveCamera();\r\n      publicAPI.resetCamera();\r\n    }\r\n    return model.activeCamera;\r\n  };\r\n  publicAPI.getActors = () => {\r\n    model.actors = [];\r\n    model.props.forEach(prop => {\r\n      model.actors = model.actors.concat(prop.getActors());\r\n    });\r\n    return model.actors;\r\n  };\r\n  publicAPI.addActor = publicAPI.addViewProp;\r\n  publicAPI.removeActor = actor => {\r\n    model.actors = model.actors.filter(a => a !== actor);\r\n    publicAPI.removeViewProp(actor);\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.removeAllActors = () => {\r\n    const actors = publicAPI.getActors();\r\n    actors.forEach(actor => {\r\n      publicAPI.removeViewProp(actor);\r\n    });\r\n    model.actors = [];\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.getVolumes = () => {\r\n    model.volumes = [];\r\n    model.props.forEach(prop => {\r\n      model.volumes = model.volumes.concat(prop.getVolumes());\r\n    });\r\n    return model.volumes;\r\n  };\r\n  publicAPI.addVolume = publicAPI.addViewProp;\r\n  publicAPI.removeVolume = volume => {\r\n    model.volumes = model.volumes.filter(v => v !== volume);\r\n    publicAPI.removeViewProp(volume);\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.removeAllVolumes = () => {\r\n    const volumes = publicAPI.getVolumes();\r\n    volumes.forEach(volume => {\r\n      publicAPI.removeViewProp(volume);\r\n    });\r\n    model.volumes = [];\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.hasLight = light => model.lights.includes(light);\r\n  publicAPI.addLight = light => {\r\n    if (light && !publicAPI.hasLight(light)) {\r\n      model.lights.push(light);\r\n      publicAPI.modified();\r\n    }\r\n  };\r\n  publicAPI.removeLight = light => {\r\n    model.lights = model.lights.filter(l => l !== light);\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.removeAllLights = () => {\r\n    model.lights = [];\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.setLightCollection = lights => {\r\n    model.lights = lights;\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.makeLight = _Light_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance;\r\n  publicAPI.createLight = () => {\r\n    if (!model.automaticLightCreation) {\r\n      return;\r\n    }\r\n    if (model._createdLight) {\r\n      publicAPI.removeLight(model._createdLight);\r\n      model._createdLight.delete();\r\n      model._createdLight = null;\r\n    }\r\n    model._createdLight = publicAPI.makeLight();\r\n    publicAPI.addLight(model._createdLight);\r\n    model._createdLight.setLightTypeToHeadLight();\r\n\r\n    // set these values just to have a good default should LightFollowCamera\r\n    // be turned off.\r\n    model._createdLight.setPosition(publicAPI.getActiveCamera().getPosition());\r\n    model._createdLight.setFocalPoint(publicAPI.getActiveCamera().getFocalPoint());\r\n  };\r\n\r\n  // requires the aspect ratio of the viewport as X/Y\r\n  publicAPI.normalizedDisplayToWorld = (x, y, z, aspect) => {\r\n    let vpd = publicAPI.normalizedDisplayToProjection(x, y, z);\r\n    vpd = publicAPI.projectionToView(vpd[0], vpd[1], vpd[2], aspect);\r\n    return publicAPI.viewToWorld(vpd[0], vpd[1], vpd[2]);\r\n  };\r\n\r\n  // requires the aspect ratio of the viewport as X/Y\r\n  publicAPI.worldToNormalizedDisplay = (x, y, z, aspect) => {\r\n    let vpd = publicAPI.worldToView(x, y, z);\r\n    vpd = publicAPI.viewToProjection(vpd[0], vpd[1], vpd[2], aspect);\r\n    return publicAPI.projectionToNormalizedDisplay(vpd[0], vpd[1], vpd[2]);\r\n  };\r\n\r\n  // requires the aspect ratio of the viewport as X/Y\r\n  publicAPI.viewToWorld = (x, y, z) => {\r\n    if (model.activeCamera === null) {\r\n      vtkErrorMacro('ViewToWorld: no active camera, cannot compute view to world, returning 0,0,0');\r\n      return [0, 0, 0];\r\n    }\r\n\r\n    // get the view matrix from the active camera\r\n    const matrix = model.activeCamera.getViewMatrix();\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_6__.invert(matrix, matrix);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_6__.transpose(matrix, matrix);\r\n\r\n    // Transform point to world coordinates\r\n    const result = new Float64Array([x, y, z]);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_7__.transformMat4(result, result, matrix);\r\n    return result;\r\n  };\r\n  publicAPI.projectionToView = (x, y, z, aspect) => {\r\n    if (model.activeCamera === null) {\r\n      vtkErrorMacro('ProjectionToView: no active camera, cannot compute projection to view, returning 0,0,0');\r\n      return [0, 0, 0];\r\n    }\r\n\r\n    // get the projection transformation from the active camera\r\n    const matrix = model.activeCamera.getProjectionMatrix(aspect, -1.0, 1.0);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_6__.invert(matrix, matrix);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_6__.transpose(matrix, matrix);\r\n\r\n    // Transform point to world coordinates\r\n    const result = new Float64Array([x, y, z]);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_7__.transformMat4(result, result, matrix);\r\n    return result;\r\n  };\r\n\r\n  // Convert world point coordinates to view coordinates.\r\n  publicAPI.worldToView = (x, y, z) => {\r\n    if (model.activeCamera === null) {\r\n      vtkErrorMacro('WorldToView: no active camera, cannot compute view to world, returning 0,0,0');\r\n      return [0, 0, 0];\r\n    }\r\n\r\n    // get the view transformation from the active camera\r\n    const matrix = model.activeCamera.getViewMatrix();\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_6__.transpose(matrix, matrix);\r\n    const result = new Float64Array([x, y, z]);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_7__.transformMat4(result, result, matrix);\r\n    return result;\r\n  };\r\n\r\n  // Convert world point coordinates to view coordinates.\r\n  // requires the aspect ratio of the viewport as X/Y\r\n  publicAPI.viewToProjection = (x, y, z, aspect) => {\r\n    if (model.activeCamera === null) {\r\n      vtkErrorMacro('ViewToProjection: no active camera, cannot compute view to projection, returning 0,0,0');\r\n      return [0, 0, 0];\r\n    }\r\n\r\n    // get the projeciton transformation from the active camera\r\n    const matrix = model.activeCamera.getProjectionMatrix(aspect, -1.0, 1.0);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_6__.transpose(matrix, matrix);\r\n    const result = new Float64Array([x, y, z]);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_7__.transformMat4(result, result, matrix);\r\n    return result;\r\n  };\r\n  publicAPI.computeVisiblePropBounds = () => {\r\n    model.allBounds[0] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].INIT_BOUNDS[0];\r\n    model.allBounds[1] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].INIT_BOUNDS[1];\r\n    model.allBounds[2] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].INIT_BOUNDS[2];\r\n    model.allBounds[3] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].INIT_BOUNDS[3];\r\n    model.allBounds[4] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].INIT_BOUNDS[4];\r\n    model.allBounds[5] = _Common_DataModel_BoundingBox_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].INIT_BOUNDS[5];\r\n    let nothingVisible = true;\r\n    publicAPI.invokeEvent(COMPUTE_VISIBLE_PROP_BOUNDS_EVENT);\r\n\r\n    // loop through all props\r\n    for (let index = 0; index < model.props.length; ++index) {\r\n      const prop = model.props[index];\r\n      if (prop.getVisibility() && prop.getUseBounds()) {\r\n        const bounds = prop.getBounds();\r\n        if (bounds && (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.T)(bounds)) {\r\n          nothingVisible = false;\r\n          if (bounds[0] < model.allBounds[0]) {\r\n            model.allBounds[0] = bounds[0];\r\n          }\r\n          if (bounds[1] > model.allBounds[1]) {\r\n            model.allBounds[1] = bounds[1];\r\n          }\r\n          if (bounds[2] < model.allBounds[2]) {\r\n            model.allBounds[2] = bounds[2];\r\n          }\r\n          if (bounds[3] > model.allBounds[3]) {\r\n            model.allBounds[3] = bounds[3];\r\n          }\r\n          if (bounds[4] < model.allBounds[4]) {\r\n            model.allBounds[4] = bounds[4];\r\n          }\r\n          if (bounds[5] > model.allBounds[5]) {\r\n            model.allBounds[5] = bounds[5];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (nothingVisible) {\r\n      (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.u)(model.allBounds);\r\n      vtkDebugMacro(\"Can't compute bounds, no 3D props are visible\");\r\n    }\r\n    return model.allBounds;\r\n  };\r\n  publicAPI.resetCamera = function () {\r\n    let bounds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\r\n    const boundsToUse = bounds || publicAPI.computeVisiblePropBounds();\r\n    const center = [0, 0, 0];\r\n    if (!(0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.T)(boundsToUse)) {\r\n      vtkDebugMacro('Cannot reset camera!');\r\n      return false;\r\n    }\r\n    let vn = null;\r\n    if (publicAPI.getActiveCamera()) {\r\n      vn = model.activeCamera.getViewPlaneNormal();\r\n    } else {\r\n      vtkErrorMacro('Trying to reset non-existent camera');\r\n      return false;\r\n    }\r\n\r\n    // Reset the perspective zoom factors, otherwise subsequent zooms will cause\r\n    // the view angle to become very small and cause bad depth sorting.\r\n    model.activeCamera.setViewAngle(30.0);\r\n    center[0] = (boundsToUse[0] + boundsToUse[1]) / 2.0;\r\n    center[1] = (boundsToUse[2] + boundsToUse[3]) / 2.0;\r\n    center[2] = (boundsToUse[4] + boundsToUse[5]) / 2.0;\r\n    let w1 = boundsToUse[1] - boundsToUse[0];\r\n    let w2 = boundsToUse[3] - boundsToUse[2];\r\n    let w3 = boundsToUse[5] - boundsToUse[4];\r\n    w1 *= w1;\r\n    w2 *= w2;\r\n    w3 *= w3;\r\n    let radius = w1 + w2 + w3;\r\n\r\n    // If we have just a single point, pick a radius of 1.0\r\n    radius = radius === 0 ? 1.0 : radius;\r\n\r\n    // compute the radius of the enclosing sphere\r\n    radius = Math.sqrt(radius) * 0.5;\r\n\r\n    // default so that the bounding sphere fits within the view fustrum\r\n\r\n    // compute the distance from the intersection of the view frustum with the\r\n    // bounding sphere. Basically in 2D draw a circle representing the bounding\r\n    // sphere in 2D then draw a horizontal line going out from the center of\r\n    // the circle. That is the camera view. Then draw a line from the camera\r\n    // position to the point where it intersects the circle. (it will be tangent\r\n    // to the circle at this point, this is important, only go to the tangent\r\n    // point, do not draw all the way to the view plane). Then draw the radius\r\n    // from the tangent point to the center of the circle. You will note that\r\n    // this forms a right triangle with one side being the radius, another being\r\n    // the target distance for the camera, then just find the target dist using\r\n    // a sin.\r\n    const angle = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.r)(model.activeCamera.getViewAngle());\r\n    const parallelScale = radius;\r\n    const distance = radius / Math.sin(angle * 0.5);\r\n\r\n    // check view-up vector against view plane normal\r\n    const vup = model.activeCamera.getViewUp();\r\n    if (Math.abs((0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.d)(vup, vn)) > 0.999) {\r\n      vtkWarningMacro('Resetting view-up since view plane normal is parallel');\r\n      model.activeCamera.setViewUp(-vup[2], vup[0], vup[1]);\r\n    }\r\n\r\n    // update the camera\r\n    model.activeCamera.setFocalPoint(center[0], center[1], center[2]);\r\n    model.activeCamera.setPosition(center[0] + distance * vn[0], center[1] + distance * vn[1], center[2] + distance * vn[2]);\r\n    publicAPI.resetCameraClippingRange(boundsToUse);\r\n\r\n    // setup default parallel scale\r\n    model.activeCamera.setParallelScale(parallelScale);\r\n\r\n    // update reasonable world to physical values\r\n    model.activeCamera.setPhysicalScale(radius);\r\n    model.activeCamera.setPhysicalTranslation(-center[0], -center[1], -center[2]);\r\n\r\n    // Here to let parallel/distributed compositing intercept\r\n    // and do the right thing.\r\n    publicAPI.invokeEvent(RESET_CAMERA_EVENT);\r\n    return true;\r\n  };\r\n  publicAPI.resetCameraClippingRange = function () {\r\n    let bounds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\r\n    const boundsToUse = bounds || publicAPI.computeVisiblePropBounds();\r\n    if (!(0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.T)(boundsToUse)) {\r\n      vtkDebugMacro('Cannot reset camera clipping range!');\r\n      return false;\r\n    }\r\n\r\n    // Make sure we have an active camera\r\n    publicAPI.getActiveCameraAndResetIfCreated();\r\n    if (!model.activeCamera) {\r\n      vtkErrorMacro('Trying to reset clipping range of non-existent camera');\r\n      return false;\r\n    }\r\n\r\n    // Get the exact range for the bounds\r\n    const range = model.activeCamera.computeClippingRange(boundsToUse);\r\n\r\n    // do not let far - near be less than 0.1 of the window height\r\n    // this is for cases such as 2D images which may have zero range\r\n    let minGap = 0.0;\r\n    if (model.activeCamera.getParallelProjection()) {\r\n      minGap = 0.2 * model.activeCamera.getParallelScale();\r\n    } else {\r\n      const angle = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.r)(model.activeCamera.getViewAngle());\r\n      minGap = 0.2 * Math.tan(angle / 2.0) * range[1];\r\n    }\r\n    if (range[1] - range[0] < minGap) {\r\n      minGap = minGap - range[1] + range[0];\r\n      range[1] += minGap / 2.0;\r\n      range[0] -= minGap / 2.0;\r\n    }\r\n\r\n    // Do not let the range behind the camera throw off the calculation.\r\n    if (range[0] < 0.0) {\r\n      range[0] = 0.0;\r\n    }\r\n\r\n    // Give ourselves a little breathing room\r\n    range[0] = 0.99 * range[0] - (range[1] - range[0]) * model.clippingRangeExpansion;\r\n    range[1] = 1.01 * range[1] + (range[1] - range[0]) * model.clippingRangeExpansion;\r\n\r\n    // Make sure near is not bigger than far\r\n    range[0] = range[0] >= range[1] ? 0.01 * range[1] : range[0];\r\n\r\n    // Make sure near is at least some fraction of far - this prevents near\r\n    // from being behind the camera or too close in front. How close is too\r\n    // close depends on the resolution of the depth buffer\r\n    if (!model.nearClippingPlaneTolerance) {\r\n      model.nearClippingPlaneTolerance = 0.01;\r\n    }\r\n\r\n    // make sure the front clipping range is not too far from the far clippnig\r\n    // range, this is to make sure that the zbuffer resolution is effectively\r\n    // used\r\n    if (range[0] < model.nearClippingPlaneTolerance * range[1]) {\r\n      range[0] = model.nearClippingPlaneTolerance * range[1];\r\n    }\r\n    model.activeCamera.setClippingRange(range[0], range[1]);\r\n\r\n    // Here to let parallel/distributed compositing intercept\r\n    // and do the right thing.\r\n    publicAPI.invokeEvent(RESET_CAMERA_CLIPPING_RANGE_EVENT);\r\n    return false;\r\n  };\r\n  publicAPI.setRenderWindow = renderWindow => {\r\n    if (renderWindow !== model._renderWindow) {\r\n      model._vtkWindow = renderWindow;\r\n      model._renderWindow = renderWindow;\r\n    }\r\n  };\r\n  publicAPI.visibleActorCount = () => model.props.filter(prop => prop.getVisibility()).length;\r\n  publicAPI.visibleVolumeCount = publicAPI.visibleActorCount;\r\n  publicAPI.getMTime = () => {\r\n    let m1 = model.mtime;\r\n    const m2 = model.activeCamera ? model.activeCamera.getMTime() : 0;\r\n    if (m2 > m1) {\r\n      m1 = m2;\r\n    }\r\n    const m3 = model._createdLight ? model._createdLight.getMTime() : 0;\r\n    if (m3 > m1) {\r\n      m1 = m3;\r\n    }\r\n    return m1;\r\n  };\r\n  publicAPI.getTransparent = () => !!model.preserveColorBuffer;\r\n  publicAPI.isActiveCameraCreated = () => !!model.activeCamera;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  pickedProp: null,\r\n  activeCamera: null,\r\n  allBounds: [],\r\n  ambient: [1, 1, 1],\r\n  allocatedRenderTime: 100,\r\n  timeFactor: 1,\r\n  automaticLightCreation: true,\r\n  twoSidedLighting: true,\r\n  lastRenderTimeInSeconds: -1,\r\n  renderWindow: null,\r\n  lights: [],\r\n  actors: [],\r\n  volumes: [],\r\n  lightFollowCamera: true,\r\n  numberOfPropsRendered: 0,\r\n  propArray: null,\r\n  pathArray: null,\r\n  layer: 0,\r\n  preserveColorBuffer: false,\r\n  preserveDepthBuffer: false,\r\n  computeVisiblePropBounds: (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.F)(),\r\n  interactive: true,\r\n  nearClippingPlaneTolerance: 0,\r\n  clippingRangeExpansion: 0.05,\r\n  erase: true,\r\n  draw: true,\r\n  useShadows: false,\r\n  useDepthPeeling: false,\r\n  occlusionRatio: 0,\r\n  maximumNumberOfPeels: 4,\r\n  selector: null,\r\n  delegate: null,\r\n  texturedBackground: false,\r\n  backgroundTexture: null,\r\n  environmentTexture: null,\r\n  environmentTextureDiffuseStrength: 1,\r\n  environmentTextureSpecularStrength: 1,\r\n  useEnvironmentTextureAsBackground: false,\r\n  pass: 0\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _Viewport_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].extend(publicAPI, model, initialValues);\r\n\r\n  // make sure background has 4 entries. Default to opaque black\r\n  if (!model.background) model.background = [0, 0, 0, 1];\r\n  while (model.background.length < 3) model.background.push(0);\r\n  if (model.background.length === 3) model.background.push(1);\r\n\r\n  // Build VTK API\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.g)(publicAPI, model, ['_renderWindow', 'allocatedRenderTime', 'timeFactor', 'lastRenderTimeInSeconds', 'numberOfPropsRendered', 'lastRenderingUsedDepthPeeling', 'selector']);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.e)(publicAPI, model, ['twoSidedLighting', 'lightFollowCamera', 'automaticLightCreation', 'erase', 'draw', 'nearClippingPlaneTolerance', 'clippingRangeExpansion', 'backingStore', 'interactive', 'layer', 'preserveColorBuffer', 'preserveDepthBuffer', 'useDepthPeeling', 'occlusionRatio', 'maximumNumberOfPeels', 'delegate', 'backgroundTexture', 'texturedBackground', 'environmentTexture', 'environmentTextureDiffuseStrength', 'environmentTextureSpecularStrength', 'useEnvironmentTextureAsBackground', 'useShadows', 'pass']);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.k)(publicAPI, model, ['actors', 'volumes', 'lights']);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.l)(publicAPI, model, ['background'], 4, 1.0);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.i)(publicAPI, model, ['renderWindow']);\r\n\r\n  // Object methods\r\n  vtkRenderer(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, 'vtkRenderer');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkRenderer$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Renderer.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/ScalarBarActor.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkScalarBarActor$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! d3-scale */ \"./node_modules/d3-scale/src/linear.js\");\n/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Actor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Actor.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Actor.js\");\n/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray.js\");\n/* harmony import */ var _Common_Core_ScalarsToColors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/ScalarsToColors.js */ \"./node_modules/@kitware/vtk.js/Common/Core/ScalarsToColors.js\");\n/* harmony import */ var _Mapper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Mapper.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js\");\n/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js\");\n/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Texture.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Texture.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  VectorMode\r\n} = _Common_Core_ScalarsToColors_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkScalarBarActor\r\n//\r\n// Note log scales are currently not supported\r\n//\r\n// Developer note: This class is broken into the main class and a helper\r\n// class. The main class holds view independent properties (those properties\r\n// that do not change as the view's resolution/aspect ratio change). The\r\n// helper class is instantiated one per view and holds properties that can\r\n// depend on view specific values such as resolution. The helper class code\r\n// could have been left to the View specific implementation (such as\r\n// vtkWebGPUScalarBarActor) but is instead placed here to it can be shared by\r\n// multiple rendering backends.\r\n//\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction applyTextStyle(ctx, style) {\r\n  ctx.strokeStyle = style.strokeColor;\r\n  ctx.lineWidth = style.strokeSize;\r\n  ctx.fillStyle = style.fontColor;\r\n  ctx.font = `${style.fontStyle} ${style.fontSize}px ${style.fontFamily}`;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Default autoLayout function\r\n// ----------------------------------------------------------------------------\r\n\r\n// compute good values to use based on window size etc a bunch of heuristics\r\n// here with hand tuned constants These values worked for me but really this\r\n// method could be redically changed. The basic gist is\r\n// 1) compute a resonable font size\r\n// 2) render the text atlas using those font sizes\r\n// 3) pick horizontal or vertical bsed on window size\r\n// 4) based on the size of the title and tick labels rendered\r\n//    compute the box size and position such that\r\n//    the text will all fit nicely and the bar will be a resonable size\r\n// 5) compute the bar segments based on the above settings\r\n//\r\n// Note that this function can and should read values from the\r\n// ScalarBarActor but should only write values to the view dependent helper\r\n// instance that is provided as those values are the ones that will be used\r\n// for rendering.\r\n//\r\nfunction defaultAutoLayout(publicAPI, model) {\r\n  return helper => {\r\n    // we don't do a linear scale, the proportions for\r\n    // a 700 pixel window differ from a 1400\r\n    const lastSize = helper.getLastSize();\r\n    const xAxisAdjust = (lastSize[0] / 700) ** 0.8;\r\n    const yAxisAdjust = (lastSize[1] / 700) ** 0.8;\r\n    const minAdjust = Math.min(xAxisAdjust, yAxisAdjust);\r\n    const axisTextStyle = helper.getAxisTextStyle();\r\n    const tickTextStyle = helper.getTickTextStyle();\r\n    Object.assign(axisTextStyle, model.axisTextStyle);\r\n    Object.assign(tickTextStyle, model.tickTextStyle);\r\n\r\n    // compute a reasonable font size first\r\n    axisTextStyle.fontSize = Math.max(24 * minAdjust, 12);\r\n    if (helper.getLastAspectRatio() > 1.0) {\r\n      tickTextStyle.fontSize = Math.max(20 * minAdjust, 10);\r\n    } else {\r\n      tickTextStyle.fontSize = Math.max(16 * minAdjust, 10);\r\n    }\r\n\r\n    // rebuild the text atlas\r\n    const textSizes = helper.updateTextureAtlas();\r\n\r\n    // now compute the boxSize and pixel offsets, different algorithm\r\n    // for horizonal versus vertical\r\n    helper.setTopTitle(false);\r\n    const boxSize = helper.getBoxSizeByReference();\r\n\r\n    // if vertical\r\n    if (helper.getLastAspectRatio() > 1.0) {\r\n      helper.setTickLabelPixelOffset(0.3 * tickTextStyle.fontSize);\r\n\r\n      // if the title will fit within the width of the bar then that looks\r\n      // nicer to put it at the top (helper.topTitle), otherwise rotate it\r\n      // and place it sideways\r\n      if (textSizes.titleWidth <= textSizes.tickWidth + helper.getTickLabelPixelOffset() + 0.8 * tickTextStyle.fontSize) {\r\n        helper.setTopTitle(true);\r\n        helper.setAxisTitlePixelOffset(0.2 * tickTextStyle.fontSize);\r\n        boxSize[0] = 2.0 * (textSizes.tickWidth + helper.getTickLabelPixelOffset() + 0.8 * tickTextStyle.fontSize) / lastSize[0];\r\n        helper.setBoxPosition([0.98 - boxSize[0], -0.92]);\r\n      } else {\r\n        helper.setAxisTitlePixelOffset(0.2 * tickTextStyle.fontSize);\r\n        boxSize[0] = 2.0 * (textSizes.titleHeight + helper.getAxisTitlePixelOffset() + textSizes.tickWidth + helper.getTickLabelPixelOffset() + 0.8 * tickTextStyle.fontSize) / lastSize[0];\r\n        helper.setBoxPosition([0.99 - boxSize[0], -0.92]);\r\n      }\r\n      boxSize[1] = Math.max(1.2, Math.min(1.84 / yAxisAdjust, 1.84));\r\n    } else {\r\n      // horizontal\r\n      helper.setAxisTitlePixelOffset(1.2 * tickTextStyle.fontSize);\r\n      helper.setTickLabelPixelOffset(0.1 * tickTextStyle.fontSize);\r\n      const titleHeight =\r\n      // total offset from top of bar (includes ticks)\r\n      2.0 * (0.8 * tickTextStyle.fontSize + textSizes.titleHeight + helper.getAxisTitlePixelOffset()) / lastSize[1];\r\n      const tickWidth = 2.0 * textSizes.tickWidth / lastSize[0];\r\n      boxSize[0] = Math.min(1.9, Math.max(1.4, 1.4 * tickWidth * (helper.getTicks().length + 3)));\r\n      boxSize[1] = titleHeight;\r\n      helper.setBoxPosition([-0.5 * boxSize[0], -0.97]);\r\n    }\r\n\r\n    // recomute bar segments based on positioning\r\n    helper.recomputeBarSegments(textSizes);\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Default generateTicks function\r\n// ----------------------------------------------------------------------------\r\n\r\n// This function returns the default function used to generate vtkScalarBarActor ticks.\r\n// The default function makes use of d3.scaleLinear() to generate 5 tick marks between\r\n// the minimum and maximum values of the scalar bar. Customize this behavior by passing\r\n// a function to vtkScalarBarActor.newInstance({ generateTicks: customGenerateTicks })\r\n// or by calling scalarBarActor.setGenerateTicks(customGenerateTicks).\r\nfunction defaultGenerateTicks(publicApi, model) {\r\n  return helper => {\r\n    const lastTickBounds = helper.getLastTickBounds();\r\n    const scale = d3_scale__WEBPACK_IMPORTED_MODULE_8__[\"default\"]().domain([lastTickBounds[0], lastTickBounds[1]]);\r\n    const ticks = scale.ticks(5);\r\n    const format = scale.tickFormat(5);\r\n    helper.setTicks(ticks);\r\n    helper.setTickStrings(ticks.map(format));\r\n  };\r\n}\r\n\r\n// many properties of this actor depend on the API specific view The main\r\n// dependency being the resolution as that drives what font sizes to use.\r\n// Bacause of this we need to do some of the calculations in a API specific\r\n// subclass. But... we don't want a lot of duplicated code between WebGL and\r\n// WebGPU for example so we have this helper class, that is designed to be\r\n// fairly API independent so that API specific views can call this to do\r\n// most of the work.\r\nfunction vtkScalarBarActorHelper(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkScalarBarActorHelper');\r\n  publicAPI.setRenderable = renderable => {\r\n    if (model.renderable === renderable) {\r\n      return;\r\n    }\r\n    model.renderable = renderable;\r\n    model.barActor.setProperty(renderable.getProperty());\r\n    model.barActor.setParentProp(renderable);\r\n    model.barActor.setCoordinateSystemToDisplay();\r\n    model.tmActor.setProperty(renderable.getProperty());\r\n    model.tmActor.setParentProp(renderable);\r\n    model.tmActor.setCoordinateSystemToDisplay();\r\n    model.generateTicks = renderable.generateTicks;\r\n    model.axisTextStyle = {\r\n      ...renderable.getAxisTextStyle()\r\n    };\r\n    model.tickTextStyle = {\r\n      ...renderable.getTickTextStyle()\r\n    };\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.updateAPISpecificData = (size, camera, renderWindow) => {\r\n    // has the size changed?\r\n    if (model.lastSize[0] !== size[0] || model.lastSize[1] !== size[1]) {\r\n      model.lastSize[0] = size[0];\r\n      model.lastSize[1] = size[1];\r\n      model.lastAspectRatio = size[0] / size[1];\r\n      model.forceUpdate = true;\r\n    }\r\n    const scalarsToColors = model.renderable.getScalarsToColors();\r\n    if (!scalarsToColors || !model.renderable.getVisibility()) {\r\n      return;\r\n    }\r\n\r\n    // make sure the lut is assigned to our mapper\r\n    model.barMapper.setLookupTable(scalarsToColors);\r\n\r\n    // camera should be the same for all views\r\n    model.camera = camera;\r\n    model.renderWindow = renderWindow;\r\n\r\n    // did something significant change? If so rebuild a lot of things\r\n    if (model.forceUpdate || Math.max(scalarsToColors.getMTime(), publicAPI.getMTime(), model.renderable.getMTime()) > model.lastRebuildTime.getMTime()) {\r\n      const range = scalarsToColors.getMappingRange();\r\n      model.lastTickBounds = [...range];\r\n\r\n      // compute tick marks for axes (update for log scale)\r\n      model.renderable.getGenerateTicks()(publicAPI);\r\n      if (model.renderable.getAutomated()) {\r\n        model.renderable.getAutoLayout()(publicAPI);\r\n      } else {\r\n        // copy values from renderable\r\n        model.axisTextStyle = {\r\n          ...model.renderable.getAxisTextStyle()\r\n        };\r\n        model.tickTextStyle = {\r\n          ...model.renderable.getTickTextStyle()\r\n        };\r\n        model.barPosition = [...model.renderable.getBarPosition()];\r\n        model.barSize = [...model.renderable.getBarSize()];\r\n        model.boxPosition = [...model.renderable.getBoxPosition()];\r\n        model.boxSize = [...model.renderable.getBoxSize()];\r\n        model.axisTitlePixelOffset = model.renderable.getAxisTitlePixelOffset();\r\n        model.tickLabelPixelOffset = model.renderable.getTickLabelPixelOffset();\r\n\r\n        // rebuild the texture only when force or changed bounds, face\r\n        // visibility changes do to change the atlas\r\n        const textSizes = publicAPI.updateTextureAtlas();\r\n\r\n        // recompute bar segments based on positioning\r\n        publicAPI.recomputeBarSegments(textSizes);\r\n      }\r\n      publicAPI.updatePolyDataForLabels();\r\n      publicAPI.updatePolyDataForBarSegments();\r\n      model.lastRebuildTime.modified();\r\n      model.forceUpdate = false;\r\n    }\r\n  };\r\n\r\n  // create the texture map atlas that contains the rendering of\r\n  // all the text strings. Only needs to be called when the text strings\r\n  // have changed (labels and ticks)\r\n  publicAPI.updateTextureAtlas = () => {\r\n    // set the text properties\r\n    model.tmContext.textBaseline = 'bottom';\r\n    model.tmContext.textAlign = 'left';\r\n\r\n    // return some factors about the text atlas\r\n    const results = {};\r\n\r\n    // first the axislabel\r\n    const newTmAtlas = new Map();\r\n    let maxWidth = 0;\r\n    let totalHeight = 1; // start one pixel in so we have a border\r\n    applyTextStyle(model.tmContext, model.axisTextStyle);\r\n    let metrics = model.tmContext.measureText(model.renderable.getAxisLabel());\r\n    let entry = {\r\n      height: metrics.actualBoundingBoxAscent + 2,\r\n      startingHeight: totalHeight,\r\n      width: metrics.width + 2,\r\n      textStyle: model.axisTextStyle\r\n    };\r\n    newTmAtlas.set(model.renderable.getAxisLabel(), entry);\r\n    totalHeight += entry.height;\r\n    maxWidth = entry.width;\r\n    results.titleWidth = entry.width;\r\n    results.titleHeight = entry.height;\r\n\r\n    // and the ticks, NaN Below and Above\r\n    results.tickWidth = 0;\r\n    results.tickHeight = 0;\r\n    applyTextStyle(model.tmContext, model.tickTextStyle);\r\n    const strings = [...publicAPI.getTickStrings(), 'NaN', 'Below', 'Above'];\r\n    for (let t = 0; t < strings.length; t++) {\r\n      if (!newTmAtlas.has(strings[t])) {\r\n        metrics = model.tmContext.measureText(strings[t]);\r\n        entry = {\r\n          height: metrics.actualBoundingBoxAscent + 2,\r\n          startingHeight: totalHeight,\r\n          width: metrics.width + 2,\r\n          textStyle: model.tickTextStyle\r\n        };\r\n        newTmAtlas.set(strings[t], entry);\r\n        totalHeight += entry.height;\r\n        if (maxWidth < entry.width) {\r\n          maxWidth = entry.width;\r\n        }\r\n        if (results.tickWidth < entry.width) {\r\n          results.tickWidth = entry.width;\r\n        }\r\n        if (results.tickHeight < entry.height) {\r\n          results.tickHeight = entry.height;\r\n        }\r\n      }\r\n    }\r\n\r\n    // always use power of two to avoid interpolation\r\n    // in cases where PO2 is required\r\n    maxWidth = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.Q)(maxWidth);\r\n    totalHeight = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_0__.Q)(totalHeight);\r\n\r\n    // set the tcoord values\r\n    newTmAtlas.forEach(value => {\r\n      value.tcoords = [0.0, (totalHeight - value.startingHeight - value.height) / totalHeight, value.width / maxWidth, (totalHeight - value.startingHeight - value.height) / totalHeight, value.width / maxWidth, (totalHeight - value.startingHeight) / totalHeight, 0.0, (totalHeight - value.startingHeight) / totalHeight];\r\n    });\r\n\r\n    // make sure we have power of two dimensions\r\n    model.tmCanvas.width = maxWidth;\r\n    model.tmCanvas.height = totalHeight;\r\n    model.tmContext.textBaseline = 'bottom';\r\n    model.tmContext.textAlign = 'left';\r\n    model.tmContext.clearRect(0, 0, maxWidth, totalHeight);\r\n\r\n    // draw the text onto the texture\r\n    newTmAtlas.forEach((value, key) => {\r\n      applyTextStyle(model.tmContext, value.textStyle);\r\n      model.tmContext.fillText(key, 1, value.startingHeight + value.height - 1);\r\n    });\r\n    model.tmTexture.setCanvas(model.tmCanvas);\r\n    // mark as modified since the canvas typically doesn't change\r\n    model.tmTexture.modified();\r\n    model._tmAtlas = newTmAtlas;\r\n    return results;\r\n  };\r\n  publicAPI.computeBarSize = textSizes => {\r\n    // compute orientation\r\n    model.vertical = model.boxSize[1] > model.boxSize[0];\r\n    const tickHeight = 2.0 * textSizes.tickHeight / model.lastSize[1];\r\n    const segSize = [1, 1];\r\n\r\n    // horizontal and vertical have different astetics so adjust based on\r\n    // orientation\r\n    if (model.vertical) {\r\n      const tickWidth = 2.0 * (textSizes.tickWidth + model.tickLabelPixelOffset) / model.lastSize[0];\r\n      if (model.topTitle) {\r\n        const titleHeight = 2.0 * (textSizes.titleHeight + model.axisTitlePixelOffset) / model.lastSize[1];\r\n        model.barSize[0] = model.boxSize[0] - tickWidth;\r\n        model.barSize[1] = model.boxSize[1] - titleHeight;\r\n      } else {\r\n        // rotated title so width is based off height\r\n        const titleWidth = 2.0 * (textSizes.titleHeight + model.axisTitlePixelOffset) / model.lastSize[0];\r\n        model.barSize[0] = model.boxSize[0] - titleWidth - tickWidth;\r\n        model.barSize[1] = model.boxSize[1];\r\n      }\r\n      model.barPosition[0] = model.boxPosition[0] + tickWidth;\r\n      model.barPosition[1] = model.boxPosition[1];\r\n      segSize[1] = tickHeight;\r\n    } else {\r\n      const tickWidth = (2.0 * textSizes.tickWidth - 8) / model.lastSize[0];\r\n      const titleHeight = 2.0 * (textSizes.titleHeight + model.axisTitlePixelOffset) / model.lastSize[1];\r\n      model.barSize[0] = model.boxSize[0];\r\n      model.barPosition[0] = model.boxPosition[0];\r\n      model.barSize[1] = model.boxSize[1] - titleHeight;\r\n      model.barPosition[1] = model.boxPosition[1];\r\n      segSize[0] = tickWidth;\r\n    }\r\n    return segSize;\r\n  };\r\n\r\n  // based on all the settins compute a barSegments array\r\n  // containing the segments of the scalar bar\r\n  // each segment contains\r\n  //   corners[4][2]\r\n  //   title - e.g. NaN, Above, ticks\r\n  //   scalars - the normalized scalars values to use for that segment\r\n  //\r\n  // Note that the bar consumes the space in the box that remains after\r\n  // leaving room for the text labels\r\n  publicAPI.recomputeBarSegments = textSizes => {\r\n    // first compute the barSize/Position\r\n    const segSize = publicAPI.computeBarSize(textSizes);\r\n    model.barSegments = [];\r\n    const startPos = [0.0, 0.0];\r\n\r\n    // horizontal and vertical have different astetics so adjust based on\r\n    // orientation\r\n    const barAxis = model.vertical ? 1 : 0;\r\n    const segSpace = model.vertical ? 0.01 : 0.02;\r\n    function pushSeg(title, scalars) {\r\n      model.barSegments.push({\r\n        corners: [[...startPos], [startPos[0] + segSize[0], startPos[1]], [startPos[0] + segSize[0], startPos[1] + segSize[1]], [startPos[0], startPos[1] + segSize[1]]],\r\n        scalars,\r\n        title\r\n      });\r\n      startPos[barAxis] += segSize[barAxis] + segSpace;\r\n    }\r\n    if (model.renderable.getDrawNanAnnotation() && model.renderable.getScalarsToColors().getNanColor()) {\r\n      pushSeg('NaN', [NaN, NaN, NaN, NaN]);\r\n    }\r\n    if (model.renderable.getDrawBelowRangeSwatch() && model.renderable.getScalarsToColors().getUseBelowRangeColor?.()) {\r\n      pushSeg('Below', [-0.1, -0.1, -0.1, -0.1]);\r\n    }\r\n    const haveAbove = model.renderable.getScalarsToColors().getUseAboveRangeColor?.();\r\n\r\n    // extra space around the ticks section\r\n    startPos[barAxis] += segSpace;\r\n    const oldSegSize = segSize[barAxis];\r\n    segSize[barAxis] = haveAbove ? 1.0 - 2.0 * segSpace - segSize[barAxis] - startPos[barAxis] : 1.0 - segSpace - startPos[barAxis];\r\n    pushSeg('ticks', model.vertical ? [0, 0, 0.995, 0.995] : [0, 0.995, 0.995, 0]);\r\n    if (model.renderable.getDrawAboveRangeSwatch() && haveAbove) {\r\n      segSize[barAxis] = oldSegSize;\r\n      startPos[barAxis] += segSpace;\r\n      pushSeg('Above', [1.1, 1.1, 1.1, 1.1]);\r\n    }\r\n  };\r\n\r\n  // called by updatePolyDataForLabels\r\n  // modifies class constants tmp2v3\r\n  const tmp2v3 = new Float64Array(3);\r\n\r\n  // anchor point = pos\r\n  // H alignment = left, middle, right\r\n  // V alignment = bottom, middle, top\r\n  // Text Orientation = horizontal, vertical\r\n  // orientation\r\n  publicAPI.createPolyDataForOneLabel = (text, pos, alignment, orientation, offset, results) => {\r\n    const value = model._tmAtlas.get(text);\r\n    if (!value) {\r\n      return;\r\n    }\r\n    // have to find the four corners of the texture polygon for this label\r\n    let ptIdx = results.ptIdx;\r\n    let cellIdx = results.cellIdx;\r\n\r\n    // get achor point in pixels\r\n    tmp2v3[0] = (0.5 * pos[0] + 0.5) * model.lastSize[0];\r\n    tmp2v3[1] = (0.5 * pos[1] + 0.5) * model.lastSize[1];\r\n    tmp2v3[2] = pos[2];\r\n    tmp2v3[0] += offset[0];\r\n    tmp2v3[1] += offset[1];\r\n\r\n    // get text size in display pixels\r\n    const textSize = [];\r\n    const textAxes = orientation === 'vertical' ? [1, 0] : [0, 1];\r\n    if (orientation === 'vertical') {\r\n      textSize[0] = value.width;\r\n      textSize[1] = -value.height;\r\n      // update anchor point based on alignment\r\n      if (alignment[0] === 'middle') {\r\n        tmp2v3[1] -= value.width / 2.0;\r\n      } else if (alignment[0] === 'right') {\r\n        tmp2v3[1] -= value.width;\r\n      }\r\n      if (alignment[1] === 'middle') {\r\n        tmp2v3[0] += value.height / 2.0;\r\n      } else if (alignment[1] === 'top') {\r\n        tmp2v3[0] += value.height;\r\n      }\r\n    } else {\r\n      textSize[0] = value.width;\r\n      textSize[1] = value.height;\r\n      // update anchor point based on alignment\r\n      if (alignment[0] === 'middle') {\r\n        tmp2v3[0] -= value.width / 2.0;\r\n      } else if (alignment[0] === 'right') {\r\n        tmp2v3[0] -= value.width;\r\n      }\r\n      if (alignment[1] === 'middle') {\r\n        tmp2v3[1] -= value.height / 2.0;\r\n      } else if (alignment[1] === 'top') {\r\n        tmp2v3[1] -= value.height;\r\n      }\r\n    }\r\n    results.points[ptIdx * 3] = tmp2v3[0];\r\n    results.points[ptIdx * 3 + 1] = tmp2v3[1];\r\n    results.points[ptIdx * 3 + 2] = tmp2v3[2];\r\n    results.tcoords[ptIdx * 2] = value.tcoords[0];\r\n    results.tcoords[ptIdx * 2 + 1] = value.tcoords[1];\r\n    ptIdx++;\r\n    tmp2v3[textAxes[0]] += textSize[0];\r\n    results.points[ptIdx * 3] = tmp2v3[0];\r\n    results.points[ptIdx * 3 + 1] = tmp2v3[1];\r\n    results.points[ptIdx * 3 + 2] = tmp2v3[2];\r\n    results.tcoords[ptIdx * 2] = value.tcoords[2];\r\n    results.tcoords[ptIdx * 2 + 1] = value.tcoords[3];\r\n    ptIdx++;\r\n    tmp2v3[textAxes[1]] += textSize[1];\r\n    results.points[ptIdx * 3] = tmp2v3[0];\r\n    results.points[ptIdx * 3 + 1] = tmp2v3[1];\r\n    results.points[ptIdx * 3 + 2] = tmp2v3[2];\r\n    results.tcoords[ptIdx * 2] = value.tcoords[4];\r\n    results.tcoords[ptIdx * 2 + 1] = value.tcoords[5];\r\n    ptIdx++;\r\n    tmp2v3[textAxes[0]] -= textSize[0];\r\n    results.points[ptIdx * 3] = tmp2v3[0];\r\n    results.points[ptIdx * 3 + 1] = tmp2v3[1];\r\n    results.points[ptIdx * 3 + 2] = tmp2v3[2];\r\n    results.tcoords[ptIdx * 2] = value.tcoords[6];\r\n    results.tcoords[ptIdx * 2 + 1] = value.tcoords[7];\r\n    ptIdx++;\r\n\r\n    // add the two triangles to represent the quad\r\n    results.polys[cellIdx * 4] = 3;\r\n    results.polys[cellIdx * 4 + 1] = ptIdx - 4;\r\n    results.polys[cellIdx * 4 + 2] = ptIdx - 3;\r\n    results.polys[cellIdx * 4 + 3] = ptIdx - 2;\r\n    cellIdx++;\r\n    results.polys[cellIdx * 4] = 3;\r\n    results.polys[cellIdx * 4 + 1] = ptIdx - 4;\r\n    results.polys[cellIdx * 4 + 2] = ptIdx - 2;\r\n    results.polys[cellIdx * 4 + 3] = ptIdx - 1;\r\n    results.ptIdx += 4;\r\n    results.cellIdx += 2;\r\n  };\r\n\r\n  // update the polydata associated with drawing the text labels\r\n  // specifically the quads used for each label and their associated tcoords\r\n  // etc. This changes every time the camera viewpoint changes\r\n  const tmpv3 = new Float64Array(3);\r\n  publicAPI.updatePolyDataForLabels = () => {\r\n    // update the polydata\r\n    const numLabels = publicAPI.getTickStrings().length + model.barSegments.length;\r\n    const numPts = numLabels * 4;\r\n    const numTris = numLabels * 2;\r\n    const points = new Float64Array(numPts * 3);\r\n    const polys = new Uint16Array(numTris * 4);\r\n    const tcoords = new Float32Array(numPts * 2);\r\n    const results = {\r\n      ptIdx: 0,\r\n      cellIdx: 0,\r\n      polys,\r\n      points,\r\n      tcoords\r\n    };\r\n\r\n    // compute the direction vector\r\n    const offsetAxis = model.vertical ? 0 : 1;\r\n    const spacedAxis = model.vertical ? 1 : 0;\r\n    tmpv3[2] = -0.99; // near plane\r\n\r\n    // draw the title\r\n    const alignment = model.vertical ? ['right', 'middle'] : ['middle', 'bottom'];\r\n    let dir = [0, 1];\r\n    const tickOffsets = [0, 0];\r\n    if (model.vertical) {\r\n      tickOffsets[0] = -model.tickLabelPixelOffset;\r\n      if (model.topTitle) {\r\n        tmpv3[0] = model.boxPosition[0] + 0.5 * model.boxSize[0];\r\n        tmpv3[1] = model.barPosition[1] + model.barSize[1];\r\n\r\n        // write the axis label\r\n        publicAPI.createPolyDataForOneLabel(model.renderable.getAxisLabel(), tmpv3, ['middle', 'bottom'], 'horizontal', [0, model.axisTitlePixelOffset], results);\r\n      } else {\r\n        tmpv3[0] = model.barPosition[0] + model.barSize[0];\r\n        tmpv3[1] = model.barPosition[1] + 0.5 * model.barSize[1];\r\n\r\n        // write the axis label\r\n        publicAPI.createPolyDataForOneLabel(model.renderable.getAxisLabel(), tmpv3, ['middle', 'top'], 'vertical', [model.axisTitlePixelOffset, 0], results);\r\n      }\r\n      dir = [-1, 0];\r\n    } else {\r\n      tickOffsets[1] = model.tickLabelPixelOffset;\r\n      tmpv3[0] = model.barPosition[0] + 0.5 * model.barSize[0];\r\n      tmpv3[1] = model.barPosition[1] + model.barSize[1];\r\n      publicAPI.createPolyDataForOneLabel(model.renderable.getAxisLabel(), tmpv3, ['middle', 'bottom'], 'horizontal', [0, model.axisTitlePixelOffset], results);\r\n    }\r\n    tmpv3[offsetAxis] = model.barPosition[offsetAxis] + (0.5 * dir[offsetAxis] + 0.5) * model.barSize[offsetAxis];\r\n    tmpv3[spacedAxis] = model.barPosition[spacedAxis] + model.barSize[spacedAxis] * 0.5;\r\n\r\n    // draw bar segment labels\r\n    let tickSeg = null;\r\n    for (let i = 0; i < model.barSegments.length; i++) {\r\n      const seg = model.barSegments[i];\r\n      if (seg.title === 'ticks') {\r\n        // handle ticks below\r\n        tickSeg = seg;\r\n      } else {\r\n        tmpv3[spacedAxis] = model.barPosition[spacedAxis] + 0.5 * model.barSize[spacedAxis] * (seg.corners[2][spacedAxis] + seg.corners[0][spacedAxis]);\r\n        publicAPI.createPolyDataForOneLabel(seg.title, tmpv3, alignment, 'horizontal', tickOffsets, results);\r\n      }\r\n    }\r\n\r\n    // write the tick labels\r\n    const tickSegmentStart = model.barPosition[spacedAxis] + model.barSize[spacedAxis] * tickSeg.corners[0][spacedAxis];\r\n    const tickSegmentSize = model.barSize[spacedAxis] * (tickSeg.corners[2][spacedAxis] - tickSeg.corners[0][spacedAxis]);\r\n    const ticks = publicAPI.getTicks();\r\n    const tickStrings = publicAPI.getTickStrings();\r\n    for (let t = 0; t < ticks.length; t++) {\r\n      const tickPos = (ticks[t] - model.lastTickBounds[0]) / (model.lastTickBounds[1] - model.lastTickBounds[0]);\r\n      tmpv3[spacedAxis] = tickSegmentStart + tickSegmentSize * tickPos;\r\n      publicAPI.createPolyDataForOneLabel(tickStrings[t], tmpv3, alignment, 'horizontal', tickOffsets, results);\r\n    }\r\n    const tcoordDA = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance({\r\n      numberOfComponents: 2,\r\n      values: tcoords,\r\n      name: 'TextureCoordinates'\r\n    });\r\n    model.tmPolyData.getPointData().setTCoords(tcoordDA);\r\n    model.tmPolyData.getPoints().setData(points, 3);\r\n    model.tmPolyData.getPoints().modified();\r\n    model.tmPolyData.getPolys().setData(polys, 1);\r\n    model.tmPolyData.getPolys().modified();\r\n    model.tmPolyData.modified();\r\n  };\r\n  publicAPI.updatePolyDataForBarSegments = () => {\r\n    const scalarsToColors = model.renderable.getScalarsToColors();\r\n    let numberOfExtraColors = 0;\r\n    if (model.renderable.getDrawNanAnnotation() && scalarsToColors.getNanColor()) {\r\n      numberOfExtraColors += 1;\r\n    }\r\n    if (model.renderable.getDrawBelowRangeSwatch() && scalarsToColors.getUseBelowRangeColor?.()) {\r\n      numberOfExtraColors += 1;\r\n    }\r\n    if (model.renderable.getDrawAboveRangeSwatch() && scalarsToColors.getUseAboveRangeColor?.()) {\r\n      numberOfExtraColors += 1;\r\n    }\r\n    const numPts = 4 * (1 + numberOfExtraColors);\r\n    const numQuads = numPts;\r\n\r\n    // handle vector component mode\r\n    let numComps = 1;\r\n    if (scalarsToColors.getVectorMode() === VectorMode.COMPONENT) {\r\n      numComps = scalarsToColors.getVectorComponent() + 1;\r\n    }\r\n\r\n    // create the colored bars\r\n    const points = new Float64Array(numPts * 3);\r\n    const cells = new Uint16Array(numQuads * 5);\r\n    const scalars = new Float32Array(numPts * numComps);\r\n    let ptIdx = 0;\r\n    let cellIdx = 0;\r\n    for (let i = 0; i < model.barSegments.length; i++) {\r\n      const seg = model.barSegments[i];\r\n      for (let e = 0; e < 4; e++) {\r\n        tmpv3[0] = model.barPosition[0] + seg.corners[e][0] * model.barSize[0];\r\n        tmpv3[1] = model.barPosition[1] + seg.corners[e][1] * model.barSize[1];\r\n        points[ptIdx * 3] = (0.5 * tmpv3[0] + 0.5) * model.lastSize[0];\r\n        points[ptIdx * 3 + 1] = (0.5 * tmpv3[1] + 0.5) * model.lastSize[1];\r\n        points[ptIdx * 3 + 2] = tmpv3[2];\r\n        for (let nc = 0; nc < numComps; nc++) {\r\n          scalars[ptIdx * numComps + nc] = model.lastTickBounds[0] + seg.scalars[e] * (model.lastTickBounds[1] - model.lastTickBounds[0]);\r\n        }\r\n        ptIdx++;\r\n      }\r\n      cells[cellIdx * 5] = 4;\r\n      cells[cellIdx * 5 + 1] = ptIdx - 4;\r\n      cells[cellIdx * 5 + 2] = ptIdx - 3;\r\n      cells[cellIdx * 5 + 3] = ptIdx - 2;\r\n      cells[cellIdx * 5 + 4] = ptIdx - 1;\r\n      cellIdx++;\r\n    }\r\n    const scalarsDA = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance({\r\n      numberOfComponents: numComps,\r\n      values: scalars,\r\n      name: 'Scalars'\r\n    });\r\n    model.polyData.getPointData().setScalars(scalarsDA);\r\n    model.polyData.getPoints().setData(points, 3);\r\n    model.polyData.getPoints().modified();\r\n    model.polyData.getPolys().setData(cells, 1);\r\n    model.polyData.getPolys().modified();\r\n    model.polyData.modified();\r\n  };\r\n}\r\nconst newScalarBarActorHelper = _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.newInstance(function (publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\r\n    renderable: null\r\n  };\r\n  Object.assign(model, {}, initialValues);\r\n\r\n  // Inheritance\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.setGet(publicAPI, model, ['axisTitlePixelOffset', 'tickLabelPixelOffset', 'renderable', 'topTitle', 'ticks', 'tickStrings']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.get(publicAPI, model, ['lastSize', 'lastAspectRatio', 'lastTickBounds', 'axisTextStyle', 'tickTextStyle', 'barActor', 'tmActor']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.getArray(publicAPI, model, ['boxPosition', 'boxSize']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.setArray(publicAPI, model, ['boxPosition', 'boxSize'], 2);\r\n  model.forceUpdate = false;\r\n  model.lastRebuildTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.obj(model.lastRebuildTime, {\r\n    mtime: 0\r\n  });\r\n  model.lastSize = [-1, -1];\r\n  model.tmCanvas = document.createElement('canvas');\r\n  model.tmContext = model.tmCanvas.getContext('2d');\r\n  model._tmAtlas = new Map();\r\n  model.barMapper = _Mapper_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance();\r\n  model.barMapper.setInterpolateScalarsBeforeMapping(true);\r\n  model.barMapper.setUseLookupTableScalarRange(true);\r\n  model.polyData = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].newInstance();\r\n  model.barMapper.setInputData(model.polyData);\r\n  model.barActor = _Actor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance();\r\n  model.barActor.setMapper(model.barMapper);\r\n\r\n  // for texture atlas\r\n  model.tmPolyData = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].newInstance();\r\n  model.tmMapper = _Mapper_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance();\r\n  model.tmMapper.setInputData(model.tmPolyData);\r\n  model.tmTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].newInstance({\r\n    resizable: true\r\n  });\r\n  model.tmTexture.setInterpolate(false);\r\n  model.tmActor = _Actor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance({\r\n    parentProp: publicAPI\r\n  });\r\n  model.tmActor.setMapper(model.tmMapper);\r\n  model.tmActor.addTexture(model.tmTexture);\r\n  model.barPosition = [0, 0];\r\n  model.barSize = [0, 0];\r\n  model.boxPosition = [0.88, -0.92];\r\n  model.boxSize = [0.1, 1.1];\r\n\r\n  // internal variables\r\n  model.lastTickBounds = [];\r\n  vtkScalarBarActorHelper(publicAPI, model);\r\n}, 'vtkScalarBarActorHelper');\r\n\r\n//\r\n// Now we define the public class that the application sets view independent\r\n// properties on. This class is fairly small as it mainly just holds\r\n// properties setter and getters leaving all calculations to the helper\r\n// class.\r\n//\r\nfunction vtkScalarBarActor(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkScalarBarActor');\r\n  publicAPI.setTickTextStyle = tickStyle => {\r\n    model.tickTextStyle = {\r\n      ...model.tickTextStyle,\r\n      ...tickStyle\r\n    };\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.setAxisTextStyle = axisStyle => {\r\n    model.axisTextStyle = {\r\n      ...model.axisTextStyle,\r\n      ...axisStyle\r\n    };\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.resetAutoLayoutToDefault = () => {\r\n    publicAPI.setAutoLayout(defaultAutoLayout(publicAPI, model));\r\n  };\r\n  publicAPI.resetGenerateTicksToDefault = () => {\r\n    publicAPI.setGenerateTicks(defaultGenerateTicks());\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction defaultValues(initialValues) {\r\n  return {\r\n    automated: true,\r\n    autoLayout: null,\r\n    axisLabel: 'Scalar Value',\r\n    barPosition: [0, 0],\r\n    barSize: [0, 0],\r\n    boxPosition: [0.88, -0.92],\r\n    boxSize: [0.1, 1.1],\r\n    scalarToColors: null,\r\n    axisTitlePixelOffset: 36.0,\r\n    axisTextStyle: {\r\n      fontColor: 'white',\r\n      fontStyle: 'normal',\r\n      fontSize: 18,\r\n      fontFamily: 'serif'\r\n    },\r\n    tickLabelPixelOffset: 14.0,\r\n    tickTextStyle: {\r\n      fontColor: 'white',\r\n      fontStyle: 'normal',\r\n      fontSize: 14,\r\n      fontFamily: 'serif'\r\n    },\r\n    generateTicks: null,\r\n    drawNanAnnotation: true,\r\n    drawBelowRangeSwatch: true,\r\n    drawAboveRangeSwatch: true,\r\n    ...initialValues\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, defaultValues(initialValues));\r\n  if (!model.autoLayout) model.autoLayout = defaultAutoLayout(publicAPI, model);\r\n  if (!model.generateTicks) model.generateTicks = defaultGenerateTicks();\r\n\r\n  // Inheritance\r\n  _Actor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(publicAPI, model, initialValues);\r\n  publicAPI.getProperty().setDiffuse(0.0);\r\n  publicAPI.getProperty().setAmbient(1.0);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.setGet(publicAPI, model, ['automated', 'autoLayout', 'axisTitlePixelOffset', 'axisLabel', 'scalarsToColors', 'tickLabelPixelOffset', 'generateTicks', 'drawNanAnnotation', 'drawBelowRangeSwatch', 'drawAboveRangeSwatch']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.get(publicAPI, model, ['axisTextStyle', 'tickTextStyle']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.getArray(publicAPI, model, ['barPosition', 'barSize', 'boxPosition', 'boxSize']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.setArray(publicAPI, model, ['barPosition', 'barSize', 'boxPosition', 'boxSize'], 2);\r\n\r\n  // Object methods\r\n  vtkScalarBarActor(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.newInstance(extend, 'vtkScalarBarActor');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkScalarBarActor$1 = {\r\n  newInstance,\r\n  extend,\r\n  newScalarBarActorHelper\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/ScalarBarActor.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/Texture.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STATIC: () => (/* binding */ STATIC),\n/* harmony export */   \"default\": () => (/* binding */ vtkTexture$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkTexture methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkTexture(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkTexture');\r\n  publicAPI.imageLoaded = () => {\r\n    model.image.removeEventListener('load', publicAPI.imageLoaded);\r\n    model.imageLoaded = true;\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.setJsImageData = imageData => {\r\n    if (model.jsImageData === imageData) {\r\n      return;\r\n    }\r\n\r\n    // clear other entries\r\n    if (imageData !== null) {\r\n      publicAPI.setInputData(null);\r\n      publicAPI.setInputConnection(null);\r\n      model.image = null;\r\n      model.canvas = null;\r\n    }\r\n    model.jsImageData = imageData;\r\n    model.imageLoaded = true;\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.setCanvas = canvas => {\r\n    if (model.canvas === canvas) {\r\n      return;\r\n    }\r\n\r\n    // clear other entries\r\n    if (canvas !== null) {\r\n      publicAPI.setInputData(null);\r\n      publicAPI.setInputConnection(null);\r\n      model.image = null;\r\n      model.jsImageData = null;\r\n    }\r\n    model.canvas = canvas;\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.setImage = image => {\r\n    if (model.image === image) {\r\n      return;\r\n    }\r\n\r\n    // clear other entries\r\n    if (image !== null) {\r\n      publicAPI.setInputData(null);\r\n      publicAPI.setInputConnection(null);\r\n      model.canvas = null;\r\n      model.jsImageData = null;\r\n    }\r\n    model.image = image;\r\n    model.imageLoaded = false;\r\n    if (image.complete) {\r\n      publicAPI.imageLoaded();\r\n    } else {\r\n      image.addEventListener('load', publicAPI.imageLoaded);\r\n    }\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.getDimensionality = () => {\r\n    let width = 0;\r\n    let height = 0;\r\n    let depth = 1;\r\n    if (publicAPI.getInputData()) {\r\n      const data = publicAPI.getInputData();\r\n      width = data.getDimensions()[0];\r\n      height = data.getDimensions()[1];\r\n      depth = data.getDimensions()[2];\r\n    }\r\n    if (model.jsImageData) {\r\n      width = model.jsImageData.width;\r\n      height = model.jsImageData.height;\r\n    }\r\n    if (model.canvas) {\r\n      width = model.canvas.width;\r\n      height = model.canvas.height;\r\n    }\r\n    if (model.image) {\r\n      width = model.image.width;\r\n      height = model.image.height;\r\n    }\r\n    const dimensionality = (width > 1) + (height > 1) + (depth > 1);\r\n    return dimensionality;\r\n  };\r\n  publicAPI.getInputAsJsImageData = () => {\r\n    if (!model.imageLoaded || publicAPI.getInputData()) return null;\r\n    if (model.jsImageData) {\r\n      return model.jsImageData();\r\n    }\r\n    if (model.canvas) {\r\n      const context = model.canvas.getContext('2d');\r\n      const imageData = context.getImageData(0, 0, model.canvas.width, model.canvas.height);\r\n      return imageData;\r\n    }\r\n    if (model.image) {\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = model.image.width;\r\n      canvas.height = model.image.height;\r\n      const context = canvas.getContext('2d');\r\n      context.translate(0, canvas.height);\r\n      context.scale(1, -1);\r\n      context.drawImage(model.image, 0, 0, model.image.width, model.image.height);\r\n      const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\r\n      return imageData;\r\n    }\r\n    return null;\r\n  };\r\n}\r\n\r\n// Use nativeArray instead of self\r\nconst generateMipmaps = (nativeArray, width, height, level) => {\r\n  // TODO: FIX UNEVEN TEXTURE MIP GENERATION:\r\n  // When textures don't have standard ratios, higher mip levels\r\n  // result in their color chanels getting messed up and shifting\r\n  // 3x3 gaussian kernel\r\n  const g3m = [1, 2, 1]; // eslint-disable-line\r\n  const g3w = 4; // eslint-disable-line\r\n\r\n  const kernel = g3m;\r\n  const kernelWeight = g3w;\r\n  const hs = nativeArray.length / (width * height); // TODO: support for textures with depth more than 1\r\n  let currentWidth = width;\r\n  let currentHeight = height;\r\n  let imageData = nativeArray;\r\n  const maps = [imageData];\r\n  for (let i = 0; i < level; i++) {\r\n    const oldData = [...imageData];\r\n    currentWidth /= 2;\r\n    currentHeight /= 2;\r\n    imageData = new Uint8ClampedArray(currentWidth * currentHeight * hs);\r\n    const vs = hs * currentWidth;\r\n\r\n    // Scale down\r\n    let shift = 0;\r\n    for (let p = 0; p < imageData.length; p += hs) {\r\n      if (p % vs === 0) {\r\n        shift += 2 * hs * currentWidth;\r\n      }\r\n      for (let c = 0; c < hs; c++) {\r\n        let sample = oldData[shift + c];\r\n        sample += oldData[shift + hs + c];\r\n        sample += oldData[shift - 2 * vs + c];\r\n        sample += oldData[shift - 2 * vs + hs + c];\r\n        sample /= 4;\r\n        imageData[p + c] = sample;\r\n      }\r\n      shift += 2 * hs;\r\n    }\r\n\r\n    // Horizontal Pass\r\n    let dataCopy = [...imageData];\r\n    for (let p = 0; p < imageData.length; p += hs) {\r\n      for (let c = 0; c < hs; c++) {\r\n        let x = -(kernel.length - 1) / 2;\r\n        let kw = kernelWeight;\r\n        let value = 0.0;\r\n        for (let k = 0; k < kernel.length; k++) {\r\n          let index = p + c + x * hs;\r\n          const lineShift = index % vs - (p + c) % vs;\r\n          if (lineShift > hs) index += vs;\r\n          if (lineShift < -hs) index -= vs;\r\n          if (dataCopy[index]) {\r\n            value += dataCopy[index] * kernel[k];\r\n          } else {\r\n            kw -= kernel[k];\r\n          }\r\n          x += 1;\r\n        }\r\n        imageData[p + c] = value / kw;\r\n      }\r\n    }\r\n    // Vertical Pass\r\n    dataCopy = [...imageData];\r\n    for (let p = 0; p < imageData.length; p += hs) {\r\n      for (let c = 0; c < hs; c++) {\r\n        let x = -(kernel.length - 1) / 2;\r\n        let kw = kernelWeight;\r\n        let value = 0.0;\r\n        for (let k = 0; k < kernel.length; k++) {\r\n          const index = p + c + x * vs;\r\n          if (dataCopy[index]) {\r\n            value += dataCopy[index] * kernel[k];\r\n          } else {\r\n            kw -= kernel[k];\r\n          }\r\n          x += 1;\r\n        }\r\n        imageData[p + c] = value / kw;\r\n      }\r\n    }\r\n    maps.push(imageData);\r\n  }\r\n  return maps;\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  image: null,\r\n  canvas: null,\r\n  jsImageData: null,\r\n  imageLoaded: false,\r\n  repeat: false,\r\n  interpolate: false,\r\n  edgeClamp: false,\r\n  mipLevel: 0,\r\n  resizable: false // must be set at construction time if the texture can be resizable\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.algo(publicAPI, model, 6, 0);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['canvas', 'image', 'jsImageData', 'imageLoaded', 'resizable']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['repeat', 'edgeClamp', 'interpolate', 'mipLevel']);\r\n  vtkTexture(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkTexture');\r\nconst STATIC = {\r\n  generateMipmaps\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkTexture$1 = {\r\n  newInstance,\r\n  extend,\r\n  ...STATIC\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Texture.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/Viewport.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkViewport$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n\r\n\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\nfunction notImplemented(method) {\r\n  return () => vtkErrorMacro(`vtkViewport::${method} - NOT IMPLEMENTED`);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkViewport methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkViewport(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkViewport');\r\n\r\n  // Public API methods\r\n  publicAPI.getViewProps = () => model.props;\r\n  publicAPI.hasViewProp = prop => model.props.includes(prop);\r\n  publicAPI.addViewProp = prop => {\r\n    if (prop && !publicAPI.hasViewProp(prop)) {\r\n      model.props.push(prop);\r\n    }\r\n  };\r\n  publicAPI.removeViewProp = prop => {\r\n    const newPropList = model.props.filter(item => item !== prop);\r\n    if (model.props.length !== newPropList.length) {\r\n      model.props = newPropList;\r\n    }\r\n  };\r\n  publicAPI.removeAllViewProps = () => {\r\n    model.props = [];\r\n  };\r\n\r\n  // this method get all the props including any nested props\r\n  function gatherProps(prop) {\r\n    let allProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\r\n    allProps.push(prop);\r\n    const children = prop.getNestedProps();\r\n    if (children && children.length) {\r\n      for (let i = 0; i < children.length; i++) {\r\n        gatherProps(children[i], allProps);\r\n      }\r\n    }\r\n    return allProps;\r\n  }\r\n  publicAPI.getViewPropsWithNestedProps = () => {\r\n    const allPropsArray = [];\r\n    for (let i = 0; i < model.props.length; i++) {\r\n      gatherProps(model.props[i], allPropsArray);\r\n    }\r\n    return allPropsArray;\r\n  };\r\n  publicAPI.addActor2D = publicAPI.addViewProp;\r\n  publicAPI.removeActor2D = prop => {\r\n    // VTK way: model.actors2D.RemoveItem(prop);\r\n    publicAPI.removeViewProp(prop);\r\n  };\r\n  publicAPI.getActors2D = () => {\r\n    model.actors2D = [];\r\n    model.props.forEach(prop => {\r\n      model.actors2D = model.actors2D.concat(prop.getActors2D());\r\n    });\r\n    return model.actors2D;\r\n  };\r\n  publicAPI.displayToView = () => vtkErrorMacro('call displayToView on your view instead');\r\n  publicAPI.viewToDisplay = () => vtkErrorMacro('callviewtodisplay on your view instead');\r\n  publicAPI.getSize = () => vtkErrorMacro('call getSize on your View instead');\r\n  publicAPI.normalizedDisplayToProjection = (x, y, z) => {\r\n    // first to normalized viewport\r\n    const nvp = publicAPI.normalizedDisplayToNormalizedViewport(x, y, z);\r\n\r\n    // then to view\r\n    return publicAPI.normalizedViewportToProjection(nvp[0], nvp[1], nvp[2]);\r\n  };\r\n  publicAPI.normalizedDisplayToNormalizedViewport = (x, y, z) => {\r\n    const scale = [model.viewport[2] - model.viewport[0], model.viewport[3] - model.viewport[1]];\r\n    return [(x - model.viewport[0]) / scale[0], (y - model.viewport[1]) / scale[1], z];\r\n  };\r\n  publicAPI.normalizedViewportToProjection = (x, y, z) => [x * 2.0 - 1.0, y * 2.0 - 1.0, z * 2.0 - 1.0];\r\n  publicAPI.projectionToNormalizedDisplay = (x, y, z) => {\r\n    // first to nvp\r\n    const nvp = publicAPI.projectionToNormalizedViewport(x, y, z);\r\n\r\n    // then to ndp\r\n    return publicAPI.normalizedViewportToNormalizedDisplay(nvp[0], nvp[1], nvp[2]);\r\n  };\r\n  publicAPI.normalizedViewportToNormalizedDisplay = (x, y, z) => {\r\n    const scale = [model.viewport[2] - model.viewport[0], model.viewport[3] - model.viewport[1]];\r\n    return [x * scale[0] + model.viewport[0], y * scale[1] + model.viewport[1], z];\r\n  };\r\n  publicAPI.projectionToNormalizedViewport = (x, y, z) => [(x + 1.0) * 0.5, (y + 1.0) * 0.5, (z + 1.0) * 0.5];\r\n  publicAPI.PickPropFrom = notImplemented('PickPropFrom');\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  // _vtkWindow: null,\r\n  background: [0, 0, 0],\r\n  background2: [0.2, 0.2, 0.2],\r\n  gradientBackground: false,\r\n  viewport: [0, 0, 1, 1],\r\n  aspect: [1, 1],\r\n  pixelAspect: [1, 1],\r\n  props: [],\r\n  actors2D: []\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.event(publicAPI, model, 'event');\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGetArray(publicAPI, model, ['viewport'], 4);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGetArray(publicAPI, model, ['background', 'background2'], 3);\r\n  vtkViewport(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkViewport');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkViewport$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/Viewport.js?")},"./node_modules/@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlendMode: () => (/* binding */ BlendMode),\n/* harmony export */   FilterMode: () => (/* binding */ FilterMode),\n/* harmony export */   "default": () => (/* binding */ Constants)\n/* harmony export */ });\nconst BlendMode = {\r\n  COMPOSITE_BLEND: 0,\r\n  MAXIMUM_INTENSITY_BLEND: 1,\r\n  MINIMUM_INTENSITY_BLEND: 2,\r\n  AVERAGE_INTENSITY_BLEND: 3,\r\n  ADDITIVE_INTENSITY_BLEND: 4,\r\n  RADON_TRANSFORM_BLEND: 5\r\n};\r\nconst FilterMode = {\r\n  OFF: 0,\r\n  NORMALIZED: 1,\r\n  RAW: 2\r\n};\r\nvar Constants = {\r\n  BlendMode,\r\n  FilterMode\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants.js?')},"./node_modules/@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkFullScreenRenderWindow$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Core_Renderer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/Renderer.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Renderer.js\");\n/* harmony import */ var _Core_RenderWindow_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/RenderWindow.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/RenderWindow.js\");\n/* harmony import */ var _Core_RenderWindowInteractor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Core/RenderWindowInteractor.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor.js\");\n/* harmony import */ var _Interaction_Style_InteractorStyleTrackballCamera_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Interaction/Style/InteractorStyleTrackballCamera.js */ \"./node_modules/@kitware/vtk.js/Interaction/Style/InteractorStyleTrackballCamera.js\");\n/* harmony import */ var _Common_Core_URLExtract_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Common/Core/URLExtract.js */ \"./node_modules/@kitware/vtk.js/Common/Core/URLExtract.js\");\n/* harmony import */ var _Common_Core_Points_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../Common/Core/Points.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Points.js\");\n/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray.js\");\n/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js\");\n/* harmony import */ var _Core_Actor_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Core/Actor.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Actor.js\");\n/* harmony import */ var _Core_Mapper_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Core/Mapper.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js\");\n/* harmony import */ var _OpenGL_RenderWindow_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../OpenGL/RenderWindow.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/RenderWindow.js\");\n/* harmony import */ var _WebGPU_RenderWindow_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../WebGPU/RenderWindow.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/RenderWindow.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Process arguments from URL\r\nconst userParams = _Common_Core_URLExtract_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].extractURLParameters();\r\nconst STYLE_CONTAINER = {\r\n  margin: '0',\r\n  padding: '0',\r\n  position: 'absolute',\r\n  top: '0',\r\n  left: '0',\r\n  width: '100%',\r\n  height: '100%',\r\n  overflow: 'hidden'\r\n};\r\nconst STYLE_CONTROL_PANEL = {\r\n  position: 'absolute',\r\n  left: '25px',\r\n  top: '25px',\r\n  backgroundColor: 'white',\r\n  borderRadius: '5px',\r\n  listStyle: 'none',\r\n  padding: '5px 10px',\r\n  margin: '0',\r\n  display: 'block',\r\n  border: 'solid 1px black',\r\n  maxWidth: 'calc(100% - 70px)',\r\n  maxHeight: 'calc(100% - 60px)',\r\n  overflow: 'auto'\r\n};\r\nfunction applyStyle(el, style) {\r\n  Object.keys(style).forEach(key => {\r\n    el.style[key] = style[key];\r\n  });\r\n}\r\nfunction vtkFullScreenRenderWindow(publicAPI, model) {\r\n  model.classHierarchy.push('vtkFullScreenRenderWindow');\r\n  const body = document.querySelector('body');\r\n\r\n  // Full screen DOM handler\r\n  if (!model.rootContainer) {\r\n    model.rootContainer = body;\r\n  }\r\n  if (!model.container) {\r\n    model.container = document.createElement('div');\r\n    applyStyle(model.container, model.containerStyle || STYLE_CONTAINER);\r\n    model.rootContainer.appendChild(model.container);\r\n  }\r\n\r\n  // apply 100% to html and body for fullscreen\r\n  if (model.rootContainer === body) {\r\n    document.documentElement.style.height = '100%';\r\n    body.style.height = '100%';\r\n    body.style.padding = '0';\r\n    body.style.margin = '0';\r\n  }\r\n\r\n  // VTK renderWindow/renderer\r\n  model.renderWindow = _Core_RenderWindow_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance();\r\n  model.renderer = _Core_Renderer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n  model.renderWindow.addRenderer(model.renderer);\r\n\r\n  // apiSpecificRenderWindow\r\n  model.apiSpecificRenderWindow = model.renderWindow.newAPISpecificView(userParams.viewAPI ?? model.defaultViewAPI);\r\n  model.apiSpecificRenderWindow.setContainer(model.container);\r\n  model.renderWindow.addView(model.apiSpecificRenderWindow);\r\n\r\n  // Interactor\r\n  model.interactor = _Core_RenderWindowInteractor_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance();\r\n  model.interactor.setInteractorStyle(_Interaction_Style_InteractorStyleTrackballCamera_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance());\r\n  model.interactor.setView(model.apiSpecificRenderWindow);\r\n  model.interactor.initialize();\r\n  model.interactor.bindEvents(model.container);\r\n\r\n  // Expose background\r\n  publicAPI.setBackground = model.renderer.setBackground;\r\n  publicAPI.removeController = () => {\r\n    const el = model.controlContainer;\r\n    if (el) {\r\n      el.parentNode.removeChild(el);\r\n    }\r\n  };\r\n  publicAPI.setControllerVisibility = visible => {\r\n    model.controllerVisibility = visible;\r\n    if (model.controlContainer) {\r\n      if (visible) {\r\n        model.controlContainer.style.display = 'block';\r\n      } else {\r\n        model.controlContainer.style.display = 'none';\r\n      }\r\n    }\r\n  };\r\n  publicAPI.toggleControllerVisibility = () => {\r\n    publicAPI.setControllerVisibility(!model.controllerVisibility);\r\n  };\r\n  publicAPI.addController = html => {\r\n    model.controlContainer = document.createElement('div');\r\n    applyStyle(model.controlContainer, model.controlPanelStyle || STYLE_CONTROL_PANEL);\r\n    model.rootContainer.appendChild(model.controlContainer);\r\n    model.controlContainer.innerHTML = html;\r\n    publicAPI.setControllerVisibility(model.controllerVisibility);\r\n    model.rootContainer.addEventListener('keypress', e => {\r\n      if (String.fromCharCode(e.charCode) === 'c') {\r\n        publicAPI.toggleControllerVisibility();\r\n      }\r\n    });\r\n  };\r\n\r\n  // Update BG color\r\n  publicAPI.setBackground(...model.background);\r\n\r\n  // Representation API\r\n  publicAPI.addRepresentation = representation => {\r\n    representation.getActors().forEach(actor => {\r\n      model.renderer.addActor(actor);\r\n    });\r\n  };\r\n  publicAPI.removeRepresentation = representation => {\r\n    representation.getActors().forEach(actor => model.renderer.removeActor(actor));\r\n  };\r\n\r\n  // Properly release GL context\r\n  publicAPI.delete = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.chain(publicAPI.setContainer, model.apiSpecificRenderWindow.delete, publicAPI.delete);\r\n\r\n  // Handle window resize\r\n  publicAPI.resize = () => {\r\n    const dims = model.container.getBoundingClientRect();\r\n    const devicePixelRatio = window.devicePixelRatio || 1;\r\n    model.apiSpecificRenderWindow.setSize(Math.floor(dims.width * devicePixelRatio), Math.floor(dims.height * devicePixelRatio));\r\n    if (model.resizeCallback) {\r\n      model.resizeCallback(dims);\r\n    }\r\n    model.renderWindow.render();\r\n  };\r\n  publicAPI.setResizeCallback = cb => {\r\n    model.resizeCallback = cb;\r\n    publicAPI.resize();\r\n  };\r\n  if (model.listenWindowResize) {\r\n    window.addEventListener('resize', publicAPI.resize);\r\n  }\r\n  publicAPI.resize();\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  background: [0.32, 0.34, 0.43],\r\n  containerStyle: null,\r\n  controlPanelStyle: null,\r\n  // defaultViewAPI: undefined,\r\n  listenWindowResize: true,\r\n  resizeCallback: null,\r\n  controllerVisibility: true\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Object methods\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['renderWindow', 'renderer', 'apiSpecificRenderWindow', 'interactor', 'rootContainer', 'container', 'controlContainer']);\r\n\r\n  // Object specific methods\r\n  vtkFullScreenRenderWindow(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkFullScreenRenderWindow$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Actor.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkActor),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat3.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js\");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ViewNodeFactory.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js\");\n\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLActor methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkOpenGLActor(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkOpenGLActor');\r\n\r\n  // Builds myself.\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      model._openGLRenderWindow = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderWindow');\r\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\r\n      model.context = model._openGLRenderWindow.getContext();\r\n      publicAPI.prepareNodes();\r\n      publicAPI.addMissingNodes(model.renderable.getTextures());\r\n      publicAPI.addMissingNode(model.renderable.getMapper());\r\n      publicAPI.removeUnusedNodes();\r\n\r\n      // we store textures and mapper\r\n      model.ogltextures = null;\r\n      model.activeTextures = null;\r\n      for (let index = 0; index < model.children.length; index++) {\r\n        const child = model.children[index];\r\n        if (child.isA('vtkOpenGLTexture')) {\r\n          if (!model.ogltextures) {\r\n            model.ogltextures = [];\r\n          }\r\n          model.ogltextures.push(child);\r\n        } else {\r\n          model.oglmapper = child;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // render both opaque and translucent actors\r\n  publicAPI.traverseZBufferPass = renderPass => {\r\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\r\n      return;\r\n    }\r\n    publicAPI.apply(renderPass, true);\r\n    model.oglmapper.traverse(renderPass);\r\n    publicAPI.apply(renderPass, false);\r\n  };\r\n\r\n  // only render opaque actors\r\n  publicAPI.traverseOpaqueZBufferPass = renderPass => publicAPI.traverseOpaquePass(renderPass);\r\n\r\n  // we draw textures, then mapper, then post pass textures\r\n  publicAPI.traverseOpaquePass = renderPass => {\r\n    if (!model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\r\n      return;\r\n    }\r\n    publicAPI.apply(renderPass, true);\r\n    model.oglmapper.traverse(renderPass);\r\n    publicAPI.apply(renderPass, false);\r\n  };\r\n\r\n  // we draw textures, then mapper, then post pass textures\r\n  publicAPI.traverseTranslucentPass = renderPass => {\r\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\r\n      return;\r\n    }\r\n    publicAPI.apply(renderPass, true);\r\n    model.oglmapper.traverse(renderPass);\r\n    publicAPI.apply(renderPass, false);\r\n  };\r\n  publicAPI.activateTextures = () => {\r\n    // always traverse textures first, then mapper\r\n    if (!model.ogltextures) {\r\n      return;\r\n    }\r\n    model.activeTextures = [];\r\n    for (let index = 0; index < model.ogltextures.length; index++) {\r\n      const child = model.ogltextures[index];\r\n      child.render();\r\n      if (child.getHandle()) {\r\n        model.activeTextures.push(child);\r\n      }\r\n    }\r\n  };\r\n  publicAPI.queryPass = (prepass, renderPass) => {\r\n    if (prepass) {\r\n      if (!model.renderable || !model.renderable.getVisibility()) {\r\n        return;\r\n      }\r\n      if (model.renderable.getIsOpaque()) {\r\n        renderPass.incrementOpaqueActorCount();\r\n      } else {\r\n        renderPass.incrementTranslucentActorCount();\r\n      }\r\n    }\r\n  };\r\n  publicAPI.zBufferPass = (prepass, renderPass) => publicAPI.opaquePass(prepass, renderPass);\r\n  publicAPI.opaqueZBufferPass = (prepass, renderPass) => publicAPI.opaquePass(prepass, renderPass);\r\n  publicAPI.opaquePass = (prepass, renderPass) => {\r\n    if (prepass) {\r\n      model.context.depthMask(true);\r\n      publicAPI.activateTextures();\r\n    } else if (model.activeTextures) {\r\n      for (let index = 0; index < model.activeTextures.length; index++) {\r\n        model.activeTextures[index].deactivate();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Renders myself\r\n  publicAPI.translucentPass = (prepass, renderPass) => {\r\n    if (prepass) {\r\n      model.context.depthMask(false);\r\n      publicAPI.activateTextures();\r\n    } else if (model.activeTextures) {\r\n      for (let index = 0; index < model.activeTextures.length; index++) {\r\n        model.activeTextures[index].deactivate();\r\n      }\r\n    }\r\n  };\r\n  publicAPI.getKeyMatrices = () => {\r\n    // has the actor changed?\r\n    if (model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\r\n      model.renderable.computeMatrix();\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_3__.copy(model.keyMatrices.mcwc, model.renderable.getMatrix());\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_3__.transpose(model.keyMatrices.mcwc, model.keyMatrices.mcwc);\r\n      if (model.renderable.getIsIdentity()) {\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_4__.identity(model.keyMatrices.normalMatrix);\r\n      } else {\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_4__.fromMat4(model.keyMatrices.normalMatrix, model.keyMatrices.mcwc);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_4__.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_4__.transpose(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\r\n      }\r\n      model.keyMatrixTime.modified();\r\n    }\r\n    return model.keyMatrices;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  context: null,\r\n  keyMatrixTime: null,\r\n  keyMatrices: null,\r\n  activeTextures: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].extend(publicAPI, model, initialValues);\r\n  model.keyMatrixTime = {};\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.o)(model.keyMatrixTime, {\r\n    mtime: 0\r\n  });\r\n  model.keyMatrices = {\r\n    normalMatrix: gl_matrix__WEBPACK_IMPORTED_MODULE_4__.identity(new Float64Array(9)),\r\n    mcwc: gl_matrix__WEBPACK_IMPORTED_MODULE_3__.identity(new Float64Array(16))\r\n  };\r\n\r\n  // Build VTK API\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.e)(publicAPI, model, ['context']);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.g)(publicAPI, model, ['activeTextures']);\r\n\r\n  // Object methods\r\n  vtkOpenGLActor(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkActor = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to OpenGL backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__.registerOverride)('vtkActor', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/Actor.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Actor2D.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkActor2D),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js\");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ViewNodeFactory.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js\");\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLActor methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkOpenGLActor2D(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkOpenGLActor2D');\r\n\r\n  // Builds myself.\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      if (!model.renderable) {\r\n        return;\r\n      }\r\n      model._openGLRenderWindow = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderWindow');\r\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\r\n      model.context = model._openGLRenderWindow.getContext();\r\n      publicAPI.prepareNodes();\r\n      publicAPI.addMissingNodes(model.renderable.getTextures());\r\n      publicAPI.addMissingNode(model.renderable.getMapper());\r\n      publicAPI.removeUnusedNodes();\r\n\r\n      // we store textures and mapper\r\n      model.ogltextures = null;\r\n      model.activeTextures = null;\r\n      for (let index = 0; index < model.children.length; index++) {\r\n        const child = model.children[index];\r\n        if (child.isA('vtkOpenGLTexture')) {\r\n          if (!model.ogltextures) {\r\n            model.ogltextures = [];\r\n          }\r\n          model.ogltextures.push(child);\r\n        } else {\r\n          model.oglmapper = child;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  publicAPI.queryPass = (prepass, renderPass) => {\r\n    if (prepass) {\r\n      if (!model.renderable || !model.renderable.getVisibility()) {\r\n        return;\r\n      }\r\n      renderPass.incrementOverlayActorCount();\r\n    }\r\n  };\r\n\r\n  // we draw textures, then mapper, then post pass textures\r\n  publicAPI.traverseOpaquePass = renderPass => {\r\n    if (!model.oglmapper || !model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\r\n      return;\r\n    }\r\n    publicAPI.apply(renderPass, true);\r\n    model.oglmapper.traverse(renderPass);\r\n    publicAPI.apply(renderPass, false);\r\n  };\r\n\r\n  // we draw textures, then mapper, then post pass textures\r\n  publicAPI.traverseTranslucentPass = renderPass => {\r\n    if (!model.oglmapper || !model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable()) {\r\n      return;\r\n    }\r\n    publicAPI.apply(renderPass, true);\r\n    model.oglmapper.traverse(renderPass);\r\n    publicAPI.apply(renderPass, false);\r\n  };\r\n  publicAPI.traverseOverlayPass = renderPass => {\r\n    if (!model.oglmapper || !model.renderable || !model.renderable.getNestedVisibility() || model._openGLRenderer.getSelector() && !model.renderable.getNestedPickable) {\r\n      return;\r\n    }\r\n    publicAPI.apply(renderPass, true);\r\n    model.oglmapper.traverse(renderPass);\r\n    publicAPI.apply(renderPass, false);\r\n  };\r\n  publicAPI.activateTextures = () => {\r\n    // always traverse textures first, then mapper\r\n    if (!model.ogltextures) {\r\n      return;\r\n    }\r\n    model.activeTextures = [];\r\n    for (let index = 0; index < model.ogltextures.length; index++) {\r\n      const child = model.ogltextures[index];\r\n      child.render();\r\n      if (child.getHandle()) {\r\n        model.activeTextures.push(child);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Renders myself\r\n  publicAPI.opaquePass = (prepass, renderPass) => {\r\n    if (prepass) {\r\n      model.context.depthMask(true);\r\n      publicAPI.activateTextures();\r\n    } else if (model.activeTextures) {\r\n      // deactivate textures\r\n      for (let index = 0; index < model.activeTextures.length; index++) {\r\n        model.activeTextures[index].deactivate();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Renders myself\r\n  publicAPI.translucentPass = (prepass, renderPass) => {\r\n    if (prepass) {\r\n      model.context.depthMask(false);\r\n      publicAPI.activateTextures();\r\n    } else if (model.activeTextures) {\r\n      for (let index = 0; index < model.activeTextures.length; index++) {\r\n        model.activeTextures[index].deactivate();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Renders myself\r\n  publicAPI.overlayPass = (prepass, renderPass) => {\r\n    if (prepass) {\r\n      model.context.depthMask(true);\r\n      publicAPI.activateTextures();\r\n    } else if (model.activeTextures) {\r\n      // deactivate textures\r\n      for (let index = 0; index < model.activeTextures.length; index++) {\r\n        model.activeTextures[index].deactivate();\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  context: null,\r\n  activeTextures: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].extend(publicAPI, model, initialValues);\r\n\r\n  // Build VTK API\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.e)(publicAPI, model, ['context']);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.g)(publicAPI, model, ['activeTextures']);\r\n\r\n  // Object methods\r\n  vtkOpenGLActor2D(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkActor2D = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to OpenGL backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__.registerOverride)('vtkActor2D', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/Actor2D.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STATIC: () => (/* binding */ STATIC),\n/* harmony export */   \"default\": () => (/* binding */ vtkBufferObject),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BufferObject/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject/Constants.js\");\n\r\n\r\n\r\nconst {\r\n  ObjectType\r\n} = _BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// Static API\r\n// ----------------------------------------------------------------------------\r\n\r\nconst STATIC = {};\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLBufferObject methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkOpenGLBufferObject(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkOpenGLBufferObject');\r\n\r\n  // Class-specific private functions\r\n  function convertType(type) {\r\n    switch (type) {\r\n      case ObjectType.ELEMENT_ARRAY_BUFFER:\r\n        return model.context.ELEMENT_ARRAY_BUFFER;\r\n      case ObjectType.TEXTURE_BUFFER:\r\n        if ('TEXTURE_BUFFER' in model.context) {\r\n          return model.context.TEXTURE_BUFFER;\r\n        }\r\n      /* eslint-disable no-fallthrough */\r\n      // Intentional fallthrough in case there is no TEXTURE_BUFFER in WebGL\r\n      case ObjectType.ARRAY_BUFFER:\r\n      default:\r\n        return model.context.ARRAY_BUFFER;\r\n      /* eslint-enable no-fallthrough */\r\n    }\r\n  }\r\n\r\n  let internalType = null;\r\n  let internalHandle = null;\r\n  let dirty = true;\r\n  let error = '';\r\n\r\n  // Public API methods\r\n  publicAPI.getType = () => internalType;\r\n  publicAPI.setType = value => {\r\n    internalType = value;\r\n  };\r\n  publicAPI.getHandle = () => internalHandle;\r\n  publicAPI.isReady = () => dirty === false;\r\n  publicAPI.generateBuffer = type => {\r\n    const objectTypeGL = convertType(type);\r\n    if (internalHandle === null) {\r\n      internalHandle = model.context.createBuffer();\r\n      internalType = type;\r\n    }\r\n    return convertType(internalType) === objectTypeGL;\r\n  };\r\n  publicAPI.upload = (data, type) => {\r\n    // buffer, size, type\r\n    const alreadyGenerated = publicAPI.generateBuffer(type);\r\n    if (!alreadyGenerated) {\r\n      error = 'Trying to upload array buffer to incompatible buffer.';\r\n      return false;\r\n    }\r\n    model.context.bindBuffer(convertType(internalType), internalHandle);\r\n    model.context.bufferData(convertType(internalType), data, model.context.STATIC_DRAW);\r\n    model.allocatedGPUMemoryInBytes = data.length * data.BYTES_PER_ELEMENT;\r\n    dirty = false;\r\n    return true;\r\n  };\r\n  publicAPI.bind = () => {\r\n    if (!internalHandle) {\r\n      return false;\r\n    }\r\n    model.context.bindBuffer(convertType(internalType), internalHandle);\r\n    return true;\r\n  };\r\n  publicAPI.release = () => {\r\n    if (!internalHandle) {\r\n      return false;\r\n    }\r\n    model.context.bindBuffer(convertType(internalType), null);\r\n    return true;\r\n  };\r\n  publicAPI.releaseGraphicsResources = () => {\r\n    if (internalHandle !== null) {\r\n      model.context.bindBuffer(convertType(internalType), null);\r\n      model.context.deleteBuffer(internalHandle);\r\n      internalHandle = null;\r\n      model.allocatedGPUMemoryInBytes = 0;\r\n    }\r\n  };\r\n  publicAPI.setOpenGLRenderWindow = rw => {\r\n    if (model._openGLRenderWindow === rw) {\r\n      return;\r\n    }\r\n    publicAPI.releaseGraphicsResources();\r\n    model._openGLRenderWindow = rw;\r\n    model.context = null;\r\n    if (rw) {\r\n      model.context = model._openGLRenderWindow.getContext();\r\n    }\r\n  };\r\n  publicAPI.getError = () => error;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  objectType: ObjectType.ARRAY_BUFFER,\r\n  // _openGLRenderWindow: null,\r\n  context: null,\r\n  allocatedGPUMemoryInBytes: 0\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Object methods\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['_openGLRenderWindow', 'allocatedGPUMemoryInBytes']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.moveToProtected(publicAPI, model, ['openGLRenderWindow']);\r\n  vtkOpenGLBufferObject(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkBufferObject = {\r\n  newInstance,\r\n  extend,\r\n  ...STATIC,\r\n  ..._BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ObjectType: () => (/* binding */ ObjectType),\n/* harmony export */   "default": () => (/* binding */ Constants)\n/* harmony export */ });\nconst ObjectType = {\r\n  ARRAY_BUFFER: 0,\r\n  ELEMENT_ARRAY_BUFFER: 1,\r\n  TEXTURE_BUFFER: 2\r\n};\r\nvar Constants = {\r\n  ObjectType\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject/Constants.js?')},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Camera.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ vtkCamera),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gl-matrix */ "./node_modules/gl-matrix/esm/mat4.js");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gl-matrix */ "./node_modules/gl-matrix/esm/mat3.js");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "./node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");\n\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLCamera methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkOpenGLCamera(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkOpenGLCamera\');\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType(\'vtkOpenGLRenderer\');\r\n      model._openGLRenderWindow = model._openGLRenderer.getParent();\r\n      model.context = model._openGLRenderWindow.getContext();\r\n    }\r\n  };\r\n\r\n  // Renders myself\r\n  publicAPI.opaquePass = prepass => {\r\n    if (prepass) {\r\n      const tsize = model._openGLRenderer.getTiledSizeAndOrigin();\r\n      model.context.viewport(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize);\r\n      model.context.scissor(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize);\r\n    }\r\n  };\r\n  publicAPI.translucentPass = publicAPI.opaquePass;\r\n  publicAPI.zBufferPass = publicAPI.opaquePass;\r\n  publicAPI.opaqueZBufferPass = publicAPI.opaquePass;\r\n  publicAPI.volumePass = publicAPI.opaquePass;\r\n  publicAPI.getKeyMatrices = ren => {\r\n    // has the camera changed?\r\n    if (ren !== model.lastRenderer || model._openGLRenderWindow.getMTime() > model.keyMatrixTime.getMTime() || publicAPI.getMTime() > model.keyMatrixTime.getMTime() || ren.getMTime() > model.keyMatrixTime.getMTime() || model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_3__.copy(model.keyMatrices.wcvc, model.renderable.getViewMatrix());\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_4__.fromMat4(model.keyMatrices.normalMatrix, model.keyMatrices.wcvc);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_4__.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_3__.transpose(model.keyMatrices.wcvc, model.keyMatrices.wcvc);\r\n      const aspectRatio = model._openGLRenderer.getAspectRatio();\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_3__.copy(model.keyMatrices.vcpc, model.renderable.getProjectionMatrix(aspectRatio, -1, 1));\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_3__.transpose(model.keyMatrices.vcpc, model.keyMatrices.vcpc);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_3__.multiply(model.keyMatrices.wcpc, model.keyMatrices.vcpc, model.keyMatrices.wcvc);\r\n      model.keyMatrixTime.modified();\r\n      model.lastRenderer = ren;\r\n    }\r\n    return model.keyMatrices;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  context: null,\r\n  lastRenderer: null,\r\n  keyMatrixTime: null,\r\n  keyMatrices: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues);\r\n  model.keyMatrixTime = {};\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.o)(model.keyMatrixTime);\r\n\r\n  // values always get set by the get method\r\n  model.keyMatrices = {\r\n    normalMatrix: new Float64Array(9),\r\n    vcpc: new Float64Array(16),\r\n    wcvc: new Float64Array(16),\r\n    wcpc: new Float64Array(16)\r\n  };\r\n\r\n  // Build VTK API\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.e)(publicAPI, model, [\'context\', \'keyMatrixTime\']);\r\n\r\n  // Object methods\r\n  vtkOpenGLCamera(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkCamera = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to OpenGL backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__.registerOverride)(\'vtkCamera\', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/Camera.js?')},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/CellArrayBufferObject.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkCellArrayBufferObject),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/quat.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _BufferObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BufferObject.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject.js\");\n/* harmony import */ var _BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BufferObject/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject/Constants.js\");\n/* harmony import */ var _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Core/Property/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Static functions\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction computeInverseShiftAndScaleMatrix(coordShift, coordScale) {\r\n  const inverseScale = new Float64Array(3);\r\n  gl_matrix__WEBPACK_IMPORTED_MODULE_4__.inverse(inverseScale, coordScale);\r\n  const matrix = new Float64Array(16);\r\n  gl_matrix__WEBPACK_IMPORTED_MODULE_5__.fromRotationTranslationScale(matrix, gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), coordShift, inverseScale);\r\n  return matrix;\r\n}\r\nfunction shouldApplyCoordShiftAndScale(coordShift, coordScale) {\r\n  if (coordShift === null || coordScale === null) {\r\n    return false;\r\n  }\r\n  return !(gl_matrix__WEBPACK_IMPORTED_MODULE_4__.exactEquals(coordShift, [0, 0, 0]) && gl_matrix__WEBPACK_IMPORTED_MODULE_4__.exactEquals(coordScale, [1, 1, 1]));\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLCellArrayBufferObject methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkOpenGLCellArrayBufferObject(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkOpenGLCellArrayBufferObject');\r\n  publicAPI.setType(_BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_2__.ObjectType.ARRAY_BUFFER);\r\n  publicAPI.createVBO = function (cellArray, inRep, outRep, options) {\r\n    let selectionMaps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\r\n    if (!cellArray.getData() || !cellArray.getData().length) {\r\n      model.elementCount = 0;\r\n      return 0;\r\n    }\r\n\r\n    // Figure out how big each block will be, currently 6 or 7 floats.\r\n    model.blockSize = 3;\r\n    model.vertexOffset = 0;\r\n    model.normalOffset = 0;\r\n    model.tCoordOffset = 0;\r\n    model.tCoordComponents = 0;\r\n    model.colorComponents = 0;\r\n    model.colorOffset = 0;\r\n    model.customData = [];\r\n    const pointData = options.points.getData();\r\n    let normalData = null;\r\n    let tcoordData = null;\r\n    let colorData = null;\r\n    const colorComponents = options.colors ? options.colors.getNumberOfComponents() : 0;\r\n    const textureComponents = options.tcoords ? options.tcoords.getNumberOfComponents() : 0;\r\n\r\n    // the values of 4 below are because floats are 4 bytes\r\n\r\n    if (options.normals) {\r\n      model.normalOffset = 4 * model.blockSize;\r\n      model.blockSize += 3;\r\n      normalData = options.normals.getData();\r\n    }\r\n    if (options.customAttributes) {\r\n      options.customAttributes.forEach(a => {\r\n        if (a) {\r\n          model.customData.push({\r\n            data: a.getData(),\r\n            offset: 4 * model.blockSize,\r\n            components: a.getNumberOfComponents(),\r\n            name: a.getName()\r\n          });\r\n          model.blockSize += a.getNumberOfComponents();\r\n        }\r\n      });\r\n    }\r\n    if (options.tcoords) {\r\n      model.tCoordOffset = 4 * model.blockSize;\r\n      model.tCoordComponents = textureComponents;\r\n      model.blockSize += textureComponents;\r\n      tcoordData = options.tcoords.getData();\r\n    }\r\n    if (options.colors) {\r\n      model.colorComponents = options.colors.getNumberOfComponents();\r\n      model.colorOffset = 0;\r\n      colorData = options.colors.getData();\r\n      if (!model.colorBO) {\r\n        model.colorBO = _BufferObject_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n      }\r\n      model.colorBO.setOpenGLRenderWindow(model._openGLRenderWindow);\r\n    } else {\r\n      model.colorBO = null;\r\n    }\r\n    model.stride = 4 * model.blockSize;\r\n    let pointIdx = 0;\r\n    let normalIdx = 0;\r\n    let tcoordIdx = 0;\r\n    let colorIdx = 0;\r\n    let custIdx = 0;\r\n    let cellCount = 0;\r\n    let addAPoint;\r\n    const cellBuilders = {\r\n      // easy, every input point becomes an output point\r\n      anythingToPoints(numPoints, cellPts, offset) {\r\n        for (let i = 0; i < numPoints; ++i) {\r\n          addAPoint(cellPts[offset + i]);\r\n        }\r\n      },\r\n      linesToWireframe(numPoints, cellPts, offset) {\r\n        // for lines we add a bunch of segments\r\n        for (let i = 0; i < numPoints - 1; ++i) {\r\n          addAPoint(cellPts[offset + i]);\r\n          addAPoint(cellPts[offset + i + 1]);\r\n        }\r\n      },\r\n      polysToWireframe(numPoints, cellPts, offset) {\r\n        // for polys we add a bunch of segments and close it\r\n        if (numPoints > 2) {\r\n          for (let i = 0; i < numPoints; ++i) {\r\n            addAPoint(cellPts[offset + i]);\r\n            addAPoint(cellPts[offset + (i + 1) % numPoints]);\r\n          }\r\n        }\r\n      },\r\n      stripsToWireframe(numPoints, cellPts, offset) {\r\n        if (numPoints > 2) {\r\n          // for strips we add a bunch of segments and close it\r\n          for (let i = 0; i < numPoints - 1; ++i) {\r\n            addAPoint(cellPts[offset + i]);\r\n            addAPoint(cellPts[offset + i + 1]);\r\n          }\r\n          for (let i = 0; i < numPoints - 2; i++) {\r\n            addAPoint(cellPts[offset + i]);\r\n            addAPoint(cellPts[offset + i + 2]);\r\n          }\r\n        }\r\n      },\r\n      polysToSurface(npts, cellPts, offset) {\r\n        for (let i = 0; i < npts - 2; i++) {\r\n          addAPoint(cellPts[offset + 0]);\r\n          addAPoint(cellPts[offset + i + 1]);\r\n          addAPoint(cellPts[offset + i + 2]);\r\n        }\r\n      },\r\n      stripsToSurface(npts, cellPts, offset) {\r\n        for (let i = 0; i < npts - 2; i++) {\r\n          addAPoint(cellPts[offset + i]);\r\n          addAPoint(cellPts[offset + i + 1 + i % 2]);\r\n          addAPoint(cellPts[offset + i + 1 + (i + 1) % 2]);\r\n        }\r\n      }\r\n    };\r\n    const cellCounters = {\r\n      // easy, every input point becomes an output point\r\n      anythingToPoints(numPoints, cellPts) {\r\n        return numPoints;\r\n      },\r\n      linesToWireframe(numPoints, cellPts) {\r\n        if (numPoints > 1) {\r\n          return (numPoints - 1) * 2;\r\n        }\r\n        return 0;\r\n      },\r\n      polysToWireframe(numPoints, cellPts) {\r\n        if (numPoints > 2) {\r\n          return numPoints * 2;\r\n        }\r\n        return 0;\r\n      },\r\n      stripsToWireframe(numPoints, cellPts) {\r\n        if (numPoints > 2) {\r\n          return numPoints * 4 - 6;\r\n        }\r\n        return 0;\r\n      },\r\n      polysToSurface(npts, cellPts) {\r\n        if (npts > 2) {\r\n          return (npts - 2) * 3;\r\n        }\r\n        return 0;\r\n      },\r\n      stripsToSurface(npts, cellPts, offset) {\r\n        if (npts > 2) {\r\n          return (npts - 2) * 3;\r\n        }\r\n        return 0;\r\n      }\r\n    };\r\n    let func = null;\r\n    let countFunc = null;\r\n    if (outRep === _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_3__.Representation.POINTS || inRep === 'verts') {\r\n      func = cellBuilders.anythingToPoints;\r\n      countFunc = cellCounters.anythingToPoints;\r\n    } else if (outRep === _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_3__.Representation.WIREFRAME || inRep === 'lines') {\r\n      func = cellBuilders[`${inRep}ToWireframe`];\r\n      countFunc = cellCounters[`${inRep}ToWireframe`];\r\n    } else {\r\n      func = cellBuilders[`${inRep}ToSurface`];\r\n      countFunc = cellCounters[`${inRep}ToSurface`];\r\n    }\r\n    const array = cellArray.getData();\r\n    const size = array.length;\r\n    let caboCount = 0;\r\n    for (let index = 0; index < size;) {\r\n      caboCount += countFunc(array[index], array);\r\n      index += array[index] + 1;\r\n    }\r\n    let packedUCVBO = null;\r\n    const packedVBO = new Float32Array(caboCount * model.blockSize);\r\n    if (colorData) {\r\n      packedUCVBO = new Uint8Array(caboCount * 4);\r\n    }\r\n    let vboidx = 0;\r\n    let ucidx = 0;\r\n\r\n    // Find out if shift scale should be used\r\n    // Compute squares of diagonal size and distance from the origin\r\n    let diagSq = 0.0;\r\n    let distSq = 0.0;\r\n    for (let i = 0; i < 3; ++i) {\r\n      const range = options.points.getRange(i);\r\n      const delta = range[1] - range[0];\r\n      diagSq += delta * delta;\r\n      const distShift = 0.5 * (range[1] + range[0]);\r\n      distSq += distShift * distShift;\r\n    }\r\n    const useShiftAndScale = diagSq > 0 && (Math.abs(distSq) / diagSq > 1.0e6 ||\r\n    // If data is far from the origin relative to its size\r\n    Math.abs(Math.log10(diagSq)) > 3.0 ||\r\n    // If the size is huge when not far from the origin\r\n    diagSq === 0 && distSq > 1.0e6); // If data is a point, but far from the origin\r\n\r\n    if (useShiftAndScale) {\r\n      // Compute shift and scale vectors\r\n      const coordShift = new Float64Array(3);\r\n      const coordScale = new Float64Array(3);\r\n      for (let i = 0; i < 3; ++i) {\r\n        const range = options.points.getRange(i);\r\n        const delta = range[1] - range[0];\r\n        coordShift[i] = 0.5 * (range[1] + range[0]);\r\n        coordScale[i] = delta > 0 ? 1.0 / delta : 1.0;\r\n      }\r\n      publicAPI.setCoordShiftAndScale(coordShift, coordScale);\r\n    } else if (model.coordShiftAndScaleEnabled === true) {\r\n      // Make sure to reset\r\n      publicAPI.setCoordShiftAndScale(null, null);\r\n    }\r\n\r\n    // Initialize the structures used to keep track of point ids and cell ids for selectors\r\n    if (selectionMaps) {\r\n      if (!selectionMaps.points && !selectionMaps.cells) {\r\n        selectionMaps.points = new Int32Array(caboCount);\r\n        selectionMaps.cells = new Int32Array(caboCount);\r\n      } else {\r\n        const newPoints = new Int32Array(caboCount + selectionMaps.points.length);\r\n        newPoints.set(selectionMaps.points);\r\n        selectionMaps.points = newPoints;\r\n        const newCells = new Int32Array(caboCount + selectionMaps.cells.length);\r\n        newCells.set(selectionMaps.cells);\r\n        selectionMaps.cells = newCells;\r\n      }\r\n    }\r\n    let pointCount = options.vertexOffset;\r\n    addAPoint = function addAPointFunc(i) {\r\n      // Keep track of original point and cell ids, for selection\r\n      if (selectionMaps) {\r\n        selectionMaps.points[pointCount] = i;\r\n        selectionMaps.cells[pointCount] = cellCount + options.cellOffset;\r\n      }\r\n      ++pointCount;\r\n\r\n      // Vertices\r\n      pointIdx = i * 3;\r\n      if (!model.coordShiftAndScaleEnabled) {\r\n        packedVBO[vboidx++] = pointData[pointIdx++];\r\n        packedVBO[vboidx++] = pointData[pointIdx++];\r\n        packedVBO[vboidx++] = pointData[pointIdx++];\r\n      } else {\r\n        // Apply shift and scale\r\n        packedVBO[vboidx++] = (pointData[pointIdx++] - model.coordShift[0]) * model.coordScale[0];\r\n        packedVBO[vboidx++] = (pointData[pointIdx++] - model.coordShift[1]) * model.coordScale[1];\r\n        packedVBO[vboidx++] = (pointData[pointIdx++] - model.coordShift[2]) * model.coordScale[2];\r\n      }\r\n      if (normalData !== null) {\r\n        if (options.haveCellNormals) {\r\n          normalIdx = (cellCount + options.cellOffset) * 3;\r\n        } else {\r\n          normalIdx = i * 3;\r\n        }\r\n        packedVBO[vboidx++] = normalData[normalIdx++];\r\n        packedVBO[vboidx++] = normalData[normalIdx++];\r\n        packedVBO[vboidx++] = normalData[normalIdx++];\r\n      }\r\n      model.customData.forEach(attr => {\r\n        custIdx = i * attr.components;\r\n        for (let j = 0; j < attr.components; ++j) {\r\n          packedVBO[vboidx++] = attr.data[custIdx++];\r\n        }\r\n      });\r\n      if (tcoordData !== null) {\r\n        tcoordIdx = i * textureComponents;\r\n        for (let j = 0; j < textureComponents; ++j) {\r\n          packedVBO[vboidx++] = tcoordData[tcoordIdx++];\r\n        }\r\n      }\r\n      if (colorData !== null) {\r\n        if (options.haveCellScalars) {\r\n          colorIdx = (cellCount + options.cellOffset) * colorComponents;\r\n        } else {\r\n          colorIdx = i * colorComponents;\r\n        }\r\n        packedUCVBO[ucidx++] = colorData[colorIdx++];\r\n        packedUCVBO[ucidx++] = colorData[colorIdx++];\r\n        packedUCVBO[ucidx++] = colorData[colorIdx++];\r\n        packedUCVBO[ucidx++] = colorComponents === 4 ? colorData[colorIdx++] : 255;\r\n      }\r\n    };\r\n    for (let index = 0; index < size;) {\r\n      func(array[index], array, index + 1);\r\n      index += array[index] + 1;\r\n      cellCount++;\r\n    }\r\n    model.elementCount = caboCount;\r\n    publicAPI.upload(packedVBO, _BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_2__.ObjectType.ARRAY_BUFFER);\r\n    if (model.colorBO) {\r\n      model.colorBOStride = 4;\r\n      model.colorBO.upload(packedUCVBO, _BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_2__.ObjectType.ARRAY_BUFFER);\r\n    }\r\n    return cellCount;\r\n  };\r\n  publicAPI.setCoordShiftAndScale = (coordShift, coordScale) => {\r\n    if (coordShift !== null && (coordShift.constructor !== Float64Array || coordShift.length !== 3)) {\r\n      vtkErrorMacro('Wrong type for coordShift, expected vec3 or null');\r\n      return;\r\n    }\r\n    if (coordScale !== null && (coordScale.constructor !== Float64Array || coordScale.length !== 3)) {\r\n      vtkErrorMacro('Wrong type for coordScale, expected vec3 or null');\r\n      return;\r\n    }\r\n    if (model.coordShift === null || coordShift === null || !gl_matrix__WEBPACK_IMPORTED_MODULE_4__.equals(coordShift, model.coordShift)) {\r\n      model.coordShift = coordShift;\r\n    }\r\n    if (model.coordScale === null || coordScale === null || !gl_matrix__WEBPACK_IMPORTED_MODULE_4__.equals(coordScale, model.coordScale)) {\r\n      model.coordScale = coordScale;\r\n    }\r\n    model.coordShiftAndScaleEnabled = shouldApplyCoordShiftAndScale(model.coordShift, model.coordScale);\r\n    if (model.coordShiftAndScaleEnabled) {\r\n      model.inverseShiftAndScaleMatrix = computeInverseShiftAndScaleMatrix(model.coordShift, model.coordScale);\r\n    } else {\r\n      model.inverseShiftAndScaleMatrix = null;\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  elementCount: 0,\r\n  stride: 0,\r\n  colorBOStride: 0,\r\n  vertexOffset: 0,\r\n  normalOffset: 0,\r\n  tCoordOffset: 0,\r\n  tCoordComponents: 0,\r\n  colorOffset: 0,\r\n  colorComponents: 0,\r\n  tcoordBO: null,\r\n  customData: [],\r\n  coordShift: null,\r\n  coordScale: null,\r\n  coordShiftAndScaleEnabled: false,\r\n  inverseShiftAndScaleMatrix: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _BufferObject_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].extend(publicAPI, model, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['colorBO', 'elementCount', 'stride', 'colorBOStride', 'vertexOffset', 'normalOffset', 'tCoordOffset', 'tCoordComponents', 'colorOffset', 'colorComponents', 'customData']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['coordShift', 'coordScale', 'coordShiftAndScaleEnabled', 'inverseShiftAndScaleMatrix']);\r\n\r\n  // Object specific methods\r\n  vtkOpenGLCellArrayBufferObject(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkCellArrayBufferObject = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/CellArrayBufferObject.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/CubeAxesActor.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ index),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _Core_CubeAxesActor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/CubeAxesActor.js */ "./node_modules/@kitware/vtk.js/Rendering/Core/CubeAxesActor.js");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "./node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");\n\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLCubeAxesActor methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkOpenGLCubeAxesActor(publicAPI, model) {\r\n  model.classHierarchy.push(\'vtkOpenGLCubeAxesActor\');\r\n\r\n  // Builds myself.\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType(\'vtkOpenGLRenderer\');\r\n      model._openGLRenderWindow = model._openGLRenderer.getParent();\r\n      if (!model.CubeAxesActorHelper.getRenderable()) {\r\n        model.CubeAxesActorHelper.setRenderable(model.renderable);\r\n      }\r\n      publicAPI.prepareNodes();\r\n      publicAPI.addMissingNode(model.CubeAxesActorHelper.getTmActor());\r\n      publicAPI.addMissingNode(model.renderable.getGridActor());\r\n      publicAPI.removeUnusedNodes();\r\n    }\r\n  };\r\n  publicAPI.opaquePass = (prepass, renderPass) => {\r\n    if (prepass) {\r\n      const camera = model._openGLRenderer ? model._openGLRenderer.getRenderable().getActiveCamera() : null;\r\n      const tsize = model._openGLRenderer.getTiledSizeAndOrigin();\r\n      model.CubeAxesActorHelper.updateAPISpecificData([tsize.usize, tsize.vsize], camera, model._openGLRenderWindow.getRenderable());\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);\r\n  model.CubeAxesActorHelper = _Core_CubeAxesActor_js__WEBPACK_IMPORTED_MODULE_1__["default"].newCubeAxesActorHelper();\r\n\r\n  // Object methods\r\n  vtkOpenGLCubeAxesActor(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, \'vtkOpenGLCubeAxesActor\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar index = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to OpenGL backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__.registerOverride)(\'vtkCubeAxesActor\', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/CubeAxesActor.js?')},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ForwardPass.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkForwardPass$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Framebuffer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Framebuffer.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Framebuffer.js\");\n/* harmony import */ var _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SceneGraph/RenderPass.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js\");\n/* harmony import */ var _OrderIndependentTranslucentPass_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./OrderIndependentTranslucentPass.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/OrderIndependentTranslucentPass.js\");\n\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkForwardPass(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkForwardPass');\r\n\r\n  // this pass implements a forward rendering pipeline\r\n  // if both volumes and opaque geometry are present\r\n  // it will mix the two together by capturing a zbuffer\r\n  // first\r\n  publicAPI.traverse = function (viewNode) {\r\n    let parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\r\n    if (model.deleted) {\r\n      return;\r\n    }\r\n\r\n    // we just render our delegates in order\r\n    model._currentParent = parent;\r\n\r\n    // build\r\n    publicAPI.setCurrentOperation('buildPass');\r\n    viewNode.traverse(publicAPI);\r\n    const numlayers = viewNode.getRenderable().getNumberOfLayers();\r\n\r\n    // iterate over renderers\r\n    const renderers = viewNode.getRenderable().getRenderersByReference();\r\n    for (let i = 0; i < numlayers; i++) {\r\n      for (let index = 0; index < renderers.length; index++) {\r\n        const ren = renderers[index];\r\n        const renNode = viewNode.getViewNodeFor(ren);\r\n        if (ren.getDraw() && ren.getLayer() === i) {\r\n          // check for both opaque and volume actors\r\n          model.opaqueActorCount = 0;\r\n          model.translucentActorCount = 0;\r\n          model.volumeCount = 0;\r\n          model.overlayActorCount = 0;\r\n          publicAPI.setCurrentOperation('queryPass');\r\n          renNode.traverse(publicAPI);\r\n\r\n          // do we need to capture a zbuffer?\r\n          if ((model.opaqueActorCount > 0 || model.translucentActorCount > 0) && model.volumeCount > 0 || model.depthRequested) {\r\n            const size = viewNode.getFramebufferSize();\r\n            // make sure the framebuffer is setup\r\n            if (model.framebuffer === null) {\r\n              model.framebuffer = _Framebuffer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n            }\r\n            model.framebuffer.setOpenGLRenderWindow(viewNode);\r\n            model.framebuffer.saveCurrentBindingsAndBuffers();\r\n            const fbSize = model.framebuffer.getSize();\r\n            if (fbSize === null || fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\r\n              model.framebuffer.create(size[0], size[1]);\r\n              model.framebuffer.populateFramebuffer();\r\n            }\r\n            model.framebuffer.bind();\r\n            // opaqueZBufferPass only renders opaque actors\r\n            // zBufferPass renders both translucent and opaque actors\r\n            // we want to be able to pick translucent actors\r\n            publicAPI.setCurrentOperation('zBufferPass');\r\n            renNode.traverse(publicAPI);\r\n            model.framebuffer.restorePreviousBindingsAndBuffers();\r\n\r\n            // reset now that we have done it\r\n            model.depthRequested = false;\r\n          }\r\n          publicAPI.setCurrentOperation('cameraPass');\r\n          renNode.traverse(publicAPI);\r\n          if (model.opaqueActorCount > 0) {\r\n            publicAPI.setCurrentOperation('opaquePass');\r\n            renNode.traverse(publicAPI);\r\n          }\r\n          if (model.translucentActorCount > 0) {\r\n            if (!model.translucentPass) {\r\n              model.translucentPass = _OrderIndependentTranslucentPass_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance();\r\n            }\r\n            model.translucentPass.traverse(viewNode, renNode, publicAPI);\r\n          }\r\n          if (model.volumeCount > 0) {\r\n            publicAPI.setCurrentOperation('volumePass');\r\n            renNode.traverse(publicAPI);\r\n          }\r\n          if (model.overlayActorCount > 0) {\r\n            publicAPI.setCurrentOperation('overlayPass');\r\n            renNode.traverse(publicAPI);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  publicAPI.getZBufferTexture = () => {\r\n    if (model.framebuffer) {\r\n      return model.framebuffer.getColorTexture();\r\n    }\r\n    return null;\r\n  };\r\n  publicAPI.requestDepth = () => {\r\n    model.depthRequested = true;\r\n  };\r\n  publicAPI.incrementOpaqueActorCount = () => model.opaqueActorCount++;\r\n  publicAPI.incrementTranslucentActorCount = () => model.translucentActorCount++;\r\n  publicAPI.incrementVolumeCount = () => model.volumeCount++;\r\n  publicAPI.incrementOverlayActorCount = () => model.overlayActorCount++;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  opaqueActorCount: 0,\r\n  translucentActorCount: 0,\r\n  volumeCount: 0,\r\n  overlayActorCount: 0,\r\n  framebuffer: null,\r\n  depthRequested: false\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(publicAPI, model, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['framebuffer', 'opaqueActorCount', 'translucentActorCount', 'volumeCount']);\r\n\r\n  // Object methods\r\n  vtkForwardPass(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkForwardPass');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkForwardPass$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/ForwardPass.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Framebuffer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkOpenGLFramebuffer),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Texture.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture.js\");\n/* harmony import */ var _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/DataArray/Constants.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js\");\n/* harmony import */ var _Texture_Constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Texture/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture/Constants.js\");\n\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkFramebuffer methods\r\n// ----------------------------------------------------------------------------\r\nfunction vtkFramebuffer(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkFramebuffer');\r\n  publicAPI.getBothMode = () => model.context.FRAMEBUFFER;\r\n  // publicAPI.getDrawMode = () => model.context.DRAW_FRAMEBUFFER;\r\n  // publicAPI.getReadMode = () => model.context.READ_FRAMEBUFFER;\r\n\r\n  publicAPI.saveCurrentBindingsAndBuffers = modeIn => {\r\n    const mode = typeof modeIn !== 'undefined' ? modeIn : publicAPI.getBothMode();\r\n    publicAPI.saveCurrentBindings(mode);\r\n    publicAPI.saveCurrentBuffers(mode);\r\n  };\r\n  publicAPI.saveCurrentBindings = modeIn => {\r\n    if (!model.context) {\r\n      (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)('you must set the OpenGLRenderWindow before calling saveCurrentBindings');\r\n      return;\r\n    }\r\n    const gl = model.context;\r\n    model.previousDrawBinding = gl.getParameter(model.context.FRAMEBUFFER_BINDING);\r\n    model.previousActiveFramebuffer = model._openGLRenderWindow.getActiveFramebuffer();\r\n  };\r\n  publicAPI.saveCurrentBuffers = modeIn => {\r\n    // noop on webgl 1\r\n  };\r\n  publicAPI.restorePreviousBindingsAndBuffers = modeIn => {\r\n    const mode = typeof modeIn !== 'undefined' ? modeIn : publicAPI.getBothMode();\r\n    publicAPI.restorePreviousBindings(mode);\r\n    publicAPI.restorePreviousBuffers(mode);\r\n  };\r\n  publicAPI.restorePreviousBindings = modeIn => {\r\n    if (!model.context) {\r\n      (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)('you must set the OpenGLRenderWindow before calling restorePreviousBindings');\r\n      return;\r\n    }\r\n    const gl = model.context;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, model.previousDrawBinding);\r\n    model._openGLRenderWindow.setActiveFramebuffer(model.previousActiveFramebuffer);\r\n  };\r\n  publicAPI.restorePreviousBuffers = modeIn => {\r\n    // currently a noop on webgl1\r\n  };\r\n  publicAPI.bind = function () {\r\n    let modeArg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\r\n    let mode = modeArg;\r\n    if (mode === null) {\r\n      mode = model.context.FRAMEBUFFER;\r\n    }\r\n    model.context.bindFramebuffer(mode, model.glFramebuffer);\r\n    for (let i = 0; i < model.colorBuffers.length; i++) {\r\n      model.colorBuffers[i].bind();\r\n    }\r\n    model._openGLRenderWindow.setActiveFramebuffer(publicAPI);\r\n  };\r\n  publicAPI.create = (width, height) => {\r\n    if (!model.context) {\r\n      (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)('you must set the OpenGLRenderWindow before calling create');\r\n      return;\r\n    }\r\n    model.glFramebuffer = model.context.createFramebuffer();\r\n    model.glFramebuffer.width = width;\r\n    model.glFramebuffer.height = height;\r\n  };\r\n  publicAPI.setColorBuffer = function (texture) {\r\n    let attachment = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n    const gl = model.context;\r\n    if (!gl) {\r\n      (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)('you must set the OpenGLRenderWindow before calling setColorBuffer');\r\n      return;\r\n    }\r\n    let glAttachment = gl.COLOR_ATTACHMENT0;\r\n    if (attachment > 0) {\r\n      if (model._openGLRenderWindow.getWebgl2()) {\r\n        glAttachment += attachment;\r\n      } else {\r\n        (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)('Using multiple framebuffer attachments requires WebGL 2');\r\n        return;\r\n      }\r\n    }\r\n    model.colorBuffers[attachment] = texture;\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, glAttachment, gl.TEXTURE_2D, texture.getHandle(), 0);\r\n  };\r\n  publicAPI.removeColorBuffer = function () {\r\n    let attachment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n    const gl = model.context;\r\n    if (!gl) {\r\n      (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)('you must set the OpenGLRenderWindow before calling removeColorBuffer');\r\n      return;\r\n    }\r\n    let glAttachment = gl.COLOR_ATTACHMENT0;\r\n    if (attachment > 0) {\r\n      if (model._openGLRenderWindow.getWebgl2()) {\r\n        glAttachment += attachment;\r\n      } else {\r\n        (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)('Using multiple framebuffer attachments requires WebGL 2');\r\n        return;\r\n      }\r\n    }\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, glAttachment, gl.TEXTURE_2D, null, 0);\r\n    model.colorBuffers = model.colorBuffers.splice(attachment, 1);\r\n  };\r\n  publicAPI.setDepthBuffer = texture => {\r\n    if (!model.context) {\r\n      (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)('you must set the OpenGLRenderWindow before calling setDepthBuffer');\r\n      return;\r\n    }\r\n    if (model._openGLRenderWindow.getWebgl2()) {\r\n      const gl = model.context;\r\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, texture.getHandle(), 0);\r\n    } else {\r\n      (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)('Attaching depth buffer textures to fbo requires WebGL 2');\r\n    }\r\n  };\r\n  publicAPI.removeDepthBuffer = () => {\r\n    if (!model.context) {\r\n      (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)('you must set the OpenGLRenderWindow before calling removeDepthBuffer');\r\n      return;\r\n    }\r\n    if (model._openGLRenderWindow.getWebgl2()) {\r\n      const gl = model.context;\r\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, null, 0);\r\n    } else {\r\n      (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)('Attaching depth buffer textures to framebuffers requires WebGL 2');\r\n    }\r\n  };\r\n  publicAPI.getGLFramebuffer = () => model.glFramebuffer;\r\n  publicAPI.setOpenGLRenderWindow = rw => {\r\n    if (model._openGLRenderWindow === rw) {\r\n      return;\r\n    }\r\n    publicAPI.releaseGraphicsResources();\r\n    model._openGLRenderWindow = rw;\r\n    model.context = null;\r\n    if (rw) {\r\n      model.context = model._openGLRenderWindow.getContext();\r\n    }\r\n  };\r\n  publicAPI.releaseGraphicsResources = () => {\r\n    if (model.glFramebuffer) {\r\n      model.context.deleteFramebuffer(model.glFramebuffer);\r\n    }\r\n  };\r\n  publicAPI.getSize = () => {\r\n    if (model.glFramebuffer == null) return null;\r\n    return [model.glFramebuffer.width, model.glFramebuffer.height];\r\n  };\r\n  publicAPI.populateFramebuffer = () => {\r\n    if (!model.context) {\r\n      (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)('you must set the OpenGLRenderWindow before calling populateFrameBuffer');\r\n      return;\r\n    }\r\n    publicAPI.bind();\r\n    const gl = model.context;\r\n    const texture = _Texture_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n    texture.setOpenGLRenderWindow(model._openGLRenderWindow);\r\n    texture.setMinificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_3__.Filter.LINEAR);\r\n    texture.setMagnificationFilter(_Texture_Constants_js__WEBPACK_IMPORTED_MODULE_3__.Filter.LINEAR);\r\n    texture.create2DFromRaw(model.glFramebuffer.width, model.glFramebuffer.height, 4, _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_2__.VtkDataTypes.UNSIGNED_CHAR, null);\r\n    publicAPI.setColorBuffer(texture);\r\n\r\n    // for now do not count on having a depth buffer texture\r\n    // as they are not standard webgl 1\r\n    model.depthTexture = gl.createRenderbuffer();\r\n    gl.bindRenderbuffer(gl.RENDERBUFFER, model.depthTexture);\r\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, model.glFramebuffer.width, model.glFramebuffer.height);\r\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, model.depthTexture);\r\n  };\r\n\r\n  // For backwards compatibility. Use getColorBuffers()[0] going forward.\r\n  publicAPI.getColorTexture = () => model.colorBuffers[0];\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\nconst DEFAULT_VALUES = {\r\n  // _openGLRenderWindow: null,\r\n  glFramebuffer: null,\r\n  colorBuffers: null,\r\n  depthTexture: null,\r\n  previousDrawBinding: 0,\r\n  previousReadBinding: 0,\r\n  previousDrawBuffer: 0,\r\n  previousReadBuffer: 0,\r\n  previousActiveFramebuffer: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.o)(publicAPI, model);\r\n  if (model.colorBuffers) {\r\n    (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)('you cannot initialize colorBuffers through the constructor. You should call setColorBuffer() instead.');\r\n  }\r\n  model.colorBuffers = [];\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.k)(publicAPI, model, ['colorBuffers']);\r\n\r\n  // For more macro methods, see \"Sources/macros.js\"\r\n  // Object specific methods\r\n  vtkFramebuffer(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, 'vtkFramebuffer');\r\n\r\n// ----------------------------------------------------------------------------\r\nvar vtkOpenGLFramebuffer = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/Framebuffer.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkHardwareSelector),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./HardwareSelector/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector/Constants.js\");\n/* harmony import */ var _Core_HardwareSelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/HardwareSelector.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/HardwareSelector.js\");\n/* harmony import */ var _Framebuffer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Framebuffer.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Framebuffer.js\");\n/* harmony import */ var _Common_DataModel_SelectionNode_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/DataModel/SelectionNode.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/SelectionNode.js\");\n/* harmony import */ var _Common_DataModel_DataSet_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Common/DataModel/DataSet.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  PassTypes\r\n} = _HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\nconst {\r\n  SelectionContent,\r\n  SelectionField\r\n} = _Common_DataModel_SelectionNode_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\r\nconst {\r\n  FieldAssociations\r\n} = _Common_DataModel_DataSet_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\nconst idOffset = 1;\r\nfunction getInfoHash(info) {\r\n  return `${info.propID} ${info.compositeID}`;\r\n}\r\nfunction getAlpha(xx, yy, pb, area) {\r\n  if (!pb) {\r\n    return 0;\r\n  }\r\n  const offset = (yy * (area[2] - area[0] + 1) + xx) * 4;\r\n  return pb[offset + 3];\r\n}\r\nfunction convert(xx, yy, pb, area) {\r\n  if (!pb) {\r\n    return 0;\r\n  }\r\n  const offset = (yy * (area[2] - area[0] + 1) + xx) * 4;\r\n  const r = pb[offset];\r\n  const g = pb[offset + 1];\r\n  const b = pb[offset + 2];\r\n  return (b * 256 + g) * 256 + r;\r\n}\r\nfunction getID(low24, high8) {\r\n  /* eslint-disable no-bitwise */\r\n  let val = high8;\r\n  val <<= 24;\r\n  val |= low24;\r\n  return val;\r\n  /* eslint-enable no-bitwise */\r\n}\r\n\r\nfunction getPixelInformationWithData(buffdata, inDisplayPosition, maxDistance, outSelectedPosition) {\r\n  // Base case\r\n  const maxDist = maxDistance < 0 ? 0 : maxDistance;\r\n  if (maxDist === 0) {\r\n    outSelectedPosition[0] = inDisplayPosition[0];\r\n    outSelectedPosition[1] = inDisplayPosition[1];\r\n    if (inDisplayPosition[0] < buffdata.area[0] || inDisplayPosition[0] > buffdata.area[2] || inDisplayPosition[1] < buffdata.area[1] || inDisplayPosition[1] > buffdata.area[3]) {\r\n      return null;\r\n    }\r\n\r\n    // offset inDisplayPosition based on the lower-left-corner of the Area.\r\n    const displayPosition = [inDisplayPosition[0] - buffdata.area[0], inDisplayPosition[1] - buffdata.area[1]];\r\n    const actorid = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ACTOR_PASS], buffdata.area);\r\n    if (actorid <= 0 || actorid - idOffset >= buffdata.props.length) {\r\n      // the pixel did not hit any actor.\r\n      return null;\r\n    }\r\n    const info = {};\r\n    info.valid = true;\r\n    info.propID = actorid - idOffset;\r\n    info.prop = buffdata.props[info.propID];\r\n    let compositeID = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.COMPOSITE_INDEX_PASS], buffdata.area);\r\n    if (compositeID < 0 || compositeID > 0xffffff) {\r\n      compositeID = 0;\r\n    }\r\n    info.compositeID = compositeID - idOffset;\r\n    if (buffdata.captureZValues) {\r\n      const offset = (displayPosition[1] * (buffdata.area[2] - buffdata.area[0] + 1) + displayPosition[0]) * 4;\r\n      info.zValue = (256 * buffdata.zBuffer[offset] + buffdata.zBuffer[offset + 1]) / 65535.0;\r\n      info.displayPosition = inDisplayPosition;\r\n    }\r\n    if (buffdata.pixBuffer[PassTypes.ID_LOW24]) {\r\n      if (getAlpha(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ID_LOW24], buffdata.area) === 0.0) {\r\n        return info;\r\n      }\r\n    }\r\n    const low24 = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ID_LOW24], buffdata.area);\r\n    const high24 = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ID_HIGH24], buffdata.area);\r\n    info.attributeID = getID(low24, high24);\r\n    return info;\r\n  }\r\n\r\n  // Iterate over successively growing boxes.\r\n  // They recursively call the base case to handle single pixels.\r\n  const dispPos = [inDisplayPosition[0], inDisplayPosition[1]];\r\n  const curPos = [0, 0];\r\n  let info = getPixelInformationWithData(buffdata, inDisplayPosition, 0, outSelectedPosition);\r\n  if (info && info.valid) {\r\n    return info;\r\n  }\r\n  for (let dist = 1; dist < maxDist; ++dist) {\r\n    // Vertical sides of box.\r\n    for (let y = dispPos[1] > dist ? dispPos[1] - dist : 0; y <= dispPos[1] + dist; ++y) {\r\n      curPos[1] = y;\r\n      if (dispPos[0] >= dist) {\r\n        curPos[0] = dispPos[0] - dist;\r\n        info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\r\n        if (info && info.valid) {\r\n          return info;\r\n        }\r\n      }\r\n      curPos[0] = dispPos[0] + dist;\r\n      info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\r\n      if (info && info.valid) {\r\n        return info;\r\n      }\r\n    }\r\n    // Horizontal sides of box.\r\n    for (let x = dispPos[0] >= dist ? dispPos[0] - (dist - 1) : 0; x <= dispPos[0] + (dist - 1); ++x) {\r\n      curPos[0] = x;\r\n      if (dispPos[1] >= dist) {\r\n        curPos[1] = dispPos[1] - dist;\r\n        info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\r\n        if (info && info.valid) {\r\n          return info;\r\n        }\r\n      }\r\n      curPos[1] = dispPos[1] + dist;\r\n      info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\r\n      if (info && info.valid) {\r\n        return info;\r\n      }\r\n    }\r\n  }\r\n\r\n  // nothing hit.\r\n  outSelectedPosition[0] = inDisplayPosition[0];\r\n  outSelectedPosition[1] = inDisplayPosition[1];\r\n  return null;\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\nfunction convertSelection(fieldassociation, dataMap, captureZValues, renderer, openGLRenderWindow) {\r\n  const sel = [];\r\n  let count = 0;\r\n  dataMap.forEach((value, key) => {\r\n    const child = _Common_DataModel_SelectionNode_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance();\r\n    child.setContentType(SelectionContent.INDICES);\r\n    switch (fieldassociation) {\r\n      case FieldAssociations.FIELD_ASSOCIATION_CELLS:\r\n        child.setFieldType(SelectionField.CELL);\r\n        break;\r\n      case FieldAssociations.FIELD_ASSOCIATION_POINTS:\r\n        child.setFieldType(SelectionField.POINT);\r\n        break;\r\n      default:\r\n        vtkErrorMacro('Unknown field association');\r\n    }\r\n    child.getProperties().propID = value.info.propID;\r\n    child.getProperties().prop = value.info.prop;\r\n    child.getProperties().compositeID = value.info.compositeID;\r\n    child.getProperties().attributeID = value.info.attributeID;\r\n    child.getProperties().pixelCount = value.pixelCount;\r\n    if (captureZValues) {\r\n      child.getProperties().displayPosition = [value.info.displayPosition[0], value.info.displayPosition[1], value.info.zValue];\r\n      child.getProperties().worldPosition = openGLRenderWindow.displayToWorld(value.info.displayPosition[0], value.info.displayPosition[1], value.info.zValue, renderer);\r\n    }\r\n    child.setSelectionList(value.attributeIDs);\r\n    sel[count] = child;\r\n    count++;\r\n  });\r\n  return sel;\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\nfunction generateSelectionWithData(buffdata, fx1, fy1, fx2, fy2) {\r\n  const x1 = Math.floor(fx1);\r\n  const y1 = Math.floor(fy1);\r\n  const x2 = Math.floor(fx2);\r\n  const y2 = Math.floor(fy2);\r\n  const dataMap = new Map();\r\n  const outSelectedPosition = [0, 0];\r\n  for (let yy = y1; yy <= y2; yy++) {\r\n    for (let xx = x1; xx <= x2; xx++) {\r\n      const pos = [xx, yy];\r\n      const info = getPixelInformationWithData(buffdata, pos, 0, outSelectedPosition);\r\n      if (info && info.valid) {\r\n        const hash = getInfoHash(info);\r\n        if (!dataMap.has(hash)) {\r\n          dataMap.set(hash, {\r\n            info,\r\n            pixelCount: 1,\r\n            attributeIDs: [info.attributeID]\r\n          });\r\n        } else {\r\n          const dmv = dataMap.get(hash);\r\n          dmv.pixelCount++;\r\n          if (buffdata.captureZValues) {\r\n            if (info.zValue < dmv.info.zValue) {\r\n              dmv.info = info;\r\n            }\r\n          }\r\n          if (dmv.attributeIDs.indexOf(info.attributeID) === -1) {\r\n            dmv.attributeIDs.push(info.attributeID);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return convertSelection(buffdata.fieldAssociation, dataMap, buffdata.captureZValues, buffdata.renderer, buffdata.openGLRenderWindow);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLHardwareSelector methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkOpenGLHardwareSelector(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkOpenGLHardwareSelector');\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.releasePixBuffers = () => {\r\n    model.rawPixBuffer = [];\r\n    model.pixBuffer = [];\r\n    model.zBuffer = null;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.beginSelection = () => {\r\n    model._openGLRenderer = model._openGLRenderWindow.getViewNodeFor(model._renderer);\r\n    model.maxAttributeId = 0;\r\n    const size = model._openGLRenderWindow.getSize();\r\n    if (!model.framebuffer) {\r\n      model.framebuffer = _Framebuffer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance();\r\n      model.framebuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\r\n      model.framebuffer.saveCurrentBindingsAndBuffers();\r\n      model.framebuffer.create(size[0], size[1]);\r\n      // this calls model.framebuffer.bind()\r\n      model.framebuffer.populateFramebuffer();\r\n    } else {\r\n      model.framebuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\r\n      model.framebuffer.saveCurrentBindingsAndBuffers();\r\n      const fbSize = model.framebuffer.getSize();\r\n      if (!fbSize || fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\r\n        model.framebuffer.create(size[0], size[1]);\r\n        // this calls model.framebuffer.bind()\r\n        model.framebuffer.populateFramebuffer();\r\n      } else {\r\n        model.framebuffer.bind();\r\n      }\r\n    }\r\n    model._openGLRenderer.clear();\r\n    model._openGLRenderer.setSelector(publicAPI);\r\n    model.hitProps = {};\r\n    model.propPixels = {};\r\n    model.props = [];\r\n    publicAPI.releasePixBuffers();\r\n    if (model.fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_POINTS) {\r\n      const gl = model._openGLRenderWindow.getContext();\r\n      const originalBlending = gl.isEnabled(gl.BLEND);\r\n      gl.disable(gl.BLEND);\r\n      model._openGLRenderWindow.traverseAllPasses();\r\n      if (originalBlending) {\r\n        gl.enable(gl.BLEND);\r\n      }\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.endSelection = () => {\r\n    model.hitProps = {};\r\n    model._openGLRenderer.setSelector(null);\r\n    model.framebuffer.restorePreviousBindingsAndBuffers();\r\n  };\r\n  publicAPI.preCapturePass = () => {\r\n    const gl = model._openGLRenderWindow.getContext();\r\n    // Disable blending\r\n    model.originalBlending = gl.isEnabled(gl.BLEND);\r\n    gl.disable(gl.BLEND);\r\n  };\r\n  publicAPI.postCapturePass = () => {\r\n    const gl = model._openGLRenderWindow.getContext();\r\n    // Restore blending if it was enabled prior to the capture\r\n    if (model.originalBlending) {\r\n      gl.enable(gl.BLEND);\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.select = () => {\r\n    let sel = null;\r\n    if (publicAPI.captureBuffers()) {\r\n      sel = publicAPI.generateSelection(model.area[0], model.area[1], model.area[2], model.area[3]);\r\n      publicAPI.releasePixBuffers();\r\n    }\r\n    return sel;\r\n  };\r\n  publicAPI.getSourceDataAsync = async (renderer, fx1, fy1, fx2, fy2) => {\r\n    // assign the renderer\r\n    model._renderer = renderer;\r\n\r\n    // set area to all if no arguments provided\r\n    if (fx1 === undefined) {\r\n      const size = model._openGLRenderWindow.getSize();\r\n      publicAPI.setArea(0, 0, size[0] - 1, size[1] - 1);\r\n    } else {\r\n      publicAPI.setArea(fx1, fy1, fx2, fy2);\r\n    }\r\n    // just do capture buffers and package up the result\r\n    if (!publicAPI.captureBuffers()) {\r\n      return false;\r\n    }\r\n    const result = {\r\n      area: [...model.area],\r\n      pixBuffer: [...model.pixBuffer],\r\n      captureZValues: model.captureZValues,\r\n      zBuffer: model.zBuffer,\r\n      props: [...model.props],\r\n      fieldAssociation: model.fieldAssociation,\r\n      renderer,\r\n      openGLRenderWindow: model._openGLRenderWindow\r\n    };\r\n    result.generateSelection = function () {\r\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n        args[_key] = arguments[_key];\r\n      }\r\n      return generateSelectionWithData(result, ...args);\r\n    };\r\n    return result;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.captureBuffers = () => {\r\n    if (!model._renderer || !model._openGLRenderWindow) {\r\n      vtkErrorMacro('Renderer and view must be set before calling Select.');\r\n      return false;\r\n    }\r\n    model._openGLRenderer = model._openGLRenderWindow.getViewNodeFor(model._renderer);\r\n\r\n    // todo revisit making selection part of core\r\n    // then we can do this in core\r\n    model._openGLRenderWindow.getRenderable().preRender();\r\n\r\n    // int rgba[4];\r\n    // rwin.getColorBufferSizes(rgba);\r\n    // if (rgba[0] < 8 || rgba[1] < 8 || rgba[2] < 8) {\r\n    //   vtkErrorMacro(\"Color buffer depth must be at least 8 bit. \"\r\n    //     \"Currently: \" << rgba[0] << \", \" << rgba[1] << \", \" <<rgba[2]);\r\n    //   return false;\r\n    // }\r\n    publicAPI.invokeEvent({\r\n      type: 'StartEvent'\r\n    });\r\n\r\n    // Initialize renderer for selection.\r\n    // change the renderer's background to black, which will indicate a miss\r\n    model.originalBackground = model._renderer.getBackgroundByReference();\r\n    model._renderer.setBackground(0.0, 0.0, 0.0, 0.0);\r\n    const rpasses = model._openGLRenderWindow.getRenderPasses();\r\n    publicAPI.beginSelection();\r\n    for (model.currentPass = PassTypes.MIN_KNOWN_PASS; model.currentPass <= PassTypes.MAX_KNOWN_PASS; model.currentPass++) {\r\n      if (publicAPI.passRequired(model.currentPass)) {\r\n        publicAPI.preCapturePass(model.currentPass);\r\n        if (model.captureZValues && model.currentPass === PassTypes.ACTOR_PASS && typeof rpasses[0].requestDepth === 'function' && typeof rpasses[0].getFramebuffer === 'function') {\r\n          rpasses[0].requestDepth();\r\n          model._openGLRenderWindow.traverseAllPasses();\r\n        } else {\r\n          model._openGLRenderWindow.traverseAllPasses();\r\n        }\r\n        publicAPI.postCapturePass(model.currentPass);\r\n        publicAPI.savePixelBuffer(model.currentPass);\r\n        publicAPI.processPixelBuffers();\r\n      }\r\n    }\r\n    publicAPI.endSelection();\r\n\r\n    // restore original background\r\n    model._renderer.setBackground(model.originalBackground);\r\n    publicAPI.invokeEvent({\r\n      type: 'EndEvent'\r\n    });\r\n\r\n    // restore image, not needed?\r\n    // model._openGLRenderWindow.traverseAllPasses();\r\n    return true;\r\n  };\r\n  publicAPI.processPixelBuffers = () => {\r\n    model.props.forEach((prop, index) => {\r\n      if (publicAPI.isPropHit(index)) {\r\n        prop.processSelectorPixelBuffers(publicAPI, model.propPixels[index]);\r\n      }\r\n    });\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.passRequired = pass => {\r\n    if (pass === PassTypes.ID_HIGH24) {\r\n      if (model.fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_POINTS) {\r\n        return model.maximumPointId > 0x00ffffff;\r\n      }\r\n      if (model.fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_CELLS) {\r\n        return model.maximumCellId > 0x00ffffff;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.savePixelBuffer = passNo => {\r\n    model.pixBuffer[passNo] = model._openGLRenderWindow.getPixelData(model.area[0], model.area[1], model.area[2], model.area[3]);\r\n    if (!model.rawPixBuffer[passNo]) {\r\n      const size = (model.area[2] - model.area[0] + 1) * (model.area[3] - model.area[1] + 1) * 4;\r\n      model.rawPixBuffer[passNo] = new Uint8Array(size);\r\n      model.rawPixBuffer[passNo].set(model.pixBuffer[passNo]);\r\n    }\r\n    if (passNo === PassTypes.ACTOR_PASS) {\r\n      if (model.captureZValues) {\r\n        const rpasses = model._openGLRenderWindow.getRenderPasses();\r\n        if (typeof rpasses[0].requestDepth === 'function' && typeof rpasses[0].getFramebuffer === 'function') {\r\n          const fb = rpasses[0].getFramebuffer();\r\n          fb.saveCurrentBindingsAndBuffers();\r\n          fb.bind();\r\n          model.zBuffer = model._openGLRenderWindow.getPixelData(model.area[0], model.area[1], model.area[2], model.area[3]);\r\n          fb.restorePreviousBindingsAndBuffers();\r\n        }\r\n      }\r\n      publicAPI.buildPropHitList(model.rawPixBuffer[passNo]);\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.buildPropHitList = pixelbuffer => {\r\n    let offset = 0;\r\n    for (let yy = 0; yy <= model.area[3] - model.area[1]; yy++) {\r\n      for (let xx = 0; xx <= model.area[2] - model.area[0]; xx++) {\r\n        let val = convert(xx, yy, pixelbuffer, model.area);\r\n        if (val > 0) {\r\n          val--;\r\n          if (!(val in model.hitProps)) {\r\n            model.hitProps[val] = true;\r\n            model.propPixels[val] = [];\r\n          }\r\n          model.propPixels[val].push(offset * 4);\r\n        }\r\n        ++offset;\r\n      }\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.renderProp = prop => {\r\n    if (model.currentPass === PassTypes.ACTOR_PASS) {\r\n      publicAPI.setPropColorValueFromInt(model.props.length + idOffset);\r\n      model.props.push(prop);\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.renderCompositeIndex = index => {\r\n    if (model.currentPass === PassTypes.COMPOSITE_INDEX_PASS) {\r\n      publicAPI.setPropColorValueFromInt(index + idOffset);\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  // TODO: make inline\r\n  publicAPI.renderAttributeId = attribid => {\r\n    if (attribid < 0) {\r\n      // negative attribid is valid. It happens when rendering higher order\r\n      // elements where new points are added for rendering smooth surfaces.\r\n      return;\r\n    }\r\n    model.maxAttributeId = attribid > model.maxAttributeId ? attribid : model.maxAttributeId;\r\n\r\n    // if (model.currentPass < PassTypes.ID_LOW24) {\r\n    //   return; // useless...\r\n    // }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.passTypeToString = type => _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.enumToString(PassTypes, type);\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.isPropHit = id => Boolean(model.hitProps[id]);\r\n  publicAPI.setPropColorValueFromInt = val => {\r\n    model.propColorValue[0] = val % 256 / 255.0;\r\n    model.propColorValue[1] = Math.floor(val / 256) % 256 / 255.0;\r\n    model.propColorValue[2] = Math.floor(val / 65536) % 256 / 255.0;\r\n  };\r\n\r\n  // info has\r\n  //   valid\r\n  //   propId\r\n  //   prop\r\n  //   compositeID\r\n  //   attributeID\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.getPixelInformation = (inDisplayPosition, maxDistance, outSelectedPosition) => {\r\n    // Base case\r\n    const maxDist = maxDistance < 0 ? 0 : maxDistance;\r\n    if (maxDist === 0) {\r\n      outSelectedPosition[0] = inDisplayPosition[0];\r\n      outSelectedPosition[1] = inDisplayPosition[1];\r\n      if (inDisplayPosition[0] < model.area[0] || inDisplayPosition[0] > model.area[2] || inDisplayPosition[1] < model.area[1] || inDisplayPosition[1] > model.area[3]) {\r\n        return null;\r\n      }\r\n\r\n      // offset inDisplayPosition based on the lower-left-corner of the Area.\r\n      const displayPosition = [inDisplayPosition[0] - model.area[0], inDisplayPosition[1] - model.area[1]];\r\n      const actorid = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ACTOR_PASS], model.area);\r\n      if (actorid <= 0 || actorid - idOffset >= model.props.length) {\r\n        // the pixel did not hit any actor.\r\n        return null;\r\n      }\r\n      const info = {};\r\n      info.valid = true;\r\n      info.propID = actorid - idOffset;\r\n      info.prop = model.props[info.propID];\r\n      let compositeID = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.COMPOSITE_INDEX_PASS], model.area);\r\n      if (compositeID < 0 || compositeID > 0xffffff) {\r\n        compositeID = 0;\r\n      }\r\n      info.compositeID = compositeID - idOffset;\r\n      if (model.captureZValues) {\r\n        const offset = (displayPosition[1] * (model.area[2] - model.area[0] + 1) + displayPosition[0]) * 4;\r\n        info.zValue = (256 * model.zBuffer[offset] + model.zBuffer[offset + 1]) / 65535.0;\r\n        info.displayPosition = inDisplayPosition;\r\n      }\r\n\r\n      // Skip attribute ids if alpha is zero (missed)\r\n      if (model.pixBuffer[PassTypes.ID_LOW24]) {\r\n        if (getAlpha(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ID_LOW24], model.area) === 0.0) {\r\n          return info;\r\n        }\r\n      }\r\n      const low24 = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ID_LOW24], model.area);\r\n      const high24 = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ID_HIGH24], model.area);\r\n      info.attributeID = getID(low24, high24);\r\n      return info;\r\n    }\r\n\r\n    // Iterate over successively growing boxes.\r\n    // They recursively call the base case to handle single pixels.\r\n    const dispPos = [inDisplayPosition[0], inDisplayPosition[1]];\r\n    const curPos = [0, 0];\r\n    let info = publicAPI.getPixelInformation(inDisplayPosition, 0, outSelectedPosition);\r\n    if (info && info.valid) {\r\n      return info;\r\n    }\r\n    for (let dist = 1; dist < maxDist; ++dist) {\r\n      // Vertical sides of box.\r\n      for (let y = dispPos[1] > dist ? dispPos[1] - dist : 0; y <= dispPos[1] + dist; ++y) {\r\n        curPos[1] = y;\r\n        if (dispPos[0] >= dist) {\r\n          curPos[0] = dispPos[0] - dist;\r\n          info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\r\n          if (info && info.valid) {\r\n            return info;\r\n          }\r\n        }\r\n        curPos[0] = dispPos[0] + dist;\r\n        info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\r\n        if (info && info.valid) {\r\n          return info;\r\n        }\r\n      }\r\n      // Horizontal sides of box.\r\n      for (let x = dispPos[0] >= dist ? dispPos[0] - (dist - 1) : 0; x <= dispPos[0] + (dist - 1); ++x) {\r\n        curPos[0] = x;\r\n        if (dispPos[1] >= dist) {\r\n          curPos[1] = dispPos[1] - dist;\r\n          info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\r\n          if (info && info.valid) {\r\n            return info;\r\n          }\r\n        }\r\n        curPos[1] = dispPos[1] + dist;\r\n        info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\r\n        if (info && info.valid) {\r\n          return info;\r\n        }\r\n      }\r\n    }\r\n\r\n    // nothing hit.\r\n    outSelectedPosition[0] = inDisplayPosition[0];\r\n    outSelectedPosition[1] = inDisplayPosition[1];\r\n    return null;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.generateSelection = (fx1, fy1, fx2, fy2) => {\r\n    const x1 = Math.floor(fx1);\r\n    const y1 = Math.floor(fy1);\r\n    const x2 = Math.floor(fx2);\r\n    const y2 = Math.floor(fy2);\r\n    const dataMap = new Map();\r\n    const outSelectedPosition = [0, 0];\r\n    for (let yy = y1; yy <= y2; yy++) {\r\n      for (let xx = x1; xx <= x2; xx++) {\r\n        const pos = [xx, yy];\r\n        const info = publicAPI.getPixelInformation(pos, 0, outSelectedPosition);\r\n        if (info && info.valid) {\r\n          const hash = getInfoHash(info);\r\n          if (!dataMap.has(hash)) {\r\n            dataMap.set(hash, {\r\n              info,\r\n              pixelCount: 1,\r\n              attributeIDs: [info.attributeID]\r\n            });\r\n          } else {\r\n            const dmv = dataMap.get(hash);\r\n            dmv.pixelCount++;\r\n            if (model.captureZValues) {\r\n              if (info.zValue < dmv.info.zValue) {\r\n                dmv.info = info;\r\n              }\r\n            }\r\n            if (dmv.attributeIDs.indexOf(info.attributeID) === -1) {\r\n              dmv.attributeIDs.push(info.attributeID);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return convertSelection(model.fieldAssociation, dataMap, model.captureZValues, model._renderer, model._openGLRenderWindow);\r\n  };\r\n  publicAPI.getRawPixelBuffer = passNo => model.rawPixBuffer[passNo];\r\n  publicAPI.getPixelBuffer = passNo => model.pixBuffer[passNo];\r\n\r\n  //----------------------------------------------------------------------------\r\n\r\n  publicAPI.attach = (w, r) => {\r\n    model._openGLRenderWindow = w;\r\n    model._renderer = r;\r\n  };\r\n\r\n  // override\r\n  const superSetArea = publicAPI.setArea;\r\n  publicAPI.setArea = function () {\r\n    if (superSetArea(...arguments)) {\r\n      model.area[0] = Math.floor(model.area[0]);\r\n      model.area[1] = Math.floor(model.area[1]);\r\n      model.area[2] = Math.floor(model.area[2]);\r\n      model.area[3] = Math.floor(model.area[3]);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  area: undefined,\r\n  // _renderer: null,\r\n  // _openGLRenderWindow: null,\r\n  // _openGLRenderer: null,\r\n  currentPass: -1,\r\n  propColorValue: null,\r\n  props: null,\r\n  maximumPointId: 0,\r\n  maximumCellId: 0,\r\n  idOffset: 1\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _Core_HardwareSelector_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(publicAPI, model, initialValues);\r\n  model.propColorValue = [0, 0, 0];\r\n  model.props = [];\r\n  if (!model.area) {\r\n    model.area = [0, 0, 0, 0];\r\n  }\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGetArray(publicAPI, model, ['area'], 4);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['_renderer', 'currentPass', '_openGLRenderWindow', 'maximumPointId', 'maximumCellId']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGetArray(publicAPI, model, ['propColorValue'], 3);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.moveToProtected(publicAPI, model, ['renderer', 'openGLRenderWindow']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.event(publicAPI, model, 'event');\r\n\r\n  // Object methods\r\n  vtkOpenGLHardwareSelector(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkOpenGLHardwareSelector');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkHardwareSelector = {\r\n  newInstance,\r\n  extend,\r\n  ..._HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PassTypes: () => (/* binding */ PassTypes),\n/* harmony export */   "default": () => (/* binding */ Constants)\n/* harmony export */ });\nconst PassTypes = {\r\n  MIN_KNOWN_PASS: 0,\r\n  ACTOR_PASS: 0,\r\n  COMPOSITE_INDEX_PASS: 1,\r\n  ID_LOW24: 2,\r\n  ID_HIGH24: 3,\r\n  MAX_KNOWN_PASS: 3\r\n};\r\nvar Constants = {\r\n  PassTypes\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector/Constants.js?')},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Helper.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkHelper),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance),\n/* harmony export */   primTypes: () => (/* binding */ primTypes)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _CellArrayBufferObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CellArrayBufferObject.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/CellArrayBufferObject.js\");\n/* harmony import */ var _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ShaderProgram.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js\");\n/* harmony import */ var _VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./VertexArrayObject.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/VertexArrayObject.js\");\n/* harmony import */ var _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Core/Property/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst primTypes = {\r\n  Start: 0,\r\n  Points: 0,\r\n  Lines: 1,\r\n  Tris: 2,\r\n  TriStrips: 3,\r\n  TrisEdges: 4,\r\n  TriStripsEdges: 5,\r\n  End: 6\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLHelper methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkOpenGLHelper(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkOpenGLHelper');\r\n  publicAPI.setOpenGLRenderWindow = win => {\r\n    model.context = win.getContext();\r\n    model.program.setContext(model.context);\r\n    model.VAO.setOpenGLRenderWindow(win);\r\n    model.CABO.setOpenGLRenderWindow(win);\r\n  };\r\n  publicAPI.releaseGraphicsResources = oglwin => {\r\n    model.VAO.releaseGraphicsResources();\r\n    model.CABO.releaseGraphicsResources();\r\n    model.CABO.setElementCount(0);\r\n  };\r\n  publicAPI.drawArrays = (ren, actor, rep, oglMapper) => {\r\n    // Are there any entries\r\n    if (model.CABO.getElementCount()) {\r\n      // are we drawing edges\r\n      const mode = publicAPI.getOpenGLMode(rep);\r\n      const wideLines = publicAPI.haveWideLines(ren, actor);\r\n      const gl = model.context;\r\n      const depthMask = gl.getParameter(gl.DEPTH_WRITEMASK);\r\n      if (model.pointPicking) {\r\n        gl.depthMask(false);\r\n      }\r\n      const drawingLines = mode === gl.LINES;\r\n      if (drawingLines && wideLines) {\r\n        publicAPI.updateShaders(ren, actor, oglMapper);\r\n        gl.drawArraysInstanced(mode, 0, model.CABO.getElementCount(), 2 * Math.ceil(actor.getProperty().getLineWidth()));\r\n      } else {\r\n        gl.lineWidth(actor.getProperty().getLineWidth());\r\n        publicAPI.updateShaders(ren, actor, oglMapper);\r\n        gl.drawArrays(mode, 0, model.CABO.getElementCount());\r\n        // reset the line width\r\n        gl.lineWidth(1);\r\n      }\r\n      const stride = (mode === gl.POINTS ? 1 : 0) || (mode === gl.LINES ? 2 : 3);\r\n      if (model.pointPicking) {\r\n        gl.depthMask(depthMask);\r\n      }\r\n      return model.CABO.getElementCount() / stride;\r\n    }\r\n    return 0;\r\n  };\r\n  publicAPI.getOpenGLMode = rep => {\r\n    if (model.pointPicking) {\r\n      return model.context.POINTS;\r\n    }\r\n    const type = model.primitiveType;\r\n    if (rep === _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_4__.Representation.POINTS || type === primTypes.Points) {\r\n      return model.context.POINTS;\r\n    }\r\n    if (rep === _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_4__.Representation.WIREFRAME || type === primTypes.Lines || type === primTypes.TrisEdges || type === primTypes.TriStripsEdges) {\r\n      return model.context.LINES;\r\n    }\r\n    return model.context.TRIANGLES;\r\n  };\r\n  publicAPI.haveWideLines = (ren, actor) => {\r\n    if (actor.getProperty().getLineWidth() > 1.0) {\r\n      // we have wide lines, but the OpenGL implementation may\r\n      // actually support them, check the range to see if we\r\n      // really need have to implement our own wide lines\r\n      if (model.CABO.getOpenGLRenderWindow()) {\r\n        if (model.CABO.getOpenGLRenderWindow().getHardwareMaximumLineWidth() >= actor.getProperty().getLineWidth()) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  publicAPI.getNeedToRebuildShaders = (ren, actor, oglMapper) => {\r\n    // has something changed that would require us to recreate the shader?\r\n    // candidates are\r\n    // property modified (representation interpolation and lighting)\r\n    // input modified\r\n    // mapper modified (lighting complexity)\r\n    if (oglMapper.getNeedToRebuildShaders(publicAPI, ren, actor) || publicAPI.getProgram() === 0 || publicAPI.getShaderSourceTime().getMTime() < oglMapper.getMTime() || publicAPI.getShaderSourceTime().getMTime() < actor.getMTime()) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  publicAPI.updateShaders = (ren, actor, oglMapper) => {\r\n    // has something changed that would require us to recreate the shader?\r\n    if (publicAPI.getNeedToRebuildShaders(ren, actor, oglMapper)) {\r\n      const shaders = {\r\n        Vertex: null,\r\n        Fragment: null,\r\n        Geometry: null\r\n      };\r\n      oglMapper.buildShaders(shaders, ren, actor);\r\n\r\n      // compile and bind the program if needed\r\n      const newShader = model.CABO.getOpenGLRenderWindow().getShaderCache().readyShaderProgramArray(shaders.Vertex, shaders.Fragment, shaders.Geometry);\r\n\r\n      // if the shader changed reinitialize the VAO\r\n      if (newShader !== publicAPI.getProgram()) {\r\n        publicAPI.setProgram(newShader);\r\n        // reset the VAO as the shader has changed\r\n        publicAPI.getVAO().releaseGraphicsResources();\r\n      }\r\n      publicAPI.getShaderSourceTime().modified();\r\n    } else {\r\n      model.CABO.getOpenGLRenderWindow().getShaderCache().readyShaderProgram(publicAPI.getProgram());\r\n    }\r\n    publicAPI.getVAO().bind();\r\n    oglMapper.setMapperShaderParameters(publicAPI, ren, actor);\r\n    oglMapper.setPropertyShaderParameters(publicAPI, ren, actor);\r\n    oglMapper.setCameraShaderParameters(publicAPI, ren, actor);\r\n    oglMapper.setLightingShaderParameters(publicAPI, ren, actor);\r\n    oglMapper.invokeShaderCallbacks(publicAPI, ren, actor);\r\n  };\r\n  publicAPI.setMapperShaderParameters = (ren, actor, size) => {\r\n    if (publicAPI.haveWideLines(ren, actor)) {\r\n      publicAPI.getProgram().setUniform2f('viewportSize', size.usize, size.vsize);\r\n      const lineWidth = parseFloat(actor.getProperty().getLineWidth());\r\n      const halfLineWidth = lineWidth / 2.0;\r\n      publicAPI.getProgram().setUniformf('lineWidthStepSize', lineWidth / Math.ceil(lineWidth));\r\n      publicAPI.getProgram().setUniformf('halfLineWidth', halfLineWidth);\r\n    }\r\n    if (model.primitiveType === primTypes.Points || actor.getProperty().getRepresentation() === _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_4__.Representation.POINTS) {\r\n      publicAPI.getProgram().setUniformf('pointSize', actor.getProperty().getPointSize());\r\n    } else if (model.pointPicking) {\r\n      publicAPI.getProgram().setUniformf('pointSize', publicAPI.getPointPickingPrimitiveSize());\r\n    }\r\n  };\r\n  publicAPI.replaceShaderPositionVC = (shaders, ren, actor) => {\r\n    let VSSource = shaders.Vertex;\r\n\r\n    // Always set point size in case we need picking\r\n    VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].substitute(VSSource, '//VTK::PositionVC::Dec', ['//VTK::PositionVC::Dec', 'uniform float pointSize;']).result;\r\n    VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].substitute(VSSource, '//VTK::PositionVC::Impl', ['//VTK::PositionVC::Impl', '  gl_PointSize = pointSize;'], false).result;\r\n\r\n    // for lines, make sure we add the width code\r\n    if (publicAPI.getOpenGLMode(actor.getProperty().getRepresentation()) === model.context.LINES && publicAPI.haveWideLines(ren, actor)) {\r\n      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].substitute(VSSource, '//VTK::PositionVC::Dec', ['//VTK::PositionVC::Dec', 'uniform vec2 viewportSize;', 'uniform float lineWidthStepSize;', 'uniform float halfLineWidth;']).result;\r\n      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].substitute(VSSource, '//VTK::PositionVC::Impl', ['//VTK::PositionVC::Impl', ' if (halfLineWidth > 0.0)', '   {', '   float offset = float(gl_InstanceID / 2) * lineWidthStepSize - halfLineWidth;', '   vec4 tmpPos = gl_Position;', '   vec3 tmpPos2 = tmpPos.xyz / tmpPos.w;', '   tmpPos2.x = tmpPos2.x + 2.0 * mod(float(gl_InstanceID), 2.0) * offset / viewportSize[0];', '   tmpPos2.y = tmpPos2.y + 2.0 * mod(float(gl_InstanceID + 1), 2.0) * offset / viewportSize[1];', '   gl_Position = vec4(tmpPos2.xyz * tmpPos.w, tmpPos.w);', '   }']).result;\r\n    }\r\n    shaders.Vertex = VSSource;\r\n  };\r\n  publicAPI.getPointPickingPrimitiveSize = () => {\r\n    if (model.primitiveType === primTypes.Points) {\r\n      return 2;\r\n    }\r\n    if (model.primitiveType === primTypes.Lines) {\r\n      return 4;\r\n    }\r\n    return 6;\r\n  };\r\n  publicAPI.getAllocatedGPUMemoryInBytes = () => publicAPI.getCABO().getAllocatedGPUMemoryInBytes();\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  context: null,\r\n  program: null,\r\n  shaderSourceTime: null,\r\n  VAO: null,\r\n  attributeUpdateTime: null,\r\n  CABO: null,\r\n  primitiveType: 0,\r\n  pointPicking: false\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  model.shaderSourceTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.shaderSourceTime);\r\n  model.attributeUpdateTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.attributeUpdateTime);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['program', 'shaderSourceTime', 'VAO', 'attributeUpdateTime', 'CABO', 'primitiveType', 'pointPicking']);\r\n  model.program = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance();\r\n  model.VAO = _VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance();\r\n  model.CABO = _CellArrayBufferObject_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n\r\n  // Object methods\r\n  vtkOpenGLHelper(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkHelper = {\r\n  newInstance,\r\n  extend,\r\n  primTypes\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/Helper.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/OrderIndependentTranslucentPass.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkOpenGLOrderIndependentTranslucentPass$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Texture.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture.js\");\n/* harmony import */ var _Framebuffer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Framebuffer.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Framebuffer.js\");\n/* harmony import */ var _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../SceneGraph/RenderPass.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js\");\n/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray.js\");\n/* harmony import */ var _Helper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Helper.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Helper.js\");\n/* harmony import */ var _Core_Property_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Core/Property.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Property.js\");\n/* harmony import */ var _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ShaderProgram.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js\");\n/* harmony import */ var _VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./VertexArrayObject.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/VertexArrayObject.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  Representation\r\n} = _Core_Property_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction translucentShaderReplacement(shaders) {\r\n  const substituteRes = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(shaders.Fragment, '//VTK::RenderPassFragmentShader::Impl', `\r\n      float weight = gl_FragData[0].a * pow(max(1.1 - gl_FragCoord.z, 0.0), 2.0);\r\n      gl_FragData[0] = vec4(gl_FragData[0].rgb*weight, gl_FragData[0].a);\r\n      gl_FragData[1].r = weight;\r\n    `, false);\r\n  shaders.Fragment = substituteRes.result;\r\n}\r\nconst oitpFragTemplate = `//VTK::System::Dec\r\n\r\nin vec2 tcoord;\r\n\r\nuniform sampler2D translucentRTexture;\r\nuniform sampler2D translucentRGBATexture;\r\n\r\n// the output of this shader\r\n//VTK::Output::Dec\r\n\r\nvoid main()\r\n{\r\n  vec4 t1Color = texture(translucentRGBATexture, tcoord);\r\n  float t2Color = texture(translucentRTexture, tcoord).r;\r\n  gl_FragData[0] = vec4(t1Color.rgb/max(t2Color,0.01), 1.0 - t1Color.a);\r\n}\r\n`;\r\nfunction vtkOpenGLOrderIndependentTranslucentPass(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkOpenGLOrderIndependentTranslucentPass');\r\n\r\n  // build vertices etc\r\n  publicAPI.createVertexBuffer = () => {\r\n    // 4 corner points in clipping space in order (x, y, z) where z is always set to -1\r\n    // prettier-ignore\r\n    const ptsArray = new Float32Array([-1, -1, -1, 1, -1, -1, -1, 1, -1, 1, 1, -1]);\r\n\r\n    // 4 corresponding corner points in texture space in order (x, y)\r\n    const tcoordArray = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\r\n\r\n    // a square defined as cell relation ship in order (cell_size, v1, v2, v3, v4)\r\n    const cellArray = new Uint16Array([4, 0, 1, 3, 2]);\r\n    const points = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance({\r\n      numberOfComponents: 3,\r\n      values: ptsArray\r\n    });\r\n    points.setName('points');\r\n    const tcoords = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance({\r\n      numberOfComponents: 2,\r\n      values: tcoordArray\r\n    });\r\n    tcoords.setName('tcoords');\r\n    const cells = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance({\r\n      numberOfComponents: 1,\r\n      values: cellArray\r\n    });\r\n    model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\r\n      points,\r\n      tcoords,\r\n      cellOffset: 0\r\n    });\r\n    model.VBOBuildTime.modified();\r\n  };\r\n  publicAPI.createFramebuffer = viewNode => {\r\n    const size = viewNode.getSize();\r\n    const gl = viewNode.getContext();\r\n    model.framebuffer = _Framebuffer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance();\r\n    model.framebuffer.setOpenGLRenderWindow(viewNode);\r\n    model.framebuffer.create(...size);\r\n    model.framebuffer.saveCurrentBindingsAndBuffers();\r\n    model.framebuffer.bind();\r\n    model.translucentRGBATexture = _Texture_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n    model.translucentRGBATexture.setInternalFormat(gl.RGBA16F);\r\n    model.translucentRGBATexture.setFormat(gl.RGBA);\r\n    model.translucentRGBATexture.setOpenGLDataType(gl.HALF_FLOAT);\r\n    model.translucentRGBATexture.setOpenGLRenderWindow(viewNode);\r\n    model.translucentRGBATexture.create2DFromRaw(size[0], size[1], 4, 'Float32Array', null);\r\n    model.translucentRTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n    model.translucentRTexture.setInternalFormat(gl.R16F);\r\n    model.translucentRTexture.setFormat(gl.RED);\r\n    model.translucentRTexture.setOpenGLDataType(gl.HALF_FLOAT);\r\n    model.translucentRTexture.setOpenGLRenderWindow(viewNode);\r\n    model.translucentRTexture.create2DFromRaw(size[0], size[1], 1, 'Float32Array', null);\r\n    model.translucentZTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n    model.translucentZTexture.setOpenGLRenderWindow(viewNode);\r\n    model.translucentZTexture.createDepthFromRaw(size[0], size[1], 'Float32Array', null);\r\n    model.framebuffer.setColorBuffer(model.translucentRGBATexture, 0);\r\n    model.framebuffer.setColorBuffer(model.translucentRTexture, 1);\r\n    model.framebuffer.setDepthBuffer(model.translucentZTexture);\r\n  };\r\n  publicAPI.createCopyShader = viewNode => {\r\n    model.copyShader = viewNode.getShaderCache().readyShaderProgramArray(['//VTK::System::Dec', 'attribute vec4 vertexDC;', 'attribute vec2 tcoordTC;', 'varying vec2 tcoord;', 'void main() { tcoord = tcoordTC; gl_Position = vertexDC; }'].join('\\n'), oitpFragTemplate, '');\r\n  };\r\n  publicAPI.createVBO = viewNode => {\r\n    const gl = viewNode.getContext();\r\n    model.tris.setOpenGLRenderWindow(viewNode);\r\n    publicAPI.createVertexBuffer();\r\n    const program = model.copyShader;\r\n    // prepare the vertex and triangle data for the image plane to render to\r\n\r\n    model.tris.getCABO().bind();\r\n    if (!model.copyVAO.addAttributeArray(program, model.tris.getCABO(), 'vertexDC', model.tris.getCABO().getVertexOffset(), model.tris.getCABO().getStride(), gl.FLOAT, 3, gl.FALSE)) {\r\n      vtkErrorMacro('Error setting vertexDC in copy shader VAO.');\r\n    }\r\n    if (!model.copyVAO.addAttributeArray(program, model.tris.getCABO(), 'tcoordTC', model.tris.getCABO().getTCoordOffset(), model.tris.getCABO().getStride(), gl.FLOAT, 2, gl.FALSE)) {\r\n      vtkErrorMacro('Error setting vertexDC in copy shader VAO.');\r\n    }\r\n  };\r\n  publicAPI.traverse = (viewNode, renNode, forwardPass) => {\r\n    if (model.deleted) {\r\n      return;\r\n    }\r\n    const size = viewNode.getSize();\r\n    const gl = viewNode.getContext();\r\n\r\n    // if we lack the webgl2 and half floatsupport just do\r\n    // basic alpha blending\r\n    model._supported = false;\r\n    if (renNode.getSelector() || !gl || !viewNode.getWebgl2() || !gl.getExtension('EXT_color_buffer_half_float') && !gl.getExtension('EXT_color_buffer_float')) {\r\n      publicAPI.setCurrentOperation('translucentPass');\r\n      renNode.traverse(publicAPI);\r\n      return;\r\n    }\r\n    model._supported = true;\r\n\r\n    // prepare framebuffer // allocate framebuffer if needed and bind it\r\n    if (model.framebuffer === null) {\r\n      publicAPI.createFramebuffer(viewNode);\r\n    } else {\r\n      const fbSize = model.framebuffer.getSize();\r\n      if (fbSize === null || fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\r\n        model.framebuffer.releaseGraphicsResources();\r\n        model.translucentRGBATexture.releaseGraphicsResources(viewNode);\r\n        model.translucentRTexture.releaseGraphicsResources(viewNode);\r\n        model.translucentZTexture.releaseGraphicsResources(viewNode);\r\n        publicAPI.createFramebuffer(viewNode);\r\n      } else {\r\n        // store framebuffer bindings to restore them later\r\n        model.framebuffer.saveCurrentBindingsAndBuffers();\r\n        model.framebuffer.bind();\r\n      }\r\n    }\r\n    gl.drawBuffers([gl.COLOR_ATTACHMENT0]);\r\n    gl.clearBufferfv(gl.COLOR, 0, [0.0, 0.0, 0.0, 0.0]);\r\n    gl.clearBufferfv(gl.DEPTH, 0, [1.0]);\r\n    gl.colorMask(false, false, false, false);\r\n\r\n    // rerender the opaque pass to set the depth buffer\r\n    // TODO remove when webgl1 is deprecated and instead\r\n    // have the forward pass use a texture backed zbuffer\r\n    if (forwardPass.getOpaqueActorCount() > 0) {\r\n      // Don't use zBufferPass as it will also render the depth of translucent actors\r\n      forwardPass.setCurrentOperation('opaqueZBufferPass');\r\n      renNode.traverse(forwardPass);\r\n    }\r\n    gl.colorMask(true, true, true, true);\r\n    gl.drawBuffers([gl.COLOR_ATTACHMENT0, gl.COLOR_ATTACHMENT1]);\r\n\r\n    // make sure to clear the entire framebuffer as we will\r\n    // be blitting the entire thing all of it needs good initial values\r\n    gl.viewport(0, 0, size[0], size[1]);\r\n    gl.scissor(0, 0, size[0], size[1]);\r\n    gl.clearBufferfv(gl.COLOR, 0, [0.0, 0.0, 0.0, 1.0]);\r\n    gl.clearBufferfv(gl.COLOR, 1, [0.0, 0.0, 0.0, 0.0]);\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.enable(gl.BLEND);\r\n\r\n    // basic gist is we accumulate color into RGB We compute final opacity\r\n    // into A We store accumulated opacity into R of the R texture.\r\n    gl.blendFuncSeparate(gl.ONE, gl.ONE, gl.ZERO, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n    // now do the translucent rendering\r\n    publicAPI.setCurrentOperation('translucentPass');\r\n    renNode.traverse(publicAPI);\r\n    gl.drawBuffers([gl.NONE]);\r\n    model.framebuffer.restorePreviousBindingsAndBuffers();\r\n    // gl.drawBuffers([gl.BACK]);\r\n\r\n    // make sure the copy shader is ready\r\n    if (model.copyShader === null) {\r\n      publicAPI.createCopyShader(viewNode);\r\n    } else {\r\n      viewNode.getShaderCache().readyShaderProgram(model.copyShader);\r\n    }\r\n\r\n    // make sure we have a VAO\r\n    if (!model.copyVAO) {\r\n      model.copyVAO = _VertexArrayObject_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].newInstance();\r\n      model.copyVAO.setOpenGLRenderWindow(viewNode);\r\n    }\r\n    model.copyVAO.bind();\r\n\r\n    // make sure the VBO is up to date\r\n    if (model.VBOBuildTime.getMTime() < publicAPI.getMTime()) {\r\n      publicAPI.createVBO(viewNode);\r\n    }\r\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n    gl.depthMask(false);\r\n    gl.depthFunc(gl.ALWAYS);\r\n    gl.viewport(0, 0, size[0], size[1]);\r\n    gl.scissor(0, 0, size[0], size[1]);\r\n\r\n    // activate texture\r\n    model.translucentRGBATexture.activate();\r\n    model.copyShader.setUniformi('translucentRGBATexture', model.translucentRGBATexture.getTextureUnit());\r\n    model.translucentRTexture.activate();\r\n    model.copyShader.setUniformi('translucentRTexture', model.translucentRTexture.getTextureUnit());\r\n\r\n    // render quad\r\n    gl.drawArrays(gl.TRIANGLES, 0, model.tris.getCABO().getElementCount());\r\n    gl.depthMask(true);\r\n    gl.depthFunc(gl.LEQUAL);\r\n    model.translucentRGBATexture.deactivate();\r\n    model.translucentRTexture.deactivate();\r\n\r\n    // restore scissor + viewport from renderer\r\n    const ts = renNode.getTiledSizeAndOrigin();\r\n    gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\r\n    gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\r\n  };\r\n  publicAPI.getShaderReplacement = () => {\r\n    if (model._supported) {\r\n      return translucentShaderReplacement;\r\n    }\r\n    return null;\r\n  };\r\n  publicAPI.releaseGraphicsResources = viewNode => {\r\n    if (model.framebuffer) {\r\n      model.framebuffer.releaseGraphicsResources(viewNode);\r\n      model.framebuffer = null;\r\n    }\r\n    if (model.translucentRGBATexture) {\r\n      model.translucentRGBATexture.releaseGraphicsResources(viewNode);\r\n      model.translucentRGBATexture = null;\r\n    }\r\n    if (model.translucentRTexture) {\r\n      model.translucentRTexture.releaseGraphicsResources(viewNode);\r\n      model.translucentRTexture = null;\r\n    }\r\n    if (model.translucentZTexture) {\r\n      model.translucentZTexture.releaseGraphicsResources(viewNode);\r\n      model.translucentZTexture = null;\r\n    }\r\n    if (model.copyVAO) {\r\n      model.copyVAO.releaseGraphicsResources(viewNode);\r\n      model.copyVAO = null;\r\n    }\r\n    if (model.copyShader) {\r\n      model.copyShader.releaseGraphicsResources(viewNode);\r\n      model.copyShader = null;\r\n    }\r\n    if (model.tris) {\r\n      model.tris.releaseGraphicsResources(viewNode);\r\n      model.tris = null;\r\n    }\r\n    publicAPI.modified();\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  framebuffer: null,\r\n  copyShader: null,\r\n  tris: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].extend(publicAPI, model, initialValues);\r\n  model.VBOBuildTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.VBOBuildTime, {\r\n    mtime: 0\r\n  });\r\n  model.tris = _Helper_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance();\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['framebuffer']);\r\n\r\n  // Object methods\r\n  vtkOpenGLOrderIndependentTranslucentPass(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkOpenGLOrderIndependentTranslucentPass');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkOpenGLOrderIndependentTranslucentPass$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/OrderIndependentTranslucentPass.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkPixelSpaceCallbackMapper),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js\");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ViewNodeFactory.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js\");\n\r\n\r\n\r\n\r\n// import { mat4, vec3 }     from 'gl-matrix';\r\nconst {\r\n  vtkDebugMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.c;\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLPixelSpaceCallbackMapper methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkOpenGLPixelSpaceCallbackMapper(publicAPI, model) {\r\n  model.classHierarchy.push('vtkOpenGLPixelSpaceCallbackMapper');\r\n  publicAPI.opaquePass = (prepass, renderPass) => {\r\n    model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\r\n    model._openGLRenderWindow = model._openGLRenderer.getParent();\r\n    const aspectRatio = model._openGLRenderer.getAspectRatio();\r\n    const camera = model._openGLRenderer ? model._openGLRenderer.getRenderable().getActiveCamera() : null;\r\n    const tsize = model._openGLRenderer.getTiledSizeAndOrigin();\r\n    let texels = null;\r\n    if (model.renderable.getUseZValues()) {\r\n      const zbt = renderPass.getZBufferTexture();\r\n      const width = Math.floor(zbt.getWidth());\r\n      const height = Math.floor(zbt.getHeight());\r\n      const gl = model._openGLRenderWindow.getContext();\r\n      zbt.bind();\r\n\r\n      // Here we need to use vtkFramebuffer to save current settings (bindings/buffers)\r\n      const fb = renderPass.getFramebuffer();\r\n      if (!fb) {\r\n        vtkDebugMacro('No framebuffer to save/restore');\r\n      } else {\r\n        // save framebuffer settings\r\n        fb.saveCurrentBindingsAndBuffers();\r\n      }\r\n      const framebuffer = gl.createFramebuffer();\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, zbt.getHandle(), 0);\r\n      if (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE) {\r\n        texels = new Uint8Array(width * height * 4);\r\n        gl.viewport(0, 0, width, height);\r\n        gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, texels);\r\n      }\r\n\r\n      // Now we need to restore framebuffer bindings/buffers\r\n      if (fb) {\r\n        fb.restorePreviousBindingsAndBuffers();\r\n      }\r\n      gl.deleteFramebuffer(framebuffer);\r\n    }\r\n    model.renderable.invokeCallback(model.renderable.getInputData(), camera, aspectRatio, tsize, texels);\r\n  };\r\n  publicAPI.queryPass = (prepass, renderPass) => {\r\n    if (prepass) {\r\n      if (model.renderable.getUseZValues()) {\r\n        renderPass.requestDepth();\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].extend(publicAPI, model, initialValues);\r\n\r\n  // Object methods\r\n  vtkOpenGLPixelSpaceCallbackMapper(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, 'vtkOpenGLPixelSpaceCallbackMapper');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkPixelSpaceCallbackMapper = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to OpenGL backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__.registerOverride)('vtkPixelSpaceCallbackMapper', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkOpenGLPolyDataMapper$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat3.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Helper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Helper.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Helper.js\");\n/* harmony import */ var _Core_Mapper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/Mapper.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js\");\n/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Texture.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture.js\");\n/* harmony import */ var _Core_Prop_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Core/Prop.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Prop.js\");\n/* harmony import */ var _Core_Property_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Core/Property.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Property.js\");\n/* harmony import */ var _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ShaderProgram.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js\");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js\");\n/* harmony import */ var _glsl_vtkPolyDataVS_glsl_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./glsl/vtkPolyDataVS.glsl.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataVS.glsl.js\");\n/* harmony import */ var _glsl_vtkPolyDataFS_glsl_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./glsl/vtkPolyDataFS.glsl.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataFS.glsl.js\");\n/* harmony import */ var _ReplacementShaderMapper_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ReplacementShaderMapper.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ReplacementShaderMapper.js\");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ViewNodeFactory.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js\");\n/* harmony import */ var _HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./HardwareSelector/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector/Constants.js\");\n/* harmony import */ var _Common_DataModel_DataSet_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../Common/DataModel/DataSet.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  FieldAssociations\r\n} = _Common_DataModel_DataSet_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"];\r\n\r\n/* eslint-disable no-lonely-if */\r\n\r\nconst {\r\n  primTypes\r\n} = _Helper_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\nconst {\r\n  Representation,\r\n  Shading\r\n} = _Core_Property_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\r\nconst {\r\n  ScalarMode\r\n} = _Core_Mapper_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\r\nconst {\r\n  Filter,\r\n  Wrap\r\n} = _Texture_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.c;\r\nconst StartEvent = {\r\n  type: 'StartEvent'\r\n};\r\nconst EndEvent = {\r\n  type: 'EndEvent'\r\n};\r\nconst {\r\n  CoordinateSystem\r\n} = _Core_Prop_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLPolyDataMapper methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction getPickState(renderer) {\r\n  const selector = renderer.getSelector();\r\n  if (selector) {\r\n    return selector.getCurrentPass();\r\n  }\r\n  return _HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_13__.PassTypes.MIN_KNOWN_PASS - 1;\r\n}\r\nfunction vtkOpenGLPolyDataMapper(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkOpenGLPolyDataMapper');\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      model.currentRenderPass = null;\r\n      model.openGLActor = publicAPI.getFirstAncestorOfType('vtkOpenGLActor');\r\n      model._openGLRenderer = model.openGLActor.getFirstAncestorOfType('vtkOpenGLRenderer');\r\n      model._openGLRenderWindow = model._openGLRenderer.getParent();\r\n      model.openGLCamera = model._openGLRenderer.getViewNodeFor(model._openGLRenderer.getRenderable().getActiveCamera());\r\n    }\r\n  };\r\n\r\n  // Renders myself\r\n  publicAPI.translucentPass = (prepass, renderPass) => {\r\n    if (prepass) {\r\n      model.currentRenderPass = renderPass;\r\n      publicAPI.render();\r\n    }\r\n  };\r\n  publicAPI.zBufferPass = prepass => {\r\n    if (prepass) {\r\n      model.haveSeenDepthRequest = true;\r\n      model.renderDepth = true;\r\n      publicAPI.render();\r\n      model.renderDepth = false;\r\n    }\r\n  };\r\n  publicAPI.opaqueZBufferPass = prepass => publicAPI.zBufferPass(prepass);\r\n  publicAPI.opaquePass = prepass => {\r\n    if (prepass) {\r\n      publicAPI.render();\r\n    }\r\n  };\r\n  publicAPI.render = () => {\r\n    const ctx = model._openGLRenderWindow.getContext();\r\n    if (model.context !== ctx) {\r\n      model.context = ctx;\r\n      for (let i = primTypes.Start; i < primTypes.End; i++) {\r\n        model.primitives[i].setOpenGLRenderWindow(model._openGLRenderWindow);\r\n      }\r\n    }\r\n    const actor = model.openGLActor.getRenderable();\r\n    const ren = model._openGLRenderer.getRenderable();\r\n    publicAPI.renderPiece(ren, actor);\r\n  };\r\n  publicAPI.getShaderTemplate = (shaders, ren, actor) => {\r\n    shaders.Vertex = _glsl_vtkPolyDataVS_glsl_js__WEBPACK_IMPORTED_MODULE_9__.v;\r\n    shaders.Fragment = _glsl_vtkPolyDataFS_glsl_js__WEBPACK_IMPORTED_MODULE_10__.v;\r\n    shaders.Geometry = '';\r\n  };\r\n  publicAPI.replaceShaderColor = (shaders, ren, actor) => {\r\n    let VSSource = shaders.Vertex;\r\n    let GSSource = shaders.Geometry;\r\n    let FSSource = shaders.Fragment;\r\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\r\n\r\n    // create the material/color property declarations, and VS implementation\r\n    // these are always defined\r\n    let colorDec = ['uniform float ambient;', 'uniform float diffuse;', 'uniform float specular;', 'uniform float opacityUniform; // the fragment opacity', 'uniform vec3 ambientColorUniform;', 'uniform vec3 diffuseColorUniform;'];\r\n    // add more for specular\r\n    if (lastLightComplexity) {\r\n      colorDec = colorDec.concat(['uniform vec3 specularColorUniform;', 'uniform float specularPowerUniform;']);\r\n    }\r\n\r\n    // now handle the more complex fragment shader implementation\r\n    // the following are always defined variables.  We start\r\n    // by assigning a default value from the uniform\r\n    let colorImpl = ['vec3 ambientColor;', '  vec3 diffuseColor;', '  float opacity;'];\r\n    if (lastLightComplexity) {\r\n      colorImpl = colorImpl.concat(['  vec3 specularColor;', '  float specularPower;']);\r\n    }\r\n    colorImpl = colorImpl.concat(['  ambientColor = ambientColorUniform;', '  diffuseColor = diffuseColorUniform;', '  opacity = opacityUniform;']);\r\n    if (lastLightComplexity) {\r\n      colorImpl = colorImpl.concat(['  specularColor = specularColorUniform;', '  specularPower = specularPowerUniform;']);\r\n    }\r\n\r\n    // add scalar vertex coloring\r\n    if (model.lastBoundBO.getCABO().getColorComponents() !== 0 && !model.drawingEdges) {\r\n      colorDec = colorDec.concat(['varying vec4 vertexColorVSOutput;']);\r\n      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::Color::Dec', ['attribute vec4 scalarColor;', 'varying vec4 vertexColorVSOutput;']).result;\r\n      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::Color::Impl', ['vertexColorVSOutput =  scalarColor;']).result;\r\n      GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(GSSource, '//VTK::Color::Dec', ['in vec4 vertexColorVSOutput[];', 'out vec4 vertexColorGSOutput;']).result;\r\n      GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(GSSource, '//VTK::Color::Impl', ['vertexColorGSOutput = vertexColorVSOutput[i];']).result;\r\n    }\r\n    if (model.lastBoundBO.getCABO().getColorComponents() !== 0 && !model.drawingEdges) {\r\n      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Color::Impl', colorImpl.concat(['  diffuseColor = vertexColorVSOutput.rgb;', '  ambientColor = vertexColorVSOutput.rgb;', '  opacity = opacity*vertexColorVSOutput.a;'])).result;\r\n    } else {\r\n      if (model.renderable.getInterpolateScalarsBeforeMapping() && model.renderable.getColorCoordinates() && !model.drawingEdges) {\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Color::Impl', colorImpl.concat(['  vec4 texColor = texture2D(texture1, tcoordVCVSOutput.st);', '  diffuseColor = texColor.rgb;', '  ambientColor = texColor.rgb;', '  opacity = opacity*texColor.a;'])).result;\r\n      } else {\r\n        if (actor.getBackfaceProperty() && !model.drawingEdges) {\r\n          colorDec = colorDec.concat(['uniform float opacityUniformBF; // the fragment opacity', 'uniform float ambientIntensityBF; // the material ambient', 'uniform float diffuseIntensityBF; // the material diffuse', 'uniform vec3 ambientColorUniformBF; // ambient material color', 'uniform vec3 diffuseColorUniformBF; // diffuse material color']);\r\n          if (lastLightComplexity) {\r\n            colorDec = colorDec.concat(['uniform float specularIntensityBF; // the material specular intensity', 'uniform vec3 specularColorUniformBF; // intensity weighted color', 'uniform float specularPowerUniformBF;']);\r\n            colorImpl = colorImpl.concat(['if (gl_FrontFacing == false) {', '  ambientColor = ambientIntensityBF * ambientColorUniformBF;', '  diffuseColor = diffuseIntensityBF * diffuseColorUniformBF;', '  specularColor = specularIntensityBF * specularColorUniformBF;', '  specularPower = specularPowerUniformBF;', '  opacity = opacityUniformBF; }']);\r\n          } else {\r\n            colorImpl = colorImpl.concat(['if (gl_FrontFacing == false) {', '  ambientColor = ambientIntensityBF * ambientColorUniformBF;', '  diffuseColor = diffuseIntensityBF * diffuseColorUniformBF;', '  opacity = opacityUniformBF; }']);\r\n          }\r\n        }\r\n        if (model.haveCellScalars && !model.drawingEdges) {\r\n          colorDec = colorDec.concat(['uniform samplerBuffer texture1;']);\r\n        }\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Color::Impl', colorImpl).result;\r\n      }\r\n    }\r\n    FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Color::Dec', colorDec).result;\r\n    shaders.Vertex = VSSource;\r\n    shaders.Geometry = GSSource;\r\n    shaders.Fragment = FSSource;\r\n  };\r\n  publicAPI.replaceShaderLight = (shaders, ren, actor) => {\r\n    let FSSource = shaders.Fragment;\r\n\r\n    // check for shadow maps\r\n    const shadowFactor = '';\r\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\r\n    const lastLightCount = model.lastBoundBO.getReferenceByName('lastLightCount');\r\n    let sstring = [];\r\n    switch (lastLightComplexity) {\r\n      case 0:\r\n        // no lighting or RENDER_VALUES\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Light::Impl', ['  gl_FragData[0] = vec4(ambientColor * ambient + diffuseColor * diffuse, opacity);', '  //VTK::Light::Impl'], false).result;\r\n        break;\r\n      case 1:\r\n        // headlight\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Light::Impl', ['  float df = max(0.0, normalVCVSOutput.z);', '  float sf = pow(df, specularPower);', '  vec3 diffuseL = df * diffuseColor;', '  vec3 specularL = sf * specularColor;', '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);', '  //VTK::Light::Impl'], false).result;\r\n        break;\r\n      case 2:\r\n        // light kit\r\n        for (let lc = 0; lc < lastLightCount; ++lc) {\r\n          sstring = sstring.concat([`uniform vec3 lightColor${lc};`, `uniform vec3 lightDirectionVC${lc}; // normalized`, `uniform vec3 lightHalfAngleVC${lc}; // normalized`]);\r\n        }\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Light::Dec', sstring).result;\r\n        sstring = ['vec3 diffuseL = vec3(0,0,0);', '  vec3 specularL = vec3(0,0,0);', '  float df;'];\r\n        for (let lc = 0; lc < lastLightCount; ++lc) {\r\n          sstring = sstring.concat([`  df = max(0.0, dot(normalVCVSOutput, -lightDirectionVC${lc}));`, `  diffuseL += ((df${shadowFactor}) * lightColor${lc});`, `  if (dot(normalVCVSOutput, lightDirectionVC${lc}) < 0.0)`, '    {', `    float sf = sign(df)*pow(max(1e-5,\r\n                                              dot(reflect(lightDirectionVC${lc},normalVCVSOutput),\r\n                                                  normalize(-vertexVC.xyz))),\r\n                                         specularPower);`, `    specularL += (sf${shadowFactor} * lightColor${lc});`, '    }']);\r\n        }\r\n        sstring = sstring.concat(['  diffuseL = diffuseL * diffuseColor;', '  specularL = specularL * specularColor;', '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);', '  //VTK::Light::Impl']);\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Light::Impl', sstring, false).result;\r\n        break;\r\n      case 3:\r\n        // positional\r\n        for (let lc = 0; lc < lastLightCount; ++lc) {\r\n          sstring = sstring.concat([`uniform vec3 lightColor${lc};`, `uniform vec3 lightDirectionVC${lc}; // normalized`, `uniform vec3 lightHalfAngleVC${lc}; // normalized`, `uniform vec3 lightPositionVC${lc};`, `uniform vec3 lightAttenuation${lc};`, `uniform float lightConeAngle${lc};`, `uniform float lightExponent${lc};`, `uniform int lightPositional${lc};`]);\r\n        }\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Light::Dec', sstring).result;\r\n        sstring = ['vec3 diffuseL = vec3(0,0,0);', '  vec3 specularL = vec3(0,0,0);', '  vec3 vertLightDirectionVC;', '  float attenuation;', '  float df;'];\r\n        for (let lc = 0; lc < lastLightCount; ++lc) {\r\n          sstring = sstring.concat(['  attenuation = 1.0;', `  if (lightPositional${lc} == 0)`, '    {', `      vertLightDirectionVC = lightDirectionVC${lc};`, '    }', '  else', '    {', `    vertLightDirectionVC = vertexVC.xyz - lightPositionVC${lc};`, '    float distanceVC = length(vertLightDirectionVC);', '    vertLightDirectionVC = normalize(vertLightDirectionVC);', '    attenuation = 1.0 /', `      (lightAttenuation${lc}.x`, `       + lightAttenuation${lc}.y * distanceVC`, `       + lightAttenuation${lc}.z * distanceVC * distanceVC);`, '    // per OpenGL standard cone angle is 90 or less for a spot light', `    if (lightConeAngle${lc} <= 90.0)`, '      {', `      float coneDot = dot(vertLightDirectionVC, lightDirectionVC${lc});`, '      // if inside the cone', `      if (coneDot >= cos(radians(lightConeAngle${lc})))`, '        {', `        attenuation = attenuation * pow(coneDot, lightExponent${lc});`, '        }', '      else', '        {', '        attenuation = 0.0;', '        }', '      }', '    }', '    df = max(0.0, attenuation*dot(normalVCVSOutput, -vertLightDirectionVC));', `    diffuseL += ((df${shadowFactor}) * lightColor${lc});`, '    if (dot(normalVCVSOutput, vertLightDirectionVC) < 0.0)', '      {', `      float sf = sign(df)*attenuation*pow(max(1e-5,\r\n                                                           dot(reflect(lightDirectionVC${lc},\r\n                                                                       normalVCVSOutput),\r\n                                                               normalize(-vertexVC.xyz))),\r\n                                                       specularPower);`, `    specularL += ((sf${shadowFactor}) * lightColor${lc});`, '    }']);\r\n        }\r\n        sstring = sstring.concat(['  diffuseL = diffuseL * diffuseColor;', '  specularL = specularL * specularColor;', '  gl_FragData[0] = vec4(ambientColor * ambient + diffuseL * diffuse + specularL * specular, opacity);', '  //VTK::Light::Impl']);\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Light::Impl', sstring, false).result;\r\n        break;\r\n      default:\r\n        vtkErrorMacro('bad light complexity');\r\n    }\r\n    shaders.Fragment = FSSource;\r\n  };\r\n  publicAPI.replaceShaderNormal = (shaders, ren, actor) => {\r\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\r\n    if (lastLightComplexity > 0) {\r\n      let VSSource = shaders.Vertex;\r\n      let GSSource = shaders.Geometry;\r\n      let FSSource = shaders.Fragment;\r\n      if (model.lastBoundBO.getCABO().getNormalOffset()) {\r\n        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::Normal::Dec', ['attribute vec3 normalMC;', 'uniform mat3 normalMatrix;', 'varying vec3 normalVCVSOutput;']).result;\r\n        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::Normal::Impl', ['normalVCVSOutput = normalMatrix * normalMC;']).result;\r\n        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(GSSource, '//VTK::Normal::Dec', ['in vec3 normalVCVSOutput[];', 'out vec3 normalVCGSOutput;']).result;\r\n        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(GSSource, '//VTK::Normal::Impl', ['normalVCGSOutput = normalVCVSOutput[i];']).result;\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Normal::Dec', ['varying vec3 normalVCVSOutput;']).result;\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Normal::Impl', ['vec3 normalVCVSOutput = normalize(normalVCVSOutput);',\r\n        //  if (!gl_FrontFacing) does not work in intel hd4000 mac\r\n        //  if (int(gl_FrontFacing) == 0) does not work on mesa\r\n        '  if (gl_FrontFacing == false) { normalVCVSOutput = -normalVCVSOutput; }']).result;\r\n      } else {\r\n        if (model.haveCellNormals) {\r\n          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Normal::Dec', ['uniform mat3 normalMatrix;', 'uniform samplerBuffer textureN;']).result;\r\n          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Normal::Impl', ['vec3 normalVCVSOutput = normalize(normalMatrix *', '    texelFetchBuffer(textureN, gl_PrimitiveID + PrimitiveIDOffset).xyz);', '  if (gl_FrontFacing == false) { normalVCVSOutput = -normalVCVSOutput; }']).result;\r\n        } else {\r\n          if (model.lastBoundBO.getOpenGLMode(actor.getProperty().getRepresentation()) === model.context.LINES) {\r\n            // generate a normal for lines, it will be perpendicular to the line\r\n            // and maximally aligned with the camera view direction\r\n            // no clue if this is the best way to do this.\r\n            // the code below has been optimized a bit so what follows is\r\n            // an explanation of the basic approach. Compute the gradient of the line\r\n            // with respect to x and y, the the larger of the two\r\n            // cross that with the camera view direction. That gives a vector\r\n            // orthogonal to the camera view and the line. Note that the line and the camera\r\n            // view are probably not orthogonal. Which is why when we cross result that with\r\n            // the line gradient again we get a reasonable normal. It will be othogonal to\r\n            // the line (which is a plane but maximally aligned with the camera view.\r\n            FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::UniformFlow::Impl', ['  vec3 fdx = dFdx(vertexVC.xyz);', '  vec3 fdy = dFdy(vertexVC.xyz);', '  //VTK::UniformFlow::Impl'] // For further replacements\r\n            ).result;\r\n            FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Normal::Impl', ['vec3 normalVCVSOutput;', '  if (abs(fdx.x) > 0.0)', '    { fdx = normalize(fdx); normalVCVSOutput = normalize(cross(vec3(fdx.y, -fdx.x, 0.0), fdx)); }', '  else { fdy = normalize(fdy); normalVCVSOutput = normalize(cross(vec3(fdy.y, -fdy.x, 0.0), fdy));}']).result;\r\n          } else {\r\n            FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Normal::Dec', ['uniform int cameraParallel;']).result;\r\n            FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::UniformFlow::Impl', [\r\n            // '  vec3 fdx = vec3(dFdx(vertexVC.x),dFdx(vertexVC.y),dFdx(vertexVC.z));',\r\n            // '  vec3 fdy = vec3(dFdy(vertexVC.x),dFdy(vertexVC.y),dFdy(vertexVC.z));',\r\n            '  vec3 fdx = dFdx(vertexVC.xyz);', '  vec3 fdy = dFdy(vertexVC.xyz);', '  //VTK::UniformFlow::Impl'] // For further replacements\r\n            ).result;\r\n            FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Normal::Impl', ['  fdx = normalize(fdx);', '  fdy = normalize(fdy);', '  vec3 normalVCVSOutput = normalize(cross(fdx,fdy));',\r\n            // the code below is faster, but does not work on some devices\r\n            // 'vec3 normalVC = normalize(cross(dFdx(vertexVC.xyz), dFdy(vertexVC.xyz)));',\r\n            '  if (cameraParallel == 1 && normalVCVSOutput.z < 0.0) { normalVCVSOutput = -1.0*normalVCVSOutput; }', '  if (cameraParallel == 0 && dot(normalVCVSOutput,vertexVC.xyz) > 0.0) { normalVCVSOutput = -1.0*normalVCVSOutput; }']).result;\r\n          }\r\n        }\r\n      }\r\n      shaders.Vertex = VSSource;\r\n      shaders.Geometry = GSSource;\r\n      shaders.Fragment = FSSource;\r\n    }\r\n  };\r\n  publicAPI.replaceShaderPositionVC = (shaders, ren, actor) => {\r\n    // replace common shader code\r\n    model.lastBoundBO.replaceShaderPositionVC(shaders, ren, actor);\r\n    let VSSource = shaders.Vertex;\r\n    let GSSource = shaders.Geometry;\r\n    let FSSource = shaders.Fragment;\r\n\r\n    // do we need the vertex in the shader in View Coordinates\r\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\r\n    if (lastLightComplexity > 0) {\r\n      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::PositionVC::Dec', ['varying vec4 vertexVCVSOutput;']).result;\r\n      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::PositionVC::Impl', ['vertexVCVSOutput = MCVCMatrix * vertexMC;', '  gl_Position = MCPCMatrix * vertexMC;']).result;\r\n      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::Camera::Dec', ['uniform mat4 MCPCMatrix;', 'uniform mat4 MCVCMatrix;']).result;\r\n      GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(GSSource, '//VTK::PositionVC::Dec', ['in vec4 vertexVCVSOutput[];', 'out vec4 vertexVCGSOutput;']).result;\r\n      GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(GSSource, '//VTK::PositionVC::Impl', ['vertexVCGSOutput = vertexVCVSOutput[i];']).result;\r\n      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::PositionVC::Dec', ['varying vec4 vertexVCVSOutput;']).result;\r\n      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::PositionVC::Impl', ['vec4 vertexVC = vertexVCVSOutput;']).result;\r\n    } else {\r\n      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::Camera::Dec', ['uniform mat4 MCPCMatrix;']).result;\r\n      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::PositionVC::Impl', ['  gl_Position = MCPCMatrix * vertexMC;']).result;\r\n    }\r\n    shaders.Vertex = VSSource;\r\n    shaders.Geometry = GSSource;\r\n    shaders.Fragment = FSSource;\r\n  };\r\n  publicAPI.replaceShaderTCoord = (shaders, ren, actor) => {\r\n    if (model.lastBoundBO.getCABO().getTCoordOffset()) {\r\n      let VSSource = shaders.Vertex;\r\n      let GSSource = shaders.Geometry;\r\n      let FSSource = shaders.Fragment;\r\n      if (model.drawingEdges) {\r\n        return;\r\n      }\r\n      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::TCoord::Impl', 'tcoordVCVSOutput = tcoordMC;').result;\r\n\r\n      // we only handle the first texture by default\r\n      // additional textures are activated and we set the uniform\r\n      // for the texture unit they are assigned to, but you have to\r\n      // add in the shader code to do something with them\r\n      const tus = model.openGLActor.getActiveTextures();\r\n      let tNumComp = 2;\r\n      let tcdim = 2;\r\n      if (tus && tus.length > 0) {\r\n        tNumComp = tus[0].getComponents();\r\n        if (tus[0].getTarget() === model.context.TEXTURE_CUBE_MAP) {\r\n          tcdim = 3;\r\n        }\r\n      }\r\n      if (model.renderable.getColorTextureMap()) {\r\n        tNumComp = model.renderable.getColorTextureMap().getPointData().getScalars().getNumberOfComponents();\r\n        tcdim = 2;\r\n      }\r\n      if (tcdim === 2) {\r\n        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::TCoord::Dec', 'attribute vec2 tcoordMC; varying vec2 tcoordVCVSOutput;').result;\r\n        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(GSSource, '//VTK::TCoord::Dec', ['in vec2 tcoordVCVSOutput[];', 'out vec2 tcoordVCGSOutput;']).result;\r\n        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(GSSource, '//VTK::TCoord::Impl', 'tcoordVCGSOutput = tcoordVCVSOutput[i];').result;\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::TCoord::Dec', ['varying vec2 tcoordVCVSOutput;', 'uniform sampler2D texture1;']).result;\r\n        if (tus && tus.length >= 1) {\r\n          switch (tNumComp) {\r\n            case 1:\r\n              FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;']).result;\r\n              break;\r\n            case 2:\r\n              FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;', '  opacity = opacity * tcolor.g;']).result;\r\n              break;\r\n            default:\r\n              FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = texture2D(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.rgb;', '  diffuseColor = diffuseColor*tcolor.rgb;', '  opacity = opacity * tcolor.a;']).result;\r\n          }\r\n        }\r\n      } else {\r\n        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::TCoord::Dec', 'attribute vec3 tcoordMC; varying vec3 tcoordVCVSOutput;').result;\r\n        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(GSSource, '//VTK::TCoord::Dec', ['in vec3 tcoordVCVSOutput[];', 'out vec3 tcoordVCGSOutput;']).result;\r\n        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(GSSource, '//VTK::TCoord::Impl', 'tcoordVCGSOutput = tcoordVCVSOutput[i];').result;\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::TCoord::Dec', ['varying vec3 tcoordVCVSOutput;', 'uniform samplerCube texture1;']).result;\r\n        switch (tNumComp) {\r\n          case 1:\r\n            FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = textureCube(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;']).result;\r\n            break;\r\n          case 2:\r\n            FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = textureCube(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.r;', '  diffuseColor = diffuseColor*tcolor.r;', '  opacity = opacity * tcolor.g;']).result;\r\n            break;\r\n          default:\r\n            FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::TCoord::Impl', ['  vec4 tcolor = textureCube(texture1, tcoordVCVSOutput);', '  ambientColor = ambientColor*tcolor.rgb;', '  diffuseColor = diffuseColor*tcolor.rgb;', '  opacity = opacity * tcolor.a;']).result;\r\n        }\r\n      }\r\n      shaders.Vertex = VSSource;\r\n      shaders.Geometry = GSSource;\r\n      shaders.Fragment = FSSource;\r\n    }\r\n  };\r\n  publicAPI.replaceShaderClip = (shaders, ren, actor) => {\r\n    let VSSource = shaders.Vertex;\r\n    let FSSource = shaders.Fragment;\r\n    if (model.renderable.getNumberOfClippingPlanes()) {\r\n      const numClipPlanes = model.renderable.getNumberOfClippingPlanes();\r\n      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', `uniform vec4 clipPlanes[${numClipPlanes}];`, `varying float clipDistancesVSOutput[${numClipPlanes}];`]).result;\r\n      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::Clip::Impl', [`for (int planeNum = 0; planeNum < ${numClipPlanes}; planeNum++)`, '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    clipDistancesVSOutput[planeNum] = dot(clipPlanes[planeNum], vertexMC);', '    }']).result;\r\n      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Clip::Dec', ['uniform int numClipPlanes;', `varying float clipDistancesVSOutput[${numClipPlanes}];`]).result;\r\n      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Clip::Impl', [`for (int planeNum = 0; planeNum < ${numClipPlanes}; planeNum++)`, '    {', '    if (planeNum >= numClipPlanes)', '        {', '        break;', '        }', '    if (clipDistancesVSOutput[planeNum] < 0.0) discard;', '    }']).result;\r\n    }\r\n    shaders.Vertex = VSSource;\r\n    shaders.Fragment = FSSource;\r\n  };\r\n  publicAPI.getCoincidentParameters = (ren, actor) => {\r\n    // 1. ResolveCoincidentTopology is On and non zero for this primitive\r\n    // type\r\n    let cp = {\r\n      factor: 0.0,\r\n      offset: 0.0\r\n    };\r\n    const prop = actor.getProperty();\r\n    if (model.renderable.getResolveCoincidentTopology() || prop.getEdgeVisibility() && prop.getRepresentation() === Representation.SURFACE) {\r\n      const primType = model.lastBoundBO.getPrimitiveType();\r\n      if (primType === primTypes.Points || prop.getRepresentation() === Representation.POINTS) {\r\n        cp = model.renderable.getCoincidentTopologyPointOffsetParameter();\r\n      } else if (primType === primTypes.Lines || prop.getRepresentation() === Representation.WIREFRAME) {\r\n        cp = model.renderable.getCoincidentTopologyLineOffsetParameters();\r\n      } else if (primType === primTypes.Tris || primType === primTypes.TriStrips) {\r\n        cp = model.renderable.getCoincidentTopologyPolygonOffsetParameters();\r\n      }\r\n      if (primType === primTypes.TrisEdges || primType === primTypes.TriStripsEdges) {\r\n        cp = model.renderable.getCoincidentTopologyPolygonOffsetParameters();\r\n        cp.factor /= 2.0;\r\n        cp.offset /= 2.0;\r\n      }\r\n    }\r\n\r\n    // hardware picking always offset due to saved zbuffer\r\n    // This gets you above the saved surface depth buffer.\r\n    const selector = model._openGLRenderer.getSelector();\r\n    if (selector && selector.getFieldAssociation() === FieldAssociations.FIELD_ASSOCIATION_POINTS) {\r\n      cp.offset -= 2.0;\r\n    }\r\n    return cp;\r\n  };\r\n  publicAPI.replaceShaderPicking = (shaders, ren, actor) => {\r\n    let FSSource = shaders.Fragment;\r\n    let VSSource = shaders.Vertex;\r\n    FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Picking::Dec', ['uniform int picking;', '//VTK::Picking::Dec']).result;\r\n    if (!model._openGLRenderer.getSelector()) {\r\n      return;\r\n    }\r\n    if (model.lastSelectionState === _HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_13__.PassTypes.ID_LOW24 || model.lastSelectionState === _HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_13__.PassTypes.ID_HIGH24) {\r\n      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::Picking::Dec', ['flat out int vertexIDVSOutput;\\n', 'uniform int VertexIDOffset;\\n']).result;\r\n      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::Picking::Impl', '  vertexIDVSOutput = gl_VertexID + VertexIDOffset;\\n').result;\r\n      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Picking::Dec', 'flat in int vertexIDVSOutput;\\n').result;\r\n      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Picking::Impl', ['  int idx = vertexIDVSOutput;', '//VTK::Picking::Impl']).result;\r\n    }\r\n    switch (model.lastSelectionState) {\r\n      case _HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_13__.PassTypes.ID_LOW24:\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Picking::Impl', '  gl_FragData[0] = vec4(float(idx%256)/255.0, float((idx/256)%256)/255.0, float((idx/65536)%256)/255.0, 1.0);').result;\r\n        break;\r\n      case _HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_13__.PassTypes.ID_HIGH24:\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Picking::Impl', '  gl_FragData[0] = vec4(float(idx)/255.0, 0.0, 0.0, 1.0);').result;\r\n        break;\r\n      default:\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Picking::Dec', 'uniform vec3 mapperIndex;').result;\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Picking::Impl', '  gl_FragData[0] = picking != 0 ? vec4(mapperIndex,1.0) : gl_FragData[0];').result;\r\n    }\r\n    shaders.Fragment = FSSource;\r\n    shaders.Vertex = VSSource;\r\n  };\r\n  publicAPI.replaceShaderValues = (shaders, ren, actor) => {\r\n    publicAPI.replaceShaderColor(shaders, ren, actor);\r\n    publicAPI.replaceShaderNormal(shaders, ren, actor);\r\n    publicAPI.replaceShaderLight(shaders, ren, actor);\r\n    publicAPI.replaceShaderTCoord(shaders, ren, actor);\r\n    publicAPI.replaceShaderPicking(shaders, ren, actor);\r\n    publicAPI.replaceShaderClip(shaders, ren, actor);\r\n    publicAPI.replaceShaderCoincidentOffset(shaders, ren, actor);\r\n    publicAPI.replaceShaderPositionVC(shaders, ren, actor);\r\n    if (model.haveSeenDepthRequest) {\r\n      let FSSource = shaders.Fragment;\r\n      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::ZBuffer::Dec', 'uniform int depthRequest;').result;\r\n      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::ZBuffer::Impl', ['if (depthRequest == 1) {', 'float iz = floor(gl_FragCoord.z*65535.0 + 0.1);', 'float rf = floor(iz/256.0)/255.0;', 'float gf = mod(iz,256.0)/255.0;', 'gl_FragData[0] = vec4(rf, gf, 0.0, 1.0); }']).result;\r\n      shaders.Fragment = FSSource;\r\n    }\r\n  };\r\n  publicAPI.getNeedToRebuildShaders = (cellBO, ren, actor) => {\r\n    let lightComplexity = 0;\r\n    let numberOfLights = 0;\r\n    const primType = cellBO.getPrimitiveType();\r\n    const poly = model.currentInput;\r\n\r\n    // different algo from C++ as of 5/2019\r\n    let needLighting = false;\r\n    const pointNormals = poly.getPointData().getNormals();\r\n    const cellNormals = poly.getCellData().getNormals();\r\n    const flat = actor.getProperty().getInterpolation() === Shading.FLAT;\r\n    const representation = actor.getProperty().getRepresentation();\r\n    const mode = cellBO.getOpenGLMode(representation, primType);\r\n    // 1) all surfaces need lighting\r\n    if (mode === model.context.TRIANGLES) {\r\n      needLighting = true;\r\n      // 2) all cell normals without point normals need lighting\r\n    } else if (cellNormals && !pointNormals) {\r\n      needLighting = true;\r\n      // 3) Phong + pointNormals need lighting\r\n    } else if (!flat && pointNormals) {\r\n      needLighting = true;\r\n      // 4) Phong Lines need lighting\r\n    } else if (!flat && mode === model.context.LINES) {\r\n      needLighting = true;\r\n    }\r\n    // 5) everything else is unlit\r\n\r\n    // do we need lighting?\r\n    if (actor.getProperty().getLighting() && needLighting) {\r\n      // consider the lighting complexity to determine which case applies\r\n      // simple headlight, Light Kit, the whole feature set of VTK\r\n      lightComplexity = 0;\r\n      const lights = ren.getLightsByReference();\r\n      for (let index = 0; index < lights.length; ++index) {\r\n        const light = lights[index];\r\n        const status = light.getSwitch();\r\n        if (status > 0) {\r\n          numberOfLights++;\r\n          if (lightComplexity === 0) {\r\n            lightComplexity = 1;\r\n          }\r\n        }\r\n        if (lightComplexity === 1 && (numberOfLights > 1 || light.getIntensity() !== 1.0 || !light.lightTypeIsHeadLight())) {\r\n          lightComplexity = 2;\r\n        }\r\n        if (lightComplexity < 3 && light.getPositional()) {\r\n          lightComplexity = 3;\r\n        }\r\n      }\r\n    }\r\n    let needRebuild = false;\r\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\r\n    const lastLightCount = model.lastBoundBO.getReferenceByName('lastLightCount');\r\n    if (lastLightComplexity !== lightComplexity || lastLightCount !== numberOfLights) {\r\n      model.lastBoundBO.set({\r\n        lastLightComplexity: lightComplexity\r\n      }, true);\r\n      model.lastBoundBO.set({\r\n        lastLightCount: numberOfLights\r\n      }, true);\r\n      needRebuild = true;\r\n    }\r\n\r\n    // has the render pass shader replacement changed? Two options\r\n    if (!model.currentRenderPass && model.lastRenderPassShaderReplacement || model.currentRenderPass && model.currentRenderPass.getShaderReplacement() !== model.lastRenderPassShaderReplacement) {\r\n      needRebuild = true;\r\n    }\r\n\r\n    // has something changed that would require us to recreate the shader?\r\n    // candidates are\r\n    // property modified (representation interpolation and lighting)\r\n    // input modified\r\n    // light complexity changed\r\n    // render pass shader replacement changed\r\n    if (model.lastHaveSeenDepthRequest !== model.haveSeenDepthRequest || cellBO.getShaderSourceTime().getMTime() < model.renderable.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.currentInput.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.selectionStateChanged.getMTime() || needRebuild) {\r\n      model.lastHaveSeenDepthRequest = model.haveSeenDepthRequest;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  publicAPI.invokeShaderCallbacks = (cellBO, ren, actor) => {\r\n    const listCallbacks = model.renderable.getViewSpecificProperties().ShadersCallbacks;\r\n    if (listCallbacks) {\r\n      listCallbacks.forEach(object => {\r\n        object.callback(object.userData, cellBO, ren, actor);\r\n      });\r\n    }\r\n  };\r\n  publicAPI.setMapperShaderParameters = (cellBO, ren, actor) => {\r\n    // Now to update the VAO too, if necessary.\r\n    if (cellBO.getProgram().isUniformUsed('PrimitiveIDOffset')) {\r\n      cellBO.getProgram().setUniformi('PrimitiveIDOffset', model.primitiveIDOffset);\r\n    }\r\n    if (cellBO.getProgram().isUniformUsed('VertexIDOffset')) {\r\n      cellBO.getProgram().setUniformi('VertexIDOffset', model.vertexIDOffset);\r\n    }\r\n    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime.getMTime() > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {\r\n      const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\r\n      if (cellBO.getProgram().isAttributeUsed('vertexMC')) {\r\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'vertexMC', cellBO.getCABO().getVertexOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, false)) {\r\n          vtkErrorMacro('Error setting vertexMC in shader VAO.');\r\n        }\r\n      }\r\n      if (cellBO.getProgram().isAttributeUsed('normalMC') && cellBO.getCABO().getNormalOffset() && lastLightComplexity > 0) {\r\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'normalMC', cellBO.getCABO().getNormalOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, false)) {\r\n          vtkErrorMacro('Error setting normalMC in shader VAO.');\r\n        }\r\n      } else {\r\n        cellBO.getVAO().removeAttributeArray('normalMC');\r\n      }\r\n      model.renderable.getCustomShaderAttributes().forEach((attrName, idx) => {\r\n        if (cellBO.getProgram().isAttributeUsed(`${attrName}MC`)) {\r\n          if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), `${attrName}MC`, cellBO.getCABO().getCustomData()[idx].offset, cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getCustomData()[idx].components, false)) {\r\n            vtkErrorMacro(`Error setting ${attrName}MC in shader VAO.`);\r\n          }\r\n        }\r\n      });\r\n      if (cellBO.getProgram().isAttributeUsed('tcoordMC') && cellBO.getCABO().getTCoordOffset()) {\r\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'tcoordMC', cellBO.getCABO().getTCoordOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getTCoordComponents(), false)) {\r\n          vtkErrorMacro('Error setting tcoordMC in shader VAO.');\r\n        }\r\n      } else {\r\n        cellBO.getVAO().removeAttributeArray('tcoordMC');\r\n      }\r\n      if (cellBO.getProgram().isAttributeUsed('scalarColor') && cellBO.getCABO().getColorComponents()) {\r\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO().getColorBO(), 'scalarColor', cellBO.getCABO().getColorOffset(), cellBO.getCABO().getColorBOStride(), model.context.UNSIGNED_BYTE, 4, true)) {\r\n          vtkErrorMacro('Error setting scalarColor in shader VAO.');\r\n        }\r\n      } else {\r\n        cellBO.getVAO().removeAttributeArray('scalarColor');\r\n      }\r\n      cellBO.getAttributeUpdateTime().modified();\r\n    }\r\n    if (model.renderable.getNumberOfClippingPlanes()) {\r\n      // add all the clipping planes\r\n      const numClipPlanes = model.renderable.getNumberOfClippingPlanes();\r\n      const planeEquations = [];\r\n      const shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();\r\n      const inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;\r\n      const mat = inverseShiftScaleMatrix ? gl_matrix__WEBPACK_IMPORTED_MODULE_15__.copy(model.tmpMat4, actor.getMatrix()) : actor.getMatrix();\r\n      if (inverseShiftScaleMatrix) {\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_15__.transpose(mat, mat);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_15__.multiply(mat, mat, inverseShiftScaleMatrix);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_15__.transpose(mat, mat);\r\n      }\r\n      for (let i = 0; i < numClipPlanes; i++) {\r\n        const planeEquation = [];\r\n        model.renderable.getClippingPlaneInDataCoords(mat, i, planeEquation);\r\n        for (let j = 0; j < 4; j++) {\r\n          planeEquations.push(planeEquation[j]);\r\n        }\r\n      }\r\n      cellBO.getProgram().setUniformi('numClipPlanes', numClipPlanes);\r\n      cellBO.getProgram().setUniform4fv('clipPlanes', planeEquations);\r\n    }\r\n    if (model.internalColorTexture && cellBO.getProgram().isUniformUsed('texture1')) {\r\n      cellBO.getProgram().setUniformi('texture1', model.internalColorTexture.getTextureUnit());\r\n    }\r\n    const tus = model.openGLActor.getActiveTextures();\r\n    if (tus) {\r\n      for (let index = 0; index < tus.length; ++index) {\r\n        const tex = tus[index];\r\n        const texUnit = tex.getTextureUnit();\r\n        const tname = `texture${texUnit + 1}`;\r\n        if (cellBO.getProgram().isUniformUsed(tname)) {\r\n          cellBO.getProgram().setUniformi(tname, texUnit);\r\n        }\r\n      }\r\n    }\r\n\r\n    // handle depth requests\r\n    if (model.haveSeenDepthRequest) {\r\n      cellBO.getProgram().setUniformi('depthRequest', model.renderDepth ? 1 : 0);\r\n    }\r\n\r\n    // handle coincident\r\n    if (cellBO.getProgram().isUniformUsed('coffset')) {\r\n      const cp = publicAPI.getCoincidentParameters(ren, actor);\r\n      cellBO.getProgram().setUniformf('coffset', cp.offset);\r\n      // cfactor isn't always used when coffset is.\r\n      if (cellBO.getProgram().isUniformUsed('cfactor')) {\r\n        cellBO.getProgram().setUniformf('cfactor', cp.factor);\r\n      }\r\n    }\r\n\r\n    // handle wide lines\r\n    cellBO.setMapperShaderParameters(ren, actor, model._openGLRenderer.getTiledSizeAndOrigin());\r\n    const selector = model._openGLRenderer.getSelector();\r\n    cellBO.getProgram().setUniform3fArray('mapperIndex', selector ? selector.getPropColorValue() : [0.0, 0.0, 0.0]);\r\n    cellBO.getProgram().setUniformi('picking', selector ? selector.getCurrentPass() + 1 : 0);\r\n  };\r\n  publicAPI.setLightingShaderParameters = (cellBO, ren, actor) => {\r\n    // for unlit and headlight there are no lighting parameters\r\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\r\n    if (lastLightComplexity < 2) {\r\n      return;\r\n    }\r\n    const program = cellBO.getProgram();\r\n\r\n    // bind some light settings\r\n    let numberOfLights = 0;\r\n    const lights = ren.getLightsByReference();\r\n    for (let index = 0; index < lights.length; ++index) {\r\n      const light = lights[index];\r\n      const status = light.getSwitch();\r\n      if (status > 0.0) {\r\n        const dColor = light.getColorByReference();\r\n        const intensity = light.getIntensity();\r\n        model.lightColor[0] = dColor[0] * intensity;\r\n        model.lightColor[1] = dColor[1] * intensity;\r\n        model.lightColor[2] = dColor[2] * intensity;\r\n        // get required info from light\r\n        const ld = light.getDirection();\r\n        const transform = ren.getActiveCamera().getViewMatrix();\r\n        const newLightDirection = [...ld];\r\n        if (light.lightTypeIsSceneLight()) {\r\n          newLightDirection[0] = transform[0] * ld[0] + transform[1] * ld[1] + transform[2] * ld[2];\r\n          newLightDirection[1] = transform[4] * ld[0] + transform[5] * ld[1] + transform[6] * ld[2];\r\n          newLightDirection[2] = transform[8] * ld[0] + transform[9] * ld[1] + transform[10] * ld[2];\r\n          (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.l)(newLightDirection);\r\n        }\r\n        model.lightDirection[0] = newLightDirection[0];\r\n        model.lightDirection[1] = newLightDirection[1];\r\n        model.lightDirection[2] = newLightDirection[2];\r\n        (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.l)(model.lightDirection);\r\n        program.setUniform3fArray(`lightColor${numberOfLights}`, model.lightColor);\r\n        program.setUniform3fArray(`lightDirectionVC${numberOfLights}`, model.lightDirection);\r\n        numberOfLights++;\r\n      }\r\n    }\r\n\r\n    // we are done unless we have positional lights\r\n    if (lastLightComplexity < 3) {\r\n      return;\r\n    }\r\n\r\n    // for lightkit case there are some parameters to set\r\n    const cam = ren.getActiveCamera();\r\n    const viewTF = cam.getViewMatrix();\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_15__.transpose(viewTF, viewTF);\r\n    numberOfLights = 0;\r\n    for (let index = 0; index < lights.length; ++index) {\r\n      const light = lights[index];\r\n      const status = light.getSwitch();\r\n      if (status > 0.0) {\r\n        const lp = light.getTransformedPosition();\r\n        const np = new Float64Array(3);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_16__.transformMat4(np, lp, viewTF);\r\n        program.setUniform3fArray(`lightAttenuation${numberOfLights}`, light.getAttenuationValuesByReference());\r\n        program.setUniformi(`lightPositional${numberOfLights}`, light.getPositional());\r\n        program.setUniformf(`lightExponent${numberOfLights}`, light.getExponent());\r\n        program.setUniformf(`lightConeAngle${numberOfLights}`, light.getConeAngle());\r\n        program.setUniform3fArray(`lightPositionVC${numberOfLights}`, [np[0], np[1], np[2]]);\r\n        numberOfLights++;\r\n      }\r\n    }\r\n  };\r\n  function safeMatrixMultiply(matrixArray, matrixType, tmpMat) {\r\n    matrixType.identity(tmpMat);\r\n    return matrixArray.reduce((res, matrix, index) => {\r\n      if (index === 0) {\r\n        return matrix ? matrixType.copy(res, matrix) : matrixType.identity(res);\r\n      }\r\n      return matrix ? matrixType.multiply(res, res, matrix) : res;\r\n    }, tmpMat);\r\n  }\r\n  publicAPI.setCameraShaderParameters = (cellBO, ren, actor) => {\r\n    const program = cellBO.getProgram();\r\n\r\n    // [WMVP]C == {world, model, view, projection} coordinates\r\n    // E.g., WCPC == world to projection coordinate transformation\r\n    const keyMats = model.openGLCamera.getKeyMatrices(ren);\r\n    const cam = ren.getActiveCamera();\r\n    const camm = model.openGLCamera.getKeyMatrixTime().getMTime();\r\n    const progm = program.getLastCameraMTime();\r\n    const shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();\r\n    const inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;\r\n    const actorIsIdentity = actor.getIsIdentity();\r\n    const actMats = actorIsIdentity ? {\r\n      mcwc: null,\r\n      normalMatrix: null\r\n    } : model.openGLActor.getKeyMatrices();\r\n    if (actor.getCoordinateSystem() === CoordinateSystem.DISPLAY) {\r\n      const size = model._openGLRenderer.getTiledSizeAndOrigin();\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_15__.identity(model.tmpMat4);\r\n      model.tmpMat4[0] = 2.0 / size.usize;\r\n      model.tmpMat4[12] = -1.0;\r\n      model.tmpMat4[5] = 2.0 / size.vsize;\r\n      model.tmpMat4[13] = -1.0;\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_15__.multiply(model.tmpMat4, model.tmpMat4, inverseShiftScaleMatrix);\r\n      program.setUniformMatrix('MCPCMatrix', model.tmpMat4);\r\n    } else {\r\n      program.setUniformMatrix('MCPCMatrix', safeMatrixMultiply([keyMats.wcpc, actMats.mcwc, inverseShiftScaleMatrix], gl_matrix__WEBPACK_IMPORTED_MODULE_15__, model.tmpMat4));\r\n    }\r\n    if (program.isUniformUsed('MCVCMatrix')) {\r\n      program.setUniformMatrix('MCVCMatrix', safeMatrixMultiply([keyMats.wcvc, actMats.mcwc, inverseShiftScaleMatrix], gl_matrix__WEBPACK_IMPORTED_MODULE_15__, model.tmpMat4));\r\n    }\r\n    if (program.isUniformUsed('normalMatrix')) {\r\n      program.setUniformMatrix3x3('normalMatrix', safeMatrixMultiply([keyMats.normalMatrix, actMats.normalMatrix], gl_matrix__WEBPACK_IMPORTED_MODULE_17__, model.tmpMat3));\r\n    }\r\n    if (progm !== camm) {\r\n      if (program.isUniformUsed('cameraParallel')) {\r\n        program.setUniformi('cameraParallel', cam.getParallelProjection());\r\n      }\r\n      program.setLastCameraMTime(camm);\r\n    }\r\n    if (!actorIsIdentity) {\r\n      // reset the cam mtime as actor modified the shader values\r\n      program.setLastCameraMTime(0);\r\n    }\r\n  };\r\n  publicAPI.setPropertyShaderParameters = (cellBO, ren, actor) => {\r\n    const program = cellBO.getProgram();\r\n    let ppty = actor.getProperty();\r\n    let opacity = ppty.getOpacity();\r\n    let aColor = model.drawingEdges ? ppty.getEdgeColorByReference() : ppty.getAmbientColorByReference();\r\n    let dColor = model.drawingEdges ? ppty.getEdgeColorByReference() : ppty.getDiffuseColorByReference();\r\n    let aIntensity = model.drawingEdges ? 1.0 : ppty.getAmbient();\r\n    let dIntensity = model.drawingEdges ? 0.0 : ppty.getDiffuse();\r\n    let sIntensity = model.drawingEdges ? 0.0 : ppty.getSpecular();\r\n    const specularPower = ppty.getSpecularPower();\r\n    program.setUniformf('opacityUniform', opacity);\r\n    program.setUniform3fArray('ambientColorUniform', aColor);\r\n    program.setUniform3fArray('diffuseColorUniform', dColor);\r\n    program.setUniformf('ambient', aIntensity);\r\n    program.setUniformf('diffuse', dIntensity);\r\n\r\n    // we are done unless we have lighting\r\n    const lastLightComplexity = model.lastBoundBO.getReferenceByName('lastLightComplexity');\r\n    if (lastLightComplexity < 1) {\r\n      return;\r\n    }\r\n    let sColor = ppty.getSpecularColorByReference();\r\n    program.setUniform3fArray('specularColorUniform', sColor);\r\n    program.setUniformf('specularPowerUniform', specularPower);\r\n    program.setUniformf('specular', sIntensity);\r\n\r\n    // now set the backface properties if we have them\r\n    if (program.isUniformUsed('ambientIntensityBF')) {\r\n      ppty = actor.getBackfaceProperty();\r\n      opacity = ppty.getOpacity();\r\n      aColor = ppty.getAmbientColor();\r\n      aIntensity = ppty.getAmbient();\r\n      dColor = ppty.getDiffuseColor();\r\n      dIntensity = ppty.getDiffuse();\r\n      sColor = ppty.getSpecularColor();\r\n      sIntensity = ppty.getSpecular();\r\n      program.setUniformf('ambientIntensityBF', aIntensity);\r\n      program.setUniformf('diffuseIntensityBF', dIntensity);\r\n      program.setUniformf('opacityUniformBF', opacity);\r\n      program.setUniform3fArray('ambientColorUniformBF', aColor);\r\n      program.setUniform3fArray('diffuseColorUniformBF', dColor);\r\n\r\n      // we are done unless we have lighting\r\n      if (lastLightComplexity < 1) {\r\n        return;\r\n      }\r\n      program.setUniformf('specularIntensityBF', sIntensity);\r\n      program.setUniform3fArray('specularColorUniformBF', sColor);\r\n      program.setUniformf('specularPowerUniformBF', specularPower);\r\n    }\r\n  };\r\n  publicAPI.updateMaximumPointCellIds = (ren, actor) => {\r\n    const selector = model._openGLRenderer.getSelector();\r\n    if (!selector) {\r\n      return;\r\n    }\r\n    if (model.selectionWebGLIdsToVTKIds?.points?.length) {\r\n      const length = model.selectionWebGLIdsToVTKIds.points.length;\r\n      selector.setMaximumPointId(length - 1);\r\n    }\r\n    if (model.selectionWebGLIdsToVTKIds?.cells?.length) {\r\n      const length = model.selectionWebGLIdsToVTKIds.cells.length;\r\n      selector.setMaximumCellId(length - 1);\r\n    }\r\n    const fieldAssociation = selector.getFieldAssociation();\r\n    if (fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_POINTS) {\r\n      model.pointPicking = true;\r\n    }\r\n  };\r\n  publicAPI.renderPieceStart = (ren, actor) => {\r\n    model.primitiveIDOffset = 0;\r\n    model.vertexIDOffset = 0;\r\n    const picking = getPickState(model._openGLRenderer);\r\n    if (model.lastSelectionState !== picking) {\r\n      model.selectionStateChanged.modified();\r\n      model.lastSelectionState = picking;\r\n    }\r\n    if (model._openGLRenderer.getSelector()) {\r\n      switch (picking) {\r\n        default:\r\n          model._openGLRenderer.getSelector().renderProp(actor);\r\n      }\r\n    }\r\n\r\n    // make sure the BOs are up to date\r\n    publicAPI.updateBufferObjects(ren, actor);\r\n\r\n    // If we are coloring by texture, then load the texture map.\r\n    // Use Map as indicator, because texture hangs around.\r\n    if (model.renderable.getColorTextureMap()) {\r\n      model.internalColorTexture.activate();\r\n    }\r\n\r\n    // Bind the OpenGL, this is shared between the different primitive/cell types.\r\n    model.lastBoundBO = null;\r\n  };\r\n  publicAPI.renderPieceDraw = (ren, actor) => {\r\n    const representation = actor.getProperty().getRepresentation();\r\n    const drawSurfaceWithEdges = actor.getProperty().getEdgeVisibility() && representation === Representation.SURFACE;\r\n    const selector = model._openGLRenderer.getSelector();\r\n    // If we are picking points, we need to tell it to the helper\r\n    const pointPicking = selector && selector.getFieldAssociation() === FieldAssociations.FIELD_ASSOCIATION_POINTS && (model.lastSelectionState === _HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_13__.PassTypes.ID_LOW24 || model.lastSelectionState === _HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_13__.PassTypes.ID_HIGH24);\r\n\r\n    // for every primitive type\r\n    for (let i = primTypes.Start; i < primTypes.End; i++) {\r\n      model.primitives[i].setPointPicking(pointPicking);\r\n      const cabo = model.primitives[i].getCABO();\r\n      if (cabo.getElementCount()) {\r\n        // are we drawing edges\r\n        model.drawingEdges = drawSurfaceWithEdges && (i === primTypes.TrisEdges || i === primTypes.TriStripsEdges);\r\n        // don't draw edges when rendering depth or rendering for picking\r\n        if (!model.drawingEdges || !(model.renderDepth || model.lastSelectionState >= 0)) {\r\n          model.lastBoundBO = model.primitives[i];\r\n          model.primitiveIDOffset += model.primitives[i].drawArrays(ren, actor, representation, publicAPI);\r\n          model.vertexIDOffset += model.primitives[i].getCABO().getElementCount();\r\n        }\r\n      }\r\n    }\r\n  };\r\n  publicAPI.renderPieceFinish = (ren, actor) => {\r\n    if (model.LastBoundBO) {\r\n      model.LastBoundBO.getVAO().release();\r\n    }\r\n    if (model.renderable.getColorTextureMap()) {\r\n      model.internalColorTexture.deactivate();\r\n    }\r\n  };\r\n  publicAPI.renderPiece = (ren, actor) => {\r\n    // Make sure that we have been properly initialized.\r\n    // if (ren.getRenderWindow().checkAbortStatus()) {\r\n    //   return;\r\n    // }\r\n\r\n    publicAPI.invokeEvent(StartEvent);\r\n    if (!model.renderable.getStatic()) {\r\n      model.renderable.update();\r\n    }\r\n    model.currentInput = model.renderable.getInputData();\r\n    publicAPI.invokeEvent(EndEvent);\r\n    if (!model.currentInput) {\r\n      vtkErrorMacro('No input!');\r\n      return;\r\n    }\r\n\r\n    // if there are no points then we are done\r\n    if (!model.currentInput.getPoints || !model.currentInput.getPoints().getNumberOfValues()) {\r\n      return;\r\n    }\r\n\r\n    // apply faceCulling\r\n    const gl = model.context;\r\n    const backfaceCulling = actor.getProperty().getBackfaceCulling();\r\n    const frontfaceCulling = actor.getProperty().getFrontfaceCulling();\r\n    if (!backfaceCulling && !frontfaceCulling) {\r\n      model._openGLRenderWindow.disableCullFace();\r\n    } else if (frontfaceCulling) {\r\n      model._openGLRenderWindow.enableCullFace();\r\n      gl.cullFace(gl.FRONT);\r\n    } else {\r\n      model._openGLRenderWindow.enableCullFace();\r\n      gl.cullFace(gl.BACK);\r\n    }\r\n    publicAPI.renderPieceStart(ren, actor);\r\n    publicAPI.renderPieceDraw(ren, actor);\r\n    publicAPI.renderPieceFinish(ren, actor);\r\n  };\r\n  publicAPI.computeBounds = (ren, actor) => {\r\n    if (!publicAPI.getInput()) {\r\n      (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_3__.u)(model.bounds);\r\n      return;\r\n    }\r\n    model.bounds = publicAPI.getInput().getBounds();\r\n  };\r\n  publicAPI.updateBufferObjects = (ren, actor) => {\r\n    // Rebuild buffers if needed\r\n    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {\r\n      publicAPI.buildBufferObjects(ren, actor);\r\n    }\r\n  };\r\n  publicAPI.getNeedToRebuildBufferObjects = (ren, actor) => {\r\n    // first do a coarse check\r\n    // Note that the actor's mtime includes it's properties mtime\r\n    const vmtime = model.VBOBuildTime.getMTime();\r\n    if (vmtime < publicAPI.getMTime() || vmtime < model.renderable.getMTime() || vmtime < actor.getMTime() || vmtime < model.currentInput.getMTime()) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  publicAPI.buildBufferObjects = (ren, actor) => {\r\n    const poly = model.currentInput;\r\n    if (poly === null) {\r\n      return;\r\n    }\r\n    model.renderable.mapScalars(poly, 1.0);\r\n    const c = model.renderable.getColorMapColors();\r\n    model.haveCellScalars = false;\r\n    const scalarMode = model.renderable.getScalarMode();\r\n    if (model.renderable.getScalarVisibility()) {\r\n      // We must figure out how the scalars should be mapped to the polydata.\r\n      if ((scalarMode === ScalarMode.USE_CELL_DATA || scalarMode === ScalarMode.USE_CELL_FIELD_DATA || scalarMode === ScalarMode.USE_FIELD_DATA || !poly.getPointData().getScalars()) && scalarMode !== ScalarMode.USE_POINT_FIELD_DATA && c) {\r\n        model.haveCellScalars = true;\r\n      }\r\n    }\r\n\r\n    // Do we have normals?\r\n    let n = actor.getProperty().getInterpolation() !== Shading.FLAT ? poly.getPointData().getNormals() : null;\r\n    if (n === null && poly.getCellData().getNormals()) {\r\n      model.haveCellNormals = true;\r\n      n = poly.getCellData().getNormals();\r\n    }\r\n\r\n    // rebuild the VBO if the data has changed we create a string for the VBO what\r\n    // can change the VBO? points normals tcoords colors so what can change those?\r\n    // the input data is clearly one as it can change all four items tcoords may\r\n    // haveTextures or not colors may change based on quite a few mapping\r\n    // parameters in the mapper\r\n\r\n    const representation = actor.getProperty().getRepresentation();\r\n    let tcoords = poly.getPointData().getTCoords();\r\n    if (!model.openGLActor.getActiveTextures()) {\r\n      tcoords = null;\r\n    }\r\n\r\n    // handle color mapping via texture\r\n    if (model.renderable.getColorCoordinates()) {\r\n      tcoords = model.renderable.getColorCoordinates();\r\n      if (!model.internalColorTexture) {\r\n        model.internalColorTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance({\r\n          resizable: true\r\n        });\r\n      }\r\n      const tex = model.internalColorTexture;\r\n      // the following 4 lines allow for NPOT textures\r\n      tex.setMinificationFilter(Filter.NEAREST);\r\n      tex.setMagnificationFilter(Filter.NEAREST);\r\n      tex.setWrapS(Wrap.CLAMP_TO_EDGE);\r\n      tex.setWrapT(Wrap.CLAMP_TO_EDGE);\r\n      tex.setOpenGLRenderWindow(model._openGLRenderWindow);\r\n      const input = model.renderable.getColorTextureMap();\r\n      const ext = input.getExtent();\r\n      const inScalars = input.getPointData().getScalars();\r\n      tex.create2DFromRaw(ext[1] - ext[0] + 1, ext[3] - ext[2] + 1, inScalars.getNumberOfComponents(), inScalars.getDataType(), inScalars.getData());\r\n      tex.activate();\r\n      tex.sendParameters();\r\n      tex.deactivate();\r\n    }\r\n    const toString = `${poly.getMTime()}A${representation}B${poly.getMTime()}` + `C${n ? n.getMTime() : 1}D${c ? c.getMTime() : 1}` + `E${actor.getProperty().getEdgeVisibility()}` + `F${tcoords ? tcoords.getMTime() : 1}`;\r\n    if (model.VBOBuildString !== toString) {\r\n      // Build the VBOs\r\n      const points = poly.getPoints();\r\n      const options = {\r\n        points,\r\n        normals: n,\r\n        tcoords,\r\n        colors: c,\r\n        cellOffset: 0,\r\n        vertexOffset: 0,\r\n        // Used to keep track of vertex ids across primitives for selection\r\n        haveCellScalars: model.haveCellScalars,\r\n        haveCellNormals: model.haveCellNormals,\r\n        customAttributes: model.renderable.getCustomShaderAttributes().map(arrayName => poly.getPointData().getArrayByName(arrayName))\r\n      };\r\n      if (model.renderable.getPopulateSelectionSettings()) {\r\n        model.selectionWebGLIdsToVTKIds = {\r\n          points: null,\r\n          cells: null\r\n        };\r\n      }\r\n      const primitives = [{\r\n        inRep: 'verts',\r\n        cells: poly.getVerts()\r\n      }, {\r\n        inRep: 'lines',\r\n        cells: poly.getLines()\r\n      }, {\r\n        inRep: 'polys',\r\n        cells: poly.getPolys()\r\n      }, {\r\n        inRep: 'strips',\r\n        cells: poly.getStrips()\r\n      }, {\r\n        inRep: 'polys',\r\n        cells: poly.getPolys()\r\n      }, {\r\n        inRep: 'strips',\r\n        cells: poly.getStrips()\r\n      }];\r\n      const drawSurfaceWithEdges = actor.getProperty().getEdgeVisibility() && representation === Representation.SURFACE;\r\n      for (let i = primTypes.Start; i < primTypes.End; i++) {\r\n        if (i !== primTypes.TrisEdges && i !== primTypes.TriStripsEdges) {\r\n          options.cellOffset += model.primitives[i].getCABO().createVBO(primitives[i].cells, primitives[i].inRep, representation, options, model.selectionWebGLIdsToVTKIds);\r\n          options.vertexOffset += model.primitives[i].getCABO().getElementCount();\r\n        } else {\r\n          // if we have edge visibility build the edge VBOs\r\n          if (drawSurfaceWithEdges) {\r\n            // VBOs for edges in \"surface with edges\" are the last to be built,\r\n            // they are not used when picking with a hardware selector so they\r\n            // don't need selectionWebGLIdsToVTKIds and don't update cellOffset and vertexOffset\r\n            model.primitives[i].getCABO().createVBO(primitives[i].cells, primitives[i].inRep, Representation.WIREFRAME, {\r\n              ...options,\r\n              tcoords: null,\r\n              colors: null,\r\n              haveCellScalars: false,\r\n              haveCellNormals: false\r\n            });\r\n          } else {\r\n            // otherwise free them\r\n            model.primitives[i].releaseGraphicsResources();\r\n          }\r\n        }\r\n      }\r\n      if (model.renderable.getPopulateSelectionSettings()) {\r\n        model.renderable.setSelectionWebGLIdsToVTKIds(model.selectionWebGLIdsToVTKIds);\r\n        publicAPI.updateMaximumPointCellIds();\r\n      }\r\n      model.VBOBuildTime.modified();\r\n      model.VBOBuildString = toString;\r\n    }\r\n  };\r\n  publicAPI.getAllocatedGPUMemoryInBytes = () => {\r\n    let memUsed = 0;\r\n    model.primitives.forEach(prim => {\r\n      memUsed += prim.getAllocatedGPUMemoryInBytes();\r\n    });\r\n    // Return in MB\r\n    return memUsed;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  context: null,\r\n  VBOBuildTime: 0,\r\n  VBOBuildString: null,\r\n  primitives: null,\r\n  primTypes: null,\r\n  shaderRebuildString: null,\r\n  tmpMat4: null,\r\n  ambientColor: [],\r\n  // used internally\r\n  diffuseColor: [],\r\n  // used internally\r\n  specularColor: [],\r\n  // used internally\r\n  lightColor: [],\r\n  // used internally\r\n  lightDirection: [],\r\n  // used internally\r\n  lastHaveSeenDepthRequest: false,\r\n  haveSeenDepthRequest: false,\r\n  lastSelectionState: _HardwareSelector_Constants_js__WEBPACK_IMPORTED_MODULE_13__.PassTypes.MIN_KNOWN_PASS - 1,\r\n  selectionStateChanged: null,\r\n  selectionWebGLIdsToVTKIds: null,\r\n  pointPicking: false\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].extend(publicAPI, model, initialValues);\r\n  _ReplacementShaderMapper_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"].implementReplaceShaderCoincidentOffset(publicAPI, model, initialValues);\r\n  _ReplacementShaderMapper_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"].implementBuildShadersWithReplacements(publicAPI, model, initialValues);\r\n  model.primitives = [];\r\n  model.primTypes = primTypes;\r\n  model.tmpMat3 = gl_matrix__WEBPACK_IMPORTED_MODULE_17__.identity(new Float64Array(9));\r\n  model.tmpMat4 = gl_matrix__WEBPACK_IMPORTED_MODULE_15__.identity(new Float64Array(16));\r\n  for (let i = primTypes.Start; i < primTypes.End; i++) {\r\n    model.primitives[i] = _Helper_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n    model.primitives[i].setPrimitiveType(i);\r\n    model.primitives[i].set({\r\n      lastLightComplexity: 0,\r\n      lastLightCount: 0,\r\n      lastSelectionPass: false\r\n    }, true);\r\n  }\r\n\r\n  // Build VTK API\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.e)(publicAPI, model, ['context']);\r\n  model.VBOBuildTime = {};\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.o)(model.VBOBuildTime, {\r\n    mtime: 0\r\n  });\r\n  model.selectionStateChanged = {};\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.o)(model.selectionStateChanged, {\r\n    mtime: 0\r\n  });\r\n\r\n  // Object methods\r\n  vtkOpenGLPolyDataMapper(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, 'vtkOpenGLPolyDataMapper');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkOpenGLPolyDataMapper$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to OpenGL backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_12__.registerOverride)('vtkMapper', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper2D.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkPolyDataMapper2D),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Helper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Helper.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Helper.js\");\n/* harmony import */ var _Core_Mapper2D_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/Mapper2D.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Mapper2D.js\");\n/* harmony import */ var _Common_Core_Points_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/Points.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Points.js\");\n/* harmony import */ var _glsl_vtkPolyData2DFS_glsl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./glsl/vtkPolyData2DFS.glsl.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyData2DFS.glsl.js\");\n/* harmony import */ var _glsl_vtkPolyData2DVS_glsl_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./glsl/vtkPolyData2DVS.glsl.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyData2DVS.glsl.js\");\n/* harmony import */ var _ReplacementShaderMapper_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ReplacementShaderMapper.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ReplacementShaderMapper.js\");\n/* harmony import */ var _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ShaderProgram.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js\");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js\");\n/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n/* harmony import */ var _Core_Property2D_Constants_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Core/Property2D/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Property2D/Constants.js\");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ViewNodeFactory.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { mat3, mat4, vec3 } from 'gl-matrix';\r\nconst {\r\n  primTypes\r\n} = _Helper_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\nconst {\r\n  ScalarMode\r\n} = _Core_Mapper2D_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.c;\r\nconst StartEvent = {\r\n  type: 'StartEvent'\r\n};\r\nconst EndEvent = {\r\n  type: 'EndEvent'\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLPolyDataMapper2D methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkOpenGLPolyDataMapper2D(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkOpenGLPolyDataMapper2D');\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      model.openGLActor2D = publicAPI.getFirstAncestorOfType('vtkOpenGLActor2D');\r\n      model._openGLRenderer = model.openGLActor2D.getFirstAncestorOfType('vtkOpenGLRenderer');\r\n      model._openGLRenderWindow = model._openGLRenderer.getParent();\r\n      model.openGLCamera = model._openGLRenderer.getViewNodeFor(model._openGLRenderer.getRenderable().getActiveCamera());\r\n    }\r\n  };\r\n  publicAPI.overlayPass = prepass => {\r\n    if (prepass) {\r\n      publicAPI.render();\r\n    }\r\n  };\r\n  publicAPI.getShaderTemplate = (shaders, ren, actor) => {\r\n    shaders.Vertex = _glsl_vtkPolyData2DVS_glsl_js__WEBPACK_IMPORTED_MODULE_5__.v;\r\n    shaders.Fragment = _glsl_vtkPolyData2DFS_glsl_js__WEBPACK_IMPORTED_MODULE_4__.v;\r\n    shaders.Geometry = '';\r\n  };\r\n  publicAPI.render = () => {\r\n    const ctx = model._openGLRenderWindow.getContext();\r\n    if (model.context !== ctx) {\r\n      model.context = ctx;\r\n      for (let i = primTypes.Start; i < primTypes.End; i++) {\r\n        model.primitives[i].setOpenGLRenderWindow(model._openGLRenderWindow);\r\n      }\r\n    }\r\n    const actor = model.openGLActor2D.getRenderable();\r\n    const ren = model._openGLRenderer.getRenderable();\r\n    publicAPI.renderPiece(ren, actor);\r\n  };\r\n  publicAPI.renderPiece = (ren, actor) => {\r\n    publicAPI.invokeEvent(StartEvent);\r\n    if (!model.renderable.getStatic()) {\r\n      model.renderable.update();\r\n    }\r\n    model.currentInput = model.renderable.getInputData();\r\n    publicAPI.invokeEvent(EndEvent);\r\n    if (!model.currentInput) {\r\n      vtkErrorMacro('No input!');\r\n      return;\r\n    }\r\n\r\n    // if there are no points then we are done\r\n    if (!model.currentInput.getPoints || !model.currentInput.getPoints().getNumberOfValues()) {\r\n      return;\r\n    }\r\n    publicAPI.renderPieceStart(ren, actor);\r\n    publicAPI.renderPieceDraw(ren, actor);\r\n    publicAPI.renderPieceFinish(ren, actor);\r\n  };\r\n  publicAPI.renderPieceStart = (ren, actor) => {\r\n    model.primitiveIDOffset = 0;\r\n    if (model._openGLRenderer.getSelector()) {\r\n      switch (model._openGLRenderer.getSelector().getCurrentPass()) {\r\n        default:\r\n          model._openGLRenderer.getSelector().renderProp(actor);\r\n      }\r\n    }\r\n    // make sure the BOs are up to date\r\n    publicAPI.updateBufferObjects(ren, actor);\r\n\r\n    // Bind the OpenGL, this is shared between the different primitive/cell types.\r\n    model.lastBoundBO = null;\r\n  };\r\n  publicAPI.getNeedToRebuildShaders = (cellBO, ren, actor) => {\r\n    // has something changed that would require us to recreate the shader?\r\n    // candidates are\r\n    // property modified (representation interpolation and lighting)\r\n    // input modified\r\n    // light complexity changed\r\n    if (cellBO.getShaderSourceTime().getMTime() < model.renderable.getMTime() || cellBO.getShaderSourceTime().getMTime() < model.currentInput.getMTime()) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  publicAPI.updateBufferObjects = (ren, actor) => {\r\n    // Rebuild buffers if needed\r\n    if (publicAPI.getNeedToRebuildBufferObjects(ren, actor)) {\r\n      publicAPI.buildBufferObjects(ren, actor);\r\n    }\r\n  };\r\n  publicAPI.getNeedToRebuildBufferObjects = (ren, actor) => {\r\n    // first do a coarse check\r\n    // Note that the actor's mtime includes it's properties mtime\r\n    const vmtime = model.VBOBuildTime.getMTime();\r\n    if (vmtime < publicAPI.getMTime() || vmtime < model._openGLRenderWindow.getMTime() || vmtime < model.renderable.getMTime() || vmtime < actor.getMTime() || vmtime < model.currentInput.getMTime() || model.renderable.getTransformCoordinate() && vmtime < ren.getMTime()) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  publicAPI.buildBufferObjects = (ren, actor) => {\r\n    const poly = model.currentInput;\r\n    if (poly === null) {\r\n      return;\r\n    }\r\n    model.renderable.mapScalars(poly, actor.getProperty().getOpacity());\r\n    const c = model.renderable.getColorMapColors();\r\n    model.haveCellScalars = false;\r\n    const scalarMode = model.renderable.getScalarMode();\r\n    if (model.renderable.getScalarVisibility()) {\r\n      // We must figure out how the scalars should be mapped to the polydata.\r\n      if ((scalarMode === ScalarMode.USE_CELL_DATA || scalarMode === ScalarMode.USE_CELL_FIELD_DATA || scalarMode === ScalarMode.USE_FIELD_DATA || !poly.getPointData().getScalars()) && scalarMode !== ScalarMode.USE_POINT_FIELD_DATA && c) {\r\n        model.haveCellScalars = true;\r\n      }\r\n    }\r\n    const representation = actor.getProperty().getRepresentation();\r\n    let tcoords = poly.getPointData().getTCoords();\r\n    if (!model.openGLActor2D.getActiveTextures()) {\r\n      tcoords = null;\r\n    }\r\n    const transformCoordinate = model.renderable.getTransformCoordinate();\r\n    const view = ren.getRenderWindow().getViews()[0];\r\n    const vsize = view.getViewportSize(ren);\r\n    const toString = `${poly.getMTime()}A${representation}B${poly.getMTime()}` + `C${c ? c.getMTime() : 1}` + `D${tcoords ? tcoords.getMTime() : 1}` + `E${transformCoordinate ? ren.getMTime() : 1}` + `F${vsize}`;\r\n    if (model.VBOBuildString !== toString) {\r\n      // Build the VBOs\r\n      let points = poly.getPoints();\r\n      if (transformCoordinate) {\r\n        const p = _Common_Core_Points_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance();\r\n        const numPts = points.getNumberOfPoints();\r\n        p.setNumberOfPoints(numPts);\r\n        const point = [];\r\n        for (let i = 0; i < numPts; ++i) {\r\n          points.getPoint(i, point);\r\n          transformCoordinate.setValue(point);\r\n          const v = transformCoordinate.getComputedDoubleViewportValue(ren);\r\n          p.setPoint(i, v[0], v[1], 0.0);\r\n        }\r\n        points = p;\r\n      }\r\n      const options = {\r\n        points,\r\n        tcoords,\r\n        colors: c,\r\n        cellOffset: 0,\r\n        haveCellScalars: model.haveCellSCalars,\r\n        customAttributes: model.renderable.getCustomShaderAttributes().map(arrayName => poly.getPointData().getArrayByName(arrayName))\r\n      };\r\n      options.cellOffset += model.primitives[primTypes.Points].getCABO().createVBO(poly.getVerts(), 'verts', representation, options);\r\n      options.cellOffset += model.primitives[primTypes.Lines].getCABO().createVBO(poly.getLines(), 'lines', representation, options);\r\n      options.cellOffset += model.primitives[primTypes.Tris].getCABO().createVBO(poly.getPolys(), 'polys', representation, options);\r\n      options.cellOffset += model.primitives[primTypes.TriStrips].getCABO().createVBO(poly.getStrips(), 'strips', representation, options);\r\n      model.VBOBuildTime.modified();\r\n      model.VBOBuildString = toString;\r\n    }\r\n  };\r\n  publicAPI.renderPieceDraw = (ren, actor) => {\r\n    const representation = actor.getProperty().getRepresentation();\r\n    const gl = model.context;\r\n    gl.depthMask(true);\r\n\r\n    // for every primitive type\r\n    for (let i = primTypes.Start; i < primTypes.End; i++) {\r\n      // if there are entries\r\n      const cabo = model.primitives[i].getCABO();\r\n      if (cabo.getElementCount()) {\r\n        model.lastBoundBO = model.primitives[i];\r\n        model.primitiveIDOffset += model.primitives[i].drawArrays(ren, actor, representation, publicAPI);\r\n      }\r\n    }\r\n  };\r\n  publicAPI.renderPieceFinish = (ren, actor) => {\r\n    if (model.lastBoundBO) {\r\n      model.lastBoundBO.getVAO().release();\r\n    }\r\n  };\r\n  publicAPI.replaceShaderValues = (shaders, ren, actor) => {\r\n    publicAPI.replaceShaderColor(shaders, ren, actor);\r\n    publicAPI.replaceShaderTCoord(shaders, ren, actor);\r\n    publicAPI.replaceShaderPicking(shaders, ren, actor);\r\n    publicAPI.replaceShaderPositionVC(shaders, ren, actor);\r\n  };\r\n  publicAPI.replaceShaderColor = (shaders, ren, actor) => {\r\n    let VSSource = shaders.Vertex;\r\n    let GSSource = shaders.Geometry;\r\n    let FSSource = shaders.Fragment;\r\n    if (model.haveCellScalars) {\r\n      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Color::Dec', ['uniform samplerBuffer texture1;']).result;\r\n      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Color::Impl', ['gl_FragData[0] = texelFetchBuffer(texture1, gl_PrimitiveID + PrimitiveIDOffset);']).result;\r\n    }\r\n    if (model.lastBoundBO.getCABO().getColorComponents() !== 0) {\r\n      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::Color::Dec', ['in vec4 diffuseColor;', 'out vec4 fcolorVSOutput;']).result;\r\n      VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::Color::Impl', ['fcolorVSOutput = diffuseColor;']).result;\r\n      GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(GSSource, '//VTK::Color::Dec', ['in vec4 fcolorVSOutput[];\\n', 'out vec4 fcolorGSOutput;']).result;\r\n      GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(GSSource, '//VTK::Color::Impl', ['fcolorGSOutput = fcolorVSOutput[i];']).result;\r\n      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Color::Dec', ['in vec4 fcolorVSOutput;']).result;\r\n      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Color::Impl', ['gl_FragData[0] = fcolorVSOutput;']).result;\r\n    } else {\r\n      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Color::Dec', ['uniform vec4 diffuseColor;']).result;\r\n      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Color::Impl', ['gl_FragData[0] = diffuseColor;']).result;\r\n    }\r\n    shaders.Vertex = VSSource;\r\n    shaders.Geometry = GSSource;\r\n    shaders.Fragment = FSSource;\r\n  };\r\n  publicAPI.replaceShaderTCoord = (shaders, ren, actor) => {\r\n    if (model.lastBoundBO.getCABO().getTCoordOffset()) {\r\n      let VSSource = shaders.Vertex;\r\n      let GSSource = shaders.Geometry;\r\n      let FSSource = shaders.Fragment;\r\n      const tcdim = model.lastBoundBO.getCABO().getTCoordComponents();\r\n      if (tcdim === 1) {\r\n        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::TCoord::Dec', ['in float tcoordMC;', 'out float tcoordVCVSOutput;']).result;\r\n        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::TCoord::Impl', ['tcoordVCVSOutput = tcoordMC;']).result;\r\n        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(GSSource, '//VTK::TCoord::Dec', ['in float tcoordVCVSOutput[];\\n', 'out float tcoordVCGSOutput;']).result;\r\n        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(GSSource, ['//VTK::TCoord::Impl', 'tcoordVCGSOutput = tcoordVCVSOutput[i];']).result;\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::TCoord::Dec', ['in float tcoordVCVSOutput;', 'uniform sampler2D texture1;']).result;\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::TCoord::Impl', ['gl_FragData[0] = gl_FragData[0]*texture2D(texture1, vec2(tcoordVCVSOutput,0));']).result;\r\n      } else if (tcdim === 2) {\r\n        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::TCoord::Dec', ['in vec2 tcoordMC;', 'out vec2 tcoordVCVSOutput;']).result;\r\n        VSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(VSSource, '//VTK::TCoord::Impl', ['tcoordVCVSOutput = tcoordMC;']).result;\r\n        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(GSSource, '//VTK::TCoord::Dec', ['in vec2 tcoordVCVSOutput[];\\n', 'out vec2 tcoordVCGSOutput;']).result;\r\n        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(GSSource, '//VTK::TCoord::Impl', ['tcoordVCGSOutput = tcoordVCVSOutput[i];']).result;\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::TCoord::Dec', ['in vec2 tcoordVCVSOutput;', 'uniform sampler2D texture1;']).result;\r\n        FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::TCoord::Impl', ['gl_FragData[0] = gl_FragData[0]*texture2D(texture1, tcoordVCVSOutput.st);']).result;\r\n      }\r\n      if (model.haveCellScalars) {\r\n        GSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(GSSource, '//VTK::PrimID::Impl', ['gl_PrimitiveID = gl_PrimitiveIDIn;']).result;\r\n      }\r\n      shaders.Vertex = VSSource;\r\n      shaders.Geometry = GSSource;\r\n      shaders.Fragment = FSSource;\r\n    }\r\n  };\r\n  publicAPI.replaceShaderPicking = (shaders, ren, actor) => {\r\n    let FSSource = shaders.Fragment;\r\n    FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Picking::Dec', ['uniform vec3 mapperIndex;', 'uniform int picking;']).result;\r\n    FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(FSSource, '//VTK::Picking::Impl', '  gl_FragData[0] = picking != 0 ? vec4(mapperIndex,1.0) : gl_FragData[0];').result;\r\n    shaders.Fragment = FSSource;\r\n  };\r\n  publicAPI.replaceShaderPositionVC = (shaders, ren, actor) => {\r\n    // replace common shader code\r\n    model.lastBoundBO.replaceShaderPositionVC(shaders, ren, actor);\r\n  };\r\n  publicAPI.invokeShaderCallbacks = (cellBO, ren, actor) => {\r\n    const listCallbacks = model.renderable.getViewSpecificProperties().ShadersCallbacks;\r\n    if (listCallbacks) {\r\n      listCallbacks.forEach(object => {\r\n        object.callback(object.userData, cellBO, ren, actor);\r\n      });\r\n    }\r\n  };\r\n  publicAPI.setMapperShaderParameters = (cellBO, ren, actor) => {\r\n    // Now to update the VAO too, if necessary.\r\n    if (cellBO.getProgram().isUniformUsed('PrimitiveIDOffset')) {\r\n      cellBO.getProgram().setUniformi('PrimitiveIDOffset', model.primitiveIDOffset);\r\n    }\r\n    if (cellBO.getProgram().isAttributeUsed('vertexWC')) {\r\n      if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'vertexWC', cellBO.getCABO().getVertexOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, 3, false)) {\r\n        vtkErrorMacro('Error setting vertexWC in shader VAO.');\r\n      }\r\n    }\r\n    if (cellBO.getCABO().getElementCount() && (model.VBOBuildTime.getMTime() > cellBO.getAttributeUpdateTime().getMTime() || cellBO.getShaderSourceTime().getMTime() > cellBO.getAttributeUpdateTime().getMTime())) {\r\n      model.renderable.getCustomShaderAttributes().forEach((attrName, idx) => {\r\n        if (cellBO.getProgram().isAttributeUsed(`${attrName}MC`)) {\r\n          if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), `${attrName}MC`, cellBO.getCABO().getCustomData()[idx].offset, cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getCustomData()[idx].components, false)) {\r\n            vtkErrorMacro(`Error setting ${attrName}MC in shader VAO.`);\r\n          }\r\n        }\r\n      });\r\n      if (cellBO.getProgram().isAttributeUsed('tcoordMC') && cellBO.getCABO().getTCoordOffset()) {\r\n        if (!cellBO.getVAO().addAttributeArray(cellBO.getProgram(), cellBO.getCABO(), 'tcoordMC', cellBO.getCABO().getTCoordOffset(), cellBO.getCABO().getStride(), model.context.FLOAT, cellBO.getCABO().getTCoordComponents(), false)) {\r\n          vtkErrorMacro('Error setting tcoordMC in shader VAO.');\r\n        }\r\n      } else {\r\n        cellBO.getVAO().removeAttributeArray('tcoordMC');\r\n      }\r\n      if (model.internalColorTexture && cellBO.getProgram().isUniformUsed('texture1')) {\r\n        cellBO.getProgram().setUniformi('texture1', model.internalColorTexture.getTextureUnit());\r\n      }\r\n      const tus = model.openGLActor2D.getActiveTextures();\r\n      if (tus) {\r\n        for (let index = 0; index < tus.length; ++index) {\r\n          const tex = tus[index];\r\n          const texUnit = tex.getTextureUnit();\r\n          const tname = `texture${texUnit + 1}`;\r\n          if (cellBO.getProgram().isUniformUsed(tname)) {\r\n            cellBO.getProgram().setUniformi(tname, texUnit);\r\n          }\r\n        }\r\n      }\r\n\r\n      // handle wide lines\r\n      cellBO.setMapperShaderParameters(ren, actor, model._openGLRenderer.getTiledSizeAndOrigin());\r\n      const selector = model._openGLRenderer.getSelector();\r\n      cellBO.getProgram().setUniform3fArray('mapperIndex', selector ? selector.getPropColorValue() : [0.0, 0.0, 0.0]);\r\n      cellBO.getProgram().setUniformi('picking', selector ? selector.getCurrentPass() + 1 : 0);\r\n    }\r\n  };\r\n  publicAPI.setPropertyShaderParameters = (cellBO, ren, actor) => {\r\n    const c = model.renderable.getColorMapColors();\r\n    if (!c || c.getNumberOfComponents() === 0) {\r\n      const program = cellBO.getProgram();\r\n      const ppty = actor.getProperty();\r\n      const opacity = ppty.getOpacity();\r\n      const dColor = ppty.getColor();\r\n      const diffuseColor = [dColor[0], dColor[1], dColor[2], opacity];\r\n      program.setUniform4f('diffuseColor', diffuseColor);\r\n    }\r\n  };\r\n  publicAPI.setLightingShaderParameters = (cellBO, ren, actor) => {\r\n    // no-op\r\n  };\r\n  function safeMatrixMultiply(matrixArray, matrixType, tmpMat) {\r\n    matrixType.identity(tmpMat);\r\n    return matrixArray.reduce((res, matrix, index) => {\r\n      if (index === 0) {\r\n        return matrix ? matrixType.copy(res, matrix) : matrixType.identity(res);\r\n      }\r\n      return matrix ? matrixType.multiply(res, res, matrix) : res;\r\n    }, tmpMat);\r\n  }\r\n  publicAPI.setCameraShaderParameters = (cellBO, ren, actor) => {\r\n    const program = cellBO.getProgram();\r\n    const shiftScaleEnabled = cellBO.getCABO().getCoordShiftAndScaleEnabled();\r\n    const inverseShiftScaleMatrix = shiftScaleEnabled ? cellBO.getCABO().getInverseShiftAndScaleMatrix() : null;\r\n\r\n    // Get the position of the actor\r\n    const view = ren.getRenderWindow().getViews()[0];\r\n    const size = view.getViewportSize(ren);\r\n    const vport = ren.getViewport();\r\n    const actorPos = actor.getActualPositionCoordinate().getComputedDoubleViewportValue(ren);\r\n\r\n    // Get the window info\r\n    // Assume tile viewport is 0 1 based on vtkOpenGLRenderer\r\n    const tileViewport = [0.0, 0.0, 1.0, 1.0];\r\n    const visVP = [0.0, 0.0, 1.0, 1.0];\r\n    visVP[0] = vport[0] >= tileViewport[0] ? vport[0] : tileViewport[0];\r\n    visVP[1] = vport[1] >= tileViewport[1] ? vport[1] : tileViewport[1];\r\n    visVP[2] = vport[2] <= tileViewport[2] ? vport[2] : tileViewport[2];\r\n    visVP[3] = vport[3] <= tileViewport[3] ? vport[3] : tileViewport[3];\r\n    if (visVP[0] >= visVP[2]) {\r\n      return;\r\n    }\r\n    if (visVP[1] >= visVP[3]) {\r\n      return;\r\n    }\r\n    size[0] = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_9__.O)(size[0] * (visVP[2] - visVP[0]) / (vport[2] - vport[0]));\r\n    size[1] = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_9__.O)(size[1] * (visVP[3] - visVP[1]) / (vport[3] - vport[1]));\r\n    const winSize = model._openGLRenderer.getParent().getSize();\r\n    const xoff = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_9__.O)(actorPos[0] - (visVP[0] - vport[0]) * winSize[0]);\r\n    const yoff = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_9__.O)(actorPos[1] - (visVP[1] - vport[1]) * winSize[1]);\r\n\r\n    // set ortho projection\r\n    const left = -xoff;\r\n    let right = -xoff + size[0];\r\n    const bottom = -yoff;\r\n    let top = -yoff + size[1];\r\n\r\n    // it's an error to call glOrtho with\r\n    // either left==right or top==bottom\r\n    if (left === right) {\r\n      right = left + 1.0;\r\n    }\r\n    if (bottom === top) {\r\n      top = bottom + 1.0;\r\n    }\r\n\r\n    // compute the combined ModelView matrix and send it down to save time in the shader\r\n    const tmpMat4 = gl_matrix__WEBPACK_IMPORTED_MODULE_12__.identity(new Float64Array(16));\r\n    tmpMat4[0] = 2.0 / (right - left);\r\n    tmpMat4[1 * 4 + 1] = 2.0 / (top - bottom);\r\n    tmpMat4[0 * 4 + 3] = -1.0 * (right + left) / (right - left);\r\n    tmpMat4[1 * 4 + 3] = -1.0 * (top + bottom) / (top - bottom);\r\n    tmpMat4[2 * 4 + 2] = 0.0;\r\n    tmpMat4[2 * 4 + 3] = actor.getProperty().getDisplayLocation() === _Core_Property2D_Constants_js__WEBPACK_IMPORTED_MODULE_10__.DisplayLocation.FOREGROUND ? -1.0 : 1.0;\r\n    tmpMat4[3 * 4 + 3] = 1.0;\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_12__.transpose(tmpMat4, tmpMat4);\r\n    program.setUniformMatrix('WCVCMatrix', safeMatrixMultiply([tmpMat4, inverseShiftScaleMatrix], gl_matrix__WEBPACK_IMPORTED_MODULE_12__, model.tmpMat4));\r\n  };\r\n  publicAPI.getAllocatedGPUMemoryInBytes = () => {\r\n    let memUsed = 0;\r\n    model.primitives.forEach(prim => {\r\n      memUsed += prim.getAllocatedGPUMemoryInBytes();\r\n    });\r\n    // Return in MB\r\n    return memUsed;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  context: null,\r\n  VBOBuildTime: 0,\r\n  VBOBuildString: null,\r\n  primitives: null,\r\n  primTypes: null,\r\n  shaderRebuildString: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].extend(publicAPI, model, initialValues);\r\n  _ReplacementShaderMapper_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].implementReplaceShaderCoincidentOffset(publicAPI, model, initialValues);\r\n  _ReplacementShaderMapper_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].implementBuildShadersWithReplacements(publicAPI, model, initialValues);\r\n  model.primitives = [];\r\n  model.primTypes = primTypes;\r\n  model.tmpMat4 = gl_matrix__WEBPACK_IMPORTED_MODULE_12__.identity(new Float64Array(16));\r\n  for (let i = primTypes.Start; i < primTypes.End; i++) {\r\n    model.primitives[i] = _Helper_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n    model.primitives[i].setPrimitiveType(i);\r\n    model.primitives[i].set({\r\n      lastLightComplexity: 0,\r\n      lastLightCount: 0,\r\n      lastSelectionPass: false\r\n    }, true);\r\n  }\r\n\r\n  // Build VTK API\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.e)(publicAPI, model, ['context']);\r\n  model.VBOBuildTime = {};\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.o)(model.VBOBuildTime, {\r\n    mtime: 0\r\n  });\r\n\r\n  // Object methods\r\n  vtkOpenGLPolyDataMapper2D(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, 'vtkOpenGLPolyDataMapper2D');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkPolyDataMapper2D = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to OpenGL backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_11__.registerOverride)('vtkMapper2D', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper2D.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/RenderWindow.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkRenderWindow),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance),\n/* harmony export */   popMonitorGLContextCount: () => (/* binding */ popMonitorGLContextCount),\n/* harmony export */   pushMonitorGLContextCount: () => (/* binding */ pushMonitorGLContextCount)\n/* harmony export */ });\n/* harmony import */ var _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Common/Core/DataArray/Constants.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Core_RenderWindow_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/RenderWindow.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/RenderWindow.js\");\n/* harmony import */ var _ForwardPass_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ForwardPass.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ForwardPass.js\");\n/* harmony import */ var _HardwareSelector_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./HardwareSelector.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/HardwareSelector.js\");\n/* harmony import */ var _ShaderCache_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ShaderCache.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderCache.js\");\n/* harmony import */ var _TextureUnitManager_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TextureUnitManager.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/TextureUnitManager.js\");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ViewNodeFactory.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js\");\n/* harmony import */ var _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../SceneGraph/RenderPass.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js\");\n/* harmony import */ var _SceneGraph_RenderWindowViewNode_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../SceneGraph/RenderWindowViewNode.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderWindowViewNode.js\");\n/* harmony import */ var _RenderWindow_ContextProxy_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./RenderWindow/ContextProxy.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/RenderWindow/ContextProxy.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  vtkDebugMacro,\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m;\r\nconst SCREENSHOT_PLACEHOLDER = {\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  width: '100%',\r\n  height: '100%'\r\n};\r\nconst parentMethodsToProxy = ['activateTexture', 'deactivateTexture', 'disableCullFace', 'enableCullFace', 'get3DContext', 'getActiveFramebuffer', 'getContext', 'getDefaultTextureByteSize', 'getDefaultTextureInternalFormat', 'getDefaultToWebgl2', 'getGLInformations', 'getGraphicsMemoryInfo', 'getGraphicsResourceForObject', 'getHardwareMaximumLineWidth', 'getPixelData', 'getShaderCache', 'getTextureUnitForTexture', 'getTextureUnitManager', 'getWebgl2', 'makeCurrent', 'releaseGraphicsResources', 'releaseGraphicsResourcesForObject', 'restoreContext', 'setActiveFramebuffer', 'setContext', 'setDefaultToWebgl2', 'setGraphicsResourceForObject'];\r\nfunction checkRenderTargetSupport(gl, format, type) {\r\n  // create temporary frame buffer and texture\r\n  const framebuffer = gl.createFramebuffer();\r\n  const texture = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n  gl.texImage2D(gl.TEXTURE_2D, 0, format, 2, 2, 0, format, type, null);\r\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n\r\n  // check frame buffer status\r\n  const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n\r\n  // clean up\r\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n  gl.bindTexture(gl.TEXTURE_2D, null);\r\n  return status === gl.FRAMEBUFFER_COMPLETE;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Monitor the usage of GL context across vtkOpenGLRenderWindow instances\r\n// ----------------------------------------------------------------------------\r\n\r\nlet GL_CONTEXT_COUNT = 0;\r\nconst GL_CONTEXT_LISTENERS = [];\r\nfunction createGLContext() {\r\n  GL_CONTEXT_COUNT++;\r\n  GL_CONTEXT_LISTENERS.forEach(cb => cb(GL_CONTEXT_COUNT));\r\n}\r\nfunction deleteGLContext() {\r\n  GL_CONTEXT_COUNT--;\r\n  GL_CONTEXT_LISTENERS.forEach(cb => cb(GL_CONTEXT_COUNT));\r\n}\r\nfunction pushMonitorGLContextCount(cb) {\r\n  GL_CONTEXT_LISTENERS.push(cb);\r\n}\r\nfunction popMonitorGLContextCount(cb) {\r\n  return GL_CONTEXT_LISTENERS.pop();\r\n}\r\nfunction _preventDefault(e) {\r\n  e.preventDefault();\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLRenderWindow methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkOpenGLRenderWindow(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkOpenGLRenderWindow');\r\n\r\n  // Only create a cachingContextHandler if needed\r\n  let cachingContextHandler;\r\n  function getCachingContextHandler() {\r\n    if (!cachingContextHandler) {\r\n      cachingContextHandler = (0,_RenderWindow_ContextProxy_js__WEBPACK_IMPORTED_MODULE_10__.createContextProxyHandler)();\r\n    }\r\n    return cachingContextHandler;\r\n  }\r\n  publicAPI.getViewNodeFactory = () => model.myFactory;\r\n\r\n  // prevent default context lost handler\r\n  model.canvas.addEventListener('webglcontextlost', _preventDefault, false);\r\n  model.canvas.addEventListener('webglcontextrestored', publicAPI.restoreContext, false);\r\n\r\n  // Auto update style\r\n  const previousSize = [0, 0];\r\n  function updateWindow() {\r\n    // Canvas size\r\n    if (model.renderable) {\r\n      if (model.size[0] !== previousSize[0] || model.size[1] !== previousSize[1]) {\r\n        previousSize[0] = model.size[0];\r\n        previousSize[1] = model.size[1];\r\n        model.canvas.setAttribute('width', model.size[0]);\r\n        model.canvas.setAttribute('height', model.size[1]);\r\n      }\r\n    }\r\n\r\n    // ImageStream size\r\n    if (model.viewStream) {\r\n      // If same size that's a NoOp\r\n      model.viewStream.setSize(model.size[0], model.size[1]);\r\n    }\r\n\r\n    // Offscreen ?\r\n    model.canvas.style.display = model.useOffScreen ? 'none' : 'block';\r\n\r\n    // Cursor type\r\n    if (model.el) {\r\n      model.el.style.cursor = model.cursorVisibility ? model.cursor : 'none';\r\n    }\r\n\r\n    // Invalidate cached DOM container size\r\n    model.containerSize = null;\r\n  }\r\n  publicAPI.onModified(updateWindow);\r\n\r\n  // Builds myself.\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      if (!model.renderable) {\r\n        return;\r\n      }\r\n      publicAPI.prepareNodes();\r\n      publicAPI.addMissingNodes(model.renderable.getRenderersByReference());\r\n      publicAPI.addMissingNodes(model.renderable.getChildRenderWindowsByReference());\r\n      publicAPI.removeUnusedNodes();\r\n      publicAPI.initialize();\r\n      model.children.forEach(child => {\r\n        // Children can be openGl renderer or openGl render windows\r\n        // Only openGl renderers have a method setOpenGLRenderWindow\r\n        child.setOpenGLRenderWindow?.(publicAPI);\r\n      });\r\n    }\r\n  };\r\n  publicAPI.initialize = () => {\r\n    if (!model.initialized) {\r\n      // Set root parent if there is one\r\n      // Some methods of the root parent are proxied (see parentMethodsToProxy)\r\n      model.rootOpenGLRenderWindow = publicAPI.getLastAncestorOfType('vtkOpenGLRenderWindow');\r\n      if (model.rootOpenGLRenderWindow) {\r\n        // Initialize a 2D context that will copy the content of the root parent\r\n        model.context2D = publicAPI.get2DContext();\r\n      } else {\r\n        // Initialize a 3D context that may be used by child render windows\r\n        model.context = publicAPI.get3DContext();\r\n        publicAPI.resizeFromChildRenderWindows();\r\n        if (model.context) {\r\n          createGLContext();\r\n        }\r\n        model.textureUnitManager = _TextureUnitManager_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].newInstance();\r\n        model.textureUnitManager.setContext(model.context);\r\n        model.shaderCache.setContext(model.context);\r\n        // initialize blending for transparency\r\n        const gl = model.context;\r\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        gl.depthFunc(gl.LEQUAL);\r\n        gl.enable(gl.BLEND);\r\n      }\r\n      model.initialized = true;\r\n    }\r\n  };\r\n  publicAPI.makeCurrent = () => {\r\n    model.context.makeCurrent();\r\n  };\r\n  publicAPI.setContainer = el => {\r\n    if (model.el && model.el !== el) {\r\n      if (model.canvas.parentNode !== model.el) {\r\n        vtkErrorMacro('Error: canvas parent node does not match container');\r\n      }\r\n\r\n      // Remove canvas from previous container\r\n      model.el.removeChild(model.canvas);\r\n\r\n      // If the renderer has previously added\r\n      // a background image, remove it from the DOM.\r\n      if (model.el.contains(model.bgImage)) {\r\n        model.el.removeChild(model.bgImage);\r\n      }\r\n    }\r\n    if (model.el !== el) {\r\n      model.el = el;\r\n      if (model.el) {\r\n        model.el.appendChild(model.canvas);\r\n\r\n        // If the renderer is set to use a background\r\n        // image, attach it to the DOM.\r\n        if (model.useBackgroundImage) {\r\n          model.el.appendChild(model.bgImage);\r\n        }\r\n      }\r\n\r\n      // Trigger modified()\r\n      publicAPI.modified();\r\n    }\r\n  };\r\n  publicAPI.getContainer = () => model.el;\r\n  publicAPI.getContainerSize = () => {\r\n    if (!model.containerSize && model.el) {\r\n      const {\r\n        width,\r\n        height\r\n      } = model.el.getBoundingClientRect();\r\n      model.containerSize = [width, height];\r\n    }\r\n    return model.containerSize || model.size;\r\n  };\r\n  publicAPI.getFramebufferSize = () => {\r\n    const fbSize = model.activeFramebuffer?.getSize();\r\n    return fbSize || model.size;\r\n  };\r\n  publicAPI.getPixelData = (x1, y1, x2, y2) => {\r\n    const pixels = new Uint8Array((x2 - x1 + 1) * (y2 - y1 + 1) * 4);\r\n    model.context.readPixels(x1, y1, x2 - x1 + 1, y2 - y1 + 1, model.context.RGBA, model.context.UNSIGNED_BYTE, pixels);\r\n    return pixels;\r\n  };\r\n  publicAPI.get3DContext = function () {\r\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\r\n      preserveDrawingBuffer: false,\r\n      depth: true,\r\n      alpha: true,\r\n      powerPreference: 'high-performance'\r\n    };\r\n    let result = null;\r\n    const webgl2Supported = typeof WebGL2RenderingContext !== 'undefined';\r\n    model.webgl2 = false;\r\n    if (model.defaultToWebgl2 && webgl2Supported) {\r\n      result = model.canvas.getContext('webgl2', options);\r\n      if (result) {\r\n        model.webgl2 = true;\r\n        vtkDebugMacro('using webgl2');\r\n      }\r\n    }\r\n    if (!result) {\r\n      vtkDebugMacro('using webgl1');\r\n      result = model.canvas.getContext('webgl', options) || model.canvas.getContext('experimental-webgl', options);\r\n    }\r\n    return new Proxy(result, getCachingContextHandler());\r\n  };\r\n  publicAPI.get2DContext = function () {\r\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    return model.canvas.getContext('2d', options);\r\n  };\r\n  publicAPI.restoreContext = () => {\r\n    const rp = _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].newInstance();\r\n    rp.setCurrentOperation('Release');\r\n    rp.traverse(publicAPI, null);\r\n  };\r\n  publicAPI.activateTexture = texture => {\r\n    // Only add if it isn't already there\r\n    const result = model._textureResourceIds.get(texture);\r\n    if (result !== undefined) {\r\n      model.context.activeTexture(model.context.TEXTURE0 + result);\r\n      return;\r\n    }\r\n    const activeUnit = publicAPI.getTextureUnitManager().allocate();\r\n    if (activeUnit < 0) {\r\n      vtkErrorMacro('Hardware does not support the number of textures defined.');\r\n      return;\r\n    }\r\n    model._textureResourceIds.set(texture, activeUnit);\r\n    model.context.activeTexture(model.context.TEXTURE0 + activeUnit);\r\n  };\r\n  publicAPI.deactivateTexture = texture => {\r\n    // Only deactivate if it isn't already there\r\n    const result = model._textureResourceIds.get(texture);\r\n    if (result !== undefined) {\r\n      publicAPI.getTextureUnitManager().free(result);\r\n      model._textureResourceIds.delete(texture);\r\n    }\r\n  };\r\n  publicAPI.getTextureUnitForTexture = texture => {\r\n    const result = model._textureResourceIds.get(texture);\r\n    if (result !== undefined) {\r\n      return result;\r\n    }\r\n    return -1;\r\n  };\r\n  publicAPI.getDefaultTextureByteSize = function (vtkType) {\r\n    let oglNorm16Ext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\r\n    let useHalfFloat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n    if (model.webgl2) {\r\n      switch (vtkType) {\r\n        case _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_0__.VtkDataTypes.CHAR:\r\n        case _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_0__.VtkDataTypes.SIGNED_CHAR:\r\n        case _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_0__.VtkDataTypes.UNSIGNED_CHAR:\r\n          return 1;\r\n        case oglNorm16Ext:\r\n        case useHalfFloat:\r\n        case _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_0__.VtkDataTypes.UNSIGNED_SHORT:\r\n        case _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_0__.VtkDataTypes.SHORT:\r\n        case _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_0__.VtkDataTypes.VOID:\r\n          // Used for unsigned int depth\r\n          return 2;\r\n        default:\r\n          // For all other cases, assume float\r\n          return 4;\r\n      }\r\n    }\r\n\r\n    // webgl1 type support is limited to 1 byte\r\n    return 1;\r\n  };\r\n  publicAPI.getDefaultTextureInternalFormat = function (vtktype, numComps) {\r\n    let oglNorm16Ext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\r\n    let useHalfFloat = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\r\n    if (model.webgl2) {\r\n      switch (vtktype) {\r\n        case _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_0__.VtkDataTypes.UNSIGNED_CHAR:\r\n          switch (numComps) {\r\n            case 1:\r\n              return model.context.R8;\r\n            case 2:\r\n              return model.context.RG8;\r\n            case 3:\r\n              return model.context.RGB8;\r\n            case 4:\r\n            default:\r\n              return model.context.RGBA8;\r\n          }\r\n        case oglNorm16Ext && !useHalfFloat && _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_0__.VtkDataTypes.UNSIGNED_SHORT:\r\n          switch (numComps) {\r\n            case 1:\r\n              return oglNorm16Ext.R16_EXT;\r\n            case 2:\r\n              return oglNorm16Ext.RG16_EXT;\r\n            case 3:\r\n              return oglNorm16Ext.RGB16_EXT;\r\n            case 4:\r\n            default:\r\n              return oglNorm16Ext.RGBA16_EXT;\r\n          }\r\n        // prioritize norm16 over float\r\n        case oglNorm16Ext && !useHalfFloat && _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_0__.VtkDataTypes.SHORT:\r\n          switch (numComps) {\r\n            case 1:\r\n              return oglNorm16Ext.R16_SNORM_EXT;\r\n            case 2:\r\n              return oglNorm16Ext.RG16_SNORM_EXT;\r\n            case 3:\r\n              return oglNorm16Ext.RGB16_SNORM_EXT;\r\n            case 4:\r\n            default:\r\n              return oglNorm16Ext.RGBA16_SNORM_EXT;\r\n          }\r\n        case _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_0__.VtkDataTypes.UNSIGNED_SHORT:\r\n        case _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_0__.VtkDataTypes.SHORT:\r\n        case _Common_Core_DataArray_Constants_js__WEBPACK_IMPORTED_MODULE_0__.VtkDataTypes.FLOAT:\r\n        default:\r\n          // useHalfFloat tells us if the texture can be accurately\r\n          // rendered with 16 bits or not.\r\n          switch (numComps) {\r\n            case 1:\r\n              return useHalfFloat ? model.context.R16F : model.context.R32F;\r\n            case 2:\r\n              return useHalfFloat ? model.context.RG16F : model.context.RG32F;\r\n            case 3:\r\n              return useHalfFloat ? model.context.RGB16F : model.context.RGB32F;\r\n            case 4:\r\n            default:\r\n              return useHalfFloat ? model.context.RGBA16F : model.context.RGBA32F;\r\n          }\r\n      }\r\n    }\r\n\r\n    // webgl1 only supports four types\r\n    switch (numComps) {\r\n      case 1:\r\n        return model.context.LUMINANCE;\r\n      case 2:\r\n        return model.context.LUMINANCE_ALPHA;\r\n      case 3:\r\n        return model.context.RGB;\r\n      case 4:\r\n      default:\r\n        return model.context.RGBA;\r\n    }\r\n  };\r\n  publicAPI.setBackgroundImage = img => {\r\n    model.bgImage.src = img.src;\r\n  };\r\n  publicAPI.setUseBackgroundImage = value => {\r\n    model.useBackgroundImage = value;\r\n\r\n    // Add or remove the background image from the\r\n    // DOM as specified.\r\n    if (model.useBackgroundImage && !model.el.contains(model.bgImage)) {\r\n      model.el.appendChild(model.bgImage);\r\n    } else if (!model.useBackgroundImage && model.el.contains(model.bgImage)) {\r\n      model.el.removeChild(model.bgImage);\r\n    }\r\n  };\r\n  function getCanvasDataURL() {\r\n    let format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : model.imageFormat;\r\n    // Copy current canvas to not modify the original\r\n    const temporaryCanvas = document.createElement('canvas');\r\n    const temporaryContext = temporaryCanvas.getContext('2d');\r\n    temporaryCanvas.width = model.canvas.width;\r\n    temporaryCanvas.height = model.canvas.height;\r\n    temporaryContext.drawImage(model.canvas, 0, 0);\r\n\r\n    // Get current client rect to place canvas\r\n    const mainBoundingClientRect = model.canvas.getBoundingClientRect();\r\n    const renderWindow = model.renderable;\r\n    const renderers = renderWindow.getRenderers();\r\n    renderers.forEach(renderer => {\r\n      const viewProps = renderer.getViewProps();\r\n      viewProps.forEach(viewProp => {\r\n        // Check if the prop has a container that should have canvas\r\n        if (viewProp.getContainer) {\r\n          const container = viewProp.getContainer();\r\n          const canvasList = container.getElementsByTagName('canvas');\r\n          // Go throughout all canvas and copy it into temporary main canvas\r\n          for (let i = 0; i < canvasList.length; i++) {\r\n            const currentCanvas = canvasList[i];\r\n            const boundingClientRect = currentCanvas.getBoundingClientRect();\r\n            const newXPosition = boundingClientRect.x - mainBoundingClientRect.x;\r\n            const newYPosition = boundingClientRect.y - mainBoundingClientRect.y;\r\n            temporaryContext.drawImage(currentCanvas, newXPosition, newYPosition);\r\n          }\r\n        }\r\n      });\r\n    });\r\n    const screenshot = temporaryCanvas.toDataURL(format);\r\n    temporaryCanvas.remove();\r\n    publicAPI.invokeImageReady(screenshot);\r\n  }\r\n  publicAPI.captureNextImage = function () {\r\n    let format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\r\n    let {\r\n      resetCamera = false,\r\n      size = null,\r\n      scale = 1\r\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    if (model.deleted) {\r\n      return null;\r\n    }\r\n    model.imageFormat = format;\r\n    const previous = model.notifyStartCaptureImage;\r\n    model.notifyStartCaptureImage = true;\r\n    model._screenshot = {\r\n      size: !!size || scale !== 1 ? size || model.size.map(val => val * scale) : null\r\n    };\r\n    return new Promise((resolve, reject) => {\r\n      const subscription = publicAPI.onImageReady(imageURL => {\r\n        if (model._screenshot.size === null) {\r\n          model.notifyStartCaptureImage = previous;\r\n          subscription.unsubscribe();\r\n          if (model._screenshot.placeHolder) {\r\n            // resize the main canvas back to its original size and show it\r\n            model.size = model._screenshot.originalSize;\r\n\r\n            // process the resize\r\n            publicAPI.modified();\r\n\r\n            // restore the saved camera parameters, if applicable\r\n            if (model._screenshot.cameras) {\r\n              model._screenshot.cameras.forEach(_ref => {\r\n                let {\r\n                  restoreParamsFn,\r\n                  arg\r\n                } = _ref;\r\n                return restoreParamsFn(arg);\r\n              });\r\n            }\r\n\r\n            // Trigger a render at the original size\r\n            publicAPI.traverseAllPasses();\r\n\r\n            // Remove and clean up the placeholder, revealing the original\r\n            model.el.removeChild(model._screenshot.placeHolder);\r\n            model._screenshot.placeHolder.remove();\r\n            model._screenshot = null;\r\n          }\r\n          resolve(imageURL);\r\n        } else {\r\n          // Create a placeholder image overlay while we resize and render\r\n          const tmpImg = document.createElement('img');\r\n          tmpImg.style = SCREENSHOT_PLACEHOLDER;\r\n          tmpImg.src = imageURL;\r\n          model._screenshot.placeHolder = model.el.appendChild(tmpImg);\r\n\r\n          // hide the main canvas\r\n          model.canvas.style.display = 'none';\r\n\r\n          // remember the main canvas original size, then resize it\r\n          model._screenshot.originalSize = model.size;\r\n          model.size = model._screenshot.size;\r\n          model._screenshot.size = null;\r\n\r\n          // process the resize\r\n          publicAPI.modified();\r\n          if (resetCamera) {\r\n            const isUserResetCamera = resetCamera !== true;\r\n\r\n            // If resetCamera was requested, we first save camera parameters\r\n            // from all the renderers, so we can restore them later\r\n            model._screenshot.cameras = model.renderable.getRenderers().map(renderer => {\r\n              const camera = renderer.getActiveCamera();\r\n              const params = camera.get('focalPoint', 'position', 'parallelScale');\r\n              return {\r\n                resetCameraArgs: isUserResetCamera ? {\r\n                  renderer\r\n                } : undefined,\r\n                resetCameraFn: isUserResetCamera ? resetCamera : renderer.resetCamera,\r\n                restoreParamsFn: camera.set,\r\n                // \"clone\" the params so we don't keep refs to properties\r\n                arg: JSON.parse(JSON.stringify(params))\r\n              };\r\n            });\r\n\r\n            // Perform the resetCamera() on each renderer only after capturing\r\n            // the params from all active cameras, in case there happen to be\r\n            // linked cameras among the renderers.\r\n            model._screenshot.cameras.forEach(_ref2 => {\r\n              let {\r\n                resetCameraFn,\r\n                resetCameraArgs\r\n              } = _ref2;\r\n              return resetCameraFn(resetCameraArgs);\r\n            });\r\n          }\r\n\r\n          // Trigger a render at the custom size\r\n          publicAPI.traverseAllPasses();\r\n        }\r\n      });\r\n    });\r\n  };\r\n  let hardwareMaximumLineWidth;\r\n  publicAPI.getHardwareMaximumLineWidth = () => {\r\n    // We cache the result of this function because `getParameter` is slow\r\n    if (hardwareMaximumLineWidth != null) {\r\n      return hardwareMaximumLineWidth;\r\n    }\r\n    const gl = publicAPI.get3DContext();\r\n    const lineWidthRange = gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE);\r\n    hardwareMaximumLineWidth = lineWidthRange[1];\r\n    return lineWidthRange[1];\r\n  };\r\n  publicAPI.getGLInformations = () => {\r\n    if (model._glInformation) {\r\n      return model._glInformation;\r\n    }\r\n    const gl = publicAPI.get3DContext();\r\n    const glTextureFloat = gl.getExtension('OES_texture_float');\r\n    const glTextureHalfFloat = gl.getExtension('OES_texture_half_float');\r\n    const glDebugRendererInfo = gl.getExtension('WEBGL_debug_renderer_info');\r\n    const glDrawBuffers = gl.getExtension('WEBGL_draw_buffers');\r\n    const glAnisotropic = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\r\n    const params = [['Max Vertex Attributes', 'MAX_VERTEX_ATTRIBS', gl.getParameter(gl.MAX_VERTEX_ATTRIBS)], ['Max Varying Vectors', 'MAX_VARYING_VECTORS', gl.getParameter(gl.MAX_VARYING_VECTORS)], ['Max Vertex Uniform Vectors', 'MAX_VERTEX_UNIFORM_VECTORS', gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS)], ['Max Fragment Uniform Vectors', 'MAX_FRAGMENT_UNIFORM_VECTORS', gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS)], ['Max Fragment Texture Image Units', 'MAX_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)], ['Max Vertex Texture Image Units', 'MAX_VERTEX_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)], ['Max Combined Texture Image Units', 'MAX_COMBINED_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)], ['Max 2D Texture Size', 'MAX_TEXTURE_SIZE', gl.getParameter(gl.MAX_TEXTURE_SIZE)], ['Max Cube Texture Size', 'MAX_CUBE_MAP_TEXTURE_SIZE', gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE)], ['Max Texture Anisotropy', 'MAX_TEXTURE_MAX_ANISOTROPY_EXT', glAnisotropic && gl.getParameter(glAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT)], ['Point Size Range', 'ALIASED_POINT_SIZE_RANGE', gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE).join(' - ')], ['Line Width Range', 'ALIASED_LINE_WIDTH_RANGE', gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE).join(' - ')], ['Max Viewport Dimensions', 'MAX_VIEWPORT_DIMS', gl.getParameter(gl.MAX_VIEWPORT_DIMS).join(' - ')], ['Max Renderbuffer Size', 'MAX_RENDERBUFFER_SIZE', gl.getParameter(gl.MAX_RENDERBUFFER_SIZE)], ['Framebuffer Red Bits', 'RED_BITS', gl.getParameter(gl.RED_BITS)], ['Framebuffer Green Bits', 'GREEN_BITS', gl.getParameter(gl.GREEN_BITS)], ['Framebuffer Blue Bits', 'BLUE_BITS', gl.getParameter(gl.BLUE_BITS)], ['Framebuffer Alpha Bits', 'ALPHA_BITS', gl.getParameter(gl.ALPHA_BITS)], ['Framebuffer Depth Bits', 'DEPTH_BITS', gl.getParameter(gl.DEPTH_BITS)], ['Framebuffer Stencil Bits', 'STENCIL_BITS', gl.getParameter(gl.STENCIL_BITS)], ['Framebuffer Subpixel Bits', 'SUBPIXEL_BITS', gl.getParameter(gl.SUBPIXEL_BITS)], ['MSAA Samples', 'SAMPLES', gl.getParameter(gl.SAMPLES)], ['MSAA Sample Buffers', 'SAMPLE_BUFFERS', gl.getParameter(gl.SAMPLE_BUFFERS)], ['Supported Formats for UByte Render Targets     ', 'UNSIGNED_BYTE RENDER TARGET FORMATS', [glTextureFloat && checkRenderTargetSupport(gl, gl.RGBA, gl.UNSIGNED_BYTE) ? 'RGBA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.RGB, gl.UNSIGNED_BYTE) ? 'RGB' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, gl.UNSIGNED_BYTE) ? 'LUMINANCE' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.ALPHA, gl.UNSIGNED_BYTE) ? 'ALPHA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Supported Formats for Half Float Render Targets', 'HALF FLOAT RENDER TARGET FORMATS', [glTextureHalfFloat && checkRenderTargetSupport(gl, gl.RGBA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'RGBA' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.RGB, glTextureHalfFloat.HALF_FLOAT_OES) ? 'RGB' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, glTextureHalfFloat.HALF_FLOAT_OES) ? 'LUMINANCE' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.ALPHA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'ALPHA' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Supported Formats for Full Float Render Targets', 'FLOAT RENDER TARGET FORMATS', [glTextureFloat && checkRenderTargetSupport(gl, gl.RGBA, gl.FLOAT) ? 'RGBA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.RGB, gl.FLOAT) ? 'RGB' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, gl.FLOAT) ? 'LUMINANCE' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.ALPHA, gl.FLOAT) ? 'ALPHA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.FLOAT) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Max Multiple Render Targets Buffers', 'MAX_DRAW_BUFFERS_WEBGL', glDrawBuffers ? gl.getParameter(glDrawBuffers.MAX_DRAW_BUFFERS_WEBGL) : 0], ['High Float Precision in Vertex Shader', 'HIGH_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMax, '</sup>)'].join('')], ['Medium Float Precision in Vertex Shader', 'MEDIUM_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMax, '</sup>)'].join('')], ['Low Float Precision in Vertex Shader', 'LOW_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMax, '</sup>)'].join('')], ['High Float Precision in Fragment Shader', 'HIGH_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMax, '</sup>)'].join('')], ['Medium Float Precision in Fragment Shader', 'MEDIUM_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMax, '</sup>)'].join('')], ['Low Float Precision in Fragment Shader', 'LOW_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMax, '</sup>)'].join('')], ['High Int Precision in Vertex Shader', 'HIGH_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMax, '</sup>)'].join('')], ['Medium Int Precision in Vertex Shader', 'MEDIUM_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMax, '</sup>)'].join('')], ['Low Int Precision in Vertex Shader', 'LOW_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMax, '</sup>)'].join('')], ['High Int Precision in Fragment Shader', 'HIGH_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMax, '</sup>)'].join('')], ['Medium Int Precision in Fragment Shader', 'MEDIUM_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMax, '</sup>)'].join('')], ['Low Int Precision in Fragment Shader', 'LOW_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMax, '</sup>)'].join('')], ['Supported Extensions', 'EXTENSIONS', gl.getSupportedExtensions().join('<br/>\\t\\t\\t\\t\\t    ')], ['WebGL Renderer', 'RENDERER', gl.getParameter(gl.RENDERER)], ['WebGL Vendor', 'VENDOR', gl.getParameter(gl.VENDOR)], ['WebGL Version', 'VERSION', gl.getParameter(gl.VERSION)], ['Shading Language Version', 'SHADING_LANGUAGE_VERSION', gl.getParameter(gl.SHADING_LANGUAGE_VERSION)], ['Unmasked Renderer', 'UNMASKED_RENDERER', glDebugRendererInfo && gl.getParameter(glDebugRendererInfo.UNMASKED_RENDERER_WEBGL)], ['Unmasked Vendor', 'UNMASKED_VENDOR', glDebugRendererInfo && gl.getParameter(glDebugRendererInfo.UNMASKED_VENDOR_WEBGL)], ['WebGL Version', 'WEBGL_VERSION', model.webgl2 ? 2 : 1]];\r\n    const result = {};\r\n    while (params.length) {\r\n      const [label, key, value] = params.pop();\r\n      if (key) {\r\n        result[key] = {\r\n          label,\r\n          value\r\n        };\r\n      }\r\n    }\r\n    model._glInformation = result;\r\n    return result;\r\n  };\r\n  publicAPI.traverseAllPasses = () => {\r\n    if (model.renderPasses) {\r\n      for (let index = 0; index < model.renderPasses.length; ++index) {\r\n        model.renderPasses[index].traverse(publicAPI, null);\r\n      }\r\n    }\r\n    if (model.notifyStartCaptureImage) {\r\n      getCanvasDataURL();\r\n    }\r\n    publicAPI.copyParentContent();\r\n    const childrenRW = model.renderable.getChildRenderWindowsByReference();\r\n    for (let i = 0; i < childrenRW.length; ++i) {\r\n      publicAPI.getViewNodeFor(childrenRW[i])?.traverseAllPasses();\r\n    }\r\n  };\r\n  publicAPI.copyParentContent = () => {\r\n    const rootParent = model.rootOpenGLRenderWindow;\r\n    if (!rootParent || !model.context2D) {\r\n      return;\r\n    }\r\n    const parentCanvas = rootParent.getCanvas();\r\n    const selfCanvas = model.canvas;\r\n    model.context2D.drawImage(parentCanvas, 0, parentCanvas.height - selfCanvas.height,\r\n    // source y axis is inverted\r\n    selfCanvas.width, selfCanvas.height, 0, 0, selfCanvas.width, selfCanvas.height);\r\n  };\r\n  publicAPI.resizeFromChildRenderWindows = () => {\r\n    // Adapt the size of the parent render window to the child render windows\r\n    const childrenRW = model.renderable.getChildRenderWindowsByReference();\r\n    if (childrenRW.length > 0) {\r\n      const maxSize = [0, 0];\r\n      for (let i = 0; i < childrenRW.length; ++i) {\r\n        const childSize = publicAPI.getViewNodeFor(childrenRW[i])?.getSize();\r\n        if (childSize) {\r\n          maxSize[0] = childSize[0] > maxSize[0] ? childSize[0] : maxSize[0];\r\n          maxSize[1] = childSize[1] > maxSize[1] ? childSize[1] : maxSize[1];\r\n        }\r\n      }\r\n      publicAPI.setSize(...maxSize);\r\n    }\r\n  };\r\n  publicAPI.disableCullFace = () => {\r\n    if (model.cullFaceEnabled) {\r\n      model.context.disable(model.context.CULL_FACE);\r\n      model.cullFaceEnabled = false;\r\n    }\r\n  };\r\n  publicAPI.enableCullFace = () => {\r\n    if (!model.cullFaceEnabled) {\r\n      model.context.enable(model.context.CULL_FACE);\r\n      model.cullFaceEnabled = true;\r\n    }\r\n  };\r\n  publicAPI.setViewStream = stream => {\r\n    if (model.viewStream === stream) {\r\n      return false;\r\n    }\r\n    if (model.subscription) {\r\n      model.subscription.unsubscribe();\r\n      model.subscription = null;\r\n    }\r\n    model.viewStream = stream;\r\n    if (model.viewStream) {\r\n      // Force background to be transparent + render\r\n      const mainRenderer = model.renderable.getRenderers()[0];\r\n      mainRenderer.getBackgroundByReference()[3] = 0;\r\n\r\n      // Enable display of the background image\r\n      publicAPI.setUseBackgroundImage(true);\r\n\r\n      // Bind to remote stream\r\n      model.subscription = model.viewStream.onImageReady(e => publicAPI.setBackgroundImage(e.image));\r\n      model.viewStream.setSize(model.size[0], model.size[1]);\r\n      model.viewStream.invalidateCache();\r\n      model.viewStream.render();\r\n      publicAPI.modified();\r\n    }\r\n    return true;\r\n  };\r\n  publicAPI.createSelector = () => {\r\n    const ret = _HardwareSelector_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance();\r\n    ret.setOpenGLRenderWindow(publicAPI);\r\n    return ret;\r\n  };\r\n  function clearEvents() {\r\n    model.canvas.removeEventListener('webglcontextlost', _preventDefault);\r\n    model.canvas.removeEventListener('webglcontextrestored', publicAPI.restoreContext);\r\n  }\r\n  publicAPI.delete = _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.chain(() => {\r\n    if (model.context) {\r\n      deleteGLContext();\r\n    }\r\n  }, clearEvents, publicAPI.delete, publicAPI.setViewStream);\r\n\r\n  // Do not trigger modified for performance reasons\r\n  publicAPI.setActiveFramebuffer = newActiveFramebuffer => {\r\n    model.activeFramebuffer = newActiveFramebuffer;\r\n  };\r\n  const superSetSize = publicAPI.setSize;\r\n  publicAPI.setSize = (width, height) => {\r\n    const modified = superSetSize(width, height);\r\n    if (modified) {\r\n      publicAPI.invokeWindowResizeEvent({\r\n        width,\r\n        height\r\n      });\r\n    }\r\n    return modified;\r\n  };\r\n  publicAPI.getGraphicsResourceForObject = vtkObj => {\r\n    if (!vtkObj) {\r\n      return null;\r\n    }\r\n    const vtko = model._graphicsResources.get(vtkObj);\r\n    const vtkh = model._graphicsResourceHash.get(vtkObj);\r\n    return {\r\n      vtkObj: vtko,\r\n      hash: vtkh\r\n    };\r\n  };\r\n  publicAPI.setGraphicsResourceForObject = (vtkObj, gObj, hash) => {\r\n    if (!vtkObj) {\r\n      return;\r\n    }\r\n    model._graphicsResources.set(vtkObj, gObj);\r\n    model._graphicsResourceHash.set(vtkObj, hash);\r\n  };\r\n  publicAPI.getGraphicsMemoryInfo = () => {\r\n    let memUsed = 0;\r\n    model._graphicsResources.forEach((gObj, vtkObj) => {\r\n      memUsed += gObj.getAllocatedGPUMemoryInBytes();\r\n    });\r\n    return memUsed;\r\n  };\r\n  publicAPI.releaseGraphicsResourcesForObject = vtkObj => {\r\n    if (!vtkObj) {\r\n      return false;\r\n    }\r\n    model._graphicsResources.get(vtkObj)?.releaseGraphicsResources(publicAPI);\r\n    return model._graphicsResources.delete(vtkObj) && model._graphicsResourceHash.delete(vtkObj);\r\n  };\r\n  publicAPI.releaseGraphicsResources = () => {\r\n    // Clear the shader cache\r\n    if (model.shaderCache !== null) {\r\n      model.shaderCache.releaseGraphicsResources(publicAPI);\r\n    }\r\n    // Free cached graphics resources at the context level\r\n    model._graphicsResources.forEach((gObj, vtkObj) => {\r\n      gObj.releaseGraphicsResources(publicAPI);\r\n    });\r\n    model._graphicsResources.clear();\r\n    model._graphicsResourceHash.clear();\r\n    if (model.textureUnitManager !== null) {\r\n      model.textureUnitManager.freeAll();\r\n    }\r\n    // Finally, ask the renderers to release prop resources\r\n    model.renderable.getRenderersByReference().forEach(ren => {\r\n      const glRen = publicAPI.getViewNodeFor(ren);\r\n      glRen?.releaseGraphicsResources();\r\n    });\r\n  };\r\n\r\n  // Proxy some methods if needed\r\n  const publicAPIBeforeProxy = {\r\n    ...publicAPI\r\n  };\r\n  parentMethodsToProxy.forEach(methodName => {\r\n    publicAPI[methodName] = function () {\r\n      if (model.rootOpenGLRenderWindow) {\r\n        // Proxy only methods when the render window has a parent\r\n        return model.rootOpenGLRenderWindow[methodName](...arguments);\r\n      }\r\n      return publicAPIBeforeProxy[methodName](...arguments);\r\n    };\r\n  });\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  cullFaceEnabled: false,\r\n  shaderCache: null,\r\n  initialized: false,\r\n  context: null,\r\n  context2D: null,\r\n  canvas: null,\r\n  cursorVisibility: true,\r\n  cursor: 'pointer',\r\n  textureUnitManager: null,\r\n  textureResourceIds: null,\r\n  containerSize: null,\r\n  renderPasses: [],\r\n  notifyStartCaptureImage: false,\r\n  webgl2: false,\r\n  defaultToWebgl2: true,\r\n  // attempt webgl2 on by default\r\n  activeFramebuffer: null,\r\n  imageFormat: 'image/png',\r\n  useOffScreen: false,\r\n  useBackgroundImage: false\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_RenderWindowViewNode_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].extend(publicAPI, model, initialValues);\r\n\r\n  // Create internal instances\r\n  if (!model.canvas) {\r\n    model.canvas = document.createElement('canvas');\r\n    model.canvas.style.width = '100%';\r\n  }\r\n  if (!model.selector) {\r\n    model.selector = _HardwareSelector_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance();\r\n    model.selector.setOpenGLRenderWindow(publicAPI);\r\n  }\r\n\r\n  // Create internal bgImage\r\n  model.bgImage = new Image();\r\n  model.bgImage.style.position = 'absolute';\r\n  model.bgImage.style.left = '0';\r\n  model.bgImage.style.top = '0';\r\n  model.bgImage.style.width = '100%';\r\n  model.bgImage.style.height = '100%';\r\n  model.bgImage.style.zIndex = '-1';\r\n  model._textureResourceIds = new Map();\r\n  model._graphicsResources = new Map();\r\n  model._graphicsResourceHash = new Map();\r\n  model._glInformation = null;\r\n  model.myFactory = _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].newInstance();\r\n  model.shaderCache = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance();\r\n  model.shaderCache.setOpenGLRenderWindow(publicAPI);\r\n\r\n  // setup default forward pass rendering\r\n  model.renderPasses[0] = _ForwardPass_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance();\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.get(publicAPI, model, ['shaderCache', 'textureUnitManager', 'webgl2', 'useBackgroundImage', 'activeFramebuffer', 'rootOpenGLRenderWindow']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.setGet(publicAPI, model, ['initialized', 'context', 'context2D', 'canvas', 'renderPasses', 'notifyStartCaptureImage', 'defaultToWebgl2', 'cursor', 'useOffScreen']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.setGetArray(publicAPI, model, ['size'], 2);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.event(publicAPI, model, 'imageReady');\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.event(publicAPI, model, 'windowResizeEvent');\r\n\r\n  // Object methods\r\n  vtkOpenGLRenderWindow(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.newInstance(extend, 'vtkOpenGLRenderWindow');\r\n\r\n// ----------------------------------------------------------------------------\r\n// Register API specific RenderWindow implementation\r\n// ----------------------------------------------------------------------------\r\n\r\n(0,_Core_RenderWindow_js__WEBPACK_IMPORTED_MODULE_2__.registerViewConstructor)('WebGL', newInstance);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkRenderWindow = {\r\n  newInstance,\r\n  extend,\r\n  pushMonitorGLContextCount,\r\n  popMonitorGLContextCount\r\n};\r\n\r\n// Register ourself to OpenGL backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_7__.registerOverride)('vtkRenderWindow', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/RenderWindow.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/RenderWindow/ContextProxy.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET_UNDERLYING_CONTEXT: () => (/* binding */ GET_UNDERLYING_CONTEXT),\n/* harmony export */   createContextProxyHandler: () => (/* binding */ createContextProxyHandler),\n/* harmony export */   \"default\": () => (/* binding */ ContextProxy)\n/* harmony export */ });\n// This is used to access the underlying 3D context\r\nconst GET_UNDERLYING_CONTEXT = '__getUnderlyingContext';\r\nfunction createContextProxyHandler() {\r\n  const cache = new Map();\r\n  const getParameterHandler = {\r\n    apply(target, gl, args) {\r\n      if (cache.has(args[0])) {\r\n        return cache.get(args[0]);\r\n      }\r\n      return target.apply(gl, args);\r\n    }\r\n  };\r\n\r\n  // only supports single-value setters\r\n  function cachedSetterHandler(key) {\r\n    return {\r\n      apply(target, gl, args) {\r\n        cache.set(key, args[0]);\r\n        return target.apply(gl, args);\r\n      }\r\n    };\r\n  }\r\n\r\n  // When a property is accessed on the webgl context proxy,\r\n  // it's accessed is intercepted. If the property name matches\r\n  // any of the keys of `propHandlers`, then that handler is called\r\n  // with the following arguments: (gl, prop, receiver, propValue)\r\n  // - gl (WebGL2RenderingContext): the underlying webgl context\r\n  // - propName (string): the property name\r\n  // - receiver (Proxy): the webgl context proxy\r\n  // - propValue (unknown): the value of `gl[propName]`\r\n\r\n  const propHandlers = Object.create(null);\r\n\r\n  // Sets getParameter(property) as a cached getter proxy.\r\n  // propValue.bind(gl) is to avoid Illegal Invocation errors.\r\n  propHandlers.getParameter = (gl, prop, receiver, propValue) => new Proxy(propValue.bind(gl), getParameterHandler);\r\n\r\n  // Sets depthMask(flag) as a cached setter proxy.\r\n  propHandlers.depthMask = (gl, prop, receiver, propValue) => new Proxy(propValue.bind(gl), cachedSetterHandler(gl.DEPTH_WRITEMASK));\r\n  return {\r\n    get(gl, prop, receiver) {\r\n      if (prop === GET_UNDERLYING_CONTEXT) return () => gl;\r\n      let value = Reflect.get(gl, prop, gl);\r\n      if (value instanceof Function) {\r\n        // prevents Illegal Invocation errors\r\n        value = value.bind(gl);\r\n      }\r\n      const propHandler = propHandlers[prop];\r\n      if (propHandler) {\r\n        return propHandler(gl, prop, receiver, value);\r\n      }\r\n      return value;\r\n    }\r\n  };\r\n}\r\nvar ContextProxy = {\r\n  createContextProxyHandler\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/RenderWindow/ContextProxy.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Renderer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkRenderer),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js\");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ViewNodeFactory.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js\");\n\r\n\r\n\r\n\r\nconst {\r\n  vtkDebugMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.c;\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLRenderer methods\r\n// ----------------------------------------------------------------------------\r\n/* eslint-disable no-bitwise */\r\n\r\nfunction vtkOpenGLRenderer(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkOpenGLRenderer');\r\n\r\n  // Builds myself.\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      if (!model.renderable) {\r\n        return;\r\n      }\r\n      publicAPI.updateLights();\r\n      publicAPI.prepareNodes();\r\n      publicAPI.addMissingNode(model.renderable.getActiveCamera());\r\n      publicAPI.addMissingNodes(model.renderable.getViewPropsWithNestedProps());\r\n      publicAPI.removeUnusedNodes();\r\n    }\r\n  };\r\n  publicAPI.updateLights = () => {\r\n    let count = 0;\r\n    const lights = model.renderable.getLightsByReference();\r\n    for (let index = 0; index < lights.length; ++index) {\r\n      if (lights[index].getSwitch() > 0.0) {\r\n        count++;\r\n      }\r\n    }\r\n    if (!count) {\r\n      vtkDebugMacro('No lights are on, creating one.');\r\n      model.renderable.createLight();\r\n    }\r\n    return count;\r\n  };\r\n  publicAPI.zBufferPass = prepass => {\r\n    if (prepass) {\r\n      let clearMask = 0;\r\n      const gl = model.context;\r\n      if (!model.renderable.getTransparent()) {\r\n        model.context.clearColor(1.0, 0.0, 0.0, 1.0);\r\n        clearMask |= gl.COLOR_BUFFER_BIT;\r\n      }\r\n      if (!model.renderable.getPreserveDepthBuffer()) {\r\n        gl.clearDepth(1.0);\r\n        clearMask |= gl.DEPTH_BUFFER_BIT;\r\n        model.context.depthMask(true);\r\n      }\r\n      const ts = publicAPI.getTiledSizeAndOrigin();\r\n      gl.enable(gl.SCISSOR_TEST);\r\n      gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\r\n      gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\r\n      gl.colorMask(true, true, true, true);\r\n      if (clearMask) {\r\n        gl.clear(clearMask);\r\n      }\r\n      gl.enable(gl.DEPTH_TEST);\r\n    }\r\n  };\r\n  publicAPI.opaqueZBufferPass = prepass => publicAPI.zBufferPass(prepass);\r\n\r\n  // Renders myself\r\n  publicAPI.cameraPass = prepass => {\r\n    if (prepass) {\r\n      publicAPI.clear();\r\n    }\r\n  };\r\n  publicAPI.getAspectRatio = () => {\r\n    const size = model._parent.getSizeByReference();\r\n    const viewport = model.renderable.getViewportByReference();\r\n    return size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * size[1]);\r\n  };\r\n  publicAPI.getTiledSizeAndOrigin = () => {\r\n    const vport = model.renderable.getViewportByReference();\r\n\r\n    // if there is no window assume 0 1\r\n    const tileViewPort = [0.0, 0.0, 1.0, 1.0];\r\n\r\n    // find the lower left corner of the viewport, taking into account the\r\n    // lower left boundary of this tile\r\n    const vpu = vport[0] - tileViewPort[0];\r\n    const vpv = vport[1] - tileViewPort[1];\r\n\r\n    // store the result as a pixel value\r\n    const ndvp = model._parent.normalizedDisplayToDisplay(vpu, vpv);\r\n    const lowerLeftU = Math.round(ndvp[0]);\r\n    const lowerLeftV = Math.round(ndvp[1]);\r\n\r\n    // find the upper right corner of the viewport, taking into account the\r\n    // lower left boundary of this tile\r\n    const vpu2 = vport[2] - tileViewPort[0];\r\n    const vpv2 = vport[3] - tileViewPort[1];\r\n    const ndvp2 = model._parent.normalizedDisplayToDisplay(vpu2, vpv2);\r\n\r\n    // now compute the size of the intersection of the viewport with the\r\n    // current tile\r\n    let usize = Math.round(ndvp2[0]) - lowerLeftU;\r\n    let vsize = Math.round(ndvp2[1]) - lowerLeftV;\r\n    if (usize < 0) {\r\n      usize = 0;\r\n    }\r\n    if (vsize < 0) {\r\n      vsize = 0;\r\n    }\r\n    return {\r\n      usize,\r\n      vsize,\r\n      lowerLeftU,\r\n      lowerLeftV\r\n    };\r\n  };\r\n  publicAPI.clear = () => {\r\n    let clearMask = 0;\r\n    const gl = model.context;\r\n    if (!model.renderable.getTransparent()) {\r\n      const background = model.renderable.getBackgroundByReference();\r\n      // renderable ensures that background has 4 entries.\r\n      gl.clearColor(background[0], background[1], background[2], background[3]);\r\n      clearMask |= gl.COLOR_BUFFER_BIT;\r\n    }\r\n    if (!model.renderable.getPreserveDepthBuffer()) {\r\n      gl.clearDepth(1.0);\r\n      clearMask |= gl.DEPTH_BUFFER_BIT;\r\n      gl.depthMask(true);\r\n    }\r\n    gl.colorMask(true, true, true, true);\r\n    const ts = publicAPI.getTiledSizeAndOrigin();\r\n    gl.enable(gl.SCISSOR_TEST);\r\n    gl.scissor(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\r\n    gl.viewport(ts.lowerLeftU, ts.lowerLeftV, ts.usize, ts.vsize);\r\n    if (clearMask) {\r\n      gl.clear(clearMask);\r\n    }\r\n    gl.enable(gl.DEPTH_TEST);\r\n    /* eslint-enable no-bitwise */\r\n  };\r\n\r\n  publicAPI.releaseGraphicsResources = () => {\r\n    if (model.selector !== null) {\r\n      model.selector.releaseGraphicsResources();\r\n    }\r\n    // Releasing resources means that the next render should re-create resources\r\n    if (model.renderable) {\r\n      model.renderable.getViewProps().forEach(prop => {\r\n        prop.modified();\r\n      });\r\n    }\r\n  };\r\n  publicAPI.setOpenGLRenderWindow = rw => {\r\n    if (model._openGLRenderWindow === rw) {\r\n      return;\r\n    }\r\n    publicAPI.releaseGraphicsResources();\r\n    model._openGLRenderWindow = rw;\r\n    model.context = null;\r\n    if (rw) {\r\n      model.context = model._openGLRenderWindow.getContext();\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  context: null,\r\n  _openGLRenderWindow: null,\r\n  selector: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].extend(publicAPI, model, initialValues);\r\n\r\n  // Build VTK API\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.g)(publicAPI, model, ['shaderCache']);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.e)(publicAPI, model, ['selector']);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.i)(publicAPI, model, ['openGLRenderWindow']);\r\n\r\n  // Object methods\r\n  vtkOpenGLRenderer(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, 'vtkOpenGLRenderer');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkRenderer = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to OpenGL backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__.registerOverride)('vtkRenderer', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/Renderer.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ReplacementShaderMapper.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkReplacementShaderMapper)\n/* harmony export */ });\n/* harmony import */ var _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ShaderProgram.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js\");\n\r\n\r\nfunction implementReplaceShaderCoincidentOffset(publicAPI, model) {\r\n  publicAPI.replaceShaderCoincidentOffset = (shaders, ren, actor) => {\r\n    const cp = publicAPI.getCoincidentParameters(ren, actor);\r\n\r\n    // if we need an offset handle it here\r\n    // The value of .000016 is suitable for depth buffers\r\n    // of at least 16 bit depth. We do not query the depth\r\n    // right now because we would need some mechanism to\r\n    // cache the result taking into account FBO changes etc.\r\n    if (cp && (cp.factor !== 0.0 || cp.offset !== 0.0)) {\r\n      let FSSource = shaders.Fragment;\r\n      FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].substitute(FSSource, '//VTK::Coincident::Dec', ['uniform float cfactor;', 'uniform float coffset;']).result;\r\n      if (model.context.getExtension('EXT_frag_depth')) {\r\n        if (cp.factor !== 0.0) {\r\n          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].substitute(FSSource, '//VTK::UniformFlow::Impl', ['float cscale = length(vec2(dFdx(gl_FragCoord.z),dFdy(gl_FragCoord.z)));', '//VTK::UniformFlow::Impl'], false).result;\r\n          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepthEXT = gl_FragCoord.z + cfactor*cscale + 0.000016*coffset;').result;\r\n        } else {\r\n          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepthEXT = gl_FragCoord.z + 0.000016*coffset;').result;\r\n        }\r\n      }\r\n      if (model._openGLRenderWindow.getWebgl2()) {\r\n        if (cp.factor !== 0.0) {\r\n          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].substitute(FSSource, '//VTK::UniformFlow::Impl', ['float cscale = length(vec2(dFdx(gl_FragCoord.z),dFdy(gl_FragCoord.z)));', '//VTK::UniformFlow::Impl'], false).result;\r\n          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepth = gl_FragCoord.z + cfactor*cscale + 0.000016*coffset;').result;\r\n        } else {\r\n          FSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].substitute(FSSource, '//VTK::Depth::Impl', 'gl_FragDepth = gl_FragCoord.z + 0.000016*coffset;').result;\r\n        }\r\n      }\r\n      shaders.Fragment = FSSource;\r\n    }\r\n  };\r\n}\r\nfunction implementBuildShadersWithReplacements(publicAPI, model) {\r\n  publicAPI.applyShaderReplacements = (shaders, viewSpec, pre) => {\r\n    let shaderReplacements = null;\r\n    if (viewSpec) {\r\n      shaderReplacements = viewSpec.ShaderReplacements;\r\n    }\r\n    if (shaderReplacements) {\r\n      for (let i = 0; i < shaderReplacements.length; i++) {\r\n        const currReplacement = shaderReplacements[i];\r\n        if (pre && currReplacement.replaceFirst || !pre && !currReplacement.replaceFirst) {\r\n          const shaderType = currReplacement.shaderType;\r\n          const ssrc = shaders[shaderType];\r\n          const substituteRes = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].substitute(ssrc, currReplacement.originalValue, currReplacement.replacementValue, currReplacement.replaceAll);\r\n          shaders[shaderType] = substituteRes.result;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  publicAPI.buildShaders = (shaders, ren, actor) => {\r\n    publicAPI.getReplacedShaderTemplate(shaders, ren, actor);\r\n    model.lastRenderPassShaderReplacement = model.currentRenderPass ? model.currentRenderPass.getShaderReplacement() : null;\r\n\r\n    // apply any renderPassReplacements\r\n    if (model.lastRenderPassShaderReplacement) {\r\n      model.lastRenderPassShaderReplacement(shaders);\r\n    }\r\n    const openGLSpec = model.renderable.getViewSpecificProperties().OpenGL;\r\n\r\n    // user specified pre replacements\r\n    publicAPI.applyShaderReplacements(shaders, openGLSpec, true);\r\n    publicAPI.replaceShaderValues(shaders, ren, actor);\r\n\r\n    // user specified post replacements\r\n    publicAPI.applyShaderReplacements(shaders, openGLSpec);\r\n  };\r\n  publicAPI.getReplacedShaderTemplate = (shaders, ren, actor) => {\r\n    const openGLSpecProp = model.renderable.getViewSpecificProperties().OpenGL;\r\n    publicAPI.getShaderTemplate(shaders, ren, actor);\r\n    let vertexShaderCode = shaders.Vertex;\r\n    if (openGLSpecProp) {\r\n      const vertexSpecProp = openGLSpecProp.VertexShaderCode;\r\n      if (vertexSpecProp !== undefined && vertexSpecProp !== '') {\r\n        vertexShaderCode = vertexSpecProp;\r\n      }\r\n    }\r\n    shaders.Vertex = vertexShaderCode;\r\n    let fragmentShaderCode = shaders.Fragment;\r\n    if (openGLSpecProp) {\r\n      const fragmentSpecProp = openGLSpecProp.FragmentShaderCode;\r\n      if (fragmentSpecProp !== undefined && fragmentSpecProp !== '') {\r\n        fragmentShaderCode = fragmentSpecProp;\r\n      }\r\n    }\r\n    shaders.Fragment = fragmentShaderCode;\r\n    let geometryShaderCode = shaders.Geometry;\r\n    if (openGLSpecProp) {\r\n      const geometrySpecProp = openGLSpecProp.GeometryShaderCode;\r\n      if (geometrySpecProp !== undefined) {\r\n        geometryShaderCode = geometrySpecProp;\r\n      }\r\n    }\r\n    shaders.Geometry = geometryShaderCode;\r\n  };\r\n}\r\nvar vtkReplacementShaderMapper = {\r\n  implementReplaceShaderCoincidentOffset,\r\n  implementBuildShadersWithReplacements\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/ReplacementShaderMapper.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ScalarBarActor.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ index),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _Core_ScalarBarActor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/ScalarBarActor.js */ "./node_modules/@kitware/vtk.js/Rendering/Core/ScalarBarActor.js");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "./node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js");\n\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLScalarBarActor methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkOpenGLScalarBarActor(publicAPI, model) {\r\n  model.classHierarchy.push(\'vtkOpenGLScalarBarActor\');\r\n\r\n  // Builds myself.\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType(\'vtkOpenGLRenderer\');\r\n      model._openGLRenderWindow = model._openGLRenderer.getParent();\r\n      if (!model.scalarBarActorHelper.getRenderable()) {\r\n        model.scalarBarActorHelper.setRenderable(model.renderable);\r\n      }\r\n      publicAPI.prepareNodes();\r\n      publicAPI.addMissingNode(model.scalarBarActorHelper.getBarActor());\r\n      publicAPI.addMissingNode(model.scalarBarActorHelper.getTmActor());\r\n      publicAPI.removeUnusedNodes();\r\n    }\r\n  };\r\n  publicAPI.opaquePass = (prepass, renderPass) => {\r\n    if (prepass) {\r\n      const camera = model._openGLRenderer ? model._openGLRenderer.getRenderable().getActiveCamera() : null;\r\n      const tsize = model._openGLRenderer.getTiledSizeAndOrigin();\r\n      model.scalarBarActorHelper.updateAPISpecificData([tsize.usize, tsize.vsize], camera, model._openGLRenderWindow.getRenderable());\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);\r\n  model.scalarBarActorHelper = _Core_ScalarBarActor_js__WEBPACK_IMPORTED_MODULE_1__["default"].newScalarBarActorHelper();\r\n\r\n  // Object methods\r\n  vtkOpenGLScalarBarActor(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, \'vtkOpenGLScalarBarActor\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar index = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to OpenGL backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__.registerOverride)(\'vtkScalarBarActor\', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/ScalarBarActor.js?')},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Shader.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkShader$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n\r\n\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\n\r\n// export const SHADER_TYPES = ['Vertex', 'Fragment', 'Geometry', 'Unknown'];\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkShader methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkShader(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkShader');\r\n  publicAPI.compile = () => {\r\n    let stype = model.context.VERTEX_SHADER;\r\n    if (!model.source || !model.source.length || model.shaderType === 'Unknown') {\r\n      return false;\r\n    }\r\n\r\n    // Ensure we delete the previous shader if necessary.\r\n    if (model.handle !== 0) {\r\n      model.context.deleteShader(model.handle);\r\n      model.handle = 0;\r\n    }\r\n    switch (model.shaderType) {\r\n      // case vtkShader::Geometry:\r\n      //   type = GL_GEOMETRY_SHADER;\r\n      //   break;\r\n      case 'Fragment':\r\n        stype = model.context.FRAGMENT_SHADER;\r\n        break;\r\n      case 'Vertex':\r\n      default:\r\n        stype = model.context.VERTEX_SHADER;\r\n        break;\r\n    }\r\n    model.handle = model.context.createShader(stype);\r\n    model.context.shaderSource(model.handle, model.source);\r\n    model.context.compileShader(model.handle);\r\n    const isCompiled = model.context.getShaderParameter(model.handle, model.context.COMPILE_STATUS);\r\n    if (!isCompiled) {\r\n      const lastError = model.context.getShaderInfoLog(model.handle);\r\n      vtkErrorMacro(`Error compiling shader '${model.source}': ${lastError}`);\r\n      model.context.deleteShader(model.handle);\r\n      model.handle = 0;\r\n      return false;\r\n    }\r\n\r\n    // The shader compiled, store its handle and return success.\r\n    return true;\r\n  };\r\n  publicAPI.cleanup = () => {\r\n    if (model.shaderType === 'Unknown' || model.handle === 0) {\r\n      return;\r\n    }\r\n    model.context.deleteShader(model.handle);\r\n    model.handle = 0;\r\n    model.dirty = true;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  shaderType: 'Unknown',\r\n  source: '',\r\n  error: '',\r\n  handle: 0,\r\n  dirty: false,\r\n  context: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['shaderType', 'source', 'error', 'handle', 'context']);\r\n\r\n  // Object methods\r\n  vtkShader(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkShader');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkShader$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/Shader.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderCache.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkShaderCache$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var spark_md5__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! spark-md5 */ \"./node_modules/spark-md5/spark-md5.js\");\n/* harmony import */ var spark_md5__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(spark_md5__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ShaderProgram.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js\");\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst SET_GET_FIELDS = ['lastShaderProgramBound', 'context', '_openGLRenderWindow'];\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkShaderCache methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkShaderCache(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkShaderCache');\r\n  publicAPI.replaceShaderValues = (VSSource, FSSource, GSSource) => {\r\n    // first handle renaming any Fragment shader inputs\r\n    // if we have a geometry shader. By default fragment shaders\r\n    // assume their inputs come from a Vertex Shader. When we\r\n    // have a Geometry shader we rename the frament shader inputs\r\n    // to come from the geometry shader\r\n\r\n    let nFSSource = FSSource;\r\n    if (GSSource.length > 0) {\r\n      nFSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].substitute(nFSSource, 'VSOut', 'GSOut').result;\r\n    }\r\n    const gl2 = model._openGLRenderWindow.getWebgl2();\r\n    let fragDepthString = '\\n';\r\n    let version = '#version 100\\n';\r\n    if (gl2) {\r\n      version = '#version 300 es\\n' + '#define attribute in\\n' + '#define textureCube texture\\n' + '#define texture2D texture\\n' + '#define textureCubeLod textureLod\\n' + '#define texture2DLod textureLod\\n';\r\n    } else {\r\n      model.context.getExtension('OES_standard_derivatives');\r\n      if (model.context.getExtension('EXT_frag_depth')) {\r\n        fragDepthString = '#extension GL_EXT_frag_depth : enable\\n';\r\n      }\r\n      if (model.context.getExtension('EXT_shader_texture_lod')) {\r\n        fragDepthString += '#extension GL_EXT_shader_texture_lod : enable\\n' + '#define textureCubeLod textureCubeLodEXT\\n' + '#define texture2DLod texture2DLodEXT';\r\n      }\r\n    }\r\n    nFSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].substitute(nFSSource, '//VTK::System::Dec', [`${version}\\n`, gl2 ? '' : '#extension GL_OES_standard_derivatives : enable\\n', fragDepthString, '#ifdef GL_FRAGMENT_PRECISION_HIGH', 'precision highp float;', 'precision highp int;', '#else', 'precision mediump float;', 'precision mediump int;', '#endif']).result;\r\n    let nVSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].substitute(VSSource, '//VTK::System::Dec', [`${version}\\n`, '#ifdef GL_FRAGMENT_PRECISION_HIGH', 'precision highp float;', 'precision highp int;', '#else', 'precision mediump float;', 'precision mediump int;', '#endif']).result;\r\n    if (gl2) {\r\n      nVSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].substitute(nVSSource, 'varying', 'out').result;\r\n      nFSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].substitute(nFSSource, 'varying', 'in').result;\r\n      let shaderOutputs = '';\r\n      let outputCount = 0;\r\n      while (nFSSource.includes(`gl_FragData[${outputCount}]`)) {\r\n        nFSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].substitute(nFSSource, `gl_FragData\\\\[${outputCount}\\\\]`, `fragOutput${outputCount}`).result;\r\n        shaderOutputs += `layout(location = ${outputCount}) out vec4 fragOutput${outputCount};\\n`;\r\n        outputCount++;\r\n      }\r\n      nFSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].substitute(nFSSource, '//VTK::Output::Dec', shaderOutputs).result;\r\n    }\r\n\r\n    // nFSSource = ShaderProgram.substitute(nFSSource, 'gl_FragData\\\\[0\\\\]',\r\n    //   'gl_FragColor').result;\r\n\r\n    const nGSSource = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].substitute(GSSource, '//VTK::System::Dec', version).result;\r\n    return {\r\n      VSSource: nVSSource,\r\n      FSSource: nFSSource,\r\n      GSSource: nGSSource\r\n    };\r\n  };\r\n\r\n  // return NULL if there is an issue\r\n  publicAPI.readyShaderProgramArray = (vertexCode, fragmentCode, geometryCode) => {\r\n    const data = publicAPI.replaceShaderValues(vertexCode, fragmentCode, geometryCode);\r\n    const shaderProgram = publicAPI.getShaderProgram(data.VSSource, data.FSSource, data.GSSource);\r\n    return publicAPI.readyShaderProgram(shaderProgram);\r\n  };\r\n  publicAPI.readyShaderProgram = program => {\r\n    if (!program) {\r\n      return null;\r\n    }\r\n\r\n    // compile if needed\r\n    if (!program.getCompiled() && !program.compileShader()) {\r\n      return null;\r\n    }\r\n\r\n    // bind if needed\r\n    if (!publicAPI.bindShaderProgram(program)) {\r\n      return null;\r\n    }\r\n    return program;\r\n  };\r\n  publicAPI.getShaderProgram = (vertexCode, fragmentCode, geometryCode) => {\r\n    // compute the MD5 and the check the map\r\n    const hashInput = `${vertexCode}${fragmentCode}${geometryCode}`;\r\n    const result = spark_md5__WEBPACK_IMPORTED_MODULE_0___default().hash(hashInput);\r\n\r\n    // does it already exist?\r\n    if (!(result in model.shaderPrograms)) {\r\n      // create one\r\n      const sps = _ShaderProgram_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance();\r\n      sps.setContext(model.context);\r\n      sps.getVertexShader().setSource(vertexCode);\r\n      sps.getFragmentShader().setSource(fragmentCode);\r\n      if (geometryCode) {\r\n        sps.getGeometryShader().setSource(geometryCode);\r\n      }\r\n      sps.setMd5Hash(result);\r\n      model.shaderPrograms[result] = sps;\r\n      return sps;\r\n    }\r\n    return model.shaderPrograms[result];\r\n  };\r\n  publicAPI.releaseGraphicsResources = win => {\r\n    // NOTE:\r\n    // In the current implementation as of October 26th, if a shader\r\n    // program is created by ShaderCache then it should make sure\r\n    // that it releases the graphics resources used by these programs.\r\n    // It is not wisely for callers to do that since then they would\r\n    // have to loop over all the programs were in use and invoke\r\n    // release graphics resources individually.\r\n\r\n    publicAPI.releaseCurrentShaderProgram();\r\n    Object.keys(model.shaderPrograms).map(key => model.shaderPrograms[key]).forEach(sp => sp.cleanup());\r\n    model.shaderPrograms = {};\r\n  };\r\n  publicAPI.releaseCurrentShaderProgram = () => {\r\n    // release prior shader\r\n    if (model.lastShaderProgramBound) {\r\n      model.lastShaderProgramBound.cleanup();\r\n      model.lastShaderProgramBound = null;\r\n    }\r\n  };\r\n  publicAPI.bindShaderProgram = program => {\r\n    if (model.lastShaderProgramBound === program) {\r\n      return 1;\r\n    }\r\n\r\n    // release prior program\r\n    if (model.lastShaderProgramBound) {\r\n      model.lastShaderProgramBound.release();\r\n    }\r\n    program.bind();\r\n    model.lastShaderProgramBound = program;\r\n    return 1;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  lastShaderProgramBound: null,\r\n  shaderPrograms: null,\r\n  context: null\r\n  // _openGLRenderWindow: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Internal objects\r\n  model.shaderPrograms = {};\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.setGet(publicAPI, model, SET_GET_FIELDS);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.moveToProtected(publicAPI, model, ['openGLRenderWindow']);\r\n\r\n  // Object methods\r\n  vtkShaderCache(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_1__.m.newInstance(extend, 'vtkShaderCache');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkShaderCache$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderCache.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkShaderProgram$1),\n/* harmony export */   substitute: () => (/* binding */ substitute)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Shader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Shader.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Shader.js\");\n\r\n\r\n\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\n\r\n// perform in place string substitutions, indicate if a substitution was done\r\n// this is useful for building up shader strings which typically involve\r\n// lots of string substitutions. Return true if a substitution was done.\r\nfunction substitute(source, search, replace, all) {\r\n  // We only accept strings or array of strings, typeof is faster than Array.isArray\r\n  const replaceStr = typeof replace === 'string' ? replace : replace.join('\\n');\r\n\r\n  // We don't need to instantiate a RegExp if we don't want a global substitution.\r\n  // In all other cases, we need to take the provided string or RegExp and\r\n  // instantiate a new one to add the `g` flag.\r\n  // Argument defaults are transpiled to slow `arguments`-based operations\r\n  // better assume undefined as flag to know if the value is set or not\r\n  const replaceSearch = all === false ? search : new RegExp(search, 'g');\r\n  const resultstr = source.replace(replaceSearch, replaceStr);\r\n  return {\r\n    // If the result is different than the input, we did perform a replacement\r\n    replace: resultstr !== replaceStr,\r\n    result: resultstr\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkShaderProgram methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkShaderProgram(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkShaderProgram');\r\n  publicAPI.compileShader = () => {\r\n    if (!model.vertexShader.compile()) {\r\n      vtkErrorMacro(model.vertexShader.getSource().split('\\n').map((line, index) => `${index}: ${line}`).join('\\n'));\r\n      vtkErrorMacro(model.vertexShader.getError());\r\n      return 0;\r\n    }\r\n    if (!model.fragmentShader.compile()) {\r\n      vtkErrorMacro(model.fragmentShader.getSource().split('\\n').map((line, index) => `${index}: ${line}`).join('\\n'));\r\n      vtkErrorMacro(model.fragmentShader.getError());\r\n      return 0;\r\n    }\r\n    // skip geometry for now\r\n    if (!publicAPI.attachShader(model.vertexShader)) {\r\n      vtkErrorMacro(model.error);\r\n      return 0;\r\n    }\r\n    if (!publicAPI.attachShader(model.fragmentShader)) {\r\n      vtkErrorMacro(model.error);\r\n      return 0;\r\n    }\r\n    if (!publicAPI.link()) {\r\n      vtkErrorMacro(`Links failed: ${model.error}`);\r\n      return 0;\r\n    }\r\n    publicAPI.setCompiled(true);\r\n    return 1;\r\n  };\r\n  publicAPI.cleanup = () => {\r\n    if (model.shaderType === 'Unknown' || model.handle === 0) {\r\n      return;\r\n    }\r\n    publicAPI.release();\r\n    if (model.vertexShaderHandle !== 0) {\r\n      model.context.detachShader(model.handle, model.vertexShaderHandle);\r\n      model.vertexShaderHandle = 0;\r\n    }\r\n    if (model.fragmentShaderHandle !== 0) {\r\n      model.context.detachShader(model.handle, model.fragmentShaderHandle);\r\n      model.fragmentShaderHandle = 0;\r\n    }\r\n    model.context.deleteProgram(model.handle);\r\n    model.handle = 0;\r\n    publicAPI.setCompiled(false);\r\n  };\r\n  publicAPI.bind = () => {\r\n    if (!model.linked && !publicAPI.link()) {\r\n      return false;\r\n    }\r\n    model.context.useProgram(model.handle);\r\n    publicAPI.setBound(true);\r\n    return true;\r\n  };\r\n  publicAPI.isBound = () => !!model.bound;\r\n  publicAPI.release = () => {\r\n    model.context.useProgram(null);\r\n    publicAPI.setBound(false);\r\n  };\r\n  publicAPI.setContext = ctx => {\r\n    model.vertexShader.setContext(ctx);\r\n    model.fragmentShader.setContext(ctx);\r\n    model.geometryShader.setContext(ctx);\r\n  };\r\n  publicAPI.link = () => {\r\n    if (model.linked) {\r\n      return true;\r\n    }\r\n    if (model.handle === 0) {\r\n      model.error = 'Program has not been initialized, and/or does not have shaders.';\r\n      return false;\r\n    }\r\n\r\n    // clear out the list of uniforms used\r\n    model.uniformLocs = {};\r\n    model.context.linkProgram(model.handle);\r\n    const isCompiled = model.context.getProgramParameter(model.handle, model.context.LINK_STATUS);\r\n    if (!isCompiled) {\r\n      const lastError = model.context.getProgramInfoLog(model.handle);\r\n      vtkErrorMacro(`Error linking shader ${lastError}`);\r\n      model.handle = 0;\r\n      return false;\r\n    }\r\n    publicAPI.setLinked(true);\r\n    model.attributeLocs = {};\r\n    return true;\r\n  };\r\n  publicAPI.setUniformMatrix = (name, v) => {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    const f32 = new Float32Array(v);\r\n    model.context.uniformMatrix4fv(location, false, f32);\r\n    return true;\r\n  };\r\n  publicAPI.setUniformMatrix3x3 = (name, v) => {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    const f32 = new Float32Array(v);\r\n    model.context.uniformMatrix3fv(location, false, f32);\r\n    return true;\r\n  };\r\n  publicAPI.setUniformf = (name, v) => {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    model.context.uniform1f(location, v);\r\n    return true;\r\n  };\r\n  publicAPI.setUniformfv = (name, v) => {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    model.context.uniform1fv(location, v);\r\n    return true;\r\n  };\r\n  publicAPI.setUniformi = (name, v) => {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    model.context.uniform1i(location, v);\r\n    return true;\r\n  };\r\n  publicAPI.setUniformiv = (name, v) => {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    model.context.uniform1iv(location, v);\r\n    return true;\r\n  };\r\n  publicAPI.setUniform2f = (name, v1, v2) => {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    if (v2 === undefined) {\r\n      throw new RangeError('Invalid number of values for array');\r\n    }\r\n    model.context.uniform2f(location, v1, v2);\r\n    return true;\r\n  };\r\n  publicAPI.setUniform2fv = (name, v) => {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    model.context.uniform2fv(location, v);\r\n    return true;\r\n  };\r\n  publicAPI.setUniform2i = (name, v1, v2) => {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    if (v2 === undefined) {\r\n      throw new RangeError('Invalid number of values for array');\r\n    }\r\n    model.context.uniform2i(location, v1, v2);\r\n    return true;\r\n  };\r\n  publicAPI.setUniform2iv = (name, v) => {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    model.context.uniform2iv(location, v);\r\n    return true;\r\n  };\r\n  publicAPI.setUniform3f = (name, a1, a2, a3) => {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    if (a3 === undefined) {\r\n      throw new RangeError('Invalid number of values for array');\r\n    }\r\n    model.context.uniform3f(location, a1, a2, a3);\r\n    return true;\r\n  };\r\n  publicAPI.setUniform3fArray = (name, a) => {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    if (!Array.isArray(a) || a.length !== 3) {\r\n      throw new RangeError('Invalid number of values for array');\r\n    }\r\n    model.context.uniform3f(location, a[0], a[1], a[2]);\r\n    return true;\r\n  };\r\n  publicAPI.setUniform3fv = (name, v) => {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    model.context.uniform3fv(location, v);\r\n    return true;\r\n  };\r\n  publicAPI.setUniform3i = function (name) {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n      args[_key - 1] = arguments[_key];\r\n    }\r\n    let array = args;\r\n    // allow an array passed as a single argument\r\n    if (array.length === 1 && Array.isArray(array[0])) {\r\n      array = array[0];\r\n    }\r\n    if (array.length !== 3) {\r\n      throw new RangeError('Invalid number of values for array');\r\n    }\r\n    model.context.uniform3i(location, array[0], array[1], array[2]);\r\n    return true;\r\n  };\r\n  publicAPI.setUniform3iv = (name, v) => {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    model.context.uniform3iv(location, v);\r\n    return true;\r\n  };\r\n  publicAPI.setUniform4f = function (name) {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\r\n      args[_key2 - 1] = arguments[_key2];\r\n    }\r\n    let array = args;\r\n    // allow an array passed as a single argument\r\n    if (array.length === 1 && Array.isArray(array[0])) {\r\n      array = array[0];\r\n    }\r\n    if (array.length !== 4) {\r\n      throw new RangeError('Invalid number of values for array');\r\n    }\r\n    model.context.uniform4f(location, array[0], array[1], array[2], array[3]);\r\n    return true;\r\n  };\r\n  publicAPI.setUniform4fv = (name, v) => {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    model.context.uniform4fv(location, v);\r\n    return true;\r\n  };\r\n  publicAPI.setUniform4i = function (name) {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\r\n      args[_key3 - 1] = arguments[_key3];\r\n    }\r\n    let array = args;\r\n    // allow an array passed as a single argument\r\n    if (array.length === 1 && Array.isArray(array[0])) {\r\n      array = array[0];\r\n    }\r\n    if (array.length !== 4) {\r\n      throw new RangeError('Invalid number of values for array');\r\n    }\r\n    model.context.uniform4i(location, array[0], array[1], array[2], array[3]);\r\n    return true;\r\n  };\r\n  publicAPI.setUniform4iv = (name, v) => {\r\n    const location = publicAPI.findUniform(name);\r\n    if (location === -1) {\r\n      model.error = `Could not set uniform ${name} . No such uniform.`;\r\n      return false;\r\n    }\r\n    model.context.uniform4iv(location, v);\r\n    return true;\r\n  };\r\n  publicAPI.findUniform = name => {\r\n    if (!name || !model.linked) {\r\n      return -1;\r\n    }\r\n\r\n    // see if we have cached the result\r\n    let loc = model.uniformLocs[name];\r\n    if (loc !== undefined) {\r\n      return loc;\r\n    }\r\n    loc = model.context.getUniformLocation(model.handle, name);\r\n    if (loc === null) {\r\n      model.error = `Uniform ${name} not found in current shader program.`;\r\n      model.uniformLocs[name] = -1;\r\n      return -1;\r\n    }\r\n    model.uniformLocs[name] = loc;\r\n    return loc;\r\n  };\r\n  publicAPI.isUniformUsed = name => {\r\n    if (!name) {\r\n      return false;\r\n    }\r\n\r\n    // see if we have cached the result\r\n    let loc = model.uniformLocs[name];\r\n    if (loc !== undefined) {\r\n      return loc !== null;\r\n    }\r\n    if (!model.linked) {\r\n      vtkErrorMacro('attempt to find uniform when the shader program is not linked');\r\n      return false;\r\n    }\r\n    loc = model.context.getUniformLocation(model.handle, name);\r\n    model.uniformLocs[name] = loc;\r\n    if (loc === null) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  publicAPI.isAttributeUsed = name => {\r\n    if (!name) {\r\n      return false;\r\n    }\r\n\r\n    // see if we have cached the result\r\n    if (name in model.attributeLocs) {\r\n      return true;\r\n    }\r\n    if (!model.linked) {\r\n      vtkErrorMacro('attempt to find uniform when the shader program is not linked');\r\n      return false;\r\n    }\r\n    const loc = model.context.getAttribLocation(model.handle, name);\r\n    if (loc === -1) {\r\n      return false;\r\n    }\r\n    model.attributeLocs[name] = loc;\r\n    return true;\r\n  };\r\n  publicAPI.attachShader = shader => {\r\n    if (shader.getHandle() === 0) {\r\n      model.error = 'Shader object was not initialized, cannot attach it.';\r\n      return false;\r\n    }\r\n    if (shader.getShaderType() === 'Unknown') {\r\n      model.error = 'Shader object is of type Unknown and cannot be used.';\r\n      return false;\r\n    }\r\n    if (model.handle === 0) {\r\n      const thandle = model.context.createProgram();\r\n      if (thandle === 0) {\r\n        model.error = 'Could not create shader program.';\r\n        return false;\r\n      }\r\n      model.handle = thandle;\r\n      model.linked = false;\r\n    }\r\n    if (shader.getShaderType() === 'Vertex') {\r\n      if (model.vertexShaderHandle !== 0) {\r\n        model.context.detachShader(model.handle, model.vertexShaderHandle);\r\n      }\r\n      model.vertexShaderHandle = shader.getHandle();\r\n    }\r\n    if (shader.getShaderType() === 'Fragment') {\r\n      if (model.fragmentShaderHandle !== 0) {\r\n        model.context.detachShader(model.handle, model.fragmentShaderHandle);\r\n      }\r\n      model.fragmentShaderHandle = shader.getHandle();\r\n    }\r\n    model.context.attachShader(model.handle, shader.getHandle());\r\n    publicAPI.setLinked(false);\r\n    return true;\r\n  };\r\n  publicAPI.detachShader = shader => {\r\n    if (shader.getHandle() === 0) {\r\n      model.error = 'shader object was not initialized, cannot attach it.';\r\n      return false;\r\n    }\r\n    if (shader.getShaderType() === 'Unknown') {\r\n      model.error = 'Shader object is of type Unknown and cannot be used.';\r\n      return false;\r\n    }\r\n    if (model.handle === 0) {\r\n      model.error = 'This shader program has not been initialized yet.';\r\n    }\r\n    switch (shader.getShaderType()) {\r\n      case 'Vertex':\r\n        if (model.vertexShaderHandle !== shader.getHandle()) {\r\n          model.error = 'The supplied shader was not attached to this program.';\r\n          return false;\r\n        }\r\n        model.context.detachShader(model.handle, shader.getHandle());\r\n        model.vertexShaderHandle = 0;\r\n        model.linked = false;\r\n        return true;\r\n      case 'Fragment':\r\n        if (model.fragmentShaderHandle !== shader.getHandle()) {\r\n          model.error = 'The supplied shader was not attached to this program.';\r\n          return false;\r\n        }\r\n        model.context.detachShader(model.handle, shader.getHandle());\r\n        model.fragmentShaderHandle = 0;\r\n        model.linked = false;\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n  publicAPI.setContext = ctx => {\r\n    model.context = ctx;\r\n    model.vertexShader.setContext(ctx);\r\n    model.fragmentShader.setContext(ctx);\r\n    model.geometryShader.setContext(ctx);\r\n  };\r\n  publicAPI.setLastCameraMTime = mtime => {\r\n    model.lastCameraMTime = mtime;\r\n  };\r\n\r\n  // publicAPI.enableAttributeArray = (name) => {\r\n  //   const location = publicAPI.findAttributeArray(name);\r\n  //   if (location === -1) {\r\n  //     model.error = `Could not enable attribute ${name} No such attribute.`;\r\n  //     return false;\r\n  //   }\r\n  //   model.context.enableVertexAttribArray(location);\r\n  //   return true;\r\n  // };\r\n\r\n  // publicAPI.disableAttributeArray = (name) => {\r\n  //   const location = publicAPI.findAttributeArray(name);\r\n  //   if (location === -1) {\r\n  //     model.error = `Could not enable attribute ${name} No such attribute.`;\r\n  //     return false;\r\n  //   }\r\n  //   model.context.disableVertexAttribArray(location);\r\n  //   return true;\r\n  // };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  vertexShaderHandle: 0,\r\n  fragmentShaderHandle: 0,\r\n  geometryShaderHandle: 0,\r\n  vertexShader: null,\r\n  fragmentShader: null,\r\n  geometryShader: null,\r\n  linked: false,\r\n  bound: false,\r\n  compiled: false,\r\n  error: '',\r\n  handle: 0,\r\n  numberOfOutputs: 0,\r\n  attributesLocs: null,\r\n  uniformLocs: null,\r\n  md5Hash: 0,\r\n  context: null,\r\n  lastCameraMTime: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Instantiate internal objects\r\n  model.attributesLocs = {};\r\n  model.uniformLocs = {};\r\n  model.vertexShader = _Shader_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n  model.vertexShader.setShaderType('Vertex');\r\n  model.fragmentShader = _Shader_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n  model.fragmentShader.setShaderType('Fragment');\r\n  model.geometryShader = _Shader_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n  model.geometryShader.setShaderType('Geometry');\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['lastCameraMTime']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['error', 'handle', 'compiled', 'bound', 'md5Hash', 'vertexShader', 'fragmentShader', 'geometryShader', 'linked']);\r\n\r\n  // Object methods\r\n  vtkShaderProgram(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkShaderProgram');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkShaderProgram$1 = {\r\n  newInstance,\r\n  extend,\r\n  substitute\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Skybox.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkSkybox),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat3.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray.js\");\n/* harmony import */ var _Helper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Helper.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Helper.js\");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js\");\n/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Texture.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture.js\");\n/* harmony import */ var _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Core/Property/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Property/Constants.js\");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ViewNodeFactory.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.c;\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLSkybox methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkOpenGLSkybox(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkOpenGLSkybox');\r\n\r\n  // Builds myself.\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\r\n      model._openGLRenderWindow = model._openGLRenderer.getParent();\r\n      model.context = model._openGLRenderWindow.getContext();\r\n      model.tris.setOpenGLRenderWindow(model._openGLRenderWindow);\r\n      model.openGLTexture.setOpenGLRenderWindow(model._openGLRenderWindow);\r\n      const ren = model._openGLRenderer.getRenderable();\r\n      model.openGLCamera = model._openGLRenderer.getViewNodeFor(ren.getActiveCamera());\r\n    }\r\n  };\r\n  publicAPI.queryPass = (prepass, renderPass) => {\r\n    if (prepass) {\r\n      if (!model.renderable || !model.renderable.getVisibility()) {\r\n        return;\r\n      }\r\n      renderPass.incrementOpaqueActorCount();\r\n    }\r\n  };\r\n  publicAPI.opaquePass = (prepass, renderPass) => {\r\n    if (prepass && !model._openGLRenderer.getSelector()) {\r\n      publicAPI.updateBufferObjects();\r\n      model.context.depthMask(true);\r\n      model._openGLRenderWindow.getShaderCache().readyShaderProgram(model.tris.getProgram());\r\n      model.openGLTexture.render(model._openGLRenderWindow);\r\n      const texUnit = model.openGLTexture.getTextureUnit();\r\n      model.tris.getProgram().setUniformi('sbtexture', texUnit);\r\n      const ren = model._openGLRenderer.getRenderable();\r\n      const keyMats = model.openGLCamera.getKeyMatrices(ren);\r\n      const imat = new Float64Array(16);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_7__.invert(imat, keyMats.wcpc);\r\n      model.tris.getProgram().setUniformMatrix('IMCPCMatrix', imat);\r\n      if (model.lastFormat === 'box') {\r\n        const camPos = ren.getActiveCamera().getPosition();\r\n        model.tris.getProgram().setUniform3f('camPos', camPos[0], camPos[1], camPos[2]);\r\n      }\r\n      model.tris.getVAO().bind();\r\n\r\n      // draw polygons\r\n      model.context.drawArrays(model.context.TRIANGLES, 0, model.tris.getCABO().getElementCount());\r\n      model.tris.getVAO().release();\r\n      model.openGLTexture.deactivate();\r\n    }\r\n  };\r\n  publicAPI.updateBufferObjects = () => {\r\n    // build the VBO if needed, only happens once\r\n    if (!model.tris.getCABO().getElementCount()) {\r\n      const ptsArray = new Float32Array(12);\r\n      for (let i = 0; i < 4; i++) {\r\n        ptsArray[i * 3] = i % 2 * 2 - 1.0;\r\n        ptsArray[i * 3 + 1] = i > 1 ? 1.0 : -1.0;\r\n        ptsArray[i * 3 + 2] = 1.0;\r\n      }\r\n      const points = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance({\r\n        numberOfComponents: 3,\r\n        values: ptsArray\r\n      });\r\n      points.setName('points');\r\n      const cellArray = new Uint16Array(8);\r\n      cellArray[0] = 3;\r\n      cellArray[1] = 0;\r\n      cellArray[2] = 1;\r\n      cellArray[3] = 3;\r\n      cellArray[4] = 3;\r\n      cellArray[5] = 0;\r\n      cellArray[6] = 3;\r\n      cellArray[7] = 2;\r\n      const cells = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance({\r\n        numberOfComponents: 1,\r\n        values: cellArray\r\n      });\r\n      model.tris.getCABO().createVBO(cells, 'polys', _Core_Property_Constants_js__WEBPACK_IMPORTED_MODULE_5__.Representation.SURFACE, {\r\n        points,\r\n        cellOffset: 0\r\n      });\r\n    }\r\n\r\n    // update the program?\r\n    if (model.renderable.getFormat() !== model.lastFormat) {\r\n      model.lastFormat = model.renderable.getFormat();\r\n      if (model.lastFormat === 'box') {\r\n        // we invert Y below because opengl is messed up!\r\n        // Cube Maps have been specified to follow the RenderMan\r\n        // specification (for whatever reason), and RenderMan\r\n        // assumes the images' origin being in the upper left,\r\n        // contrary to the usual OpenGL behaviour of having the\r\n        // image origin in the lower left. That's why things get\r\n        // swapped in the Y direction. It totally breaks with the usual\r\n        // OpenGL semantics and doesn't make sense at all.\r\n        // But now we're stuck with it.  From\r\n        // https://stackoverflow.com/questions/11685608/convention-of-faces-in-opengl-cubemapping\r\n        //\r\n        model.tris.setProgram(model._openGLRenderWindow.getShaderCache().readyShaderProgramArray(`//VTK::System::Dec\r\n             attribute vec3 vertexMC;\r\n             uniform mat4 IMCPCMatrix;\r\n             varying vec3 TexCoords;\r\n             void main () {\r\n              gl_Position = vec4(vertexMC.xyz, 1.0);\r\n              vec4 wpos = IMCPCMatrix * gl_Position;\r\n              TexCoords = wpos.xyz/wpos.w;\r\n             }`, `//VTK::System::Dec\r\n             //VTK::Output::Dec\r\n             varying vec3 TexCoords;\r\n             uniform samplerCube sbtexture;\r\n             uniform vec3 camPos;\r\n             void main () {\r\n               // skybox looks from inside out\r\n               // which means we have to adjust\r\n               // our tcoords. Otherwise text would\r\n               // be flipped\r\n               vec3 tc = normalize(TexCoords - camPos);\r\n               if (abs(tc.z) < max(abs(tc.x),abs(tc.y)))\r\n               {\r\n                 tc = vec3(1.0, 1.0, -1.0) * tc;\r\n               }\r\n               else\r\n               {\r\n                 tc = vec3(-1.0, 1.0, 1.0) * tc;\r\n               }\r\n               gl_FragData[0] = textureCube(sbtexture, tc);\r\n             }`, ''));\r\n      }\r\n      if (model.lastFormat === 'background') {\r\n        // maps the texture to the window\r\n        model.tris.setProgram(model._openGLRenderWindow.getShaderCache().readyShaderProgramArray(`//VTK::System::Dec\r\n             attribute vec3 vertexMC;\r\n             uniform mat4 IMCPCMatrix;\r\n             varying vec2 TexCoords;\r\n             void main () {\r\n              gl_Position = vec4(vertexMC.xyz, 1.0);\r\n              vec4 wpos = IMCPCMatrix * gl_Position;\r\n              TexCoords = vec2(vertexMC.x, vertexMC.y)*0.5 + 0.5;\r\n             }`, `//VTK::System::Dec\r\n             //VTK::Output::Dec\r\n             varying vec2 TexCoords;\r\n             uniform sampler2D sbtexture;\r\n             void main () {\r\n               gl_FragData[0] = texture2D(sbtexture, TexCoords);\r\n             }`, ''));\r\n      }\r\n      model.tris.getShaderSourceTime().modified();\r\n      model.tris.getVAO().bind();\r\n      if (!model.tris.getVAO().addAttributeArray(model.tris.getProgram(), model.tris.getCABO(), 'vertexMC', model.tris.getCABO().getVertexOffset(), model.tris.getCABO().getStride(), model.context.FLOAT, 3, model.context.FALSE)) {\r\n        vtkErrorMacro('Error setting vertexMC in shader VAO.');\r\n      }\r\n    }\r\n\r\n    // set/update the texture map if needed\r\n    const tmaps = model.renderable.getTextures();\r\n    if (!tmaps.length) {\r\n      vtkErrorMacro('vtkSkybox requires a texture map');\r\n    }\r\n    if (model.openGLTexture.getRenderable() !== tmaps[0]) {\r\n      model.openGLTexture.releaseGraphicsResources(model._openGLRenderWindow);\r\n      model.openGLTexture.setRenderable(tmaps[0]);\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  context: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].extend(publicAPI, model, initialValues);\r\n  model.openGLTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance();\r\n  model.tris = _Helper_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance();\r\n  model.keyMatrixTime = {};\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.o)(model.keyMatrixTime, {\r\n    mtime: 0\r\n  });\r\n  model.keyMatrices = {\r\n    normalMatrix: gl_matrix__WEBPACK_IMPORTED_MODULE_8__.identity(new Float64Array(9)),\r\n    mcwc: gl_matrix__WEBPACK_IMPORTED_MODULE_7__.identity(new Float64Array(16))\r\n  };\r\n\r\n  // Build VTK API\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.e)(publicAPI, model, ['context']);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.g)(publicAPI, model, ['activeTextures']);\r\n\r\n  // Object methods\r\n  vtkOpenGLSkybox(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkSkybox = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to OpenGL backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_6__.registerOverride)('vtkSkybox', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/Skybox.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkOpenGLTexture$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _Texture_Constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Texture/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture/Constants.js\");\n/* harmony import */ var _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/Core/HalfFloat.js */ \"./node_modules/@kitware/vtk.js/Common/Core/HalfFloat.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray.js\");\n/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js\");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ViewNodeFactory.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  Wrap,\r\n  Filter\r\n} = _Texture_Constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\nconst {\r\n  VtkDataTypes\r\n} = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\r\nconst {\r\n  vtkDebugMacro,\r\n  vtkErrorMacro,\r\n  vtkWarningMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_2__.c;\r\nconst {\r\n  toHalf\r\n} = _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLTexture methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkOpenGLTexture(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkOpenGLTexture');\r\n  // Renders myself\r\n  publicAPI.render = function () {\r\n    let renWin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\r\n    if (renWin) {\r\n      model._openGLRenderWindow = renWin;\r\n    } else {\r\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\r\n      // sync renderable properties\r\n      model._openGLRenderWindow = model._openGLRenderer.getParent();\r\n    }\r\n    model.context = model._openGLRenderWindow.getContext();\r\n    if (model.renderable.getInterpolate()) {\r\n      if (model.generateMipmap) {\r\n        publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\r\n      } else {\r\n        publicAPI.setMinificationFilter(Filter.LINEAR);\r\n      }\r\n      publicAPI.setMagnificationFilter(Filter.LINEAR);\r\n    } else {\r\n      publicAPI.setMinificationFilter(Filter.NEAREST);\r\n      publicAPI.setMagnificationFilter(Filter.NEAREST);\r\n    }\r\n    if (model.renderable.getRepeat()) {\r\n      publicAPI.setWrapR(Wrap.REPEAT);\r\n      publicAPI.setWrapS(Wrap.REPEAT);\r\n      publicAPI.setWrapT(Wrap.REPEAT);\r\n    }\r\n    // clear image if input data is set\r\n    if (model.renderable.getInputData()) {\r\n      model.renderable.setImage(null);\r\n    }\r\n    // create the texture if it is not done already\r\n    if (!model.handle || model.renderable.getMTime() > model.textureBuildTime.getMTime()) {\r\n      // if we have an Image\r\n      if (model.renderable.getImage() !== null) {\r\n        if (model.renderable.getInterpolate()) {\r\n          model.generateMipmap = true;\r\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\r\n        }\r\n        // Have an Image which may not be complete\r\n        if (model.renderable.getImage() && model.renderable.getImageLoaded()) {\r\n          publicAPI.create2DFromImage(model.renderable.getImage());\r\n          publicAPI.activate();\r\n          publicAPI.sendParameters();\r\n          model.textureBuildTime.modified();\r\n        }\r\n      }\r\n      // if we have a canvas\r\n      if (model.renderable.getCanvas() !== null) {\r\n        if (model.renderable.getInterpolate()) {\r\n          model.generateMipmap = true;\r\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\r\n        }\r\n        const canvas = model.renderable.getCanvas();\r\n        publicAPI.create2DFromRaw(canvas.width, canvas.height, 4, VtkDataTypes.UNSIGNED_CHAR, canvas, true);\r\n        publicAPI.activate();\r\n        publicAPI.sendParameters();\r\n        model.textureBuildTime.modified();\r\n      }\r\n      // if we have jsImageData\r\n      if (model.renderable.getJsImageData() !== null) {\r\n        const jsid = model.renderable.getJsImageData();\r\n        if (model.renderable.getInterpolate()) {\r\n          model.generateMipmap = true;\r\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\r\n        }\r\n        publicAPI.create2DFromRaw(jsid.width, jsid.height, 4, VtkDataTypes.UNSIGNED_CHAR, jsid.data, true);\r\n        publicAPI.activate();\r\n        publicAPI.sendParameters();\r\n        model.textureBuildTime.modified();\r\n      }\r\n      // if we have InputData\r\n      const input = model.renderable.getInputData(0);\r\n      if (input && input.getPointData().getScalars()) {\r\n        const ext = input.getExtent();\r\n        const inScalars = input.getPointData().getScalars();\r\n\r\n        // do we have a cube map? Six inputs\r\n        const data = [];\r\n        for (let i = 0; i < model.renderable.getNumberOfInputPorts(); ++i) {\r\n          const indata = model.renderable.getInputData(i);\r\n          const scalars = indata ? indata.getPointData().getScalars().getData() : null;\r\n          if (scalars) {\r\n            data.push(scalars);\r\n          }\r\n        }\r\n        if (model.renderable.getInterpolate() && inScalars.getNumberOfComponents() === 4) {\r\n          model.generateMipmap = true;\r\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\r\n        }\r\n        if (data.length % 6 === 0) {\r\n          publicAPI.createCubeFromRaw(ext[1] - ext[0] + 1, ext[3] - ext[2] + 1, inScalars.getNumberOfComponents(), inScalars.getDataType(), data);\r\n        } else {\r\n          publicAPI.create2DFromRaw(ext[1] - ext[0] + 1, ext[3] - ext[2] + 1, inScalars.getNumberOfComponents(), inScalars.getDataType(), inScalars.getData());\r\n        }\r\n        publicAPI.activate();\r\n        publicAPI.sendParameters();\r\n        model.textureBuildTime.modified();\r\n      }\r\n    }\r\n    if (model.handle) {\r\n      publicAPI.activate();\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.destroyTexture = () => {\r\n    // deactivate it first\r\n    publicAPI.deactivate();\r\n    if (model.context && model.handle) {\r\n      model.context.deleteTexture(model.handle);\r\n    }\r\n    model.handle = 0;\r\n    model.numberOfDimensions = 0;\r\n    model.target = 0;\r\n    model.components = 0;\r\n    model.width = 0;\r\n    model.height = 0;\r\n    model.depth = 0;\r\n    publicAPI.resetFormatAndType();\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.createTexture = () => {\r\n    // reuse the existing handle if we have one\r\n    if (!model.handle) {\r\n      model.handle = model.context.createTexture();\r\n      if (model.target) {\r\n        model.context.bindTexture(model.target, model.handle);\r\n\r\n        // See: http://www.openmodel.context..org/wiki/Common_Mistakes#Creating_a_complete_texture\r\n        // turn off mip map filter or set the base and max level correctly. here\r\n        // both are done.\r\n        model.context.texParameteri(model.target, model.context.TEXTURE_MIN_FILTER, publicAPI.getOpenGLFilterMode(model.minificationFilter));\r\n        model.context.texParameteri(model.target, model.context.TEXTURE_MAG_FILTER, publicAPI.getOpenGLFilterMode(model.magnificationFilter));\r\n        model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_S, publicAPI.getOpenGLWrapMode(model.wrapS));\r\n        model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_T, publicAPI.getOpenGLWrapMode(model.wrapT));\r\n        if (model._openGLRenderWindow.getWebgl2()) {\r\n          model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_R, publicAPI.getOpenGLWrapMode(model.wrapR));\r\n        }\r\n        model.context.bindTexture(model.target, null);\r\n      }\r\n    }\r\n  };\r\n\r\n  //---------------------------------------------------------------------------\r\n  publicAPI.getTextureUnit = () => {\r\n    if (model._openGLRenderWindow) {\r\n      return model._openGLRenderWindow.getTextureUnitForTexture(publicAPI);\r\n    }\r\n    return -1;\r\n  };\r\n\r\n  //---------------------------------------------------------------------------\r\n  publicAPI.activate = () => {\r\n    // activate a free texture unit for this texture\r\n    model._openGLRenderWindow.activateTexture(publicAPI);\r\n    publicAPI.bind();\r\n  };\r\n\r\n  //---------------------------------------------------------------------------\r\n  publicAPI.deactivate = () => {\r\n    if (model._openGLRenderWindow) {\r\n      model._openGLRenderWindow.deactivateTexture(publicAPI);\r\n    }\r\n  };\r\n\r\n  //---------------------------------------------------------------------------\r\n  publicAPI.releaseGraphicsResources = rwin => {\r\n    if (rwin && model.handle) {\r\n      rwin.activateTexture(publicAPI);\r\n      rwin.deactivateTexture(publicAPI);\r\n      model.context.deleteTexture(model.handle);\r\n      model.handle = 0;\r\n      model.numberOfDimensions = 0;\r\n      model.target = 0;\r\n      model.internalFormat = 0;\r\n      model.format = 0;\r\n      model.openGLDataType = 0;\r\n      model.components = 0;\r\n      model.width = 0;\r\n      model.height = 0;\r\n      model.depth = 0;\r\n      model.allocatedGPUMemoryInBytes = 0;\r\n    }\r\n    if (model.shaderProgram) {\r\n      model.shaderProgram.releaseGraphicsResources(rwin);\r\n      model.shaderProgram = null;\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.bind = () => {\r\n    model.context.bindTexture(model.target, model.handle);\r\n    if (model.autoParameters && publicAPI.getMTime() > model.sendParametersTime.getMTime()) {\r\n      publicAPI.sendParameters();\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.isBound = () => {\r\n    let result = false;\r\n    if (model.context && model.handle) {\r\n      let target = 0;\r\n      switch (model.target) {\r\n        case model.context.TEXTURE_2D:\r\n          target = model.context.TEXTURE_BINDING_2D;\r\n          break;\r\n        default:\r\n          vtkWarningMacro('impossible case');\r\n          break;\r\n      }\r\n      const oid = model.context.getIntegerv(target);\r\n      result = oid === model.handle;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.sendParameters = () => {\r\n    model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_S, publicAPI.getOpenGLWrapMode(model.wrapS));\r\n    model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_T, publicAPI.getOpenGLWrapMode(model.wrapT));\r\n    if (model._openGLRenderWindow.getWebgl2()) {\r\n      model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_R, publicAPI.getOpenGLWrapMode(model.wrapR));\r\n    }\r\n    model.context.texParameteri(model.target, model.context.TEXTURE_MIN_FILTER, publicAPI.getOpenGLFilterMode(model.minificationFilter));\r\n    model.context.texParameteri(model.target, model.context.TEXTURE_MAG_FILTER, publicAPI.getOpenGLFilterMode(model.magnificationFilter));\r\n    if (model._openGLRenderWindow.getWebgl2()) {\r\n      model.context.texParameteri(model.target, model.context.TEXTURE_BASE_LEVEL, model.baseLevel);\r\n      model.context.texParameteri(model.target, model.context.TEXTURE_MAX_LEVEL, model.maxLevel);\r\n    }\r\n\r\n    // model.context.texParameterf(model.target, model.context.TEXTURE_MIN_LOD, model.minLOD);\r\n    // model.context.texParameterf(model.target, model.context.TEXTURE_MAX_LOD, model.maxLOD);\r\n\r\n    model.sendParametersTime.modified();\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.getInternalFormat = (vtktype, numComps) => {\r\n    if (!model._forceInternalFormat) {\r\n      model.internalFormat = publicAPI.getDefaultInternalFormat(vtktype, numComps);\r\n    }\r\n    if (!model.internalFormat) {\r\n      vtkDebugMacro(`Unable to find suitable internal format for T=${vtktype} NC= ${numComps}`);\r\n    }\r\n    if ([model.context.R32F, model.context.RG32F, model.context.RGB32F, model.context.RGBA32F].includes(model.internalFormat) && !model.context.getExtension('OES_texture_float_linear')) {\r\n      vtkWarningMacro('Failed to load OES_texture_float_linear. Texture filtering is not available for *32F internal formats.');\r\n    }\r\n    return model.internalFormat;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.getDefaultInternalFormat = (vtktype, numComps) => {\r\n    let result = 0;\r\n    // try default next\r\n    result = model._openGLRenderWindow.getDefaultTextureInternalFormat(vtktype, numComps, model.oglNorm16Ext, model.useHalfFloat);\r\n    if (result) {\r\n      return result;\r\n    }\r\n    if (!result) {\r\n      vtkDebugMacro('Unsupported internal texture type!');\r\n      vtkDebugMacro(`Unable to find suitable internal format for T=${vtktype} NC= ${numComps}`);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.setInternalFormat = iFormat => {\r\n    model._forceInternalFormat = true;\r\n    if (iFormat !== model.internalFormat) {\r\n      model.internalFormat = iFormat;\r\n      publicAPI.modified();\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.getFormat = (vtktype, numComps) => {\r\n    model.format = publicAPI.getDefaultFormat(vtktype, numComps);\r\n    return model.format;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.getDefaultFormat = (vtktype, numComps) => {\r\n    if (model._openGLRenderWindow.getWebgl2()) {\r\n      switch (numComps) {\r\n        case 1:\r\n          return model.context.RED;\r\n        case 2:\r\n          return model.context.RG;\r\n        case 3:\r\n          return model.context.RGB;\r\n        case 4:\r\n          return model.context.RGBA;\r\n        default:\r\n          return model.context.RGB;\r\n      }\r\n    } else {\r\n      // webgl1\r\n      switch (numComps) {\r\n        case 1:\r\n          return model.context.LUMINANCE;\r\n        case 2:\r\n          return model.context.LUMINANCE_ALPHA;\r\n        case 3:\r\n          return model.context.RGB;\r\n        case 4:\r\n          return model.context.RGBA;\r\n        default:\r\n          return model.context.RGB;\r\n      }\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.resetFormatAndType = () => {\r\n    model.format = 0;\r\n    model.internalFormat = 0;\r\n    model._forceInternalFormat = false;\r\n    model.openGLDataType = 0;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.getDefaultDataType = vtkScalarType => {\r\n    // DON'T DEAL with VTK_CHAR as this is platform dependent.\r\n    if (model._openGLRenderWindow.getWebgl2()) {\r\n      switch (vtkScalarType) {\r\n        // case VtkDataTypes.SIGNED_CHAR:\r\n        //   return model.context.BYTE;\r\n        case VtkDataTypes.UNSIGNED_CHAR:\r\n          return model.context.UNSIGNED_BYTE;\r\n        // prefer norm16 since that is accurate compared to\r\n        // half float which is not\r\n        case model.oglNorm16Ext && !model.useHalfFloat && VtkDataTypes.SHORT:\r\n          return model.context.SHORT;\r\n        case model.oglNorm16Ext && !model.useHalfFloat && VtkDataTypes.UNSIGNED_SHORT:\r\n          return model.context.UNSIGNED_SHORT;\r\n        // use half float type\r\n        case model.useHalfFloat && VtkDataTypes.SHORT:\r\n          return model.context.HALF_FLOAT;\r\n        case model.useHalfFloat && VtkDataTypes.UNSIGNED_SHORT:\r\n          return model.context.HALF_FLOAT;\r\n        // case VtkDataTypes.INT:\r\n        //   return model.context.INT;\r\n        // case VtkDataTypes.UNSIGNED_INT:\r\n        //   return model.context.UNSIGNED_INT;\r\n        case VtkDataTypes.FLOAT:\r\n        case VtkDataTypes.VOID: // used for depth component textures.\r\n        default:\r\n          return model.context.FLOAT;\r\n      }\r\n    }\r\n    switch (vtkScalarType) {\r\n      // case VtkDataTypes.SIGNED_CHAR:\r\n      //   return model.context.BYTE;\r\n      case VtkDataTypes.UNSIGNED_CHAR:\r\n        return model.context.UNSIGNED_BYTE;\r\n      // case VtkDataTypes.SHORT:\r\n      //   return model.context.SHORT;\r\n      // case VtkDataTypes.UNSIGNED_SHORT:\r\n      //   return model.context.UNSIGNED_SHORT;\r\n      // case VtkDataTypes.INT:\r\n      //   return model.context.INT;\r\n      // case VtkDataTypes.UNSIGNED_INT:\r\n      //   return model.context.UNSIGNED_INT;\r\n      case VtkDataTypes.FLOAT:\r\n      case VtkDataTypes.VOID: // used for depth component textures.\r\n      default:\r\n        if (model.context.getExtension('OES_texture_float') && model.context.getExtension('OES_texture_float_linear')) {\r\n          return model.context.FLOAT;\r\n        }\r\n        {\r\n          const halfFloat = model.context.getExtension('OES_texture_half_float');\r\n          if (halfFloat && model.context.getExtension('OES_texture_half_float_linear')) {\r\n            return halfFloat.HALF_FLOAT_OES;\r\n          }\r\n        }\r\n        return model.context.UNSIGNED_BYTE;\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.getOpenGLDataType = function (vtkScalarType) {\r\n    let forceUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n    if (!model.openGLDataType || forceUpdate) {\r\n      model.openGLDataType = publicAPI.getDefaultDataType(vtkScalarType);\r\n    }\r\n    return model.openGLDataType;\r\n  };\r\n  publicAPI.getShiftAndScale = () => {\r\n    let shift = 0.0;\r\n    let scale = 1.0;\r\n\r\n    // for all float type internal formats\r\n    switch (model.openGLDataType) {\r\n      case model.context.BYTE:\r\n        scale = 127.5;\r\n        shift = scale - 128.0;\r\n        break;\r\n      case model.context.UNSIGNED_BYTE:\r\n        scale = 255.0;\r\n        shift = 0.0;\r\n        break;\r\n      case model.context.SHORT:\r\n        scale = 32767.5;\r\n        shift = scale - 32768.0;\r\n        break;\r\n      case model.context.UNSIGNED_SHORT:\r\n        scale = 65536.0;\r\n        shift = 0.0;\r\n        break;\r\n      case model.context.INT:\r\n        scale = 2147483647.5;\r\n        shift = scale - 2147483648.0;\r\n        break;\r\n      case model.context.UNSIGNED_INT:\r\n        scale = 4294967295.0;\r\n        shift = 0.0;\r\n        break;\r\n      case model.context.FLOAT:\r\n    }\r\n    return {\r\n      shift,\r\n      scale\r\n    };\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.getOpenGLFilterMode = emode => {\r\n    switch (emode) {\r\n      case Filter.NEAREST:\r\n        return model.context.NEAREST;\r\n      case Filter.LINEAR:\r\n        return model.context.LINEAR;\r\n      case Filter.NEAREST_MIPMAP_NEAREST:\r\n        return model.context.NEAREST_MIPMAP_NEAREST;\r\n      case Filter.NEAREST_MIPMAP_LINEAR:\r\n        return model.context.NEAREST_MIPMAP_LINEAR;\r\n      case Filter.LINEAR_MIPMAP_NEAREST:\r\n        return model.context.LINEAR_MIPMAP_NEAREST;\r\n      case Filter.LINEAR_MIPMAP_LINEAR:\r\n        return model.context.LINEAR_MIPMAP_LINEAR;\r\n      default:\r\n        return model.context.NEAREST;\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.getOpenGLWrapMode = vtktype => {\r\n    switch (vtktype) {\r\n      case Wrap.CLAMP_TO_EDGE:\r\n        return model.context.CLAMP_TO_EDGE;\r\n      case Wrap.REPEAT:\r\n        return model.context.REPEAT;\r\n      case Wrap.MIRRORED_REPEAT:\r\n        return model.context.MIRRORED_REPEAT;\r\n      default:\r\n        return model.context.CLAMP_TO_EDGE;\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  function updateArrayDataType(dataType, data) {\r\n    let depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n    const pixData = [];\r\n    let pixCount = model.width * model.height * model.components;\r\n    if (depth) {\r\n      pixCount *= model.depth;\r\n    }\r\n\r\n    // if the opengl data type is float\r\n    // then the data array must be float\r\n    if (dataType !== VtkDataTypes.FLOAT && model.openGLDataType === model.context.FLOAT) {\r\n      for (let idx = 0; idx < data.length; idx++) {\r\n        if (data[idx]) {\r\n          const dataArrayToCopy = data[idx].length > pixCount ? data[idx].subarray(0, pixCount) : data[idx];\r\n          pixData.push(new Float32Array(dataArrayToCopy));\r\n        } else {\r\n          pixData.push(null);\r\n        }\r\n      }\r\n    }\r\n\r\n    // if the opengl data type is ubyte\r\n    // then the data array must be u8, we currently simply truncate the data\r\n    if (dataType !== VtkDataTypes.UNSIGNED_CHAR && model.openGLDataType === model.context.UNSIGNED_BYTE) {\r\n      for (let idx = 0; idx < data.length; idx++) {\r\n        if (data[idx]) {\r\n          const dataArrayToCopy = data[idx].length > pixCount ? data[idx].subarray(0, pixCount) : data[idx];\r\n          pixData.push(new Uint8Array(dataArrayToCopy));\r\n        } else {\r\n          pixData.push(null);\r\n        }\r\n      }\r\n    }\r\n\r\n    // if the opengl data type is half float\r\n    // then the data array must be u16\r\n    let halfFloat = false;\r\n    if (model._openGLRenderWindow.getWebgl2()) {\r\n      halfFloat = model.openGLDataType === model.context.HALF_FLOAT;\r\n    } else {\r\n      const halfFloatExt = model.context.getExtension('OES_texture_half_float');\r\n      halfFloat = halfFloatExt && model.openGLDataType === halfFloatExt.HALF_FLOAT_OES;\r\n    }\r\n    if (halfFloat) {\r\n      for (let idx = 0; idx < data.length; idx++) {\r\n        if (data[idx]) {\r\n          const newArray = new Uint16Array(pixCount);\r\n          const src = data[idx];\r\n          for (let i = 0; i < pixCount; i++) {\r\n            newArray[i] = toHalf(src[i]);\r\n          }\r\n          pixData.push(newArray);\r\n        } else {\r\n          pixData.push(null);\r\n        }\r\n      }\r\n    }\r\n\r\n    // The output has to be filled\r\n    if (pixData.length === 0) {\r\n      for (let i = 0; i < data.length; i++) {\r\n        pixData.push(data[i]);\r\n      }\r\n    }\r\n    return pixData;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  function scaleTextureToHighestPowerOfTwo(data) {\r\n    if (model._openGLRenderWindow.getWebgl2()) {\r\n      // No need if webGL2\r\n      return data;\r\n    }\r\n    const pixData = [];\r\n    const width = model.width;\r\n    const height = model.height;\r\n    const numComps = model.components;\r\n    if (data && (!(0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__.U)(width) || !(0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__.U)(height))) {\r\n      // Scale up the texture to the next highest power of two dimensions.\r\n      const halfFloat = model.context.getExtension('OES_texture_half_float');\r\n      const newWidth = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__.Q)(width);\r\n      const newHeight = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__.Q)(height);\r\n      const pixCount = newWidth * newHeight * model.components;\r\n      for (let idx = 0; idx < data.length; idx++) {\r\n        if (data[idx] !== null) {\r\n          let newArray = null;\r\n          const jFactor = height / newHeight;\r\n          const iFactor = width / newWidth;\r\n          let usingHalf = false;\r\n          if (model.openGLDataType === model.context.FLOAT) {\r\n            newArray = new Float32Array(pixCount);\r\n          } else if (halfFloat && model.openGLDataType === halfFloat.HALF_FLOAT_OES) {\r\n            newArray = new Uint16Array(pixCount);\r\n            usingHalf = true;\r\n          } else {\r\n            newArray = new Uint8Array(pixCount);\r\n          }\r\n          for (let j = 0; j < newHeight; j++) {\r\n            const joff = j * newWidth * numComps;\r\n            const jidx = j * jFactor;\r\n            let jlow = Math.floor(jidx);\r\n            let jhi = Math.ceil(jidx);\r\n            if (jhi >= height) {\r\n              jhi = height - 1;\r\n            }\r\n            const jmix = jidx - jlow;\r\n            const jmix1 = 1.0 - jmix;\r\n            jlow = jlow * width * numComps;\r\n            jhi = jhi * width * numComps;\r\n            for (let i = 0; i < newWidth; i++) {\r\n              const ioff = i * numComps;\r\n              const iidx = i * iFactor;\r\n              let ilow = Math.floor(iidx);\r\n              let ihi = Math.ceil(iidx);\r\n              if (ihi >= width) {\r\n                ihi = width - 1;\r\n              }\r\n              const imix = iidx - ilow;\r\n              ilow *= numComps;\r\n              ihi *= numComps;\r\n              for (let c = 0; c < numComps; c++) {\r\n                if (usingHalf) {\r\n                  newArray[joff + ioff + c] = _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].toHalf(_Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fromHalf(data[idx][jlow + ilow + c]) * jmix1 * (1.0 - imix) + _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fromHalf(data[idx][jlow + ihi + c]) * jmix1 * imix + _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fromHalf(data[idx][jhi + ilow + c]) * jmix * (1.0 - imix) + _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fromHalf(data[idx][jhi + ihi + c]) * jmix * imix);\r\n                } else {\r\n                  newArray[joff + ioff + c] = data[idx][jlow + ilow + c] * jmix1 * (1.0 - imix) + data[idx][jlow + ihi + c] * jmix1 * imix + data[idx][jhi + ilow + c] * jmix * (1.0 - imix) + data[idx][jhi + ihi + c] * jmix * imix;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          pixData.push(newArray);\r\n          model.width = newWidth;\r\n          model.height = newHeight;\r\n        } else {\r\n          pixData.push(null);\r\n        }\r\n      }\r\n    }\r\n\r\n    // The output has to be filled\r\n    if (pixData.length === 0) {\r\n      for (let i = 0; i < data.length; i++) {\r\n        pixData.push(data[i]);\r\n      }\r\n    }\r\n    return pixData;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  function useTexStorage(dataType) {\r\n    if (model._openGLRenderWindow) {\r\n      if (model.resizable || model.renderable?.getResizable()) {\r\n        // Cannot use texStorage if the texture is supposed to be resizable.\r\n        return false;\r\n      }\r\n      if (model._openGLRenderWindow.getWebgl2()) {\r\n        const webGLInfo = model._openGLRenderWindow.getGLInformations();\r\n        if (webGLInfo.RENDERER.value.match(/WebKit/gi) && navigator.platform.match(/Mac/gi) && model.oglNorm16Ext && (dataType === VtkDataTypes.UNSIGNED_SHORT || dataType === VtkDataTypes.SHORT)) {\r\n          // Cannot use texStorage with EXT_texture_norm16 textures on Mac M1 GPU.\r\n          // No errors reported but the texture is unusable.\r\n          return false;\r\n        }\r\n        // Use texStorage for WebGL2\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.create2DFromRaw = function (width, height, numComps, dataType, data) {\r\n    let flip = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\r\n    // Now determine the texture parameters using the arguments.\r\n    publicAPI.getOpenGLDataType(dataType, true);\r\n    publicAPI.getInternalFormat(dataType, numComps);\r\n    publicAPI.getFormat(dataType, numComps);\r\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\r\n      vtkErrorMacro('Failed to determine texture parameters.');\r\n      return false;\r\n    }\r\n    model.target = model.context.TEXTURE_2D;\r\n    model.components = numComps;\r\n    model.width = width;\r\n    model.height = height;\r\n    model.depth = 1;\r\n    model.numberOfDimensions = 2;\r\n    model._openGLRenderWindow.activateTexture(publicAPI);\r\n    publicAPI.createTexture();\r\n    publicAPI.bind();\r\n\r\n    // Create an array of texture with one texture\r\n    const dataArray = [data];\r\n    const pixData = updateArrayDataType(dataType, dataArray);\r\n    const scaledData = scaleTextureToHighestPowerOfTwo(pixData);\r\n\r\n    // Source texture data from the PBO.\r\n    model.context.pixelStorei(model.context.UNPACK_FLIP_Y_WEBGL, flip);\r\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\r\n    if (useTexStorage(dataType)) {\r\n      model.context.texStorage2D(model.target, 1, model.internalFormat, model.width, model.height);\r\n      if (scaledData[0] != null) {\r\n        model.context.texSubImage2D(model.target, 0, 0, 0, model.width, model.height, model.format, model.openGLDataType, scaledData[0]);\r\n      }\r\n    } else {\r\n      model.context.texImage2D(model.target, 0, model.internalFormat, model.width, model.height, 0, model.format, model.openGLDataType, scaledData[0]);\r\n    }\r\n    if (model.generateMipmap) {\r\n      model.context.generateMipmap(model.target);\r\n    }\r\n\r\n    // always reset the flip\r\n    if (flip) {\r\n      model.context.pixelStorei(model.context.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n    model.allocatedGPUMemoryInBytes = model.width * model.height * model.depth * numComps * model._openGLRenderWindow.getDefaultTextureByteSize(dataType, model.oglNorm16Ext, model.useHalfFloat);\r\n    publicAPI.deactivate();\r\n    return true;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.createCubeFromRaw = (width, height, numComps, dataType, data) => {\r\n    // Now determine the texture parameters using the arguments.\r\n    publicAPI.getOpenGLDataType(dataType);\r\n    publicAPI.getInternalFormat(dataType, numComps);\r\n    publicAPI.getFormat(dataType, numComps);\r\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\r\n      vtkErrorMacro('Failed to determine texture parameters.');\r\n      return false;\r\n    }\r\n    model.target = model.context.TEXTURE_CUBE_MAP;\r\n    model.components = numComps;\r\n    model.width = width;\r\n    model.height = height;\r\n    model.depth = 1;\r\n    model.numberOfDimensions = 2;\r\n    model._openGLRenderWindow.activateTexture(publicAPI);\r\n    model.maxLevel = data.length / 6 - 1;\r\n    publicAPI.createTexture();\r\n    publicAPI.bind();\r\n    const pixData = updateArrayDataType(dataType, data);\r\n    const scaledData = scaleTextureToHighestPowerOfTwo(pixData);\r\n\r\n    // invert the data because opengl is messed up with cube maps\r\n    // and uses the old renderman standard with Y going down\r\n    // even though it is completely at odds with OpenGL standards\r\n    const invertedData = [];\r\n    let widthLevel = model.width;\r\n    let heightLevel = model.height;\r\n    for (let i = 0; i < scaledData.length; i++) {\r\n      if (i % 6 === 0 && i !== 0) {\r\n        widthLevel /= 2;\r\n        heightLevel /= 2;\r\n      }\r\n      invertedData[i] = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_2__.a)(dataType, heightLevel * widthLevel * model.components);\r\n      for (let y = 0; y < heightLevel; ++y) {\r\n        const row1 = y * widthLevel * model.components;\r\n        const row2 = (heightLevel - y - 1) * widthLevel * model.components;\r\n        invertedData[i].set(scaledData[i].slice(row2, row2 + widthLevel * model.components), row1);\r\n      }\r\n    }\r\n\r\n    // Source texture data from the PBO.\r\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\r\n    if (useTexStorage(dataType)) {\r\n      model.context.texStorage2D(model.target, 6, model.internalFormat, model.width, model.height);\r\n    }\r\n    // We get the 6 images\r\n    for (let i = 0; i < 6; i++) {\r\n      // For each mipmap level\r\n      let j = 0;\r\n      let w = model.width;\r\n      let h = model.height;\r\n      while (w >= 1 && h >= 1) {\r\n        // In webgl 1, all levels need to be defined. So if the latest level size is\r\n        // 8x8, we have to add 3 more null textures (4x4, 2x2, 1x1)\r\n        // In webgl 2, the attribute maxLevel will be use.\r\n        let tempData = null;\r\n        if (j <= model.maxLevel) {\r\n          tempData = invertedData[6 * j + i];\r\n        }\r\n        if (useTexStorage(dataType)) {\r\n          if (tempData != null) {\r\n            model.context.texSubImage2D(model.context.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, w, h, model.format, model.openGLDataType, tempData);\r\n          }\r\n        } else {\r\n          model.context.texImage2D(model.context.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, model.internalFormat, w, h, 0, model.format, model.openGLDataType, tempData);\r\n        }\r\n        j++;\r\n        w /= 2;\r\n        h /= 2;\r\n      }\r\n    }\r\n    model.allocatedGPUMemoryInBytes = model.width * model.height * model.depth * numComps * model._openGLRenderWindow.getDefaultTextureByteSize(dataType, model.oglNorm16Ext, model.useHalfFloat);\r\n    // generateMipmap must not be called here because we manually upload all levels\r\n    // if it is called, all levels will be overwritten\r\n\r\n    publicAPI.deactivate();\r\n    return true;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.createDepthFromRaw = (width, height, dataType, data) => {\r\n    // Now determine the texture parameters using the arguments.\r\n    publicAPI.getOpenGLDataType(dataType);\r\n    model.format = model.context.DEPTH_COMPONENT;\r\n    if (model._openGLRenderWindow.getWebgl2()) {\r\n      if (dataType === VtkDataTypes.FLOAT) {\r\n        model.internalFormat = model.context.DEPTH_COMPONENT32F;\r\n      } else {\r\n        model.internalFormat = model.context.DEPTH_COMPONENT16;\r\n      }\r\n    } else {\r\n      model.internalFormat = model.context.DEPTH_COMPONENT;\r\n    }\r\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\r\n      vtkErrorMacro('Failed to determine texture parameters.');\r\n      return false;\r\n    }\r\n    model.target = model.context.TEXTURE_2D;\r\n    model.components = 1;\r\n    model.width = width;\r\n    model.height = height;\r\n    model.depth = 1;\r\n    model.numberOfDimensions = 2;\r\n    model._openGLRenderWindow.activateTexture(publicAPI);\r\n    publicAPI.createTexture();\r\n    publicAPI.bind();\r\n\r\n    // Source texture data from the PBO.\r\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\r\n    if (useTexStorage(dataType)) {\r\n      model.context.texStorage2D(model.target, 1, model.internalFormat, model.width, model.height);\r\n      if (data != null) {\r\n        model.context.texSubImage2D(model.target, 0, 0, 0, model.width, model.height, model.format, model.openGLDataType, data);\r\n      }\r\n    } else {\r\n      model.context.texImage2D(model.target, 0, model.internalFormat, model.width, model.height, 0, model.format, model.openGLDataType, data);\r\n    }\r\n    if (model.generateMipmap) {\r\n      model.context.generateMipmap(model.target);\r\n    }\r\n    model.allocatedGPUMemoryInBytes = model.width * model.height * model.depth * model.components * model._openGLRenderWindow.getDefaultTextureByteSize(dataType, model.oglNorm16Ext, model.useHalfFloat);\r\n    publicAPI.deactivate();\r\n    return true;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.create2DFromImage = image => {\r\n    // Now determine the texture parameters using the arguments.\r\n    publicAPI.getOpenGLDataType(VtkDataTypes.UNSIGNED_CHAR);\r\n    publicAPI.getInternalFormat(VtkDataTypes.UNSIGNED_CHAR, 4);\r\n    publicAPI.getFormat(VtkDataTypes.UNSIGNED_CHAR, 4);\r\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\r\n      vtkErrorMacro('Failed to determine texture parameters.');\r\n      return false;\r\n    }\r\n    model.target = model.context.TEXTURE_2D;\r\n    model.components = 4;\r\n    model.depth = 1;\r\n    model.numberOfDimensions = 2;\r\n    model._openGLRenderWindow.activateTexture(publicAPI);\r\n    publicAPI.createTexture();\r\n    publicAPI.bind();\r\n\r\n    // Source texture data from the PBO.\r\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\r\n\r\n    // Scale up the texture to the next highest power of two dimensions (if needed) and flip y.\r\n    const needNearestPowerOfTwo = !model._openGLRenderWindow.getWebgl2() && (!(0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__.U)(image.width) || !(0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__.U)(image.height));\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = needNearestPowerOfTwo ? (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__.Q)(image.width) : image.width;\r\n    canvas.height = needNearestPowerOfTwo ? (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__.Q)(image.height) : image.height;\r\n    model.width = canvas.width;\r\n    model.height = canvas.height;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.translate(0, canvas.height);\r\n    ctx.scale(1, -1);\r\n    ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\r\n    const safeImage = canvas;\r\n    if (useTexStorage(VtkDataTypes.UNSIGNED_CHAR)) {\r\n      model.context.texStorage2D(model.target, 1, model.internalFormat, model.width, model.height);\r\n      if (safeImage != null) {\r\n        model.context.texSubImage2D(model.target, 0, 0, 0, model.width, model.height, model.format, model.openGLDataType, safeImage);\r\n      }\r\n    } else {\r\n      model.context.texImage2D(model.target, 0, model.internalFormat, model.width, model.height, 0, model.format, model.openGLDataType, safeImage);\r\n    }\r\n    if (model.generateMipmap) {\r\n      model.context.generateMipmap(model.target);\r\n    }\r\n    model.allocatedGPUMemoryInBytes = model.width * model.height * model.depth * model.components * model._openGLRenderWindow.getDefaultTextureByteSize(VtkDataTypes.UNSIGNED_CHAR, model.oglNorm16Ext, model.useHalfFloat);\r\n    publicAPI.deactivate();\r\n    return true;\r\n  };\r\n\r\n  // Compute scale and offset per component from min and max per component\r\n  function computeScaleOffsets(min, max, numComps) {\r\n    const offset = new Array(numComps);\r\n    const scale = new Array(numComps);\r\n    for (let c = 0; c < numComps; ++c) {\r\n      offset[c] = min[c];\r\n      scale[c] = max[c] - min[c] || 1.0;\r\n    }\r\n    return {\r\n      scale,\r\n      offset\r\n    };\r\n  }\r\n\r\n  // HalfFloat only represents numbers between [-2048, 2048] exactly accurate,\r\n  // for numbers outside of this range there is a precision limitation\r\n  function hasExactHalfFloat(offset, scale) {\r\n    // Per Component\r\n    for (let c = 0; c < offset.length; c++) {\r\n      const min = offset[c];\r\n      const max = scale[c] + min;\r\n      if (min < -2048 || min > 2048 || max < -2048 || max > 2048) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  function setUseHalfFloat(dataType, offset, scale, preferSizeOverAccuracy) {\r\n    publicAPI.getOpenGLDataType(dataType);\r\n    let useHalfFloat = false;\r\n    if (model._openGLRenderWindow.getWebgl2()) {\r\n      useHalfFloat = model.openGLDataType === model.context.HALF_FLOAT;\r\n    } else {\r\n      const halfFloatExt = model.context.getExtension('OES_texture_half_float');\r\n      useHalfFloat = halfFloatExt && model.openGLDataType === halfFloatExt.HALF_FLOAT_OES;\r\n    }\r\n\r\n    // Don't consider halfFloat and convert back to Float when the range of data does not generate an accurate halfFloat\r\n    // AND it is not preferable to have a smaller texture than an exact texture.\r\n    const isHalfFloat = useHalfFloat && (hasExactHalfFloat(offset, scale) || preferSizeOverAccuracy);\r\n    model.useHalfFloat = isHalfFloat;\r\n  }\r\n  function processDataArray(dataArray, preferSizeOverAccuracy) {\r\n    const numComps = dataArray.getNumberOfComponents();\r\n    const dataType = dataArray.getDataType();\r\n    const data = dataArray.getData();\r\n\r\n    // Compute min max from array\r\n    // Using the vtkDataArray.getRange() enables caching\r\n    const minArray = new Array(numComps);\r\n    const maxArray = new Array(numComps);\r\n    for (let c = 0; c < numComps; ++c) {\r\n      const [min, max] = dataArray.getRange(c);\r\n      minArray[c] = min;\r\n      maxArray[c] = max;\r\n    }\r\n    const scaleOffsets = computeScaleOffsets(minArray, maxArray, numComps);\r\n\r\n    // preferSizeOverAccuracy will override norm16 due to bug with norm16 implementation\r\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1408247\r\n    setUseHalfFloat(dataType, scaleOffsets.offset, scaleOffsets.scale, preferSizeOverAccuracy);\r\n\r\n    // since our default is to use half float, in case that we can't use it\r\n    // we need to use another type\r\n    if (!model.useHalfFloat) {\r\n      publicAPI.getOpenGLDataType(dataType, true);\r\n    }\r\n    return {\r\n      numComps,\r\n      dataType,\r\n      data,\r\n      scaleOffsets\r\n    };\r\n  }\r\n  publicAPI.create2DFilterableFromRaw = function (width, height, numberOfComponents, dataType, values) {\r\n    let preferSizeOverAccuracy = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\r\n    return publicAPI.create2DFilterableFromDataArray(width, height, _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance({\r\n      numberOfComponents,\r\n      dataType,\r\n      values\r\n    }), preferSizeOverAccuracy);\r\n  };\r\n  publicAPI.create2DFilterableFromDataArray = function (width, height, dataArray) {\r\n    let preferSizeOverAccuracy = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\r\n    const {\r\n      numComps,\r\n      dataType,\r\n      data\r\n    } = processDataArray(dataArray, preferSizeOverAccuracy);\r\n    publicAPI.create2DFromRaw(width, height, numComps, dataType, data);\r\n  };\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.create3DFromRaw = (width, height, depth, numComps, dataType, data) => {\r\n    // Permit OpenGLDataType to be half float, if applicable, for 3D\r\n    publicAPI.getOpenGLDataType(dataType);\r\n\r\n    // Now determine the texture parameters using the arguments.\r\n    publicAPI.getInternalFormat(dataType, numComps);\r\n    publicAPI.getFormat(dataType, numComps);\r\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\r\n      vtkErrorMacro('Failed to determine texture parameters.');\r\n      return false;\r\n    }\r\n    model.target = model.context.TEXTURE_3D;\r\n    model.components = numComps;\r\n    model.width = width;\r\n    model.height = height;\r\n    model.depth = depth;\r\n    model.numberOfDimensions = 3;\r\n    model._openGLRenderWindow.activateTexture(publicAPI);\r\n    publicAPI.createTexture();\r\n    publicAPI.bind();\r\n    // Create an array of texture with one texture\r\n    const dataArray = [data];\r\n    const is3DArray = true;\r\n    const pixData = updateArrayDataType(dataType, dataArray, is3DArray);\r\n    const scaledData = scaleTextureToHighestPowerOfTwo(pixData);\r\n\r\n    // Source texture data from the PBO.\r\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\r\n\r\n    // openGLDataType\r\n\r\n    if (useTexStorage(dataType)) {\r\n      model.context.texStorage3D(model.target, 1, model.internalFormat, model.width, model.height, model.depth);\r\n      if (scaledData[0] != null) {\r\n        model.context.texSubImage3D(model.target, 0, 0, 0, 0, model.width, model.height, model.depth, model.format, model.openGLDataType, scaledData[0]);\r\n      }\r\n    } else {\r\n      model.context.texImage3D(model.target, 0, model.internalFormat, model.width, model.height, model.depth, 0, model.format, model.openGLDataType, scaledData[0]);\r\n    }\r\n    if (model.generateMipmap) {\r\n      model.context.generateMipmap(model.target);\r\n    }\r\n    model.allocatedGPUMemoryInBytes = model.width * model.height * model.depth * model.components * model._openGLRenderWindow.getDefaultTextureByteSize(dataType, model.oglNorm16Ext, model.useHalfFloat);\r\n    publicAPI.deactivate();\r\n    return true;\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  // This method simulates a 3D texture using 2D\r\n  // Prefer create3DFilterableFromDataArray to enable caching of min and max values\r\n  publicAPI.create3DFilterableFromRaw = function (width, height, depth, numberOfComponents, dataType, values) {\r\n    let preferSizeOverAccuracy = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\r\n    return publicAPI.create3DFilterableFromDataArray(width, height, depth, _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance({\r\n      numberOfComponents,\r\n      dataType,\r\n      values\r\n    }), preferSizeOverAccuracy);\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  // This method create a 3D texture from dimensions and a DataArray\r\n  publicAPI.create3DFilterableFromDataArray = function (width, height, depth, dataArray) {\r\n    let preferSizeOverAccuracy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\r\n    const {\r\n      numComps,\r\n      dataType,\r\n      data,\r\n      scaleOffsets\r\n    } = processDataArray(dataArray, preferSizeOverAccuracy);\r\n    const numPixelsIn = width * height * depth;\r\n    const offset = [];\r\n    const scale = [];\r\n    for (let c = 0; c < numComps; ++c) {\r\n      offset[c] = 0.0;\r\n      scale[c] = 1.0;\r\n    }\r\n\r\n    // store the information, we will need it later\r\n    // offset and scale are the offset and scale required to get\r\n    // the texture value back to data values ala\r\n    // data = texture * scale + offset\r\n    // and texture = (data - offset)/scale\r\n    model.volumeInfo = {\r\n      scale,\r\n      offset,\r\n      dataComputedScale: scaleOffsets.scale,\r\n      dataComputedOffset: scaleOffsets.offset,\r\n      width,\r\n      height,\r\n      depth\r\n    };\r\n\r\n    // Create a copy of scale and offset to avoid aliasing issues\r\n    // Original is read only, copy is read/write\r\n    // Use the copy as volumeInfo.scale and volumeInfo.offset\r\n    const scaleOffsetsCopy = structuredClone(scaleOffsets);\r\n\r\n    // WebGL2 path, we have 3d textures etc\r\n    if (model._openGLRenderWindow.getWebgl2()) {\r\n      if (model.oglNorm16Ext && !model.useHalfFloat && dataType === VtkDataTypes.SHORT) {\r\n        for (let c = 0; c < numComps; ++c) {\r\n          model.volumeInfo.scale[c] = 32767.0;\r\n        }\r\n        return publicAPI.create3DFromRaw(width, height, depth, numComps, dataType, data);\r\n      }\r\n      if (model.oglNorm16Ext && !model.useHalfFloat && dataType === VtkDataTypes.UNSIGNED_SHORT) {\r\n        for (let c = 0; c < numComps; ++c) {\r\n          model.volumeInfo.scale[c] = 65535.0;\r\n        }\r\n        return publicAPI.create3DFromRaw(width, height, depth, numComps, dataType, data);\r\n      }\r\n      if (dataType === VtkDataTypes.FLOAT || model.useHalfFloat && (dataType === VtkDataTypes.SHORT || dataType === VtkDataTypes.UNSIGNED_SHORT)) {\r\n        return publicAPI.create3DFromRaw(width, height, depth, numComps, dataType, data);\r\n      }\r\n      if (dataType === VtkDataTypes.UNSIGNED_CHAR) {\r\n        for (let c = 0; c < numComps; ++c) {\r\n          model.volumeInfo.scale[c] = 255.0;\r\n        }\r\n        return publicAPI.create3DFromRaw(width, height, depth, numComps, dataType, data);\r\n      }\r\n      // otherwise convert to float\r\n      const newArray = new Float32Array(numPixelsIn * numComps);\r\n      // use computed scale and offset\r\n      model.volumeInfo.offset = scaleOffsetsCopy.offset;\r\n      model.volumeInfo.scale = scaleOffsetsCopy.scale;\r\n      let count = 0;\r\n      const scaleInverse = scaleOffsetsCopy.scale.map(s => 1 / s);\r\n      for (let i = 0; i < numPixelsIn; i++) {\r\n        for (let nc = 0; nc < numComps; nc++) {\r\n          newArray[count] = (data[count] - scaleOffsetsCopy.offset[nc]) * scaleInverse[nc];\r\n          count++;\r\n        }\r\n      }\r\n      return publicAPI.create3DFromRaw(width, height, depth, numComps, VtkDataTypes.FLOAT, newArray);\r\n    }\r\n\r\n    // not webgl2, deal with webgl1, no 3d textures\r\n    // and maybe no float textures\r\n\r\n    let volCopyData = (outArray, outIdx, inValue, smin, smax) => {\r\n      outArray[outIdx] = inValue;\r\n    };\r\n    let dataTypeToUse = VtkDataTypes.UNSIGNED_CHAR;\r\n    // unsigned char gets used as is\r\n    if (dataType === VtkDataTypes.UNSIGNED_CHAR) {\r\n      for (let c = 0; c < numComps; ++c) {\r\n        scaleOffsetsCopy.offset[c] = 0.0;\r\n        scaleOffsetsCopy.scale[c] = 255.0;\r\n      }\r\n    } else if (model.context.getExtension('OES_texture_float') && model.context.getExtension('OES_texture_float_linear')) {\r\n      // use float textures scaled to 0.0 to 1.0\r\n      dataTypeToUse = VtkDataTypes.FLOAT;\r\n      volCopyData = (outArray, outIdx, inValue, soffset, sscale) => {\r\n        outArray[outIdx] = (inValue - soffset) / sscale;\r\n      };\r\n    } else {\r\n      // worst case, scale data to uchar\r\n      dataTypeToUse = VtkDataTypes.UNSIGNED_CHAR;\r\n      volCopyData = (outArray, outIdx, inValue, soffset, sscale) => {\r\n        outArray[outIdx] = 255.0 * (inValue - soffset) / sscale;\r\n      };\r\n    }\r\n\r\n    // Now determine the texture parameters using the arguments.\r\n    publicAPI.getOpenGLDataType(dataTypeToUse);\r\n    publicAPI.getInternalFormat(dataTypeToUse, numComps);\r\n    publicAPI.getFormat(dataTypeToUse, numComps);\r\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\r\n      vtkErrorMacro('Failed to determine texture parameters.');\r\n      return false;\r\n    }\r\n\r\n    // have to pack this 3D texture into pot 2D texture\r\n    model.target = model.context.TEXTURE_2D;\r\n    model.components = numComps;\r\n    model.depth = 1;\r\n    model.numberOfDimensions = 2;\r\n\r\n    // MAX_TEXTURE_SIZE gives the max dimensions that can be supported by the GPU,\r\n    // but it doesn't mean it will fit in memory. If we have to use a float data type\r\n    // or 4 components, there are good chances that the texture size will blow up\r\n    // and could not fit in the GPU memory. Use a smaller texture size in that case,\r\n    // which will force a downsampling of the dataset.\r\n    // That problem does not occur when using webGL2 since we can pack the data in\r\n    // denser textures based on our data type.\r\n    // TODO: try to fit in the biggest supported texture, catch the gl error if it\r\n    // does not fix (OUT_OF_MEMORY), then attempt with smaller texture\r\n    let maxTexDim = model.context.getParameter(model.context.MAX_TEXTURE_SIZE);\r\n    if (maxTexDim > 4096 && (dataTypeToUse === VtkDataTypes.FLOAT || numComps >= 3)) {\r\n      maxTexDim = 4096;\r\n    }\r\n\r\n    // compute estimate for XY subsample\r\n    let xstride = 1;\r\n    let ystride = 1;\r\n    if (numPixelsIn > maxTexDim * maxTexDim) {\r\n      xstride = Math.ceil(Math.sqrt(numPixelsIn / (maxTexDim * maxTexDim)));\r\n      ystride = xstride;\r\n    }\r\n    let targetWidth = Math.sqrt(numPixelsIn) / xstride;\r\n    targetWidth = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__.Q)(targetWidth);\r\n    // determine X reps\r\n    const xreps = Math.floor(targetWidth * xstride / width);\r\n    const yreps = Math.ceil(depth / xreps);\r\n    const targetHeight = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_4__.Q)(height * yreps / ystride);\r\n    model.width = targetWidth;\r\n    model.height = targetHeight;\r\n    model._openGLRenderWindow.activateTexture(publicAPI);\r\n    publicAPI.createTexture();\r\n    publicAPI.bind();\r\n\r\n    // store the information, we will need it later\r\n    model.volumeInfo.xreps = xreps;\r\n    model.volumeInfo.yreps = yreps;\r\n    model.volumeInfo.xstride = xstride;\r\n    model.volumeInfo.ystride = ystride;\r\n    model.volumeInfo.offset = scaleOffsetsCopy.offset;\r\n    model.volumeInfo.scale = scaleOffsetsCopy.scale;\r\n\r\n    // OK stuff the data into the 2d TEXTURE\r\n\r\n    // first allocate the new texture\r\n    let newArray;\r\n    const pixCount = targetWidth * targetHeight * numComps;\r\n    if (dataTypeToUse === VtkDataTypes.FLOAT) {\r\n      newArray = new Float32Array(pixCount);\r\n    } else {\r\n      newArray = new Uint8Array(pixCount);\r\n    }\r\n\r\n    // then stuff the data into it, nothing fancy right now\r\n    // for stride\r\n    let outIdx = 0;\r\n    const tileWidth = Math.floor(width / xstride);\r\n    const tileHeight = Math.floor(height / ystride);\r\n    for (let yRep = 0; yRep < yreps; yRep++) {\r\n      const xrepsThisRow = Math.min(xreps, depth - yRep * xreps);\r\n      const outXContIncr = numComps * (model.width - xrepsThisRow * Math.floor(width / xstride));\r\n      for (let tileY = 0; tileY < tileHeight; tileY++) {\r\n        for (let xRep = 0; xRep < xrepsThisRow; xRep++) {\r\n          const inOffset = numComps * ((yRep * xreps + xRep) * width * height + ystride * tileY * width);\r\n          for (let tileX = 0; tileX < tileWidth; tileX++) {\r\n            // copy value\r\n            for (let nc = 0; nc < numComps; nc++) {\r\n              volCopyData(newArray, outIdx, data[inOffset + xstride * tileX * numComps + nc], scaleOffsetsCopy.offset[nc], scaleOffsetsCopy.scale[nc]);\r\n              outIdx++;\r\n            }\r\n          }\r\n        }\r\n        outIdx += outXContIncr;\r\n      }\r\n    }\r\n\r\n    // Source texture data from the PBO.\r\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\r\n    if (useTexStorage(dataTypeToUse)) {\r\n      model.context.texStorage2D(model.target, 1, model.internalFormat, model.width, model.height);\r\n      if (newArray != null) {\r\n        model.context.texSubImage2D(model.target, 0, 0, 0, model.width, model.height, model.format, model.openGLDataType, newArray);\r\n      }\r\n    } else {\r\n      model.context.texImage2D(model.target, 0, model.internalFormat, model.width, model.height, 0, model.format, model.openGLDataType, newArray);\r\n    }\r\n    publicAPI.deactivate();\r\n    return true;\r\n  };\r\n  publicAPI.setOpenGLRenderWindow = rw => {\r\n    if (model._openGLRenderWindow === rw) {\r\n      return;\r\n    }\r\n    publicAPI.releaseGraphicsResources();\r\n    model._openGLRenderWindow = rw;\r\n    model.context = null;\r\n    if (rw) {\r\n      model.context = model._openGLRenderWindow.getContext();\r\n    }\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.getMaximumTextureSize = ctx => {\r\n    if (ctx && ctx.isCurrent()) {\r\n      return ctx.getIntegerv(ctx.MAX_TEXTURE_SIZE);\r\n    }\r\n    return -1;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  _openGLRenderWindow: null,\r\n  _forceInternalFormat: false,\r\n  context: null,\r\n  handle: 0,\r\n  sendParametersTime: null,\r\n  textureBuildTime: null,\r\n  numberOfDimensions: 0,\r\n  target: 0,\r\n  format: 0,\r\n  openGLDataType: 0,\r\n  components: 0,\r\n  width: 0,\r\n  height: 0,\r\n  depth: 0,\r\n  autoParameters: true,\r\n  wrapS: Wrap.CLAMP_TO_EDGE,\r\n  wrapT: Wrap.CLAMP_TO_EDGE,\r\n  wrapR: Wrap.CLAMP_TO_EDGE,\r\n  minificationFilter: Filter.NEAREST,\r\n  magnificationFilter: Filter.NEAREST,\r\n  minLOD: -1000.0,\r\n  maxLOD: 1000.0,\r\n  baseLevel: 0,\r\n  maxLevel: 1000,\r\n  generateMipmap: false,\r\n  // use half float by default, but it will get set\r\n  // to false if the context does not support it or\r\n  // the voxel intensity range is out of the accurate\r\n  // range of half float\r\n  useHalfFloat: true,\r\n  oglNorm16Ext: null,\r\n  allocatedGPUMemoryInBytes: 0\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].extend(publicAPI, model, initialValues);\r\n  model.sendParametersTime = {};\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_2__.o)(model.sendParametersTime, {\r\n    mtime: 0\r\n  });\r\n  model.textureBuildTime = {};\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_2__.o)(model.textureBuildTime, {\r\n    mtime: 0\r\n  });\r\n\r\n  // Build VTK API\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_2__.s)(publicAPI, model, ['format', 'openGLDataType']);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_2__.e)(publicAPI, model, ['keyMatrixTime', 'minificationFilter', 'magnificationFilter', 'wrapS', 'wrapT', 'wrapR', 'generateMipmap', 'oglNorm16Ext']);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_2__.g)(publicAPI, model, ['width', 'height', 'volumeInfo', 'components', 'handle', 'target', 'allocatedGPUMemoryInBytes']);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_2__.i)(publicAPI, model, ['openGLRenderWindow']);\r\n\r\n  // Object methods\r\n  vtkOpenGLTexture(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_2__.n)(extend, 'vtkOpenGLTexture');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkOpenGLTexture$1 = {\r\n  newInstance,\r\n  extend,\r\n  ..._Texture_Constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\r\n};\r\n\r\n// Register ourself to OpenGL backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_6__.registerOverride)('vtkTexture', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/TextureUnitManager.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkTextureUnitManager),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n\r\n\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLTextureUnitManager methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkOpenGLTextureUnitManager(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkOpenGLTextureUnitManager');\r\n\r\n  // ----------------------------------------------------------------------------\r\n  // Description:\r\n  // Delete the allocation table and check if it is not called before\r\n  // all the texture units have been released.\r\n  publicAPI.deleteTable = () => {\r\n    for (let i = 0; i < model.numberOfTextureUnits; ++i) {\r\n      if (model.textureUnits[i] === true) {\r\n        vtkErrorMacro('some texture units  were not properly released');\r\n      }\r\n    }\r\n    model.textureUnits = [];\r\n    model.numberOfTextureUnits = 0;\r\n  };\r\n\r\n  // ----------------------------------------------------------------------------\r\n  publicAPI.setContext = ctx => {\r\n    if (model.context !== ctx) {\r\n      if (model.context !== 0) {\r\n        publicAPI.deleteTable();\r\n      }\r\n      model.context = ctx;\r\n      if (model.context) {\r\n        model.numberOfTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);\r\n        for (let i = 0; i < model.numberOfTextureUnits; ++i) {\r\n          model.textureUnits[i] = false;\r\n        }\r\n      }\r\n      publicAPI.modified();\r\n    }\r\n  };\r\n\r\n  // ----------------------------------------------------------------------------\r\n  // Description:\r\n  // Reserve a texture unit. It returns its number.\r\n  // It returns -1 if the allocation failed (because there are no more\r\n  // texture units left).\r\n  // \\post valid_result: result==-1 || result>=0 && result<this->GetNumberOfTextureUnits())\r\n  // \\post allocated: result==-1 || this->IsAllocated(result)\r\n  publicAPI.allocate = () => {\r\n    for (let i = 0; i < model.numberOfTextureUnits; i++) {\r\n      if (!publicAPI.isAllocated(i)) {\r\n        model.textureUnits[i] = true;\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  };\r\n  publicAPI.allocateUnit = unit => {\r\n    if (publicAPI.isAllocated(unit)) {\r\n      return -1;\r\n    }\r\n    model.textureUnits[unit] = true;\r\n    return unit;\r\n  };\r\n\r\n  // ----------------------------------------------------------------------------\r\n  // Description:\r\n  // Tell if texture unit `textureUnitId' is already allocated.\r\n  // \\pre valid_id_range : textureUnitId>=0 && textureUnitId<this->GetNumberOfTextureUnits()\r\n  publicAPI.isAllocated = textureUnitId => model.textureUnits[textureUnitId];\r\n\r\n  // ----------------------------------------------------------------------------\r\n  // Description:\r\n  // Release a texture unit.\r\n  // \\pre valid_id: textureUnitId>=0 && textureUnitId<this->GetNumberOfTextureUnits()\r\n  // \\pre allocated_id: this->IsAllocated(textureUnitId)\r\n  publicAPI.free = val => {\r\n    model.textureUnits[val] = false;\r\n  };\r\n  publicAPI.freeAll = () => {\r\n    for (let i = 0; i < model.numberOfTextureUnits; ++i) {\r\n      model.textureUnits[i] = false;\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  context: null,\r\n  numberOfTextureUnits: 0,\r\n  textureUnits: 0\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  model.textureUnits = [];\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['numberOfTextureUnits']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['context']);\r\n\r\n  // Object methods\r\n  vtkOpenGLTextureUnitManager(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkOpenGLTextureUnitManager');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkTextureUnitManager = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/TextureUnitManager.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Filter: () => (/* binding */ Filter),\n/* harmony export */   Wrap: () => (/* binding */ Wrap),\n/* harmony export */   "default": () => (/* binding */ Constants)\n/* harmony export */ });\nconst Wrap = {\r\n  CLAMP_TO_EDGE: 0,\r\n  REPEAT: 1,\r\n  MIRRORED_REPEAT: 2\r\n};\r\nconst Filter = {\r\n  NEAREST: 0,\r\n  LINEAR: 1,\r\n  NEAREST_MIPMAP_NEAREST: 2,\r\n  NEAREST_MIPMAP_LINEAR: 3,\r\n  LINEAR_MIPMAP_NEAREST: 4,\r\n  LINEAR_MIPMAP_LINEAR: 5\r\n};\r\nvar Constants = {\r\n  Wrap,\r\n  Filter\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture/Constants.js?')},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/VertexArrayObject.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkVertexArrayObject),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BufferObject/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/OpenGL/BufferObject/Constants.js\");\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLVertexArrayObject methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkOpenGLVertexArrayObject(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkOpenGLVertexArrayObject');\r\n\r\n  // Public API methods\r\n  publicAPI.exposedMethod = () => {\r\n    // This is a publicly exposed method of this object\r\n  };\r\n  publicAPI.initialize = () => {\r\n    model.instancingExtension = null;\r\n    if (!model._openGLRenderWindow.getWebgl2()) {\r\n      model.instancingExtension = model.context.getExtension('ANGLE_instanced_arrays');\r\n    }\r\n    if (!model.forceEmulation && model._openGLRenderWindow && model._openGLRenderWindow.getWebgl2()) {\r\n      model.extension = null;\r\n      model.supported = true;\r\n      model.handleVAO = model.context.createVertexArray();\r\n    } else {\r\n      model.extension = model.context.getExtension('OES_vertex_array_object');\r\n      // Start setting up VAO\r\n      if (!model.forceEmulation && model.extension) {\r\n        model.supported = true;\r\n        model.handleVAO = model.extension.createVertexArrayOES();\r\n      } else {\r\n        model.supported = false;\r\n      }\r\n    }\r\n  };\r\n  publicAPI.isReady = () =>\r\n  // We either probed and allocated a VAO, or are falling back as the current\r\n  // hardware does not support VAOs.\r\n  model.handleVAO !== 0 || model.supported === false;\r\n  publicAPI.bind = () => {\r\n    // Either simply bind the VAO, or emulate behavior by binding all attributes.\r\n    if (!publicAPI.isReady()) {\r\n      publicAPI.initialize();\r\n    }\r\n    if (publicAPI.isReady() && model.supported) {\r\n      if (model.extension) {\r\n        model.extension.bindVertexArrayOES(model.handleVAO);\r\n      } else {\r\n        model.context.bindVertexArray(model.handleVAO);\r\n      }\r\n    } else if (publicAPI.isReady()) {\r\n      const gl = model.context;\r\n      for (let ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\r\n        const buff = model.buffers[ibuff];\r\n        model.context.bindBuffer(gl.ARRAY_BUFFER, buff.buffer);\r\n        for (let iatt = 0; iatt < buff.attributes.length; ++iatt) {\r\n          const attrIt = buff.attributes[iatt];\r\n          const matrixCount = attrIt.isMatrix ? attrIt.size : 1;\r\n          for (let i = 0; i < matrixCount; ++i) {\r\n            gl.enableVertexAttribArray(attrIt.index + i);\r\n            gl.vertexAttribPointer(attrIt.index + i, attrIt.size, attrIt.type, attrIt.normalize, attrIt.stride, attrIt.offset + attrIt.stride * i / attrIt.size);\r\n            if (attrIt.divisor > 0) {\r\n              if (model.instancingExtension) {\r\n                model.instancingExtension.vertexAttribDivisorANGLE(attrIt.index + i, 1);\r\n              } else {\r\n                gl.vertexAttribDivisor(attrIt.index + i, 1);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  publicAPI.release = () => {\r\n    // Either simply release the VAO, or emulate behavior by releasing all attributes.\r\n    if (publicAPI.isReady() && model.supported) {\r\n      if (model.extension) {\r\n        model.extension.bindVertexArrayOES(null);\r\n      } else {\r\n        model.context.bindVertexArray(null);\r\n      }\r\n    } else if (publicAPI.isReady()) {\r\n      const gl = model.context;\r\n      for (let ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\r\n        const buff = model.buffers[ibuff];\r\n        model.context.bindBuffer(gl.ARRAY_BUFFER, buff.buffer);\r\n        for (let iatt = 0; iatt < buff.attributes.length; ++iatt) {\r\n          const attrIt = buff.attributes[iatt];\r\n          const matrixCount = attrIt.isMatrix ? attrIt.size : 1;\r\n          for (let i = 0; i < matrixCount; ++i) {\r\n            gl.enableVertexAttribArray(attrIt.index + i);\r\n            gl.vertexAttribPointer(attrIt.index + i, attrIt.size, attrIt.type, attrIt.normalize, attrIt.stride, attrIt.offset + attrIt.stride * i / attrIt.size);\r\n            if (attrIt.divisor > 0) {\r\n              if (model.instancingExtension) {\r\n                model.instancingExtension.vertexAttribDivisorANGLE(attrIt.index + i, 0);\r\n              } else {\r\n                gl.vertexAttribDivisor(attrIt.index + i, 0);\r\n              }\r\n            }\r\n            gl.disableVertexAttribArray(attrIt.index + i);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  publicAPI.shaderProgramChanged = () => {\r\n    publicAPI.release();\r\n    if (model.handleVAO) {\r\n      if (model.extension) {\r\n        model.extension.deleteVertexArrayOES(model.handleVAO);\r\n      } else {\r\n        model.context.deleteVertexArray(model.handleVAO);\r\n      }\r\n    }\r\n    model.handleVAO = 0;\r\n    model.handleProgram = 0;\r\n  };\r\n  publicAPI.releaseGraphicsResources = () => {\r\n    publicAPI.shaderProgramChanged();\r\n    if (model.handleVAO) {\r\n      if (model.extension) {\r\n        model.extension.deleteVertexArrayOES(model.handleVAO);\r\n      } else {\r\n        model.context.deleteVertexArray(model.handleVAO);\r\n      }\r\n    }\r\n    model.handleVAO = 0;\r\n    model.supported = true;\r\n    model.handleProgram = 0;\r\n  };\r\n  publicAPI.addAttributeArray = (program, buffer, name, offset, stride, elementType, elementTupleSize, normalize) => publicAPI.addAttributeArrayWithDivisor(program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, 0, false);\r\n  publicAPI.addAttributeArrayWithDivisor = (program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, divisor, isMatrix) => {\r\n    if (!program) {\r\n      return false;\r\n    }\r\n\r\n    // Check the program is bound, and the buffer is valid.\r\n    if (!program.isBound() || buffer.getHandle() === 0 || buffer.getType() !== _BufferObject_Constants_js__WEBPACK_IMPORTED_MODULE_1__.ObjectType.ARRAY_BUFFER) {\r\n      return false;\r\n    }\r\n\r\n    // Perform initialization if necessary, ensure program matches VAOs.\r\n    if (model.handleProgram === 0) {\r\n      model.handleProgram = program.getHandle();\r\n    }\r\n    if (!publicAPI.isReady()) {\r\n      publicAPI.initialize();\r\n    }\r\n    if (!publicAPI.isReady() || model.handleProgram !== program.getHandle()) {\r\n      return false;\r\n    }\r\n    const gl = model.context;\r\n    const attribs = {};\r\n    attribs.name = name;\r\n    attribs.index = gl.getAttribLocation(model.handleProgram, name);\r\n    attribs.offset = offset;\r\n    attribs.stride = stride;\r\n    attribs.type = elementType;\r\n    attribs.size = elementTupleSize;\r\n    attribs.normalize = normalize;\r\n    attribs.isMatrix = isMatrix;\r\n    attribs.divisor = divisor;\r\n    if (attribs.Index === -1) {\r\n      return false;\r\n    }\r\n\r\n    // Always make the call as even the first use wants the attrib pointer setting\r\n    // up when we are emulating.\r\n    buffer.bind();\r\n    gl.enableVertexAttribArray(attribs.index);\r\n    gl.vertexAttribPointer(attribs.index, attribs.size, attribs.type, attribs.normalize, attribs.stride, attribs.offset);\r\n    if (divisor > 0) {\r\n      if (model.instancingExtension) {\r\n        model.instancingExtension.vertexAttribDivisorANGLE(attribs.index, 1);\r\n      } else {\r\n        gl.vertexAttribDivisor(attribs.index, 1);\r\n      }\r\n    }\r\n    attribs.buffer = buffer.getHandle();\r\n\r\n    // If vertex array objects are not supported then build up our list.\r\n    if (!model.supported) {\r\n      // find the buffer\r\n      let buffFound = false;\r\n      for (let ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\r\n        const buff = model.buffers[ibuff];\r\n        if (buff.buffer === attribs.buffer) {\r\n          buffFound = true;\r\n          let found = false;\r\n          for (let iatt = 0; iatt < buff.attributes.length; ++iatt) {\r\n            const attrIt = buff.attributes[iatt];\r\n            if (attrIt.name === name) {\r\n              found = true;\r\n              buff.attributes[iatt] = attribs;\r\n            }\r\n          }\r\n          if (!found) {\r\n            buff.attributes.push(attribs);\r\n          }\r\n        }\r\n      }\r\n      if (!buffFound) {\r\n        model.buffers.push({\r\n          buffer: attribs.buffer,\r\n          attributes: [attribs]\r\n        });\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n  publicAPI.addAttributeMatrixWithDivisor = (program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, divisor) => {\r\n    // bind the first row of values\r\n    const result = publicAPI.addAttributeArrayWithDivisor(program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, divisor, true);\r\n    if (!result) {\r\n      return result;\r\n    }\r\n    const gl = model.context;\r\n    const index = gl.getAttribLocation(model.handleProgram, name);\r\n    for (let i = 1; i < elementTupleSize; i++) {\r\n      gl.enableVertexAttribArray(index + i);\r\n      gl.vertexAttribPointer(index + i, elementTupleSize, elementType, normalize, stride, offset + stride * i / elementTupleSize);\r\n      if (divisor > 0) {\r\n        if (model.instancingExtension) {\r\n          model.instancingExtension.vertexAttribDivisorANGLE(index + i, 1);\r\n        } else {\r\n          gl.vertexAttribDivisor(index + i, 1);\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n  publicAPI.removeAttributeArray = name => {\r\n    if (!publicAPI.isReady() || model.handleProgram === 0) {\r\n      return false;\r\n    }\r\n\r\n    // If we don't have real VAOs find the entry and remove it too.\r\n    if (!model.supported) {\r\n      for (let ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\r\n        const buff = model.buffers[ibuff];\r\n        for (let iatt = 0; iatt < buff.attributes.length; ++iatt) {\r\n          const attrIt = buff.attributes[iatt];\r\n          if (attrIt.name === name) {\r\n            buff.attributes.splice(iatt, 1);\r\n            if (!buff.attributes.length) {\r\n              model.buffers.splice(ibuff, 1);\r\n            }\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n  publicAPI.setOpenGLRenderWindow = rw => {\r\n    if (model._openGLRenderWindow === rw) {\r\n      return;\r\n    }\r\n    publicAPI.releaseGraphicsResources();\r\n    model._openGLRenderWindow = rw;\r\n    model.context = null;\r\n    if (rw) {\r\n      model.context = model._openGLRenderWindow.getContext();\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  forceEmulation: false,\r\n  handleVAO: 0,\r\n  handleProgram: 0,\r\n  supported: true,\r\n  buffers: null,\r\n  context: null\r\n  // _openGLRenderWindow: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Internal objects initialization\r\n  model.buffers = [];\r\n\r\n  // Object methods\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n\r\n  // Create get-only macros\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['supported']);\r\n\r\n  // Create get-set macros\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['forceEmulation']);\r\n\r\n  // For more macro methods, see \"Sources/macros.js\"\r\n\r\n  // Object specific methods\r\n  vtkOpenGLVertexArrayObject(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkOpenGLVertexArrayObject');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkVertexArrayObject = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/VertexArrayObject.js?")},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ vtkViewNodeFactory),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance),\n/* harmony export */   registerOverride: () => (/* binding */ registerOverride)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _SceneGraph_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../SceneGraph/ViewNodeFactory.js */ "./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory.js");\n\r\n\r\n\r\nconst CLASS_MAPPING = Object.create(null);\r\nfunction registerOverride(className, fn) {\r\n  CLASS_MAPPING[className] = fn;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkOpenGLViewNodeFactory methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkOpenGLViewNodeFactory(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkOpenGLViewNodeFactory\');\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Static class mapping shared across instances\r\n  model.overrides = CLASS_MAPPING;\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues);\r\n\r\n  // Object methods\r\n  vtkOpenGLViewNodeFactory(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, \'vtkOpenGLViewNodeFactory\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkViewNodeFactory = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js?')},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyData2DFS.glsl.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   v: () => (/* binding */ vtkPolyData2DFS)\n/* harmony export */ });\nvar vtkPolyData2DFS = "//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyData2DFS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n\\nuniform int PrimitiveIDOffset;\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// Scalar coloring\\n//VTK::Color::Dec\\n\\n// Depth Peeling\\n//VTK::DepthPeeling::Dec\\n\\n// picking support\\n//VTK::Picking::Dec\\n\\n// the output of this shader\\n//VTK::Output::Dec\\n\\n// Apple Bug\\n//VTK::PrimID::Dec\\n\\nvoid main()\\n{\\n  // Apple Bug\\n  //VTK::PrimID::Impl\\n\\n  //VTK::Color::Impl\\n  //VTK::TCoord::Impl\\n\\n  //VTK::DepthPeeling::Impl\\n  //VTK::Picking::Impl\\n\\n  if (gl_FragData[0].a <= 0.0)\\n    {\\n    discard;\\n    }\\n}\\n";\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyData2DFS.glsl.js?')},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyData2DVS.glsl.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   v: () => (/* binding */ vtkPolyData2DVS)\n/* harmony export */ });\nvar vtkPolyData2DVS = "//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyData2DVS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n\\n// all variables that represent positions or directions have a suffix\\n// indicating the coordinate system they are in. The possible values are\\n// MC - Model Coordinates\\n// WC - WC world coordinates\\n// VC - View Coordinates\\n// DC - Display Coordinates\\n\\nin vec4 vertexWC;\\n\\n// frag position in VC\\n//VTK::PositionVC::Dec\\n\\n// material property values\\n//VTK::Color::Dec\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// Apple Bug\\n//VTK::PrimID::Dec\\n\\nuniform mat4 WCVCMatrix;  // World to view matrix\\n\\nvoid main()\\n{\\n  // Apple Bug\\n  //VTK::PrimID::Impl\\n\\n  gl_Position = WCVCMatrix*vertexWC;\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Color::Impl\\n\\n  //VTK::PositionVC::Impl\\n}\\n";\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyData2DVS.glsl.js?')},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataFS.glsl.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   v: () => (/* binding */ vtkPolyDataFS)\n/* harmony export */ });\nvar vtkPolyDataFS = "//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyDataFS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n// Template for the polydata mappers fragment shader\\n\\nuniform int PrimitiveIDOffset;\\n\\n// VC position of this fragment\\n//VTK::PositionVC::Dec\\n\\n// optional color passed in from the vertex shader, vertexColor\\n//VTK::Color::Dec\\n\\n// optional surface normal declaration\\n//VTK::Normal::Dec\\n\\n// extra lighting parameters\\n//VTK::Light::Dec\\n\\n// define vtkImageLabelOutlineOn\\n//VTK::ImageLabelOutlineOn\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// picking support\\n//VTK::Picking::Dec\\n\\n// Depth Peeling Support\\n//VTK::DepthPeeling::Dec\\n\\n// clipping plane vars\\n//VTK::Clip::Dec\\n\\n// label outline \\n//VTK::LabelOutline::Dec\\n\\n// the output of this shader\\n//VTK::Output::Dec\\n\\n// Apple Bug\\n//VTK::PrimID::Dec\\n\\n// handle coincident offsets\\n//VTK::Coincident::Dec\\n\\n//VTK::ZBuffer::Dec\\n\\n//VTK::LabelOutlineHelperFunction\\n\\nvoid main()\\n{\\n  // VC position of this fragment. This should not branch/return/discard.\\n  //VTK::PositionVC::Impl\\n\\n  // Place any calls that require uniform flow (e.g. dFdx) here.\\n  //VTK::UniformFlow::Impl\\n\\n  // Set gl_FragDepth here (gl_FragCoord.z by default)\\n  //VTK::Depth::Impl\\n\\n  // Early depth peeling abort:\\n  //VTK::DepthPeeling::PreColor\\n\\n  // Apple Bug\\n  //VTK::PrimID::Impl\\n\\n  //VTK::Clip::Impl\\n\\n  //VTK::Color::Impl\\n\\n  // Generate the normal if we are not passed in one\\n  //VTK::Normal::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Light::Impl\\n\\n  if (gl_FragData[0].a <= 0.0)\\n    {\\n    discard;\\n    }\\n\\n  //VTK::DepthPeeling::Impl\\n\\n  //VTK::Picking::Impl\\n\\n  // handle coincident offsets\\n  //VTK::Coincident::Impl\\n\\n  //VTK::ZBuffer::Impl\\n\\n  //VTK::RenderPassFragmentShader::Impl\\n}\\n";\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataFS.glsl.js?')},"./node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataVS.glsl.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   v: () => (/* binding */ vtkPolyDataVS)\n/* harmony export */ });\nvar vtkPolyDataVS = "//VTK::System::Dec\\n\\n/*=========================================================================\\n\\n  Program:   Visualization Toolkit\\n  Module:    vtkPolyDataVS.glsl\\n\\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\\n  All rights reserved.\\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\\n\\n     This software is distributed WITHOUT ANY WARRANTY; without even\\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n     PURPOSE.  See the above copyright notice for more information.\\n\\n=========================================================================*/\\n\\nattribute vec4 vertexMC;\\n\\n// frag position in VC\\n//VTK::PositionVC::Dec\\n\\n// optional normal declaration\\n//VTK::Normal::Dec\\n\\n// extra lighting parameters\\n//VTK::Light::Dec\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// material property values\\n//VTK::Color::Dec\\n\\n// clipping plane vars\\n//VTK::Clip::Dec\\n\\n// camera and actor matrix values\\n//VTK::Camera::Dec\\n\\n// Apple Bug\\n//VTK::PrimID::Dec\\n\\n// picking support\\n//VTK::Picking::Dec\\n\\nvoid main()\\n{\\n  //VTK::Color::Impl\\n\\n  //VTK::Normal::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Clip::Impl\\n\\n  //VTK::PrimID::Impl\\n\\n  //VTK::PositionVC::Impl\\n\\n  //VTK::Light::Impl\\n\\n  //VTK::Picking::Impl\\n}\\n";\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/OpenGL/glsl/vtkPolyDataVS.glsl.js?')},"./node_modules/@kitware/vtk.js/Rendering/Profiles/Geometry.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _OpenGL_Camera_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../OpenGL/Camera.js */ "./node_modules/@kitware/vtk.js/Rendering/OpenGL/Camera.js");\n/* harmony import */ var _OpenGL_Renderer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OpenGL/Renderer.js */ "./node_modules/@kitware/vtk.js/Rendering/OpenGL/Renderer.js");\n/* harmony import */ var _OpenGL_Actor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OpenGL/Actor.js */ "./node_modules/@kitware/vtk.js/Rendering/OpenGL/Actor.js");\n/* harmony import */ var _OpenGL_Actor2D_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OpenGL/Actor2D.js */ "./node_modules/@kitware/vtk.js/Rendering/OpenGL/Actor2D.js");\n/* harmony import */ var _OpenGL_CubeAxesActor_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../OpenGL/CubeAxesActor.js */ "./node_modules/@kitware/vtk.js/Rendering/OpenGL/CubeAxesActor.js");\n/* harmony import */ var _OpenGL_PolyDataMapper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../OpenGL/PolyDataMapper.js */ "./node_modules/@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper.js");\n/* harmony import */ var _OpenGL_PolyDataMapper2D_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../OpenGL/PolyDataMapper2D.js */ "./node_modules/@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper2D.js");\n/* harmony import */ var _OpenGL_ScalarBarActor_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../OpenGL/ScalarBarActor.js */ "./node_modules/@kitware/vtk.js/Rendering/OpenGL/ScalarBarActor.js");\n/* harmony import */ var _OpenGL_Skybox_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../OpenGL/Skybox.js */ "./node_modules/@kitware/vtk.js/Rendering/OpenGL/Skybox.js");\n/* harmony import */ var _OpenGL_Texture_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../OpenGL/Texture.js */ "./node_modules/@kitware/vtk.js/Rendering/OpenGL/Texture.js");\n/* harmony import */ var _OpenGL_PixelSpaceCallbackMapper_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../OpenGL/PixelSpaceCallbackMapper.js */ "./node_modules/@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper.js");\n/* harmony import */ var _WebGPU_Camera_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../WebGPU/Camera.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/Camera.js");\n/* harmony import */ var _WebGPU_Renderer_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../WebGPU/Renderer.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/Renderer.js");\n/* harmony import */ var _WebGPU_Actor_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../WebGPU/Actor.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/Actor.js");\n/* harmony import */ var _WebGPU_Actor2D_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../WebGPU/Actor2D.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/Actor2D.js");\n/* harmony import */ var _WebGPU_CubeAxesActor_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../WebGPU/CubeAxesActor.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/CubeAxesActor.js");\n/* harmony import */ var _WebGPU_PolyDataMapper_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../WebGPU/PolyDataMapper.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/PolyDataMapper.js");\n/* harmony import */ var _WebGPU_PolyDataMapper2D_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../WebGPU/PolyDataMapper2D.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/PolyDataMapper2D.js");\n/* harmony import */ var _WebGPU_ScalarBarActor_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../WebGPU/ScalarBarActor.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/ScalarBarActor.js");\n/* harmony import */ var _WebGPU_Texture_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../WebGPU/Texture.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/Texture.js");\n/* harmony import */ var _WebGPU_PixelSpaceCallbackMapper_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../WebGPU/PixelSpaceCallbackMapper.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/PixelSpaceCallbackMapper.js");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/Profiles/Geometry.js?')},"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkRenderPass$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkRenderPass(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkRenderPass');\r\n  publicAPI.getOperation = () => model.currentOperation;\r\n  publicAPI.setCurrentOperation = val => {\r\n    model.currentOperation = val;\r\n    model.currentTraverseOperation = `traverse${_macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.capitalize(model.currentOperation)}`;\r\n  };\r\n  publicAPI.getTraverseOperation = () => model.currentTraverseOperation;\r\n\r\n  // by default this class will traverse all of its\r\n  // preDelegateOperations, then call its delegate render passes\r\n  // the traverse all of its postDelegateOperations\r\n  // any of those three arrays can be empty\r\n  publicAPI.traverse = function (viewNode) {\r\n    let parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\r\n    if (model.deleted) {\r\n      return;\r\n    }\r\n\r\n    // we just render our delegates in order\r\n    model._currentParent = parent;\r\n    model.preDelegateOperations.forEach(val => {\r\n      publicAPI.setCurrentOperation(val);\r\n      viewNode.traverse(publicAPI);\r\n    });\r\n    model.delegates.forEach(val => {\r\n      val.traverse(viewNode, publicAPI);\r\n    });\r\n    model.postDelegateOperations.forEach(val => {\r\n      publicAPI.setCurrentOperation(val);\r\n      viewNode.traverse(publicAPI);\r\n    });\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  delegates: [],\r\n  currentOperation: null,\r\n  preDelegateOperations: [],\r\n  postDelegateOperations: [],\r\n  currentParent: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['currentOperation']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['delegates', '_currentParent', 'preDelegateOperations', 'postDelegateOperations']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.moveToProtected(publicAPI, model, ['currentParent']);\r\n\r\n  // Object methods\r\n  vtkRenderPass(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkRenderPass');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkRenderPass$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js?")},"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderWindowViewNode.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkRenderWindowViewNode$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _ViewNode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ViewNode.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js\");\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkRenderWindowViewNode is intended to be a superclass for all api specific\r\n// RenderWindows. It is intended to define a common API that can be invoked\r\n// upon an api specific render window and provide some common method\r\n// implementations. If your application requires communicating with an api specific\r\n// view try to limit such interactions to methods defined in this class.\r\n// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkRenderWindowViewNode methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkRenderWindowViewNode(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkRenderWindowViewNode');\r\n  publicAPI.getViewNodeFactory = () => null;\r\n  publicAPI.getAspectRatio = () => model.size[0] / model.size[1];\r\n  publicAPI.getAspectRatioForRenderer = renderer => {\r\n    const viewport = renderer.getViewportByReference();\r\n    return model.size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * model.size[1]);\r\n  };\r\n  publicAPI.isInViewport = (x, y, viewport) => {\r\n    const vCoords = viewport.getViewportByReference();\r\n    const size = publicAPI.getFramebufferSize();\r\n    if (vCoords[0] * size[0] <= x && vCoords[2] * size[0] >= x && vCoords[1] * size[1] <= y && vCoords[3] * size[1] >= y) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  publicAPI.getViewportSize = viewport => {\r\n    const vCoords = viewport.getViewportByReference();\r\n    const size = publicAPI.getFramebufferSize();\r\n    return [(vCoords[2] - vCoords[0]) * size[0], (vCoords[3] - vCoords[1]) * size[1]];\r\n  };\r\n  publicAPI.getViewportCenter = viewport => {\r\n    const size = publicAPI.getViewportSize(viewport);\r\n    return [size[0] * 0.5, size[1] * 0.5];\r\n  };\r\n  publicAPI.displayToNormalizedDisplay = (x, y, z) => {\r\n    const size = publicAPI.getFramebufferSize();\r\n    return [x / size[0], y / size[1], z];\r\n  };\r\n  publicAPI.normalizedDisplayToDisplay = (x, y, z) => {\r\n    const size = publicAPI.getFramebufferSize();\r\n    return [x * size[0], y * size[1], z];\r\n  };\r\n  publicAPI.worldToView = (x, y, z, renderer) => renderer.worldToView(x, y, z);\r\n  publicAPI.viewToWorld = (x, y, z, renderer) => renderer.viewToWorld(x, y, z);\r\n  publicAPI.worldToDisplay = (x, y, z, renderer) => {\r\n    const val = renderer.worldToView(x, y, z);\r\n    const dims = publicAPI.getViewportSize(renderer);\r\n    const val2 = renderer.viewToProjection(val[0], val[1], val[2], dims[0] / dims[1]);\r\n    const val3 = renderer.projectionToNormalizedDisplay(val2[0], val2[1], val2[2]);\r\n    return publicAPI.normalizedDisplayToDisplay(val3[0], val3[1], val3[2]);\r\n  };\r\n  publicAPI.displayToWorld = (x, y, z, renderer) => {\r\n    const val = publicAPI.displayToNormalizedDisplay(x, y, z);\r\n    const val2 = renderer.normalizedDisplayToProjection(val[0], val[1], val[2]);\r\n    const dims = publicAPI.getViewportSize(renderer);\r\n    const val3 = renderer.projectionToView(val2[0], val2[1], val2[2], dims[0] / dims[1]);\r\n    return renderer.viewToWorld(val3[0], val3[1], val3[2]);\r\n  };\r\n  publicAPI.normalizedDisplayToViewport = (x, y, z, renderer) => {\r\n    let vCoords = renderer.getViewportByReference();\r\n    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);\r\n    const coords = publicAPI.normalizedDisplayToDisplay(x, y, z);\r\n    return [coords[0] - vCoords[0] - 0.5, coords[1] - vCoords[1] - 0.5, z];\r\n  };\r\n  publicAPI.viewportToNormalizedViewport = (x, y, z, renderer) => {\r\n    const size = publicAPI.getViewportSize(renderer);\r\n    if (size && size[0] !== 0 && size[1] !== 0) {\r\n      return [x / (size[0] - 1.0), y / (size[1] - 1.0), z];\r\n    }\r\n    return [x, y, z];\r\n  };\r\n  publicAPI.normalizedViewportToViewport = (x, y, z, renderer) => {\r\n    const size = publicAPI.getViewportSize(renderer);\r\n    return [x * (size[0] - 1.0), y * (size[1] - 1.0), z];\r\n  };\r\n  publicAPI.displayToLocalDisplay = (x, y, z) => {\r\n    const size = publicAPI.getFramebufferSize();\r\n    return [x, size[1] - y - 1, z];\r\n  };\r\n  publicAPI.viewportToNormalizedDisplay = (x, y, z, renderer) => {\r\n    let vCoords = renderer.getViewportByReference();\r\n    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);\r\n    const x2 = x + vCoords[0] + 0.5;\r\n    const y2 = y + vCoords[1] + 0.5;\r\n    return publicAPI.displayToNormalizedDisplay(x2, y2, z);\r\n  };\r\n  publicAPI.getComputedDevicePixelRatio = () => model.size[0] / publicAPI.getContainerSize()[0];\r\n  publicAPI.getContainerSize = () => {\r\n    _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.vtkErrorMacro('not implemented');\r\n  };\r\n  publicAPI.getPixelData = (x1, y1, x2, y2) => {\r\n    _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.vtkErrorMacro('not implemented');\r\n  };\r\n  publicAPI.createSelector = () => {\r\n    _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.vtkErrorMacro('not implemented');\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  size: undefined,\r\n  selector: undefined\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n  if (!model.size) {\r\n    model.size = [300, 300];\r\n  }\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.getArray(publicAPI, model, ['size'], 2);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['selector']);\r\n\r\n  // Inheritance\r\n  _ViewNode_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].extend(publicAPI, model, initialValues);\r\n\r\n  // Object methods\r\n  vtkRenderWindowViewNode(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkRenderWindowViewNode');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkRenderWindowViewNode$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderWindowViewNode.js?")},"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkViewNode$1)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n\r\n\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\nconst PASS_TYPES = ['Build', 'Render'];\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkViewNode methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkViewNode(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkViewNode');\r\n\r\n  // Builds myself.\r\n  publicAPI.build = prepass => {};\r\n\r\n  // Renders myself\r\n  publicAPI.render = prepass => {};\r\n  publicAPI.traverse = renderPass => {\r\n    // we can choose to do special\r\n    // traversal here based on pass\r\n    const passTraversal = renderPass.getTraverseOperation();\r\n    const fn = publicAPI[passTraversal];\r\n    if (fn) {\r\n      fn(renderPass);\r\n      return;\r\n    }\r\n\r\n    // default traversal\r\n    publicAPI.apply(renderPass, true);\r\n    for (let index = 0; index < model.children.length; index++) {\r\n      model.children[index].traverse(renderPass);\r\n    }\r\n    publicAPI.apply(renderPass, false);\r\n  };\r\n  publicAPI.apply = (renderPass, prepass) => {\r\n    const customRenderPass = publicAPI[renderPass.getOperation()];\r\n    if (customRenderPass) {\r\n      customRenderPass(prepass, renderPass);\r\n    }\r\n  };\r\n  publicAPI.getViewNodeFor = dataObject => {\r\n    if (model.renderable === dataObject) {\r\n      return publicAPI;\r\n    }\r\n    for (let index = 0; index < model.children.length; ++index) {\r\n      const child = model.children[index];\r\n      const vn = child.getViewNodeFor(dataObject);\r\n      if (vn) {\r\n        return vn;\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n  publicAPI.getFirstAncestorOfType = type => {\r\n    if (!model._parent) {\r\n      return null;\r\n    }\r\n    if (model._parent.isA(type)) {\r\n      return model._parent;\r\n    }\r\n    return model._parent.getFirstAncestorOfType(type);\r\n  };\r\n  publicAPI.getLastAncestorOfType = type => {\r\n    if (!model._parent) {\r\n      return null;\r\n    }\r\n    const lastAncestor = model._parent.getLastAncestorOfType(type);\r\n    if (lastAncestor) {\r\n      return lastAncestor;\r\n    }\r\n    if (model._parent.isA(type)) {\r\n      return model._parent;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // add a missing node/child for the passed in renderables. This should\r\n  // be called only in between prepareNodes and removeUnusedNodes\r\n  publicAPI.addMissingNode = dobj => {\r\n    if (!dobj) {\r\n      return undefined;\r\n    }\r\n\r\n    // if found just mark as visited\r\n    const result = model._renderableChildMap.get(dobj);\r\n    if (result !== undefined) {\r\n      result.setVisited(true);\r\n      return result;\r\n    }\r\n\r\n    // otherwise create a node\r\n    const newNode = publicAPI.createViewNode(dobj);\r\n    if (newNode) {\r\n      newNode.setParent(publicAPI);\r\n      newNode.setVisited(true);\r\n      model._renderableChildMap.set(dobj, newNode);\r\n      model.children.push(newNode);\r\n      return newNode;\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  // add missing nodes/children for the passed in renderables. This should\r\n  // be called only in between prepareNodes and removeUnusedNodes\r\n  publicAPI.addMissingNodes = dataObjs => {\r\n    if (!dataObjs || !dataObjs.length) {\r\n      return;\r\n    }\r\n    for (let index = 0; index < dataObjs.length; ++index) {\r\n      const dobj = dataObjs[index];\r\n      publicAPI.addMissingNode(dobj);\r\n    }\r\n  };\r\n\r\n  // ability to add children that have no renderable use in the same manner\r\n  // as addMissingNodes This case is when a normal viewnode wants to\r\n  // delegate passes to a helper or child that doeasn't map to a clear\r\n  // renderable or any renderable\r\n  publicAPI.addMissingChildren = children => {\r\n    if (!children || !children.length) {\r\n      return;\r\n    }\r\n    for (let index = 0; index < children.length; ++index) {\r\n      const child = children[index];\r\n      const cindex = model.children.indexOf(child);\r\n      if (cindex === -1) {\r\n        child.setParent(publicAPI);\r\n        model.children.push(child);\r\n        const childRenderable = child.getRenderable();\r\n        if (childRenderable) {\r\n          model._renderableChildMap.set(childRenderable, child);\r\n        }\r\n      }\r\n      child.setVisited(true);\r\n    }\r\n  };\r\n  publicAPI.prepareNodes = () => {\r\n    for (let index = 0; index < model.children.length; ++index) {\r\n      model.children[index].setVisited(false);\r\n    }\r\n  };\r\n  publicAPI.setVisited = val => {\r\n    model.visited = val;\r\n  };\r\n  publicAPI.removeUnusedNodes = () => {\r\n    let visitedCount = 0;\r\n    for (let index = 0; index < model.children.length; ++index) {\r\n      const child = model.children[index];\r\n      const visited = child.getVisited();\r\n      if (visited) {\r\n        model.children[visitedCount++] = child;\r\n        child.setVisited(false);\r\n      } else {\r\n        const renderable = child.getRenderable();\r\n        if (renderable) {\r\n          model._renderableChildMap.delete(renderable);\r\n        }\r\n        child.delete();\r\n      }\r\n    }\r\n    model.children.length = visitedCount;\r\n  };\r\n  publicAPI.createViewNode = dataObj => {\r\n    if (!model.myFactory) {\r\n      vtkErrorMacro('Cannot create view nodes without my own factory');\r\n      return null;\r\n    }\r\n    const ret = model.myFactory.createNode(dataObj);\r\n    if (ret) {\r\n      ret.setRenderable(dataObj);\r\n    }\r\n    return ret;\r\n  };\r\n  const parentDelete = publicAPI.delete;\r\n  publicAPI.delete = () => {\r\n    for (let i = 0; i < model.children.length; i++) {\r\n      model.children[i].delete();\r\n    }\r\n    parentDelete();\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  // _parent: null,\r\n  renderable: null,\r\n  myFactory: null,\r\n  children: [],\r\n  visited: false\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.event(publicAPI, model, 'event');\r\n  model._renderableChildMap = new Map();\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['visited']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['_parent', 'renderable', 'myFactory']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.getArray(publicAPI, model, ['children']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.moveToProtected(publicAPI, model, ['parent']);\r\n\r\n  // Object methods\r\n  vtkViewNode(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkViewNode');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkViewNode$1 = {\r\n  newInstance,\r\n  extend,\r\n  PASS_TYPES\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js?")},"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkViewNodeFactory$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkViewNodeFactory methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkViewNodeFactory(publicAPI, model) {\r\n  // Make sure our overrides is just for our instance not shared with everyone...\r\n  if (!model.overrides) {\r\n    model.overrides = {};\r\n  }\r\n\r\n  // Set our className\r\n  model.classHierarchy.push('vtkViewNodeFactory');\r\n  publicAPI.createNode = dataObject => {\r\n    if (dataObject.isDeleted()) {\r\n      return null;\r\n    }\r\n    let cpt = 0;\r\n    let className = dataObject.getClassName(cpt++);\r\n    let isObject = false;\r\n    const keys = Object.keys(model.overrides);\r\n    while (className && !isObject) {\r\n      if (keys.indexOf(className) !== -1) {\r\n        isObject = true;\r\n      } else {\r\n        className = dataObject.getClassName(cpt++);\r\n      }\r\n    }\r\n    if (!isObject) {\r\n      return null;\r\n    }\r\n    const vn = model.overrides[className]();\r\n    vn.setMyFactory(publicAPI);\r\n    return vn;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  // overrides: {},\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n\r\n  // Object methods\r\n  vtkViewNodeFactory(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkViewNodeFactory');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkViewNodeFactory$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Actor.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ index),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gl-matrix */ "./node_modules/gl-matrix/esm/mat4.js");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _Core_Prop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/Prop.js */ "./node_modules/@kitware/vtk.js/Rendering/Core/Prop.js");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/ViewNodeFactory.js");\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  CoordinateSystem\r\n} = _Core_Prop_js__WEBPACK_IMPORTED_MODULE_1__["default"];\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUActor methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUActor(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkWebGPUActor\');\r\n\r\n  // Builds myself.\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      model.WebGPURenderer = publicAPI.getFirstAncestorOfType(\'vtkWebGPURenderer\');\r\n      model.WebGPURenderWindow = model.WebGPURenderer.getFirstAncestorOfType(\'vtkWebGPURenderWindow\');\r\n      if (model.propID === undefined) {\r\n        model.propID = model.WebGPURenderWindow.getUniquePropID();\r\n      }\r\n      publicAPI.prepareNodes();\r\n      publicAPI.addMissingNode(model.renderable.getMapper());\r\n      publicAPI.removeUnusedNodes();\r\n    }\r\n  };\r\n\r\n  // we draw textures, then mapper, then post pass textures\r\n  publicAPI.traverseOpaquePass = renderPass => {\r\n    if (!model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model.WebGPURenderer.getSelector() && !model.renderable.getNestedPickable()) {\r\n      return;\r\n    }\r\n    publicAPI.apply(renderPass, true);\r\n    if (model.children[0]) {\r\n      model.children[0].traverse(renderPass);\r\n    }\r\n    publicAPI.apply(renderPass, false);\r\n  };\r\n\r\n  // we draw textures, then mapper, then post pass textures\r\n  publicAPI.traverseTranslucentPass = renderPass => {\r\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model.WebGPURenderer.getSelector() && !model.renderable.getNestedPickable()) {\r\n      return;\r\n    }\r\n    publicAPI.apply(renderPass, true);\r\n    if (model.children[0]) {\r\n      model.children[0].traverse(renderPass);\r\n    }\r\n    publicAPI.apply(renderPass, false);\r\n  };\r\n  publicAPI.queryPass = (prepass, renderPass) => {\r\n    if (prepass) {\r\n      if (!model.renderable || !model.renderable.getVisibility()) {\r\n        return;\r\n      }\r\n      if (model.renderable.getIsOpaque()) {\r\n        renderPass.incrementOpaqueActorCount();\r\n      } else {\r\n        renderPass.incrementTranslucentActorCount();\r\n      }\r\n    }\r\n  };\r\n  publicAPI.getBufferShift = wgpuRen => {\r\n    publicAPI.getKeyMatrices(wgpuRen);\r\n    return model.bufferShift;\r\n  };\r\n  publicAPI.getKeyMatrices = wgpuRen => {\r\n    // has the actor or stabilization center changed?\r\n    if (Math.max(model.renderable.getMTime(), wgpuRen.getStabilizedTime()) > model.keyMatricesTime.getMTime()) {\r\n      model.renderable.computeMatrix();\r\n      const mcwc = model.renderable.getMatrix();\r\n\r\n      // compute the net shift, only apply stabilized coords with world coordinates\r\n      model.bufferShift[0] = mcwc[3];\r\n      model.bufferShift[1] = mcwc[7];\r\n      model.bufferShift[2] = mcwc[11];\r\n      const center = wgpuRen.getStabilizedCenterByReference();\r\n      if (model.renderable.getCoordinateSystem() === CoordinateSystem.WORLD) {\r\n        model.bufferShift[0] -= center[0];\r\n        model.bufferShift[1] -= center[1];\r\n        model.bufferShift[2] -= center[2];\r\n      }\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_4__.transpose(model.keyMatrices.bcwc, mcwc);\r\n      if (model.renderable.getIsIdentity()) {\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_4__.identity(model.keyMatrices.normalMatrix);\r\n      } else {\r\n        // we use bcwc BEFORE the translate below (just to get transposed mcvc)\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_4__.copy(model.keyMatrices.normalMatrix, model.keyMatrices.bcwc);\r\n        // zero out translation\r\n        model.keyMatrices.normalMatrix[3] = 0.0;\r\n        model.keyMatrices.normalMatrix[7] = 0.0;\r\n        model.keyMatrices.normalMatrix[11] = 0.0;\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_4__.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_4__.transpose(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\r\n      }\r\n\r\n      // only need the buffer shift to get to world\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_4__.translate(model.keyMatrices.bcwc, model.keyMatrices.bcwc, [-model.bufferShift[0], -model.bufferShift[1], -model.bufferShift[2]]);\r\n\r\n      // to get to stabilized we also need the center\r\n      if (model.renderable.getCoordinateSystem() === CoordinateSystem.WORLD) {\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_4__.translate(model.keyMatrices.bcsc, model.keyMatrices.bcwc, [-center[0], -center[1], -center[2]]);\r\n      } else {\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_4__.copy(model.keyMatrices.bcsc, model.keyMatrices.bcwc);\r\n      }\r\n      model.keyMatricesTime.modified();\r\n    }\r\n    return model.keyMatrices;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  keyMatricesTime: null,\r\n  keyMatrices: null,\r\n  propID: undefined,\r\n  bufferShift: undefined\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);\r\n  model.keyMatricesTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.keyMatricesTime, {\r\n    mtime: 0\r\n  });\r\n  model.keyMatrices = {\r\n    normalMatrix: new Float64Array(16),\r\n    bcwc: new Float64Array(16),\r\n    bcsc: new Float64Array(16)\r\n  };\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, [\'propID\', \'keyMatricesTime\']);\r\n  model.bufferShift = [0, 0, 0, 0];\r\n\r\n  // Object methods\r\n  vtkWebGPUActor(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar index = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to WebGPU backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__.registerOverride)(\'vtkActor\', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/Actor.js?')},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Actor2D.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ index),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gl-matrix */ "./node_modules/gl-matrix/esm/mat4.js");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _Core_Prop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/Prop.js */ "./node_modules/@kitware/vtk.js/Rendering/Core/Prop.js");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/ViewNodeFactory.js");\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  CoordinateSystem\r\n} = _Core_Prop_js__WEBPACK_IMPORTED_MODULE_1__["default"];\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUActor methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUActor2D(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkWebGPUActor2D\');\r\n\r\n  // Builds myself.\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      model.WebGPURenderer = publicAPI.getFirstAncestorOfType(\'vtkWebGPURenderer\');\r\n      model.WebGPURenderWindow = model.WebGPURenderer.getFirstAncestorOfType(\'vtkWebGPURenderWindow\');\r\n      if (model.propID === undefined) {\r\n        model.propID = model.WebGPURenderWindow.getUniquePropID();\r\n      }\r\n      publicAPI.prepareNodes();\r\n      publicAPI.addMissingNode(model.renderable.getMapper());\r\n      publicAPI.removeUnusedNodes();\r\n    }\r\n  };\r\n\r\n  // we draw textures, then mapper, then post pass textures\r\n  publicAPI.traverseOpaquePass = renderPass => {\r\n    if (!model.renderable || !model.renderable.getNestedVisibility() || !model.renderable.getIsOpaque() || model.WebGPURenderer.getSelector() && !model.renderable.getNestedPickable()) {\r\n      return;\r\n    }\r\n    publicAPI.apply(renderPass, true);\r\n    if (model.children[0]) {\r\n      model.children[0].traverse(renderPass);\r\n    }\r\n    publicAPI.apply(renderPass, false);\r\n  };\r\n\r\n  // we draw textures, then mapper, then post pass textures\r\n  publicAPI.traverseTranslucentPass = renderPass => {\r\n    if (!model.renderable || !model.renderable.getNestedVisibility() || model.renderable.getIsOpaque() || model.WebGPURenderer.getSelector() && !model.renderable.getNestedPickable()) {\r\n      return;\r\n    }\r\n    publicAPI.apply(renderPass, true);\r\n    if (model.children[0]) {\r\n      model.children[0].traverse(renderPass);\r\n    }\r\n    publicAPI.apply(renderPass, false);\r\n  };\r\n  publicAPI.queryPass = (prepass, renderPass) => {\r\n    if (prepass) {\r\n      if (!model.renderable || !model.renderable.getVisibility()) {\r\n        return;\r\n      }\r\n      if (model.renderable.getIsOpaque()) {\r\n        renderPass.incrementOpaqueActorCount();\r\n      } else {\r\n        renderPass.incrementTranslucentActorCount();\r\n      }\r\n    }\r\n  };\r\n  publicAPI.getBufferShift = wgpuRen => {\r\n    publicAPI.getKeyMatrices(wgpuRen);\r\n    return model.bufferShift;\r\n  };\r\n  publicAPI.getKeyMatrices = wgpuRen => {\r\n    // has the actor or stabilization center changed?\r\n    if (Math.max(model.renderable.getMTime(), wgpuRen.getStabilizedTime()) > model.keyMatricesTime.getMTime()) {\r\n      // compute the net shift, only apply stabilized coords with world coordinates\r\n      model.bufferShift[0] = 0.0;\r\n      model.bufferShift[1] = 0.0;\r\n      model.bufferShift[2] = 0.0;\r\n      const center = wgpuRen.getStabilizedCenterByReference();\r\n      if (model.renderable.getCoordinateSystem() === CoordinateSystem.WORLD) {\r\n        model.bufferShift[0] -= center[0];\r\n        model.bufferShift[1] -= center[1];\r\n        model.bufferShift[2] -= center[2];\r\n      }\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_4__.identity(model.keyMatrices.bcwc);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_4__.identity(model.keyMatrices.normalMatrix);\r\n\r\n      // only meed the buffer shift to get to world\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_4__.translate(model.keyMatrices.bcwc, model.keyMatrices.bcwc, [-model.bufferShift[0], -model.bufferShift[1], -model.bufferShift[2]]);\r\n\r\n      // to get to stabilized we also need the center\r\n      if (model.renderable.getCoordinateSystem() === CoordinateSystem.WORLD) {\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_4__.translate(model.keyMatrices.bcsc, model.keyMatrices.bcwc, [-center[0], -center[1], -center[2]]);\r\n      } else {\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_4__.copy(model.keyMatrices.bcsc, model.keyMatrices.bcwc);\r\n      }\r\n      model.keyMatricesTime.modified();\r\n    }\r\n    return model.keyMatrices;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  keyMatricesTime: null,\r\n  keyMatrices: null,\r\n  propID: undefined,\r\n  bufferShift: undefined\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);\r\n  model.keyMatricesTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.keyMatricesTime, {\r\n    mtime: 0\r\n  });\r\n  model.keyMatrices = {\r\n    normalMatrix: new Float64Array(16),\r\n    bcwc: new Float64Array(16),\r\n    bcsc: new Float64Array(16)\r\n  };\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, [\'propID\', \'keyMatricesTime\']);\r\n  model.bufferShift = [0, 0, 0, 0];\r\n\r\n  // Object methods\r\n  vtkWebGPUActor2D(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar index = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to WebGPU backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__.registerOverride)(\'vtkActor2D\', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/Actor2D.js?')},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/BindGroup.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUBindGroup$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUBindGroup methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUBindGroup(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUBindGroup');\r\n  publicAPI.setBindables = bindables => {\r\n    // is there a difference between the old and new list?\r\n    if (model.bindables.length === bindables.length) {\r\n      let allMatch = true;\r\n      for (let i = 0; i < model.bindables.length; i++) {\r\n        if (model.bindables[i] !== bindables[i]) {\r\n          allMatch = false;\r\n        }\r\n      }\r\n      if (allMatch) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // there is a difference\r\n    model.bindables = bindables;\r\n    publicAPI.modified();\r\n  };\r\n  publicAPI.getBindGroupLayout = device => {\r\n    const entries = [];\r\n    for (let i = 0; i < model.bindables.length; i++) {\r\n      const entry = model.bindables[i].getBindGroupLayoutEntry();\r\n      entry.binding = i;\r\n      entries.push(entry);\r\n    }\r\n    return device.getBindGroupLayout({\r\n      entries\r\n    });\r\n  };\r\n  publicAPI.getBindGroup = device => {\r\n    // check mtime\r\n    let mtime = publicAPI.getMTime();\r\n    for (let i = 0; i < model.bindables.length; i++) {\r\n      const tm = model.bindables[i].getBindGroupTime().getMTime();\r\n      mtime = tm > mtime ? tm : mtime;\r\n    }\r\n    if (mtime < model.bindGroupTime.getMTime()) {\r\n      return model.bindGroup;\r\n    }\r\n    const entries = [];\r\n    for (let i = 0; i < model.bindables.length; i++) {\r\n      const entry = model.bindables[i].getBindGroupEntry();\r\n      entry.binding = i;\r\n      entries.push(entry);\r\n    }\r\n    model.bindGroup = device.getHandle().createBindGroup({\r\n      layout: publicAPI.getBindGroupLayout(device),\r\n      entries,\r\n      label: model.label\r\n    });\r\n    model.bindGroupTime.modified();\r\n    return model.bindGroup;\r\n  };\r\n  publicAPI.getShaderCode = pipeline => {\r\n    const lines = [];\r\n    const bgroup = pipeline.getBindGroupLayoutCount(model.label);\r\n    for (let i = 0; i < model.bindables.length; i++) {\r\n      lines.push(model.bindables[i].getShaderCode(i, bgroup));\r\n    }\r\n    return lines.join('\\n');\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  device: null,\r\n  handle: null,\r\n  label: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Object methods\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  model.bindables = [];\r\n  model.bindGroupTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.bindGroupTime, {\r\n    mtime: 0\r\n  });\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['bindGroupTime', 'handle', 'sizeInBytes', 'usage']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['label', 'device', 'arrayInformation']);\r\n  vtkWebGPUBindGroup(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUBindGroup$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/BindGroup.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Buffer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUBuffer$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _BufferManager_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BufferManager/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager/Constants.js\");\n\r\n\r\n\r\n// methods we forward to the handle\r\nconst forwarded = ['getMappedRange', 'mapAsync', 'unmap'];\r\nfunction bufferSubData(device, destBuffer, destOffset, srcArrayBuffer) {\r\n  const byteCount = srcArrayBuffer.byteLength;\r\n  const srcBuffer = device.createBuffer({\r\n    size: byteCount,\r\n    /* eslint-disable no-undef */\r\n    usage: GPUBufferUsage.COPY_SRC,\r\n    /* eslint-enable no-undef */\r\n    mappedAtCreation: true\r\n  });\r\n  const arrayBuffer = srcBuffer.getMappedRange(0, byteCount);\r\n  new Uint8Array(arrayBuffer).set(new Uint8Array(srcArrayBuffer)); // memcpy\r\n  srcBuffer.unmap();\r\n  const encoder = device.createCommandEncoder();\r\n  encoder.copyBufferToBuffer(srcBuffer, 0, destBuffer, destOffset, byteCount);\r\n  const commandBuffer = encoder.finish();\r\n  const queue = device.queue;\r\n  queue.submit([commandBuffer]);\r\n  srcBuffer.destroy();\r\n}\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUBufferManager methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUBuffer(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUBuffer');\r\n  publicAPI.create = (sizeInBytes, usage) => {\r\n    model.handle = model.device.getHandle().createBuffer({\r\n      size: sizeInBytes,\r\n      usage,\r\n      label: model.label\r\n    });\r\n    model.sizeInBytes = sizeInBytes;\r\n    model.usage = usage;\r\n  };\r\n  publicAPI.write = data => {\r\n    bufferSubData(model.device.getHandle(), model.handle, 0, data.buffer);\r\n  };\r\n  publicAPI.createAndWrite = (data, usage) => {\r\n    model.handle = model.device.getHandle().createBuffer({\r\n      size: data.byteLength,\r\n      usage,\r\n      mappedAtCreation: true,\r\n      label: model.label\r\n    });\r\n    model.sizeInBytes = data.byteLength;\r\n    model.usage = usage;\r\n    new Uint8Array(model.handle.getMappedRange()).set(new Uint8Array(data.buffer)); // memcpy\r\n    model.handle.unmap();\r\n  };\r\n\r\n  // simple forwarders\r\n  for (let i = 0; i < forwarded.length; i++) {\r\n    publicAPI[forwarded[i]] = function () {\r\n      return model.handle[forwarded[i]](...arguments);\r\n    };\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  device: null,\r\n  handle: null,\r\n  sizeInBytes: 0,\r\n  strideInBytes: 0,\r\n  arrayInformation: null,\r\n  usage: null,\r\n  label: null,\r\n  sourceTime: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Object methods\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['handle', 'sizeInBytes', 'usage']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['strideInBytes', 'device', 'arrayInformation', 'label', 'sourceTime']);\r\n  vtkWebGPUBuffer(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUBuffer$1 = {\r\n  newInstance,\r\n  extend,\r\n  ..._BufferManager_Constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/Buffer.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STATIC: () => (/* binding */ STATIC),\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUBufferManager$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray.js\");\n/* harmony import */ var _Buffer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Buffer.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Buffer.js\");\n/* harmony import */ var _IndexBuffer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./IndexBuffer.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/IndexBuffer.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Types.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Types.js\");\n/* harmony import */ var _BufferManager_Constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./BufferManager/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager/Constants.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  BufferUsage\r\n} = _BufferManager_Constants_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.c;\r\nconst {\r\n  VtkDataTypes\r\n} = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\r\n\r\n// the webgpu constants all show up as undefined\r\n/* eslint-disable no-undef */\r\n\r\n// ----------------------------------------------------------------------------\r\n// Static API\r\n// ----------------------------------------------------------------------------\r\n\r\nconst STATIC = {};\r\nfunction _getFormatForDataArray(dataArray) {\r\n  let format;\r\n  switch (dataArray.getDataType()) {\r\n    case VtkDataTypes.UNSIGNED_CHAR:\r\n      format = 'uint8';\r\n      break;\r\n    case VtkDataTypes.FLOAT:\r\n      format = 'float32';\r\n      break;\r\n    case VtkDataTypes.UNSIGNED_INT:\r\n      format = 'uint32';\r\n      break;\r\n    case VtkDataTypes.INT:\r\n      format = 'sint32';\r\n      break;\r\n    case VtkDataTypes.DOUBLE:\r\n      format = 'float32';\r\n      break;\r\n    case VtkDataTypes.UNSIGNED_SHORT:\r\n      format = 'uint16';\r\n      break;\r\n    case VtkDataTypes.SHORT:\r\n      format = 'sin16';\r\n      break;\r\n    default:\r\n      format = 'float32';\r\n      break;\r\n  }\r\n  switch (dataArray.getNumberOfComponents()) {\r\n    case 2:\r\n      format += 'x2';\r\n      break;\r\n    case 3:\r\n      // only 32bit types support x3\r\n      if (!format.includes('32')) {\r\n        vtkErrorMacro(`unsupported x3 type for ${format}`);\r\n      }\r\n      format += 'x3';\r\n      break;\r\n    case 4:\r\n      format += 'x4';\r\n      break;\r\n  }\r\n  return format;\r\n}\r\nfunction packArray(indexBuffer, inArrayData, numComp, outputType, options) {\r\n  const result = {};\r\n  const flatSize = indexBuffer.getFlatSize();\r\n  if (!flatSize) {\r\n    return result;\r\n  }\r\n\r\n  // setup shift and scale\r\n  let shift = [0.0, 0.0, 0.0, 0.0];\r\n  if (options.shift) {\r\n    if (options.shift.length) {\r\n      shift = options.shift;\r\n    } else {\r\n      shift.fill(options.shift);\r\n    }\r\n  }\r\n  let scale = [1.0, 1.0, 1.0, 1.0];\r\n  if (options.scale) {\r\n    if (options.scale.length) {\r\n      scale = options.scale;\r\n    } else {\r\n      scale.fill(options.scale);\r\n    }\r\n  }\r\n  const packExtra = Object.prototype.hasOwnProperty.call(options, 'packExtra') ? options.packExtra : false;\r\n  let addAPoint;\r\n  let vboidx = 0;\r\n  const stride = numComp + (packExtra ? 1 : 0);\r\n  const packedVBO = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.a)(outputType, flatSize * stride);\r\n\r\n  // pick the right function based on point versus cell data\r\n  let flatIdMap = indexBuffer.getFlatIdToPointId();\r\n  if (options.cellData) {\r\n    flatIdMap = indexBuffer.getFlatIdToCellId();\r\n  }\r\n\r\n  // add data based on number of components\r\n  if (numComp === 1) {\r\n    addAPoint = function addAPointFunc(i) {\r\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\r\n    };\r\n  } else if (numComp === 2) {\r\n    addAPoint = function addAPointFunc(i) {\r\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\r\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\r\n    };\r\n  } else if (numComp === 3 && !packExtra) {\r\n    addAPoint = function addAPointFunc(i) {\r\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\r\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\r\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\r\n    };\r\n  } else if (numComp === 3 && packExtra) {\r\n    addAPoint = function addAPointFunc(i) {\r\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\r\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\r\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\r\n      packedVBO[vboidx++] = scale[3] * 1.0 + shift[3];\r\n    };\r\n  } else if (numComp === 4) {\r\n    addAPoint = function addAPointFunc(i) {\r\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\r\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\r\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\r\n      packedVBO[vboidx++] = scale[3] * inArrayData[i + 3] + shift[3];\r\n    };\r\n  }\r\n\r\n  // for each entry in the flat array process it\r\n  for (let index = 0; index < flatSize; index++) {\r\n    const inArrayId = numComp * flatIdMap[index];\r\n    addAPoint(inArrayId);\r\n  }\r\n  result.nativeArray = packedVBO;\r\n  return result;\r\n}\r\nfunction getNormal(pointData, i0, i1, i2) {\r\n  const v1 = [pointData[i2 * 3] - pointData[i1 * 3], pointData[i2 * 3 + 1] - pointData[i1 * 3 + 1], pointData[i2 * 3 + 2] - pointData[i1 * 3 + 2]];\r\n  const v2 = [pointData[i0 * 3] - pointData[i1 * 3], pointData[i0 * 3 + 1] - pointData[i1 * 3 + 1], pointData[i0 * 3 + 2] - pointData[i1 * 3 + 2]];\r\n  const result = [];\r\n  (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.j)(v1, v2, result);\r\n  (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.l)(result);\r\n  return result;\r\n}\r\nfunction generateNormals(cellArray, pointArray) {\r\n  const pointData = pointArray.getData();\r\n  const cellArrayData = cellArray.getData();\r\n  if (!cellArrayData || !pointData) {\r\n    return null;\r\n  }\r\n\r\n  // return a cellArray of normals\r\n  const packedVBO = new Int8Array(cellArray.getNumberOfCells() * 4);\r\n  const size = cellArrayData.length;\r\n  let vboidx = 0;\r\n  for (let index = 0; index < size;) {\r\n    const normal = getNormal(pointData, cellArrayData[index + 1], cellArrayData[index + 2], cellArrayData[index + 3]);\r\n    packedVBO[vboidx++] = 127 * normal[0];\r\n    packedVBO[vboidx++] = 127 * normal[1];\r\n    packedVBO[vboidx++] = 127 * normal[2];\r\n    packedVBO[vboidx++] = 127;\r\n    index += cellArrayData[index] + 1;\r\n  }\r\n  return packedVBO;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUBufferManager methods\r\n// ----------------------------------------------------------------------------\r\nfunction vtkWebGPUBufferManager(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUBufferManager');\r\n  function _createBuffer(req) {\r\n    // if a dataArray is provided set the nativeArray\r\n    if (req.dataArray && !req.nativeArray) {\r\n      req.nativeArray = req.dataArray.getData();\r\n    }\r\n    let buffer;\r\n    let gpuUsage;\r\n\r\n    // handle index buffers\r\n    if (req.usage === BufferUsage.Index) {\r\n      // todo change to FlattenedIndex to be more clear\r\n      buffer = _IndexBuffer_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance({\r\n        label: req.label\r\n      });\r\n      buffer.setDevice(model.device);\r\n      /* eslint-disable no-bitwise */\r\n      gpuUsage = GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST;\r\n      /* eslint-enable no-bitwise */\r\n      buffer.buildIndexBuffer(req);\r\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\r\n      buffer.setArrayInformation([{\r\n        format: req.format\r\n      }]);\r\n    }\r\n\r\n    // create one if not done already\r\n    if (!buffer) {\r\n      buffer = _Buffer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance({\r\n        label: req.label\r\n      });\r\n      buffer.setDevice(model.device);\r\n    }\r\n\r\n    // handle uniform buffers\r\n    if (req.usage === BufferUsage.UniformArray) {\r\n      /* eslint-disable no-bitwise */\r\n      gpuUsage = GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST;\r\n      /* eslint-enable no-bitwise */\r\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\r\n    }\r\n\r\n    // handle storage buffers\r\n    if (req.usage === BufferUsage.Storage) {\r\n      /* eslint-disable no-bitwise */\r\n      gpuUsage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST;\r\n      /* eslint-enable no-bitwise */\r\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\r\n    }\r\n\r\n    // handle textures\r\n    if (req.usage === BufferUsage.Texture) {\r\n      /* eslint-disable no-bitwise */\r\n      gpuUsage = GPUBufferUsage.COPY_SRC;\r\n      /* eslint-enable no-bitwise */\r\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\r\n    }\r\n\r\n    // all of the below types that have gpuUsage = VERTEX require format\r\n    // to be provided.\r\n\r\n    // handle point data\r\n    if (req.usage === BufferUsage.PointArray) {\r\n      gpuUsage = GPUBufferUsage.VERTEX;\r\n      const arrayType = _Types_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getNativeTypeFromBufferFormat(req.format);\r\n      const result = packArray(req.indexBuffer, req.dataArray.getData(), req.dataArray.getNumberOfComponents(), arrayType, {\r\n        packExtra: req.packExtra,\r\n        shift: req.shift,\r\n        scale: req.scale,\r\n        cellData: req.cellData,\r\n        cellOffset: req.cellOffset\r\n      });\r\n      buffer.createAndWrite(result.nativeArray, gpuUsage);\r\n      buffer.setStrideInBytes(_Types_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getByteStrideFromBufferFormat(req.format));\r\n      buffer.setArrayInformation([{\r\n        offset: 0,\r\n        format: req.format,\r\n        interpolation: req.cellData ? 'flat' : 'perspective'\r\n      }]);\r\n    }\r\n\r\n    // handle normals from points, snorm8x4\r\n    if (req.usage === BufferUsage.NormalsFromPoints) {\r\n      gpuUsage = GPUBufferUsage.VERTEX;\r\n      const arrayType = _Types_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getNativeTypeFromBufferFormat(req.format);\r\n      const normals = generateNormals(req.cells, req.dataArray);\r\n      const result = packArray(req.indexBuffer, normals, 4, arrayType, {\r\n        cellData: true\r\n      });\r\n      buffer.createAndWrite(result.nativeArray, gpuUsage);\r\n      buffer.setStrideInBytes(_Types_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getByteStrideFromBufferFormat(req.format));\r\n      buffer.setArrayInformation([{\r\n        offset: 0,\r\n        format: req.format,\r\n        interpolation: 'flat'\r\n      }]);\r\n    }\r\n    if (req.usage === BufferUsage.RawVertex) {\r\n      gpuUsage = GPUBufferUsage.VERTEX;\r\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\r\n      buffer.setStrideInBytes(_Types_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getByteStrideFromBufferFormat(req.format));\r\n      buffer.setArrayInformation([{\r\n        offset: 0,\r\n        format: req.format\r\n      }]);\r\n    }\r\n    buffer.setSourceTime(req.time);\r\n    return buffer;\r\n  }\r\n\r\n  // is the buffer already present?\r\n  publicAPI.hasBuffer = hash => model.device.hasCachedObject(hash);\r\n  publicAPI.getBuffer = req => {\r\n    // if we have a source the get/create/cache the buffer\r\n    if (req.hash) {\r\n      return model.device.getCachedObject(req.hash, _createBuffer, req);\r\n    }\r\n    return _createBuffer(req);\r\n  };\r\n  publicAPI.getBufferForPointArray = (dataArray, indexBuffer) => {\r\n    const format = _getFormatForDataArray(dataArray);\r\n    const buffRequest = {\r\n      hash: `${dataArray.getMTime()}I${indexBuffer.getMTime()}${format}`,\r\n      usage: BufferUsage.PointArray,\r\n      format,\r\n      dataArray,\r\n      indexBuffer\r\n    };\r\n    return publicAPI.getBuffer(buffRequest);\r\n  };\r\n  publicAPI.getFullScreenQuadBuffer = () => {\r\n    if (model.fullScreenQuadBuffer) {\r\n      return model.fullScreenQuadBuffer;\r\n    }\r\n    model.fullScreenQuadBuffer = _Buffer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance();\r\n    model.fullScreenQuadBuffer.setDevice(model.device);\r\n\r\n    // prettier-ignore\r\n    const array = new Float32Array([-1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0]);\r\n    model.fullScreenQuadBuffer.createAndWrite(array, GPUBufferUsage.VERTEX);\r\n    model.fullScreenQuadBuffer.setStrideInBytes(12);\r\n    model.fullScreenQuadBuffer.setArrayInformation([{\r\n      offset: 0,\r\n      format: 'float32x3'\r\n    }]);\r\n    return model.fullScreenQuadBuffer;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  device: null,\r\n  fullScreenQuadBuffer: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Object methods\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.o)(publicAPI, model);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.e)(publicAPI, model, ['device']);\r\n  vtkWebGPUBufferManager(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUBufferManager$1 = {\r\n  newInstance,\r\n  extend,\r\n  ...STATIC,\r\n  ..._BufferManager_Constants_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager/Constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BufferUsage: () => (/* binding */ BufferUsage),\n/* harmony export */   PrimitiveTypes: () => (/* binding */ PrimitiveTypes),\n/* harmony export */   "default": () => (/* binding */ Constants)\n/* harmony export */ });\nconst BufferUsage = {\r\n  Verts: 0,\r\n  Lines: 1,\r\n  Triangles: 2,\r\n  Strips: 3,\r\n  LinesFromStrips: 4,\r\n  LinesFromTriangles: 5,\r\n  Points: 6,\r\n  UniformArray: 7,\r\n  PointArray: 8,\r\n  NormalsFromPoints: 9,\r\n  Texture: 10,\r\n  RawVertex: 11,\r\n  Storage: 12,\r\n  Index: 13\r\n};\r\nconst PrimitiveTypes = {\r\n  Start: 0,\r\n  Points: 0,\r\n  Lines: 1,\r\n  Triangles: 2,\r\n  TriangleStrips: 3,\r\n  TriangleEdges: 4,\r\n  TriangleStripEdges: 5,\r\n  End: 6\r\n};\r\nvar Constants = {\r\n  BufferUsage,\r\n  PrimitiveTypes\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager/Constants.js?')},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Camera.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ index),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gl-matrix */ "./node_modules/gl-matrix/esm/mat4.js");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/ViewNodeFactory.js");\n\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUCamera methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUCamera(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkWebGPUCamera\');\r\n  publicAPI.getProjectionMatrix = (outMat, aspect, cRange, windowCenter) => {\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_3__.identity(outMat);\r\n    if (model.renderable.getParallelProjection()) {\r\n      // set up a rectangular parallelipiped\r\n      const parallelScale = model.renderable.getParallelScale();\r\n      const width = parallelScale * aspect;\r\n      const height = parallelScale;\r\n      const xmin = (windowCenter[0] - 1.0) * width;\r\n      const xmax = (windowCenter[0] + 1.0) * width;\r\n      const ymin = (windowCenter[1] - 1.0) * height;\r\n      const ymax = (windowCenter[1] + 1.0) * height;\r\n      const xr = 1.0 / (xmax - xmin);\r\n      const yr = 1.0 / (ymax - ymin);\r\n      outMat[0] = 2.0 * xr;\r\n      outMat[5] = 2.0 * yr;\r\n      outMat[10] = 1.0 / (cRange[1] - cRange[0]);\r\n      outMat[12] = (xmax + xmin) * xr;\r\n      outMat[13] = (ymax + ymin) * yr;\r\n      outMat[14] = cRange[1] / (cRange[1] - cRange[0]);\r\n    } else {\r\n      const tmp = Math.tan(Math.PI * model.renderable.getViewAngle() / 360.0);\r\n      let width;\r\n      let height;\r\n      if (model.renderable.getUseHorizontalViewAngle() === true) {\r\n        width = cRange[0] * tmp;\r\n        height = cRange[0] * tmp / aspect;\r\n      } else {\r\n        width = cRange[0] * tmp * aspect;\r\n        height = cRange[0] * tmp;\r\n      }\r\n      const xmin = (windowCenter[0] - 1.0) * width;\r\n      const xmax = (windowCenter[0] + 1.0) * width;\r\n      const ymin = (windowCenter[1] - 1.0) * height;\r\n      const ymax = (windowCenter[1] + 1.0) * height;\r\n      outMat[0] = 2.0 * cRange[0] / (xmax - xmin);\r\n      outMat[5] = 2.0 * cRange[0] / (ymax - ymin);\r\n      outMat[12] = (xmin + xmax) / (xmax - xmin);\r\n      outMat[13] = (ymin + ymax) / (ymax - ymin);\r\n      outMat[10] = 0.0;\r\n      outMat[14] = cRange[0];\r\n      outMat[11] = -1.0;\r\n      outMat[15] = 0.0;\r\n    }\r\n  };\r\n  publicAPI.convertToOpenGLDepth = val => {\r\n    if (model.renderable.getParallelProjection()) {\r\n      return 1.0 - val;\r\n    }\r\n    const cRange = model.renderable.getClippingRangeByReference();\r\n    let zval = -cRange[0] / val;\r\n    zval = (cRange[0] + cRange[1]) / (cRange[1] - cRange[0]) + 2.0 * cRange[0] * cRange[1] / (zval * (cRange[1] - cRange[0]));\r\n    return 0.5 * zval + 0.5;\r\n  };\r\n  publicAPI.getKeyMatrices = webGPURenderer => {\r\n    // has the camera changed?\r\n    const ren = webGPURenderer.getRenderable();\r\n    const webGPURenderWindow = webGPURenderer.getParent();\r\n    if (Math.max(webGPURenderWindow.getMTime(), publicAPI.getMTime(), ren.getMTime(), model.renderable.getMTime(), webGPURenderer.getStabilizedTime()) > model.keyMatrixTime.getMTime()) {\r\n      const wcvc = model.renderable.getViewMatrix();\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_3__.copy(model.keyMatrices.normalMatrix, wcvc);\r\n      // zero out translation\r\n      model.keyMatrices.normalMatrix[3] = 0.0;\r\n      model.keyMatrices.normalMatrix[7] = 0.0;\r\n      model.keyMatrices.normalMatrix[11] = 0.0;\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_3__.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_3__.transpose(model.keyMatrices.wcvc, wcvc);\r\n      const center = webGPURenderer.getStabilizedCenterByReference();\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_3__.translate(model.keyMatrices.scvc, model.keyMatrices.wcvc, center);\r\n      const aspectRatio = webGPURenderer.getAspectRatio();\r\n      const cRange = model.renderable.getClippingRangeByReference();\r\n      publicAPI.getProjectionMatrix(model.keyMatrices.vcpc, aspectRatio, cRange, model.renderable.getWindowCenterByReference());\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_3__.multiply(model.keyMatrices.scpc, model.keyMatrices.vcpc, model.keyMatrices.scvc);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_3__.invert(model.keyMatrices.pcsc, model.keyMatrices.scpc);\r\n      model.keyMatrixTime.modified();\r\n    }\r\n    return model.keyMatrices;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  keyMatrixTime: null,\r\n  keyMatrices: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues);\r\n  model.keyMatrixTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.keyMatrixTime);\r\n\r\n  // values always get set by the get method\r\n  model.keyMatrices = {\r\n    normalMatrix: new Float64Array(16),\r\n    vcpc: new Float64Array(16),\r\n    pcsc: new Float64Array(16),\r\n    wcvc: new Float64Array(16),\r\n    scpc: new Float64Array(16),\r\n    scvc: new Float64Array(16)\r\n  };\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, [\'keyMatrixTime\']);\r\n\r\n  // Object methods\r\n  vtkWebGPUCamera(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar index = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to WebGPU backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__.registerOverride)(\'vtkCamera\', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/Camera.js?')},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/CellArrayMapper.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUCellArrayMapper$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat3.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Core_Mapper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/Mapper.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js\");\n/* harmony import */ var _Core_Prop_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/Prop.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Prop.js\");\n/* harmony import */ var _Core_Property_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Core/Property.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Property.js\");\n/* harmony import */ var _Core_Property2D_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Core/Property2D.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Property2D.js\");\n/* harmony import */ var _Core_Texture_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Core/Texture.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Texture.js\");\n/* harmony import */ var _BufferManager_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./BufferManager.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager.js\");\n/* harmony import */ var _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ShaderCache.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderCache.js\");\n/* harmony import */ var _UniformBuffer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./UniformBuffer.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/UniformBuffer.js\");\n/* harmony import */ var _SimpleMapper_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./SimpleMapper.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/SimpleMapper.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Types.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Types.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  BufferUsage,\r\n  PrimitiveTypes\r\n} = _BufferManager_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\r\nconst {\r\n  Representation\r\n} = _Core_Property_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\r\nconst {\r\n  ScalarMode\r\n} = _Core_Mapper_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\nconst {\r\n  CoordinateSystem\r\n} = _Core_Prop_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\r\nconst {\r\n  DisplayLocation\r\n} = _Core_Property2D_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\r\nconst vtkWebGPUPolyDataVS = `\r\n//VTK::Renderer::Dec\r\n\r\n//VTK::Color::Dec\r\n\r\n//VTK::Normal::Dec\r\n\r\n//VTK::TCoord::Dec\r\n\r\n//VTK::Select::Dec\r\n\r\n//VTK::Mapper::Dec\r\n\r\n//VTK::IOStructs::Dec\r\n\r\n@vertex\r\nfn main(\r\n//VTK::IOStructs::Input\r\n)\r\n//VTK::IOStructs::Output\r\n{\r\n  var output : vertexOutput;\r\n\r\n  var vertex: vec4<f32> = vertexBC;\r\n\r\n  //VTK::Color::Impl\r\n\r\n  //VTK::Normal::Impl\r\n\r\n  //VTK::TCoord::Impl\r\n\r\n  //VTK::Select::Impl\r\n\r\n  //VTK::Position::Impl\r\n\r\n  return output;\r\n}\r\n`;\r\nconst vtkWebGPUPolyDataFS = `\r\nstruct PBRData {\r\n  diffuse: vec3<f32>,\r\n  specular: vec3<f32>,\r\n}\r\n\r\n// Dot product with the max already in it\r\nfn mdot(a: vec3<f32>, b: vec3<f32>) -> f32 {\r\n  return max(0.0, dot(a, b));\r\n}\r\n// Dot product with a max in it that does not allow for negative values\r\n// Physically based rendering is accurate as long as normals are accurate,\r\n// however this is pretty often not the case. In order to prevent negative\r\n// values from ruining light calculations and creating zones of zero light,\r\n// this remapping is used, which smoothly clamps the dot product between\r\n// zero and one while still maintaining a good amount of accuracy.\r\nfn cdot(a: vec3<f32>, b: vec3<f32>) -> f32 {\r\n  var d: f32 = max(0.0, dot(a, b));\r\n  d = pow((d + 1.0) / 2.0, 2.6);\r\n  return d;\r\n}\r\n\r\n// Lambertian diffuse model\r\nfn lambertDiffuse(base: vec3<f32>, N: vec3<f32>, L: vec3<f32>) -> vec3<f32> {\r\n  var pi: f32 = 3.14159265359; \r\n  var NdotL: f32 = mdot(N, L);\r\n  NdotL = pow(NdotL, 1.5);\r\n  return (base/pi)*NdotL;\r\n}\r\n\r\n// Yasuhiro Fujii improvement on the Oren-Nayar model\r\n// https://mimosa-pudica.net/improved-oren-nayar.html\r\n// p is surface color, o is roughness\r\nfn fujiiOrenNayar(p: vec3<f32>, o: f32, N: vec3<f32>, L: vec3<f32>, V: vec3<f32>) -> vec3<f32> {\r\n  var invpi: f32 = 0.31830988618; // 1/pi\r\n\r\n  var o2 = o*o;\r\n  var NdotL: f32 = mdot(N, L);\r\n  NdotL = pow(NdotL, 1.5); // Less physically accurate, but hides the \"seams\" between lights better\r\n\r\n  var NdotV: f32 = mdot(N, V);\r\n  var LdotV: f32 = mdot(L, V);\r\n\r\n  var s: f32 = LdotV - NdotL*NdotV;\r\n  var t: f32 = mix(1.0, max(NdotL, NdotV), step(0.0, s)); // Mix with step is the equivalent of an if statement\r\n  var A: vec3<f32> = 0.5*(o2 / (o2 + 0.33)) + 0.17*p*(o2 / (o2 + 0.13));\r\n  A = invpi*(1 - A);\r\n  var B: f32 = 0.45*(o2 / (o2 + 0.09));\r\n  B = invpi*B;\r\n\r\n  return p*NdotL*(A + B*(s/t));\r\n}\r\n\r\n// Fresnel portion of BRDF (IOR only, simplified)\r\nfn schlickFresnelIOR(V: vec3<f32>, N: vec3<f32>, ior: f32, k: f32) -> f32 {\r\n  var NdotV: f32 = mdot(V, N);\r\n  var F0: f32 = (pow((ior - 1.0), 2.0) + k*k) / (pow((ior + 1.0), 2.0) + k*k); // This takes into account the roughness, which the other one does not\r\n  return F0 + (1.0 - F0) * pow((1.0-NdotV), 5.0);\r\n}\r\n\r\n// Fresnel portion of BRDF (Color ior, better)\r\nfn schlickFresnelRGB(V: vec3<f32>, N: vec3<f32>, F0: vec3<f32>) -> vec3<f32> {\r\n  var NdotV: f32 = mdot(V, N);\r\n  return F0 + (1.0 - F0) * pow((1-NdotV), 5.0);\r\n}\r\n\r\n// Normal portion of BRDF\r\n// https://learnopengl.com/PBR/Theory\r\n// Trowbridge-Reitz GGX functions: normal, halfway, roughness^2\r\nfn trGGX(N: vec3<f32>, H: vec3<f32>, a: f32) -> f32 {\r\n  var pi: f32 = 3.14159265359; \r\n\r\n  var a2: f32 = a*a;\r\n  var NdotH = mdot(N, H);\r\n  var NdotH2 = NdotH*NdotH;\r\n  \r\n  var denom: f32 = NdotH2 * (a2 - 1.0) + 1.0;\r\n\r\n  return a2 / max((pi*denom*denom), 0.000001);\r\n}\r\n\r\n// A VERY bad approximation of anisotropy. Real anisotropic calculations require tangent and bitangent\r\nfn anisotrophicTrGGX(N: vec3<f32>, H: vec3<f32>, O: vec3<f32>, s: f32, a: f32) -> f32 {\r\n  var Op: vec3<f32> = (rendererUBO.WCVCNormals * vec4<f32>(normalize(O) * s, 0.)).xyz;\r\n\r\n  var ggx1: f32 = trGGX(N + Op*s, H, a);\r\n  var ggx2: f32 = trGGX(N - Op*s, H, a);\r\n  return (0.5 * ggx1 + 0.5 * ggx2);\r\n}\r\n\r\n// Geometry portion of BRDF\r\nfn schlickGGX(N: vec3<f32>, X: vec3<f32>, k: f32) -> f32 {\r\n  var NdotX = cdot(N, X);\r\n  return NdotX / max(0.000001, (NdotX*(1.0-k) + k));\r\n}\r\n\r\nfn smithSurfaceRoughness(N: vec3<f32>, V: vec3<f32>, L: vec3<f32>, k: f32) -> f32 {\r\n  var ggx1: f32 = min(1.0, schlickGGX(N, V, k));\r\n  var ggx2: f32 = min(1.0, schlickGGX(N, L, k));\r\n  return ggx1*ggx2;\r\n}\r\n\r\n// BRDF Combination\r\nfn cookTorrance(D: f32, F: f32, G: f32, N: vec3<f32>, V: vec3<f32>, L: vec3<f32>) -> f32 {\r\n  var num: f32 = D*F*G;\r\n  var denom: f32 = 4*cdot(V, N)*cdot(L, N);\r\n\r\n  return num / max(denom, 0.000001);\r\n}\r\n\r\n// Different lighting calculations for different light sources\r\nfn calcDirectionalLight(N: vec3<f32>, V: vec3<f32>, ior: f32, roughness: f32, metallic: f32, direction: vec3<f32>, color: vec3<f32>, base: vec3<f32>) -> PBRData {  \r\n  var L: vec3<f32> = normalize(direction); // Light Vector\r\n  var H: vec3<f32> = normalize(L + V); // Halfway Vector\r\n\r\n  var alpha = roughness*roughness;\r\n  var k: f32 = alpha*alpha / 2;\r\n\r\n  var D: f32 = trGGX(N, H, alpha); // Distribution\r\n  // var F: f32 = schlickFresnelIOR(V, N, ior, k); // Fresnel\r\n  var G: f32 = smithSurfaceRoughness(N, V, L, k); // Geometry\r\n\r\n  var brdf: f32 = cookTorrance(D, 1.0, G, N, V, L); // Fresnel term is replaced with 1 because it is added later\r\n  var incoming: vec3<f32> = color;\r\n  var angle: f32 = mdot(L, N);\r\n  angle = pow(angle, 1.5);\r\n\r\n  var specular: vec3<f32> = brdf*incoming*angle;\r\n  // Oren-Nayar gives a clay-like effect when fully rough which some people may not want, so it might be better to give a separate\r\n  // control property for the diffuse vs specular roughness\r\n  var diffuse: vec3<f32> = incoming*fujiiOrenNayar(base, roughness, N, L, V); \r\n  // Stores the specular and diffuse separately to allow for finer post processing\r\n  var out = PBRData(diffuse, specular);\r\n  \r\n  return out; // Returns angle along with color of light so the final color can be multiplied by angle as well (creates black areas)\r\n}\r\n\r\n// TODO: find some way to reduce the number of arguments going in here\r\nfn calcPointLight(N: vec3<f32>, V: vec3<f32>, fragPos: vec3<f32>, ior: f32, roughness: f32, metallic: f32, position: vec3<f32>, color: vec3<f32>, base: vec3<f32>) -> PBRData {\r\n  var L: vec3<f32> = normalize(position - fragPos); // Light Vector\r\n  var H: vec3<f32> = normalize(L + V); // Halfway Vector\r\n  var dist = distance(position, fragPos);\r\n\r\n  var alpha = roughness*roughness;\r\n  var k: f32 = alpha*alpha / 2.0; // could also be pow(alpha + 1.0, 2) / 8\r\n\r\n  var D: f32 = trGGX(N, H, alpha); // Distribution\r\n  // var F: f32 = schlickFresnelIOR(V, N, ior, k); // Fresnel\r\n  var G: f32 = smithSurfaceRoughness(N, V, L, k); // Geometry\r\n\r\n  var brdf: f32 = cookTorrance(D, 1.0, G, N, V, L);\r\n  var incoming: vec3<f32> = color * (1.0 / (dist*dist));\r\n  var angle: f32 = mdot(L, N);\r\n  angle = pow(angle, 1.5); // Smoothing factor makes it less accurate, but reduces ugly \"seams\" bewteen light sources\r\n\r\n  var specular: vec3<f32> = brdf*incoming*angle;\r\n  var diffuse: vec3<f32> = incoming*fujiiOrenNayar(base, roughness, N, L, V);\r\n\r\n  // Stores the specular and diffuse separately to allow for finer post processing\r\n  // Could also be done (propably more properly) with a struct\r\n  var out = PBRData(diffuse, specular);\r\n  \r\n  return out; // Returns angle along with color of light so the final color can be multiplied by angle as well (creates black areas)\r\n}\r\n\r\n// For a reason unknown to me, spheres dont seem to behave propperly with head-on spot lights\r\nfn calcSpotLight(N: vec3<f32>, V: vec3<f32>, fragPos: vec3<f32>, ior: f32, roughness: f32, metallic: f32, position: vec3<f32>, direction: vec3<f32>, cones: vec2<f32>, color: vec3<f32>, base: vec3<f32>) -> PBRData {\r\n  var L: vec3<f32> = normalize(position - fragPos);\r\n  var H: vec3<f32> = normalize(L + V); // Halfway Vector\r\n  var dist = distance(position, fragPos);\r\n\r\n  var alpha = roughness*roughness;\r\n  var k: f32 = alpha*alpha / 2.0; // could also be pow(alpha + 1.0, 2) / 8\r\n\r\n  var D: f32 = trGGX(N, H, alpha); // Distribution\r\n  // var F: f32 = schlickFresnelIOR(V, N, ior, k); // Fresnel\r\n  var G: f32 = smithSurfaceRoughness(N, V, L, k); // Geometry\r\n\r\n  var brdf: f32 = cookTorrance(D, 1.0, G, N, V, L);\r\n  \r\n  // Cones.x is the inner phi and cones.y is the outer phi\r\n  var theta: f32 = mdot(normalize(direction), L);\r\n  var epsilon: f32 = cones.x - cones.y;\r\n  var intensity: f32 = (theta - cones.y) / epsilon;\r\n  intensity = clamp(intensity, 0.0, 1.0);\r\n  intensity /= dist*dist;\r\n\r\n  var incoming: vec3<f32> = color * intensity;\r\n\r\n  var angle: f32 = mdot(L, N);\r\n  angle = pow(angle, 1.5); // Smoothing factor makes it less accurate, but reduces ugly \"seams\" bewteen light sources\r\n\r\n  var specular: vec3<f32> = brdf*incoming*angle;\r\n  var diffuse: vec3<f32> = incoming*fujiiOrenNayar(base, roughness, N, L, V);\r\n\r\n  // Stores the specular and diffuse separately to allow for finer post processing\r\n  // Could also be done (propably more properly) with a struct\r\n  var out = PBRData(diffuse, specular);\r\n  \r\n  return out; // Returns angle along with color of light so the final color can be multiplied by angle as well (creates black areas)\r\n}\r\n\r\n// Environment mapping stuff\r\n// Takes in a vector and converts it to an equivalent coordinate in a rectilinear texture. Should be replaced with cubemaps at some point\r\nfn vecToRectCoord(dir: vec3<f32>) -> vec2<f32> {\r\n  var tau: f32 = 6.28318530718;\r\n  var pi: f32 = 3.14159265359;\r\n  var out: vec2<f32> = vec2<f32>(0.0);\r\n\r\n  out.x = atan2(dir.z, dir.x) / tau;\r\n  out.x += 0.5;\r\n\r\n  var phix: f32 = length(vec2(dir.x, dir.z));\r\n  out.y = atan2(dir.y, phix) / pi + 0.5;\r\n\r\n  return out;\r\n}\r\n\r\n//VTK::Renderer::Dec\r\n\r\n//VTK::Color::Dec\r\n\r\n//VTK::TCoord::Dec\r\n\r\n// optional surface normal declaration\r\n//VTK::Normal::Dec\r\n\r\n//VTK::Select::Dec\r\n\r\n//VTK::RenderEncoder::Dec\r\n\r\n//VTK::Mapper::Dec\r\n\r\n//VTK::IOStructs::Dec\r\n\r\n@fragment\r\nfn main(\r\n//VTK::IOStructs::Input\r\n)\r\n//VTK::IOStructs::Output\r\n{\r\n  var output : fragmentOutput;\r\n\r\n  // Temporary ambient, diffuse, and opacity\r\n  var ambientColor: vec4<f32> = mapperUBO.AmbientColor;\r\n  var diffuseColor: vec4<f32> = mapperUBO.DiffuseColor;\r\n  var opacity: f32 = mapperUBO.Opacity;\r\n\r\n  // This should be declared somewhere else\r\n  var _diffuseMap: vec4<f32> = vec4<f32>(1.0);\r\n  var _roughnessMap: vec4<f32> = vec4<f32>(1.0);\r\n  var _metallicMap: vec4<f32> = vec4<f32>(1.0);\r\n  var _normalMap: vec4<f32> = vec4<f32>(0.0, 0.0, 1.0, 0.0); // normal map was setting off the normal vector detection in fragment\r\n  var _ambientOcclusionMap: vec4<f32> = vec4<f32>(1.);\r\n  var _emissionMap: vec4<f32> = vec4<f32>(0.);\r\n\r\n  //VTK::Color::Impl\r\n\r\n  //VTK::TCoord::Impl\r\n\r\n  //VTK::Normal::Impl\r\n\r\n  var computedColor: vec4<f32> = vec4<f32>(diffuseColor.rgb, 1.0);\r\n\r\n  //VTK::Light::Impl\r\n\r\n  //VTK::Select::Impl\r\n\r\n  if (computedColor.a == 0.0) { discard; };\r\n\r\n  //VTK::Position::Impl\r\n\r\n  //VTK::RenderEncoder::Impl\r\n\r\n  return output;\r\n}\r\n`;\r\nfunction isEdges(hash) {\r\n  // edge pipelines have \"edge\" in them\r\n  return hash.indexOf('edge') >= 0;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUCellArrayMapper methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUCellArrayMapper(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUCellArrayMapper');\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      if (model.is2D) {\r\n        model.WebGPUActor = publicAPI.getFirstAncestorOfType('vtkWebGPUActor2D');\r\n        model.forceZValue = true;\r\n      } else {\r\n        model.WebGPUActor = publicAPI.getFirstAncestorOfType('vtkWebGPUActor');\r\n        model.forceZValue = false;\r\n      }\r\n      model.coordinateSystem = model.WebGPUActor.getRenderable().getCoordinateSystem();\r\n      model.useRendererMatrix = model.coordinateSystem !== CoordinateSystem.DISPLAY;\r\n      model.WebGPURenderer = model.WebGPUActor.getFirstAncestorOfType('vtkWebGPURenderer');\r\n      model.WebGPURenderWindow = model.WebGPURenderer.getParent();\r\n      model.device = model.WebGPURenderWindow.getDevice();\r\n    }\r\n  };\r\n\r\n  // Renders myself\r\n  publicAPI.translucentPass = prepass => {\r\n    if (prepass) {\r\n      publicAPI.prepareToDraw(model.WebGPURenderer.getRenderEncoder());\r\n      model.renderEncoder.registerDrawCallback(model.pipeline, publicAPI.draw);\r\n    }\r\n  };\r\n  publicAPI.opaquePass = prepass => {\r\n    if (prepass) {\r\n      publicAPI.prepareToDraw(model.WebGPURenderer.getRenderEncoder());\r\n      model.renderEncoder.registerDrawCallback(model.pipeline, publicAPI.draw);\r\n    }\r\n  };\r\n  publicAPI.updateUBO = () => {\r\n    // make sure the data is up to date\r\n    const actor = model.WebGPUActor.getRenderable();\r\n    const ppty = actor.getProperty();\r\n    const utime = model.UBO.getSendTime();\r\n    if (publicAPI.getMTime() > utime || ppty.getMTime() > utime || model.renderable.getMTime() > utime) {\r\n      // Matricies\r\n      const keyMats = model.WebGPUActor.getKeyMatrices(model.WebGPURenderer);\r\n      model.UBO.setArray('BCWCMatrix', keyMats.bcwc);\r\n      model.UBO.setArray('BCSCMatrix', keyMats.bcsc);\r\n      model.UBO.setArray('MCWCNormals', keyMats.normalMatrix);\r\n      if (model.is2D) {\r\n        model.UBO.setValue('ZValue', model.WebGPUActor.getRenderable().getProperty().getDisplayLocation() === DisplayLocation.FOREGROUND ? 1.0 : 0.0);\r\n        const aColor = ppty.getColorByReference();\r\n        model.UBO.setValue('AmbientIntensity', 1.0);\r\n        model.UBO.setArray('DiffuseColor', [aColor[0], aColor[1], aColor[2], 1.0]);\r\n        model.UBO.setValue('DiffuseIntensity', 0.0);\r\n        model.UBO.setValue('SpecularIntensity', 0.0);\r\n      } else {\r\n        // Base Colors\r\n        let aColor = ppty.getAmbientColorByReference();\r\n        model.UBO.setValue('AmbientIntensity', ppty.getAmbient());\r\n        model.UBO.setArray('AmbientColor', [aColor[0], aColor[1], aColor[2], 1.0]);\r\n        model.UBO.setValue('DiffuseIntensity', ppty.getDiffuse());\r\n        aColor = ppty.getDiffuseColorByReference();\r\n        model.UBO.setArray('DiffuseColor', [aColor[0], aColor[1], aColor[2], 1.0]);\r\n        // Roughness\r\n        model.UBO.setValue('Roughness', ppty.getRoughness());\r\n        model.UBO.setValue('BaseIOR', ppty.getBaseIOR());\r\n        // Metallic\r\n        model.UBO.setValue('Metallic', ppty.getMetallic());\r\n        // Normal\r\n        model.UBO.setValue('NormalStrength', ppty.getNormalStrength());\r\n        // Emission\r\n        model.UBO.setValue('Emission', ppty.getEmission());\r\n        // Specular\r\n        model.UBO.setValue('SpecularIntensity', ppty.getSpecular());\r\n        aColor = ppty.getSpecularColorByReference();\r\n        model.UBO.setArray('SpecularColor', [aColor[0], aColor[1], aColor[2], 1.0]);\r\n      }\r\n      // Edge and line rendering\r\n      const aColor = ppty.getEdgeColorByReference?.();\r\n      if (aColor) {\r\n        model.UBO.setArray('EdgeColor', [aColor[0], aColor[1], aColor[2], 1.0]);\r\n      }\r\n      model.UBO.setValue('LineWidth', ppty.getLineWidth());\r\n      model.UBO.setValue('Opacity', ppty.getOpacity());\r\n      model.UBO.setValue('PropID', model.WebGPUActor.getPropID());\r\n      const device = model.WebGPURenderWindow.getDevice();\r\n      model.UBO.sendIfNeeded(device);\r\n    }\r\n  };\r\n  publicAPI.haveWideLines = () => {\r\n    const actor = model.WebGPUActor.getRenderable();\r\n    const representation = actor.getProperty().getRepresentation();\r\n    if (actor.getProperty().getLineWidth() <= 1.0) {\r\n      return false;\r\n    }\r\n    if (model.primitiveType === PrimitiveTypes.Verts) {\r\n      return false;\r\n    }\r\n    if (model.primitiveType === PrimitiveTypes.Triangles || model.primitiveType === PrimitiveTypes.TriangleStrips) {\r\n      return representation === Representation.WIREFRAME;\r\n    }\r\n    return true;\r\n  };\r\n  publicAPI.replaceShaderPosition = (hash, pipeline, vertexInput) => {\r\n    const vDesc = pipeline.getShaderDescription('vertex');\r\n    vDesc.addBuiltinOutput('vec4<f32>', '@builtin(position) Position');\r\n    if (!vDesc.hasOutput('vertexVC')) vDesc.addOutput('vec4<f32>', 'vertexVC');\r\n    let code = vDesc.getCode();\r\n    if (model.useRendererMatrix) {\r\n      code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::Position::Impl', ['    var pCoord: vec4<f32> = rendererUBO.SCPCMatrix*mapperUBO.BCSCMatrix*vertexBC;', '    output.vertexVC = rendererUBO.SCVCMatrix * mapperUBO.BCSCMatrix * vec4<f32>(vertexBC.xyz, 1.0);', '//VTK::Position::Impl']).result;\r\n      if (model.forceZValue) {\r\n        code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::Position::Impl', ['pCoord = vec4<f32>(pCoord.xyz/pCoord.w, 1.0);', 'pCoord.z = mapperUBO.ZValue;', '//VTK::Position::Impl']).result;\r\n      }\r\n    } else {\r\n      code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::Position::Impl', ['    var pCoord: vec4<f32> = mapperUBO.BCSCMatrix*vertexBC;', '    pCoord.x = 2.0* pCoord.x / rendererUBO.viewportSize.x - 1.0;', '    pCoord.y = 2.0* pCoord.y / rendererUBO.viewportSize.y - 1.0;', '    pCoord.z = 0.5 - 0.5 * pCoord.z;', '//VTK::Position::Impl']).result;\r\n      if (model.forceZValue) {\r\n        code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::Position::Impl', ['    pCoord.z = mapperUBO.ZValue;', '//VTK::Position::Impl']).result;\r\n      }\r\n    }\r\n    if (publicAPI.haveWideLines()) {\r\n      vDesc.addBuiltinInput('u32', '@builtin(instance_index) instanceIndex');\r\n      // widen the edge\r\n      code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::Position::Impl', ['    var tmpPos: vec4<f32> = pCoord;', '    var numSteps: f32 = ceil(mapperUBO.LineWidth - 1.0);', '    var offset: f32 = (mapperUBO.LineWidth - 1.0) * (f32(input.instanceIndex / 2u) - numSteps/2.0) / numSteps;', '    var tmpPos2: vec3<f32> = tmpPos.xyz / tmpPos.w;', '    tmpPos2.x = tmpPos2.x + 2.0 * (f32(input.instanceIndex) % 2.0) * offset / rendererUBO.viewportSize.x;', '    tmpPos2.y = tmpPos2.y + 2.0 * (f32(input.instanceIndex + 1u) % 2.0) * offset / rendererUBO.viewportSize.y;', '    tmpPos2.z = min(1.0, tmpPos2.z + 0.00001);',\r\n      // could become a setting\r\n      '    pCoord = vec4<f32>(tmpPos2.xyz * tmpPos.w, tmpPos.w);', '//VTK::Position::Impl']).result;\r\n    }\r\n    code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::Position::Impl', ['    output.Position = pCoord;']).result;\r\n    vDesc.setCode(code);\r\n  };\r\n  model.shaderReplacements.set('replaceShaderPosition', publicAPI.replaceShaderPosition);\r\n  publicAPI.replaceShaderNormal = (hash, pipeline, vertexInput) => {\r\n    const normalBuffer = vertexInput.getBuffer('normalMC');\r\n    const actor = model.WebGPUActor.getRenderable();\r\n    if (normalBuffer) {\r\n      const vDesc = pipeline.getShaderDescription('vertex');\r\n      if (!vDesc.hasOutput('normalVC')) {\r\n        vDesc.addOutput('vec3<f32>', 'normalVC', normalBuffer.getArrayInformation()[0].interpolation);\r\n      }\r\n      if (!vDesc.hasOutput('tangentVC')) {\r\n        vDesc.addOutput('vec3<f32>', 'tangentVC', normalBuffer.getArrayInformation()[0].interpolation);\r\n      }\r\n      if (!vDesc.hasOutput('bitangentVC')) {\r\n        vDesc.addOutput('vec3<f32>', 'bitangentVC', normalBuffer.getArrayInformation()[0].interpolation);\r\n      }\r\n      let code = vDesc.getCode();\r\n      code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::Normal::Impl', ['  output.normalVC = normalize((rendererUBO.WCVCNormals * mapperUBO.MCWCNormals * normalMC).xyz);',\r\n      // This is just an approximation, but it happens to work extremely well\r\n      // It only works well for normals that are head on and not super angled though\r\n      // Definitely needs to be replaced\r\n      '  var c1: vec3<f32> = cross(output.normalVC, vec3<f32>(0, 0, 1));', '  var c2: vec3<f32> = cross(output.normalVC, vec3<f32>(0, 1, 0));', '  var tangent: vec3<f32> = mix(c1, c2, distance(c1, c2));', '  output.tangentVC = normalize(tangent);', '  output.bitangentVC = normalize(cross(output.normalVC, tangent));']).result;\r\n      vDesc.setCode(code);\r\n      const fDesc = pipeline.getShaderDescription('fragment');\r\n      code = fDesc.getCode();\r\n      if (actor.getProperty().getNormalTexture()) {\r\n        code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::Normal::Impl', ['  var normal: vec3<f32> = input.normalVC;', '  if (!input.frontFacing) { normal = -normal; }', '  var tangent: vec3<f32> = input.tangentVC;', '  var bitangent: vec3<f32> = input.bitangentVC;', '  var TCVCMatrix: mat3x3<f32> = mat3x3<f32>(', '    tangent.x, bitangent.x, normal.x,', '    tangent.y, bitangent.y, normal.y,', '    tangent.z, bitangent.z, normal.z,', '  );', '  var mappedNormal: vec3<f32> = TCVCMatrix * (_normalMap.xyz * 2 - 1);', '  normal = mix(normal, mappedNormal, mapperUBO.NormalStrength);', '  normal = normalize(normal);']).result;\r\n      } else {\r\n        code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::Normal::Impl', ['  var normal: vec3<f32> = input.normalVC;', '  if (!input.frontFacing) { normal = -normal; }', '  normal = normalize(normal);']).result;\r\n      }\r\n      fDesc.setCode(code);\r\n    }\r\n  };\r\n  model.shaderReplacements.set('replaceShaderNormal', publicAPI.replaceShaderNormal);\r\n\r\n  // we only apply lighting when there is a \"var normal\" declaration in the\r\n  // fragment shader code. That is the lighting trigger.\r\n  publicAPI.replaceShaderLight = (hash, pipeline, vertexInput) => {\r\n    if (hash.includes('sel')) return;\r\n    const vDesc = pipeline.getShaderDescription('vertex');\r\n    if (!vDesc.hasOutput('vertexVC')) vDesc.addOutput('vec4<f32>', 'vertexVC');\r\n    const renderer = model.WebGPURenderer.getRenderable();\r\n    const fDesc = pipeline.getShaderDescription('fragment');\r\n    let code = fDesc.getCode();\r\n\r\n    // Code that runs if the fragment shader includes normals\r\n    if (code.includes('var normal:') && model.useRendererMatrix && !isEdges(hash) && !model.is2D && !hash.includes('sel')) {\r\n      const lightingCode = [\r\n      // Constants\r\n      '  var pi: f32 = 3.14159265359;',\r\n      // Vectors needed for light calculations\r\n      '  var fragPos: vec3<f32> = vec3<f32>(input.vertexVC.xyz);', '  var V: vec3<f32> = mix(normalize(-fragPos), vec3<f32>(0, 0, 1), f32(rendererUBO.cameraParallel)); // View Vector',\r\n      // Values needed for light calculations\r\n      '  var baseColor: vec3<f32> = _diffuseMap.rgb * diffuseColor.rgb;', '  var roughness: f32 = max(0.000001, mapperUBO.Roughness * _roughnessMap.r);',\r\n      // Need to have a different way of sampling greyscale values aside from .r\r\n      '  var metallic: f32 = mapperUBO.Metallic * _metallicMap.r;', '  var alpha: f32 = roughness*roughness;', '  var ior: f32 = mapperUBO.BaseIOR;', '  var k: f32 = alpha*alpha / 2;',\r\n      // Split diffuse and specular components\r\n      '  var diffuse: vec3<f32> = vec3<f32>(0.);', '  var specular: vec3<f32> = vec3<f32>(0.);', '  var emission: vec3<f32> = _emissionMap.rgb * mapperUBO.Emission;',\r\n      // Summing diffuse and specular components of directional lights\r\n      '  {', '    var i: i32 = 0;', '    loop {', '      if !(i < rendererUBO.LightCount) { break; }', '      switch (i32(rendererLightSSBO.values[i].LightData.x)) {', '         // Point Light', '         case 0 {', '           var color: vec3<f32> = rendererLightSSBO.values[i].LightColor.rgb * rendererLightSSBO.values[i].LightColor.w;', '           var pos: vec3<f32> = (rendererLightSSBO.values[i].LightPos).xyz;', '           var calculated: PBRData = calcPointLight(normal, V, fragPos, ior, roughness, metallic, pos, color, baseColor);', '           diffuse += max(vec3<f32>(0), calculated.diffuse);', '           specular += max(vec3<f32>(0), calculated.specular);', '          }', '         // Directional light', '         case 1 {', '           var dir: vec3<f32> = (rendererUBO.WCVCNormals * vec4<f32>(normalize(rendererLightSSBO.values[i].LightDir.xyz), 0.)).xyz;', '           dir = normalize(dir);', '           var color: vec3<f32> = rendererLightSSBO.values[i].LightColor.rgb * rendererLightSSBO.values[i].LightColor.w;', '           var calculated: PBRData = calcDirectionalLight(normal, V, ior, roughness, metallic, dir, color, baseColor); // diffuseColor.rgb needs to be fixed with a more dynamic diffuse color', '           diffuse += max(vec3<f32>(0), calculated.diffuse);', '           specular += max(vec3<f32>(0), calculated.specular);', '         }', '         // Spot Light', '         case 2 {', '           var color: vec3<f32> = rendererLightSSBO.values[i].LightColor.rgb * rendererLightSSBO.values[i].LightColor.w;', '           var pos: vec3<f32> = (rendererLightSSBO.values[i].LightPos).xyz;', '           var dir: vec3<f32> = (rendererUBO.WCVCNormals * vec4<f32>(normalize(rendererLightSSBO.values[i].LightDir.xyz), 0.)).xyz;', '           dir = normalize(dir);', '           var cones: vec2<f32> = vec2<f32>(rendererLightSSBO.values[i].LightData.y, rendererLightSSBO.values[i].LightData.z);', '           var calculated: PBRData = calcSpotLight(normal, V, fragPos, ior, roughness, metallic, pos, dir, cones, color, baseColor);', '           diffuse += max(vec3<f32>(0), calculated.diffuse);', '           specular += max(vec3<f32>(0), calculated.specular);', '         }', '         default { continue; }', '       }', '      continuing { i++; }', '    }', '  }',\r\n      // Final variables for combining specular and diffuse\r\n      '  var fresnel: f32 = schlickFresnelIOR(V, normal, ior, k); // Fresnel', '  fresnel = min(1.0, fresnel);', '  // This could be controlled with its own variable (that isnt base color) for better artistic control', '  var fresnelMetallic: vec3<f32> = schlickFresnelRGB(V, normal, baseColor); // Fresnel for metal, takes color into account', '  var kS: vec3<f32> = mix(vec3<f32>(fresnel), fresnelMetallic, metallic);', '  kS = min(vec3<f32>(1.0), kS);', '  var kD: vec3<f32> = (1.0 - kS) * (1.0 - metallic);', '  var PBR: vec3<f32> = mapperUBO.DiffuseIntensity*kD*diffuse + kS*specular;', '  PBR += emission;', '  computedColor = vec4<f32>(PBR, mapperUBO.Opacity);'];\r\n      if (renderer.getEnvironmentTexture()?.getImageLoaded()) {\r\n        lightingCode.push('  // To get diffuse IBL, the texture is sampled with normals in worldspace', '  var diffuseIBLCoords: vec3<f32> = (transpose(rendererUBO.WCVCNormals) * vec4<f32>(normal, 1.)).xyz;', '  var diffuseCoords: vec2<f32> = vecToRectCoord(diffuseIBLCoords);', '  // To get specular IBL, the texture is sampled as the worldspace reflection between the normal and view vectors', '  // Reflections are first calculated in viewspace, then converted to worldspace to sample the environment', '  var VreflN: vec3<f32> = normalize(reflect(-V, normal));', '  var reflectionIBLCoords = (transpose(rendererUBO.WCVCNormals) * vec4<f32>(VreflN, 1.)).xyz;', '  var specularCoords: vec2<f32> = vecToRectCoord(reflectionIBLCoords);', '  var diffuseIBL = textureSampleLevel(EnvironmentTexture, EnvironmentTextureSampler, diffuseCoords, rendererUBO.MaxEnvironmentMipLevel);',\r\n        // Level multiplier should be set by UBO\r\n        '  var level = roughness * rendererUBO.MaxEnvironmentMipLevel;', '  var specularIBL = textureSampleLevel(EnvironmentTexture, EnvironmentTextureSampler, specularCoords, level);',\r\n        // Manual mip smoothing since not all formats support smooth level sampling\r\n        '  var specularIBLContribution: vec3<f32> = specularIBL.rgb*rendererUBO.BackgroundSpecularStrength;', '  computedColor += vec4<f32>(specularIBLContribution*kS, 0);', '  var diffuseIBLContribution: vec3<f32> = diffuseIBL.rgb*rendererUBO.BackgroundDiffuseStrength;', '  diffuseIBLContribution *= baseColor * _ambientOcclusionMap.rgb;',\r\n        // Multipy by baseColor may be changed\r\n        '  computedColor += vec4<f32>(diffuseIBLContribution*kD, 0);');\r\n      }\r\n      code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::Light::Impl', lightingCode).result;\r\n      fDesc.setCode(code);\r\n      // If theres no normals, just set the specular color to be flat\r\n    } else {\r\n      code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::Light::Impl', ['  var diffuse: vec3<f32> = diffuseColor.rgb;', '  var specular: vec3<f32> = mapperUBO.SpecularColor.rgb * mapperUBO.SpecularColor.a;', '  computedColor = vec4<f32>(diffuse * _diffuseMap.rgb, mapperUBO.Opacity);']).result;\r\n      fDesc.setCode(code);\r\n    }\r\n  };\r\n  model.shaderReplacements.set('replaceShaderLight', publicAPI.replaceShaderLight);\r\n  publicAPI.replaceShaderColor = (hash, pipeline, vertexInput) => {\r\n    // By default, set the colors to be flat\r\n    if (isEdges(hash)) {\r\n      const fDesc = pipeline.getShaderDescription('fragment');\r\n      let code = fDesc.getCode();\r\n      code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::Color::Impl', ['ambientColor = mapperUBO.EdgeColor;', 'diffuseColor = mapperUBO.EdgeColor;']).result;\r\n      fDesc.setCode(code);\r\n      return;\r\n    }\r\n\r\n    // If there's no vertex color buffer return the shader as is\r\n    const colorBuffer = vertexInput.getBuffer('colorVI');\r\n    if (!colorBuffer) return;\r\n\r\n    // Modifies the vertex shader to include the vertex colors and interpolation in the outputs\r\n    const vDesc = pipeline.getShaderDescription('vertex');\r\n    vDesc.addOutput('vec4<f32>', 'color', colorBuffer.getArrayInformation()[0].interpolation);\r\n    let code = vDesc.getCode();\r\n    code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::Color::Impl', ['  output.color = colorVI;']).result;\r\n    vDesc.setCode(code);\r\n\r\n    // Sets the fragment shader to accept the color inputs from the vertex shader\r\n    const fDesc = pipeline.getShaderDescription('fragment');\r\n    code = fDesc.getCode();\r\n    code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::Color::Impl', ['ambientColor = input.color;', 'diffuseColor = input.color;', 'opacity = mapperUBO.Opacity * input.color.a;']).result;\r\n    fDesc.setCode(code);\r\n  };\r\n  model.shaderReplacements.set('replaceShaderColor', publicAPI.replaceShaderColor);\r\n  publicAPI.replaceShaderTCoord = (hash, pipeline, vertexInput) => {\r\n    if (!vertexInput.hasAttribute('tcoord')) return;\r\n    const vDesc = pipeline.getShaderDescription('vertex');\r\n    const tcoords = vertexInput.getBuffer('tcoord');\r\n    const numComp = _Types_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"].getNumberOfComponentsFromBufferFormat(tcoords.getArrayInformation()[0].format);\r\n    let code = vDesc.getCode();\r\n    vDesc.addOutput(`vec${numComp}<f32>`, 'tcoordVS');\r\n    code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::TCoord::Impl', ['  output.tcoordVS = tcoord;']).result;\r\n    vDesc.setCode(code);\r\n    const fDesc = pipeline.getShaderDescription('fragment');\r\n    code = fDesc.getCode();\r\n    const actor = model.WebGPUActor.getRenderable();\r\n    const checkDims = texture => {\r\n      if (!texture) return false;\r\n      const dims = texture.getDimensionality();\r\n      return dims === numComp;\r\n    };\r\n    const usedTextures = [];\r\n    if (actor.getProperty().getDiffuseTexture?.()?.getImageLoaded() || actor.getTextures()[0] || model.colorTexture) {\r\n      if (\r\n      // Chained or statements here are questionable\r\n      checkDims(actor.getProperty().getDiffuseTexture?.()) || checkDims(actor.getTextures()[0]) || checkDims(model.colorTexture)) {\r\n        usedTextures.push('_diffuseMap = textureSample(DiffuseTexture, DiffuseTextureSampler, input.tcoordVS);');\r\n      }\r\n    }\r\n    if (actor.getProperty().getRoughnessTexture?.()?.getImageLoaded()) {\r\n      if (checkDims(actor.getProperty().getRoughnessTexture())) {\r\n        usedTextures.push('_roughnessMap = textureSample(RoughnessTexture, RoughnessTextureSampler, input.tcoordVS);');\r\n      }\r\n    }\r\n    if (actor.getProperty().getMetallicTexture?.()?.getImageLoaded()) {\r\n      if (checkDims(actor.getProperty().getMetallicTexture())) {\r\n        usedTextures.push('_metallicMap = textureSample(MetallicTexture, MetallicTextureSampler, input.tcoordVS);');\r\n      }\r\n    }\r\n    if (actor.getProperty().getNormalTexture?.()?.getImageLoaded()) {\r\n      if (checkDims(actor.getProperty().getNormalTexture())) {\r\n        usedTextures.push('_normalMap = textureSample(NormalTexture, NormalTextureSampler, input.tcoordVS);');\r\n      }\r\n    }\r\n    if (actor.getProperty().getAmbientOcclusionTexture?.()?.getImageLoaded()) {\r\n      if (checkDims(actor.getProperty().getAmbientOcclusionTexture())) {\r\n        usedTextures.push('_ambientOcclusionMap = textureSample(AmbientOcclusionTexture, AmbientOcclusionTextureSampler, input.tcoordVS);');\r\n      }\r\n    }\r\n    if (actor.getProperty().getEmissionTexture?.()?.getImageLoaded()) {\r\n      if (checkDims(actor.getProperty().getEmissionTexture())) {\r\n        usedTextures.push('_emissionMap = textureSample(EmissionTexture, EmissionTextureSampler, input.tcoordVS);');\r\n      }\r\n    }\r\n    code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::TCoord::Impl', usedTextures).result;\r\n    fDesc.setCode(code);\r\n  };\r\n  model.shaderReplacements.set('replaceShaderTCoord', publicAPI.replaceShaderTCoord);\r\n  publicAPI.replaceShaderSelect = (hash, pipeline, vertexInput) => {\r\n    if (hash.includes('sel')) {\r\n      const fDesc = pipeline.getShaderDescription('fragment');\r\n      let code = fDesc.getCode();\r\n      // by default there are no composites, so just 0\r\n      code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::Select::Impl', ['  var compositeID: u32 = 0u;']).result;\r\n      fDesc.setCode(code);\r\n    }\r\n  };\r\n  model.shaderReplacements.set('replaceShaderSelect', publicAPI.replaceShaderSelect);\r\n  publicAPI.getUsage = (rep, i) => {\r\n    if (rep === Representation.POINTS || i === PrimitiveTypes.Points) {\r\n      return BufferUsage.Verts;\r\n    }\r\n    if (i === PrimitiveTypes.Lines) {\r\n      return BufferUsage.Lines;\r\n    }\r\n    if (rep === Representation.WIREFRAME) {\r\n      if (i === PrimitiveTypes.Triangles) {\r\n        return BufferUsage.LinesFromTriangles;\r\n      }\r\n      return BufferUsage.LinesFromStrips;\r\n    }\r\n    if (i === PrimitiveTypes.Triangles) {\r\n      return BufferUsage.Triangles;\r\n    }\r\n    if (i === PrimitiveTypes.TriangleStrips) {\r\n      return BufferUsage.Strips;\r\n    }\r\n    if (i === PrimitiveTypes.TriangleEdges) {\r\n      return BufferUsage.LinesFromTriangles;\r\n    }\r\n\r\n    // only strip edges left which are lines\r\n    return BufferUsage.LinesFromStrips;\r\n  };\r\n  publicAPI.getHashFromUsage = usage => `pt${usage}`;\r\n  publicAPI.getTopologyFromUsage = usage => {\r\n    switch (usage) {\r\n      case BufferUsage.Triangles:\r\n        return 'triangle-list';\r\n      case BufferUsage.Verts:\r\n        return 'point-list';\r\n      case BufferUsage.Lines:\r\n      default:\r\n        return 'line-list';\r\n    }\r\n  };\r\n\r\n  // TODO: calculate tangents\r\n  publicAPI.buildVertexInput = () => {\r\n    const pd = model.currentInput;\r\n    const cells = model.cellArray;\r\n    const primType = model.primitiveType;\r\n    const actor = model.WebGPUActor.getRenderable();\r\n    let representation = actor.getProperty().getRepresentation();\r\n    const device = model.WebGPURenderWindow.getDevice();\r\n    let edges = false;\r\n    if (primType === PrimitiveTypes.TriangleEdges) {\r\n      edges = true;\r\n      representation = Representation.WIREFRAME;\r\n    }\r\n    const vertexInput = model.vertexInput;\r\n    const points = pd.getPoints();\r\n    let indexBuffer;\r\n\r\n    // get the flat mapping indexBuffer for the cells\r\n    if (cells) {\r\n      const buffRequest = {\r\n        hash: `R${representation}P${primType}${cells.getMTime()}`,\r\n        usage: BufferUsage.Index,\r\n        cells,\r\n        numberOfPoints: points.getNumberOfPoints(),\r\n        primitiveType: primType,\r\n        representation\r\n      };\r\n      indexBuffer = device.getBufferManager().getBuffer(buffRequest);\r\n      vertexInput.setIndexBuffer(indexBuffer);\r\n    } else {\r\n      vertexInput.setIndexBuffer(null);\r\n    }\r\n\r\n    // hash = all things that can change the values on the buffer\r\n    // since mtimes are unique we can use\r\n    // - indexBuffer mtime - because cells drive how we pack\r\n    // - relevant dataArray mtime - the source data\r\n    // - shift - not currently captured\r\n    // - scale - not currently captured\r\n    // - format\r\n    // - usage\r\n    // - packExtra - covered by format\r\n\r\n    // points\r\n    if (points) {\r\n      const shift = model.WebGPUActor.getBufferShift(model.WebGPURenderer);\r\n      const buffRequest = {\r\n        hash: `${points.getMTime()}I${indexBuffer.getMTime()}${shift.join()}float32x4`,\r\n        usage: BufferUsage.PointArray,\r\n        format: 'float32x4',\r\n        dataArray: points,\r\n        indexBuffer,\r\n        shift,\r\n        packExtra: true\r\n      };\r\n      const buff = device.getBufferManager().getBuffer(buffRequest);\r\n      vertexInput.addBuffer(buff, ['vertexBC']);\r\n    } else {\r\n      vertexInput.removeBufferIfPresent('vertexBC');\r\n    }\r\n\r\n    // normals, only used for surface rendering\r\n    const usage = publicAPI.getUsage(representation, primType);\r\n    model._usesCellNormals = false;\r\n    if (!model.is2D && (\r\n    // no lighting on Property2D\r\n    usage === BufferUsage.Triangles || usage === BufferUsage.Strips)) {\r\n      const normals = pd.getPointData().getNormals();\r\n      // https://vtk.org/doc/nightly/html/classvtkPolyDataTangents.html\r\n      // Need to find some way of using precomputed tangents (or computing new ones)\r\n      const buffRequest = {\r\n        format: 'snorm8x4',\r\n        indexBuffer,\r\n        packExtra: true,\r\n        shift: 0,\r\n        scale: 127\r\n      };\r\n      if (normals) {\r\n        buffRequest.hash = `${normals.getMTime()}I${indexBuffer.getMTime()}snorm8x4`;\r\n        buffRequest.dataArray = normals;\r\n        buffRequest.usage = BufferUsage.PointArray;\r\n        const buff = device.getBufferManager().getBuffer(buffRequest);\r\n        vertexInput.addBuffer(buff, ['normalMC']);\r\n      } else if (primType === PrimitiveTypes.Triangles) {\r\n        model._usesCellNormals = true;\r\n        buffRequest.hash = `PFN${points.getMTime()}I${indexBuffer.getMTime()}snorm8x4`;\r\n        buffRequest.dataArray = points;\r\n        buffRequest.cells = cells;\r\n        buffRequest.usage = BufferUsage.NormalsFromPoints;\r\n        const buff = device.getBufferManager().getBuffer(buffRequest);\r\n        vertexInput.addBuffer(buff, ['normalMC']);\r\n      } else {\r\n        vertexInput.removeBufferIfPresent('normalMC');\r\n      }\r\n    } else {\r\n      vertexInput.removeBufferIfPresent('normalMC');\r\n    }\r\n\r\n    // deal with colors but only if modified\r\n    let haveColors = false;\r\n    if (model.renderable.getScalarVisibility()) {\r\n      const c = model.renderable.getColorMapColors();\r\n      if (c && !edges) {\r\n        const scalarMode = model.renderable.getScalarMode();\r\n        let haveCellScalars = false;\r\n        // We must figure out how the scalars should be mapped to the polydata.\r\n        if ((scalarMode === ScalarMode.USE_CELL_DATA || scalarMode === ScalarMode.USE_CELL_FIELD_DATA || scalarMode === ScalarMode.USE_FIELD_DATA || !pd.getPointData().getScalars()) && scalarMode !== ScalarMode.USE_POINT_FIELD_DATA && c) {\r\n          haveCellScalars = true;\r\n        }\r\n        const buffRequest = {\r\n          usage: BufferUsage.PointArray,\r\n          format: 'unorm8x4',\r\n          hash: `${haveCellScalars}${c.getMTime()}I${indexBuffer.getMTime()}unorm8x4`,\r\n          dataArray: c,\r\n          indexBuffer,\r\n          cellData: haveCellScalars,\r\n          cellOffset: 0\r\n        };\r\n        const buff = device.getBufferManager().getBuffer(buffRequest);\r\n        vertexInput.addBuffer(buff, ['colorVI']);\r\n        haveColors = true;\r\n      }\r\n    }\r\n    if (!haveColors) {\r\n      vertexInput.removeBufferIfPresent('colorVI');\r\n    }\r\n    let tcoords = null;\r\n    if (model.renderable.getInterpolateScalarsBeforeMapping?.() && model.renderable.getColorCoordinates()) {\r\n      tcoords = model.renderable.getColorCoordinates();\r\n    } else {\r\n      tcoords = pd.getPointData().getTCoords();\r\n    }\r\n    if (tcoords && !edges) {\r\n      const buff = device.getBufferManager().getBufferForPointArray(tcoords, vertexInput.getIndexBuffer());\r\n      vertexInput.addBuffer(buff, ['tcoord']);\r\n    } else {\r\n      vertexInput.removeBufferIfPresent('tcoord');\r\n    }\r\n  };\r\n  publicAPI.updateTextures = () => {\r\n    // we keep track of new and used textures so\r\n    // that we can clean up any unused textures so we don't hold onto them\r\n    const usedTextures = [];\r\n    const newTextures = [];\r\n\r\n    // do we have a scalar color texture\r\n    const idata = model.renderable.getColorTextureMap?.();\r\n    if (idata) {\r\n      if (!model.colorTexture) {\r\n        model.colorTexture = _Core_Texture_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance({\r\n          label: 'polyDataColor'\r\n        });\r\n      }\r\n      model.colorTexture.setInputData(idata);\r\n      newTextures.push(['Diffuse', model.colorTexture]);\r\n    }\r\n\r\n    // actor textures?\r\n    const actor = model.WebGPUActor.getRenderable();\r\n    const renderer = model.WebGPURenderer.getRenderable();\r\n\r\n    // Reusing the old code for new and old textures, just loading in from properties instead of actor.getTextures()\r\n    const textures = [];\r\n\r\n    // Feels like there should be a better way than individually adding all\r\n    if (actor.getProperty().getDiffuseTexture?.()) {\r\n      const pair = ['Diffuse', actor.getProperty().getDiffuseTexture()];\r\n      textures.push(pair);\r\n    }\r\n    if (actor.getTextures()[0]) {\r\n      const pair = ['Diffuse', actor.getTextures()[0]];\r\n      textures.push(pair);\r\n    }\r\n    if (model.colorTexture) {\r\n      const pair = ['Diffuse', model.colorTexture];\r\n      textures.push(pair);\r\n    }\r\n    if (actor.getProperty().getRoughnessTexture?.()) {\r\n      const pair = ['Roughness', actor.getProperty().getRoughnessTexture()];\r\n      textures.push(pair);\r\n    }\r\n    if (actor.getProperty().getMetallicTexture?.()) {\r\n      const pair = ['Metallic', actor.getProperty().getMetallicTexture()];\r\n      textures.push(pair);\r\n    }\r\n    if (actor.getProperty().getNormalTexture?.()) {\r\n      const pair = ['Normal', actor.getProperty().getNormalTexture()];\r\n      textures.push(pair);\r\n    }\r\n    if (actor.getProperty().getAmbientOcclusionTexture?.()) {\r\n      const pair = ['AmbientOcclusion', actor.getProperty().getAmbientOcclusionTexture()];\r\n      textures.push(pair);\r\n    }\r\n    if (actor.getProperty().getEmissionTexture?.()) {\r\n      const pair = ['Emission', actor.getProperty().getEmissionTexture()];\r\n      textures.push(pair);\r\n    }\r\n    if (renderer.getEnvironmentTexture?.()) {\r\n      const pair = ['Environment', renderer.getEnvironmentTexture()];\r\n      textures.push(pair);\r\n    }\r\n    for (let i = 0; i < textures.length; i++) {\r\n      if (textures[i][1].getInputData() || textures[i][1].getJsImageData() || textures[i][1].getCanvas()) {\r\n        newTextures.push(textures[i]);\r\n      }\r\n      if (textures[i][1].getImage() && textures[i][1].getImageLoaded()) {\r\n        newTextures.push(textures[i]);\r\n      }\r\n    }\r\n    for (let i = 0; i < newTextures.length; i++) {\r\n      const srcTexture = newTextures[i][1];\r\n      const textureName = newTextures[i][0];\r\n      const newTex = model.device.getTextureManager().getTextureForVTKTexture(srcTexture); // Generates hash\r\n      if (newTex.getReady()) {\r\n        // is this a new texture\r\n        let found = false;\r\n        for (let t = 0; t < model.textures.length; t++) {\r\n          if (model.textures[t] === newTex) {\r\n            found = true;\r\n            usedTextures[t] = true;\r\n          }\r\n        }\r\n        if (!found) {\r\n          usedTextures[model.textures.length] = true;\r\n          const tview = newTex.createView(`${textureName}Texture`);\r\n          model.textures.push(newTex);\r\n          model.textureViews.push(tview);\r\n          const interpolate = srcTexture.getInterpolate() ? 'linear' : 'nearest';\r\n          let addressMode = null;\r\n          if (!addressMode && srcTexture.getEdgeClamp() && srcTexture.getRepeat()) addressMode = 'mirror-repeat';\r\n          if (!addressMode && srcTexture.getEdgeClamp()) addressMode = 'clamp-to-edge';\r\n          if (!addressMode && srcTexture.getRepeat()) addressMode = 'repeat';\r\n          if (textureName !== 'Environment') {\r\n            tview.addSampler(model.device, {\r\n              addressModeU: addressMode,\r\n              addressModeV: addressMode,\r\n              addressModeW: addressMode,\r\n              minFilter: interpolate,\r\n              magFilter: interpolate\r\n            });\r\n          } else {\r\n            tview.addSampler(model.device, {\r\n              addressModeU: 'repeat',\r\n              addressModeV: 'clamp-to-edge',\r\n              addressModeW: 'repeat',\r\n              minFilter: interpolate,\r\n              magFilter: interpolate,\r\n              mipmapFilter: 'linear'\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // remove unused textures\r\n    for (let i = model.textures.length - 1; i >= 0; i--) {\r\n      if (!usedTextures[i]) {\r\n        model.textures.splice(i, 1);\r\n        model.textureViews.splice(i, 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  // compute a unique hash for a pipeline, this needs to be unique enough to\r\n  // capture any pipeline code changes (which includes shader changes)\r\n  // or vertex input changes/ bind groups/ etc\r\n  publicAPI.computePipelineHash = () => {\r\n    let pipelineHash = `pd${model.useRendererMatrix ? 'r' : ''}${model.forceZValue ? 'z' : ''}`;\r\n    if (model.primitiveType === PrimitiveTypes.TriangleEdges || model.primitiveType === PrimitiveTypes.TriangleStripEdges) {\r\n      pipelineHash += 'edge';\r\n    } else {\r\n      if (model.vertexInput.hasAttribute(`normalMC`)) {\r\n        pipelineHash += `n`;\r\n      }\r\n      if (model.vertexInput.hasAttribute(`colorVI`)) {\r\n        pipelineHash += `c`;\r\n      }\r\n      if (model.vertexInput.hasAttribute(`tcoord`)) {\r\n        const tcoords = model.vertexInput.getBuffer('tcoord');\r\n        const numComp = _Types_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"].getNumberOfComponentsFromBufferFormat(tcoords.getArrayInformation()[0].format);\r\n        pipelineHash += `t${numComp}`;\r\n      }\r\n      if (model.textures.length) {\r\n        pipelineHash += `tx${model.textures.length}`;\r\n      }\r\n    }\r\n    if (model._usesCellNormals) {\r\n      pipelineHash += `cn`;\r\n    }\r\n    if (model.SSBO) {\r\n      pipelineHash += `ssbo`;\r\n    }\r\n    const uhash = publicAPI.getHashFromUsage(model.usage);\r\n    pipelineHash += uhash;\r\n    pipelineHash += model.renderEncoder.getPipelineHash();\r\n    model.pipelineHash = pipelineHash;\r\n  };\r\n  publicAPI.updateBuffers = () => {\r\n    // handle textures if not edges\r\n    if (model.primitiveType !== PrimitiveTypes.TriangleEdges && model.primitiveType !== PrimitiveTypes.TriangleStripEdges) {\r\n      publicAPI.updateTextures();\r\n    }\r\n    const actor = model.WebGPUActor.getRenderable();\r\n    const rep = actor.getProperty().getRepresentation();\r\n\r\n    // handle per primitive type\r\n    model.usage = publicAPI.getUsage(rep, model.primitiveType);\r\n    publicAPI.buildVertexInput();\r\n    const vbo = model.vertexInput.getBuffer('vertexBC');\r\n    publicAPI.setNumberOfVertices(vbo.getSizeInBytes() / vbo.getStrideInBytes());\r\n    publicAPI.setTopology(publicAPI.getTopologyFromUsage(model.usage));\r\n    publicAPI.updateUBO();\r\n    if (publicAPI.haveWideLines()) {\r\n      const ppty = actor.getProperty();\r\n      publicAPI.setNumberOfInstances(Math.ceil(ppty.getLineWidth() * 2.0));\r\n    } else {\r\n      publicAPI.setNumberOfInstances(1);\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  is2D: false,\r\n  cellArray: null,\r\n  currentInput: null,\r\n  cellOffset: 0,\r\n  primitiveType: 0,\r\n  colorTexture: null,\r\n  renderEncoder: null,\r\n  textures: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initiaLalues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initiaLalues);\r\n\r\n  // Inheritance\r\n  _SimpleMapper_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].extend(publicAPI, model, initiaLalues);\r\n  model.fragmentShaderTemplate = vtkWebGPUPolyDataFS;\r\n  model.vertexShaderTemplate = vtkWebGPUPolyDataVS;\r\n  model._tmpMat3 = gl_matrix__WEBPACK_IMPORTED_MODULE_11__.identity(new Float64Array(9));\r\n  model._tmpMat4 = gl_matrix__WEBPACK_IMPORTED_MODULE_12__.identity(new Float64Array(16));\r\n\r\n  // UBO\r\n  model.UBO = _UniformBuffer_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].newInstance({\r\n    label: 'mapperUBO'\r\n  });\r\n  model.UBO.addEntry('BCWCMatrix', 'mat4x4<f32>');\r\n  model.UBO.addEntry('BCSCMatrix', 'mat4x4<f32>');\r\n  model.UBO.addEntry('MCWCNormals', 'mat4x4<f32>');\r\n  model.UBO.addEntry('AmbientColor', 'vec4<f32>');\r\n  model.UBO.addEntry('DiffuseColor', 'vec4<f32>');\r\n  model.UBO.addEntry('EdgeColor', 'vec4<f32>');\r\n  model.UBO.addEntry('SpecularColor', 'vec4<f32>');\r\n  model.UBO.addEntry('AmbientIntensity', 'f32');\r\n  model.UBO.addEntry('DiffuseIntensity', 'f32');\r\n  model.UBO.addEntry('Roughness', 'f32');\r\n  model.UBO.addEntry('Metallic', 'f32');\r\n  model.UBO.addEntry('Ambient', 'f32');\r\n  model.UBO.addEntry('Normal', 'f32');\r\n  model.UBO.addEntry('Emission', 'f32');\r\n  model.UBO.addEntry('NormalStrength', 'f32');\r\n  model.UBO.addEntry('BaseIOR', 'f32');\r\n  model.UBO.addEntry('SpecularIntensity', 'f32');\r\n  model.UBO.addEntry('LineWidth', 'f32');\r\n  model.UBO.addEntry('Opacity', 'f32');\r\n  model.UBO.addEntry('ZValue', 'f32');\r\n  model.UBO.addEntry('PropID', 'u32');\r\n  model.UBO.addEntry('ClipNear', 'f32');\r\n  model.UBO.addEntry('ClipFar', 'f32');\r\n  model.UBO.addEntry('Time', 'u32');\r\n\r\n  // Build VTK API\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.e)(publicAPI, model, ['cellArray', 'currentInput', 'cellOffset', 'is2D', 'primitiveType', 'renderEncoder']);\r\n  model.textures = [];\r\n\r\n  // Object methods\r\n  vtkWebGPUCellArrayMapper(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, 'vtkWebGPUCellArrayMapper');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUCellArrayMapper$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/CellArrayMapper.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/CubeAxesActor.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ index),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _Core_CubeAxesActor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/CubeAxesActor.js */ "./node_modules/@kitware/vtk.js/Rendering/Core/CubeAxesActor.js");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/ViewNodeFactory.js");\n\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUCubeAxesActor methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUCubeAxesActor(publicAPI, model) {\r\n  model.classHierarchy.push(\'vtkWebGPUCubeAxesActor\');\r\n\r\n  // Builds myself.\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      model.WebGPURenderer = publicAPI.getFirstAncestorOfType(\'vtkWebGPURenderer\');\r\n      model.WebGPURenderWindow = model.WebGPURenderer.getParent();\r\n      if (!model.CubeAxesActorHelper.getRenderable()) {\r\n        model.CubeAxesActorHelper.setRenderable(model.renderable);\r\n      }\r\n      publicAPI.prepareNodes();\r\n      publicAPI.addMissingNode(model.CubeAxesActorHelper.getTmActor());\r\n      publicAPI.addMissingNode(model.renderable.getGridActor());\r\n      publicAPI.removeUnusedNodes();\r\n    }\r\n  };\r\n  publicAPI.opaquePass = (prepass, renderPass) => {\r\n    if (prepass) {\r\n      const camera = model.WebGPURenderer ? model.WebGPURenderer.getRenderable().getActiveCamera() : null;\r\n      const tsize = model.WebGPURenderer.getTiledSizeAndOrigin();\r\n      model.CubeAxesActorHelper.updateAPISpecificData([tsize.usize, tsize.vsize], camera, model.WebGPURenderWindow.getRenderable());\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);\r\n  model.CubeAxesActorHelper = _Core_CubeAxesActor_js__WEBPACK_IMPORTED_MODULE_1__["default"].newCubeAxesActorHelper();\r\n\r\n  // Object methods\r\n  vtkWebGPUCubeAxesActor(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, \'vtkWebGPUCubeAxesActor\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar index = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to WebGPU backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__.registerOverride)(\'vtkCubeAxesActor\', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/CubeAxesActor.js?')},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Device.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WeakRefMap: () => (/* binding */ WeakRefMap),\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUDevice$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _BufferManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BufferManager.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager.js\");\n/* harmony import */ var _ShaderCache_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ShaderCache.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderCache.js\");\n/* harmony import */ var _TextureManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TextureManager.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/TextureManager.js\");\n\r\n\r\n\r\n\r\n\r\n/**\r\n * provide a simple WeakRefMap class to share device objects based on\r\n * hash values so that buffers/textures etc can be shared betwen mappers.\r\n * This is roughly based on WeakLRUCache but without the actual caching\r\n * behavior. This is just a map of key -> WeakRef(value)\r\n */\r\n\r\n/* eslint-disable no-undef */\r\nclass WeakRefMap extends Map {\r\n  constructor() {\r\n    super();\r\n    this.registry = new FinalizationRegistry(key => {\r\n      const entry = super.get(key);\r\n      if (entry && entry.deref && entry.deref() === undefined) super.delete(key);\r\n    });\r\n  }\r\n  getValue(key) {\r\n    const entry = super.get(key);\r\n    if (entry) {\r\n      const value = entry.deref();\r\n      if (value !== undefined) return value;\r\n      super.delete(key);\r\n    }\r\n    return undefined;\r\n  }\r\n  setValue(key, value) {\r\n    let entry;\r\n    if (value && typeof value === 'object') {\r\n      entry = new WeakRef(value);\r\n      this.registry.register(value, key);\r\n      super.set(key, entry);\r\n    }\r\n    // else entry is undefined\r\n    return entry;\r\n  }\r\n}\r\n/* eslint-enable no-undef */\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUDevice methods\r\n// ----------------------------------------------------------------------------\r\nfunction vtkWebGPUDevice(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUDevice');\r\n  publicAPI.initialize = handle => {\r\n    model.handle = handle;\r\n  };\r\n  publicAPI.createCommandEncoder = () => model.handle.createCommandEncoder();\r\n  publicAPI.submitCommandEncoder = commandEncoder => {\r\n    model.handle.queue.submit([commandEncoder.finish()]);\r\n  };\r\n  publicAPI.getShaderModule = sd => model.shaderCache.getShaderModule(sd);\r\n\r\n  /* eslint-disable no-bitwise */\r\n  /* eslint-disable no-undef */\r\n  publicAPI.getBindGroupLayout = val => {\r\n    if (!val.entries) {\r\n      return null;\r\n    }\r\n\r\n    // add in basic required values if missing\r\n    for (let i = 0; i < val.entries.length; i++) {\r\n      const ent = val.entries[i];\r\n      ent.binding = ent.binding || 0;\r\n      ent.visibility = ent.visibility || GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT;\r\n    }\r\n\r\n    // do we already have one?\r\n    const sval = JSON.stringify(val);\r\n    for (let i = 0; i < model.bindGroupLayouts.length; i++) {\r\n      if (model.bindGroupLayouts[i].sval === sval) {\r\n        return model.bindGroupLayouts[i].layout;\r\n      }\r\n    }\r\n\r\n    // create one and store it\r\n    const layout = model.handle.createBindGroupLayout(val);\r\n\r\n    // we actually only store the stringified version\r\n    // as that is what we always compare against\r\n    model.bindGroupLayouts.push({\r\n      sval,\r\n      layout\r\n    });\r\n    return layout;\r\n  };\r\n  publicAPI.getBindGroupLayoutDescription = layout => {\r\n    for (let i = 0; i < model.bindGroupLayouts.length; i++) {\r\n      if (model.bindGroupLayouts[i].layout === layout) {\r\n        return model.bindGroupLayouts[i].sval;\r\n      }\r\n    }\r\n    vtkErrorMacro('layout not found');\r\n    console.trace();\r\n    return null;\r\n  };\r\n  publicAPI.getPipeline = hash => {\r\n    if (hash in model.pipelines) {\r\n      return model.pipelines[hash];\r\n    }\r\n    return null;\r\n  };\r\n  publicAPI.createPipeline = (hash, pipeline) => {\r\n    pipeline.initialize(publicAPI, hash);\r\n    model.pipelines[hash] = pipeline;\r\n  };\r\n  publicAPI.onSubmittedWorkDone = () => model.handle.queue.onSubmittedWorkDone();\r\n\r\n  // The Device has an object cache that can be used to cache buffers,\r\n  // textures and other objects that can be shared. The basic approach is to\r\n  // call getCachedObject with a request and a create function. The request\r\n  // is based on a hash. The cache lookup just returns any entry that has a\r\n  // matching hash. If a match isn't found then the create function is\r\n  // called with any extra arguments.\r\n\r\n  // is the object already cached?\r\n  publicAPI.hasCachedObject = hash => model.objectCache.getValue(hash);\r\n  publicAPI.getCachedObject = function (hash, creator) {\r\n    if (!hash) {\r\n      vtkErrorMacro('attempt to cache an object without a hash');\r\n      return null;\r\n    }\r\n    const existingValue = model.objectCache.getValue(hash);\r\n    if (existingValue) {\r\n      return existingValue;\r\n    }\r\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\r\n      args[_key - 2] = arguments[_key];\r\n    }\r\n    const createdObject = creator(...args);\r\n    model.objectCache.setValue(hash, createdObject);\r\n    return createdObject;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\nconst DEFAULT_VALUES = {\r\n  handle: null,\r\n  pipelines: null,\r\n  shaderCache: null,\r\n  bindGroupLayouts: null,\r\n  bufferManager: null,\r\n  textureManager: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.o)(publicAPI, model);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.e)(publicAPI, model, ['handle']);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.g)(publicAPI, model, ['bufferManager', 'shaderCache', 'textureManager']);\r\n\r\n  // this is a weak ref cache implementation, we create it without\r\n  // an expirer (so it is strictly based on garbage collection and\r\n  // objects are not held if there are no external references)\r\n  // model.objectCache = new WeakLRUCache({ expirer: false });\r\n  model.objectCache = new WeakRefMap();\r\n  model.shaderCache = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance();\r\n  model.shaderCache.setDevice(publicAPI);\r\n  model.bindGroupLayouts = [];\r\n  model.bufferManager = _BufferManager_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n  model.bufferManager.setDevice(publicAPI);\r\n  model.textureManager = _TextureManager_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance();\r\n  model.textureManager.setDevice(publicAPI);\r\n  model.pipelines = {};\r\n\r\n  // For more macro methods, see \"Sources/macros.js\"\r\n  // Object specific methods\r\n  vtkWebGPUDevice(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, 'vtkWebGPUDevice');\r\n\r\n// ----------------------------------------------------------------------------\r\nvar vtkWebGPUDevice$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/Device.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ForwardPass.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkForwardPass$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _FullScreenQuad_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FullScreenQuad.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/FullScreenQuad.js\");\n/* harmony import */ var _OpaquePass_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./OpaquePass.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/OpaquePass.js\");\n/* harmony import */ var _OrderIndependentTranslucentPass_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./OrderIndependentTranslucentPass.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/OrderIndependentTranslucentPass.js\");\n/* harmony import */ var _RenderEncoder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RenderEncoder.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/RenderEncoder.js\");\n/* harmony import */ var _VolumePass_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./VolumePass.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/VolumePass.js\");\n/* harmony import */ var _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../SceneGraph/RenderPass.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js\");\n/* harmony import */ var _Sampler_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Sampler.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Sampler.js\");\n/* harmony import */ var _TextureView_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./TextureView.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/TextureView.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst finalBlitFragTemplate = `\r\n//VTK::Mapper::Dec\r\n\r\n//VTK::TCoord::Dec\r\n\r\n//VTK::RenderEncoder::Dec\r\n\r\n//VTK::IOStructs::Dec\r\n\r\n@fragment\r\nfn main(\r\n//VTK::IOStructs::Input\r\n)\r\n//VTK::IOStructs::Output\r\n{\r\n  var output: fragmentOutput;\r\n\r\n  var computedColor: vec4<f32> = clamp(textureSampleLevel(opaquePassColorTexture, finalPassSampler, input.tcoordVS, 0.0),vec4<f32>(0.0),vec4<f32>(1.0));\r\n\r\n  //VTK::RenderEncoder::Impl\r\n  return output;\r\n}\r\n`;\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkForwardPass(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkForwardPass');\r\n\r\n  // this pass implements a forward rendering pipeline\r\n  // if both volumes and opaque geometry are present\r\n  // it will mix the two together by capturing a zbuffer\r\n  // first\r\n  publicAPI.traverse = function (viewNode) {\r\n    let parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\r\n    if (model.deleted) {\r\n      return;\r\n    }\r\n\r\n    // we just render our delegates in order\r\n    model._currentParent = parent;\r\n\r\n    // build\r\n    publicAPI.setCurrentOperation('buildPass');\r\n    viewNode.traverse(publicAPI);\r\n    if (!model.opaquePass) {\r\n      model.opaquePass = _OpaquePass_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance();\r\n    }\r\n    const numlayers = viewNode.getRenderable().getNumberOfLayers();\r\n\r\n    // iterate over renderers\r\n    const renderers = viewNode.getChildren();\r\n    for (let i = 0; i < numlayers; i++) {\r\n      for (let index = 0; index < renderers.length; index++) {\r\n        const renNode = renderers[index];\r\n        const ren = viewNode.getRenderable().getRenderers()[index];\r\n        if (ren.getDraw() && ren.getLayer() === i) {\r\n          // check for both opaque and volume actors\r\n          model.opaqueActorCount = 0;\r\n          model.translucentActorCount = 0;\r\n          model.volumes = [];\r\n          publicAPI.setCurrentOperation('queryPass');\r\n          renNode.traverse(publicAPI);\r\n          publicAPI.setCurrentOperation('cameraPass');\r\n          renNode.traverse(publicAPI);\r\n\r\n          // always do opaque pass to get a valid color and zbuffer, even if empty\r\n          model.opaquePass.traverse(renNode, viewNode);\r\n\r\n          // optional translucent pass\r\n          if (model.translucentActorCount > 0) {\r\n            if (!model.translucentPass) {\r\n              model.translucentPass = _OrderIndependentTranslucentPass_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance();\r\n            }\r\n            model.translucentPass.setColorTextureView(model.opaquePass.getColorTextureView());\r\n            model.translucentPass.setDepthTextureView(model.opaquePass.getDepthTextureView());\r\n            model.translucentPass.traverse(renNode, viewNode);\r\n          }\r\n\r\n          // optional volume pass\r\n          if (model.volumes.length > 0) {\r\n            if (!model.volumePass) {\r\n              model.volumePass = _VolumePass_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance();\r\n            }\r\n            model.volumePass.setColorTextureView(model.opaquePass.getColorTextureView());\r\n            model.volumePass.setDepthTextureView(model.opaquePass.getDepthTextureView());\r\n            model.volumePass.setVolumes(model.volumes);\r\n            model.volumePass.traverse(renNode, viewNode);\r\n          }\r\n\r\n          // blit the result into the swap chain\r\n          publicAPI.finalPass(viewNode, renNode);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  publicAPI.finalPass = (viewNode, renNode) => {\r\n    if (!model._finalBlitEncoder) {\r\n      publicAPI.createFinalBlitEncoder(viewNode);\r\n    }\r\n    model._finalBlitOutputTextureView.createFromTextureHandle(viewNode.getCurrentTexture(), {\r\n      depth: 1,\r\n      format: viewNode.getPresentationFormat()\r\n    });\r\n    model._finalBlitEncoder.attachTextureViews();\r\n    model._finalBlitEncoder.begin(viewNode.getCommandEncoder());\r\n    renNode.scissorAndViewport(model._finalBlitEncoder);\r\n    model._fullScreenQuad.prepareAndDraw(model._finalBlitEncoder);\r\n    model._finalBlitEncoder.end();\r\n  };\r\n  publicAPI.createFinalBlitEncoder = viewNode => {\r\n    model._finalBlitEncoder = _RenderEncoder_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance({\r\n      label: 'forwardPassBlit'\r\n    });\r\n    model._finalBlitEncoder.setDescription({\r\n      colorAttachments: [{\r\n        view: null,\r\n        loadOp: 'load',\r\n        storeOp: 'store'\r\n      }]\r\n    });\r\n    model._finalBlitEncoder.setPipelineHash('fpf');\r\n    model._finalBlitEncoder.setPipelineSettings({\r\n      primitive: {\r\n        cullMode: 'none'\r\n      },\r\n      fragment: {\r\n        targets: [{\r\n          format: viewNode.getPresentationFormat(),\r\n          blend: {\r\n            color: {\r\n              srcFactor: 'src-alpha',\r\n              dstFactor: 'one-minus-src-alpha'\r\n            },\r\n            alpha: {\r\n              srcfactor: 'one',\r\n              dstFactor: 'one-minus-src-alpha'\r\n            }\r\n          }\r\n        }]\r\n      }\r\n    });\r\n    model._fsqSampler = _Sampler_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].newInstance({\r\n      label: 'finalPassSampler'\r\n    });\r\n    model._fsqSampler.create(viewNode.getDevice(), {\r\n      minFilter: 'linear',\r\n      magFilter: 'linear'\r\n    });\r\n    model._fullScreenQuad = _FullScreenQuad_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n    model._fullScreenQuad.setDevice(viewNode.getDevice());\r\n    model._fullScreenQuad.setPipelineHash('fpfsq');\r\n    model._fullScreenQuad.setTextureViews([model.opaquePass.getColorTextureView()]);\r\n    model._fullScreenQuad.setAdditionalBindables([model._fsqSampler]);\r\n    model._fullScreenQuad.setFragmentShaderTemplate(finalBlitFragTemplate);\r\n    model._finalBlitOutputTextureView = _TextureView_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].newInstance();\r\n    model._finalBlitEncoder.setColorTextureView(0, model._finalBlitOutputTextureView);\r\n  };\r\n  publicAPI.incrementOpaqueActorCount = () => model.opaqueActorCount++;\r\n  publicAPI.incrementTranslucentActorCount = () => model.translucentActorCount++;\r\n  publicAPI.addVolume = volume => {\r\n    model.volumes.push(volume);\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  opaqueActorCount: 0,\r\n  translucentActorCount: 0,\r\n  volumes: null,\r\n  opaqueRenderEncoder: null,\r\n  translucentPass: null,\r\n  volumePass: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].extend(publicAPI, model, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['opaquePass', 'translucentPass', 'volumePass']);\r\n\r\n  // Object methods\r\n  vtkForwardPass(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkForwardPass');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkForwardPass$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/ForwardPass.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/FullScreenQuad.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUFullScreenQuad$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _ShaderCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ShaderCache.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderCache.js\");\n/* harmony import */ var _SimpleMapper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SimpleMapper.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/SimpleMapper.js\");\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUFullScreenQuad methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUFullScreenQuad(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUFullScreenQuad');\r\n  publicAPI.replaceShaderPosition = (hash, pipeline, vertexInput) => {\r\n    const vDesc = pipeline.getShaderDescription('vertex');\r\n    vDesc.addBuiltinOutput('vec4<f32>', '@builtin(position) Position');\r\n    vDesc.addOutput('vec4<f32>', 'vertexVC');\r\n    let code = vDesc.getCode();\r\n    code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].substitute(code, '//VTK::Position::Impl', ['output.tcoordVS = vec2<f32>(vertexBC.x * 0.5 + 0.5, 1.0 - vertexBC.y * 0.5 - 0.5);', 'output.Position = vec4<f32>(vertexBC, 1.0);', 'output.vertexVC = vec4<f32>(vertexBC, 1);']).result;\r\n    vDesc.setCode(code);\r\n  };\r\n  model.shaderReplacements.set('replaceShaderPosition', publicAPI.replaceShaderPosition);\r\n  publicAPI.updateBuffers = () => {\r\n    const buff = model.device.getBufferManager().getFullScreenQuadBuffer();\r\n    model.vertexInput.addBuffer(buff, ['vertexBC']);\r\n    model.numberOfVertices = 6;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SimpleMapper_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(publicAPI, model, initialValues);\r\n\r\n  // Object methods\r\n  vtkWebGPUFullScreenQuad(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkWebGPUFullScreenQuad');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUFullScreenQuad$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/FullScreenQuad.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/HardwareSelectionPass.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUHardwareSelectionPass$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _RenderEncoder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RenderEncoder.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/RenderEncoder.js\");\n/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Texture.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Texture.js\");\n/* harmony import */ var _ShaderCache_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ShaderCache.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderCache.js\");\n/* harmony import */ var _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../SceneGraph/RenderPass.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUHardwareSelectionPass(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUHardwareSelectionPass');\r\n\r\n  // this pass implements a forward rendering pipeline\r\n  // if both volumes and opaque geometry are present\r\n  // it will mix the two together by capturing a zbuffer\r\n  // first\r\n  publicAPI.traverse = (viewNode, renNode) => {\r\n    if (model.deleted) {\r\n      return;\r\n    }\r\n    model._currentParent = null;\r\n\r\n    // build\r\n    publicAPI.setCurrentOperation('buildPass');\r\n    viewNode.traverse(publicAPI);\r\n    const device = viewNode.getDevice();\r\n    if (!model.selectionRenderEncoder) {\r\n      publicAPI.createRenderEncoder();\r\n\r\n      // create color texture\r\n      model.colorTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance({\r\n        label: 'hardwareSelectorColor'\r\n      });\r\n      model.colorTexture.create(device, {\r\n        width: viewNode.getCanvas().width,\r\n        height: viewNode.getCanvas().height,\r\n        format: 'rgba32uint',\r\n        /* eslint-disable no-undef */\r\n        /* eslint-disable no-bitwise */\r\n        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC\r\n      });\r\n      const v1 = model.colorTexture.createView('hardwareSelectColorTexture');\r\n      model.selectionRenderEncoder.setColorTextureView(0, v1);\r\n\r\n      // create depth texture\r\n      model.depthTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance({\r\n        label: 'hardwareSelectorDepth'\r\n      });\r\n      model.depthTexture.create(device, {\r\n        width: viewNode.getCanvas().width,\r\n        height: viewNode.getCanvas().height,\r\n        format: 'depth32float',\r\n        /* eslint-disable no-undef */\r\n        /* eslint-disable no-bitwise */\r\n        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC\r\n      });\r\n      const v2 = model.depthTexture.createView('hardwareSelectDepthTexture');\r\n      model.selectionRenderEncoder.setDepthTextureView(v2);\r\n    } else {\r\n      model.colorTexture.resize(viewNode.getCanvas().width, viewNode.getCanvas().height);\r\n      model.depthTexture.resizeToMatch(model.colorTexture);\r\n    }\r\n    model.selectionRenderEncoder.attachTextureViews();\r\n    renNode.setRenderEncoder(model.selectionRenderEncoder);\r\n    publicAPI.setCurrentOperation('cameraPass');\r\n    renNode.traverse(publicAPI);\r\n    // opaque pass is used for selection\r\n    publicAPI.setCurrentOperation('opaquePass');\r\n    renNode.traverse(publicAPI);\r\n  };\r\n  publicAPI.createRenderEncoder = () => {\r\n    model.selectionRenderEncoder = _RenderEncoder_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance({\r\n      label: 'HardwareSelectionPass'\r\n    });\r\n    // default settings are fine for this\r\n    model.selectionRenderEncoder.setPipelineHash('sel');\r\n    model.selectionRenderEncoder.setReplaceShaderCodeFunction(pipeline => {\r\n      const fDesc = pipeline.getShaderDescription('fragment');\r\n      fDesc.addOutput('vec4<u32>', 'outColor');\r\n      let code = fDesc.getCode();\r\n      code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].substitute(code, '//VTK::RenderEncoder::Impl', ['output.outColor = vec4<u32>(mapperUBO.PropID, compositeID, 0u, 0u);']).result;\r\n      fDesc.setCode(code);\r\n    });\r\n    const renDesc = model.selectionRenderEncoder.getDescription();\r\n    renDesc.colorAttachments[0].clearValue = [0.0, 0.0, 0.0, 0.0];\r\n    model.selectionRenderEncoder.setPipelineSettings({\r\n      primitive: {\r\n        cullMode: 'none'\r\n      },\r\n      depthStencil: {\r\n        depthWriteEnabled: true,\r\n        depthCompare: 'greater',\r\n        format: 'depth32float'\r\n      },\r\n      fragment: {\r\n        targets: [{\r\n          format: 'rgba32uint',\r\n          blend: undefined\r\n        }]\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  selectionRenderEncoder: null,\r\n  colorTexture: null,\r\n  depthTexture: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].extend(publicAPI, model, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['colorTexture', 'depthTexture']);\r\n\r\n  // Object methods\r\n  vtkWebGPUHardwareSelectionPass(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkWebGPUHardwareSelectionPass');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUHardwareSelectionPass$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/HardwareSelectionPass.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/HardwareSelector.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ vtkWebGPUHardwareSelector$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _Core_HardwareSelector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/HardwareSelector.js */ "./node_modules/@kitware/vtk.js/Rendering/Core/HardwareSelector.js");\n/* harmony import */ var _Buffer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Buffer.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/Buffer.js");\n/* harmony import */ var _HardwareSelectionPass_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./HardwareSelectionPass.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/HardwareSelectionPass.js");\n/* harmony import */ var _Common_DataModel_SelectionNode_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Common/DataModel/SelectionNode.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/SelectionNode.js");\n/* harmony import */ var _Common_DataModel_DataSet_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Common/DataModel/DataSet.js */ "./node_modules/@kitware/vtk.js/Common/DataModel/DataSet.js");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  SelectionContent,\r\n  SelectionField\r\n} = _Common_DataModel_SelectionNode_js__WEBPACK_IMPORTED_MODULE_4__["default"];\r\nconst {\r\n  FieldAssociations\r\n} = _Common_DataModel_DataSet_js__WEBPACK_IMPORTED_MODULE_5__["default"];\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\nfunction getInfoHash(info) {\r\n  return `${info.propID} ${info.compositeID}`;\r\n}\r\nfunction convert(xx, yy, buffdata, channel) {\r\n  const offset = ((buffdata.height - yy - 1) * buffdata.colorBufferWidth + xx) * 4 + channel;\r\n  return buffdata.colorValues[offset];\r\n}\r\nfunction getPixelInformationWithData(buffdata, inDisplayPosition, maxDistance, outSelectedPosition) {\r\n  // Base case\r\n  const maxDist = maxDistance < 0 ? 0 : maxDistance;\r\n  if (maxDist === 0) {\r\n    outSelectedPosition[0] = inDisplayPosition[0];\r\n    outSelectedPosition[1] = inDisplayPosition[1];\r\n    if (inDisplayPosition[0] < 0 || inDisplayPosition[0] >= buffdata.width || inDisplayPosition[1] < 0 || inDisplayPosition[1] >= buffdata.height) {\r\n      return null;\r\n    }\r\n    const actorid = convert(inDisplayPosition[0], inDisplayPosition[1], buffdata, 0);\r\n    if (actorid <= 0) {\r\n      // the pixel did not hit any actor.\r\n      return null;\r\n    }\r\n    const info = {};\r\n    info.propID = actorid;\r\n    let compositeID = convert(inDisplayPosition[0], inDisplayPosition[1], buffdata, 1);\r\n    if (compositeID < 0 || compositeID > 0xffffff) {\r\n      compositeID = 0;\r\n    }\r\n    info.compositeID = compositeID;\r\n    if (buffdata.captureZValues) {\r\n      const offset = (buffdata.height - inDisplayPosition[1] - 1) * buffdata.zbufferBufferWidth + inDisplayPosition[0];\r\n      info.zValue = buffdata.depthValues[offset];\r\n      info.zValue = buffdata.webGPURenderer.convertToOpenGLDepth(info.zValue);\r\n      info.displayPosition = inDisplayPosition;\r\n    }\r\n    return info;\r\n  }\r\n\r\n  // Iterate over successively growing boxes.\r\n  // They recursively call the base case to handle single pixels.\r\n  const dispPos = [inDisplayPosition[0], inDisplayPosition[1]];\r\n  const curPos = [0, 0];\r\n  let info = getPixelInformationWithData(buffdata, inDisplayPosition, 0, outSelectedPosition);\r\n  if (info) {\r\n    return info;\r\n  }\r\n  for (let dist = 1; dist < maxDist; ++dist) {\r\n    // Vertical sides of box.\r\n    for (let y = dispPos[1] > dist ? dispPos[1] - dist : 0; y <= dispPos[1] + dist; ++y) {\r\n      curPos[1] = y;\r\n      if (dispPos[0] >= dist) {\r\n        curPos[0] = dispPos[0] - dist;\r\n        info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\r\n        if (info) {\r\n          return info;\r\n        }\r\n      }\r\n      curPos[0] = dispPos[0] + dist;\r\n      info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\r\n      if (info) {\r\n        return info;\r\n      }\r\n    }\r\n    // Horizontal sides of box.\r\n    for (let x = dispPos[0] >= dist ? dispPos[0] - (dist - 1) : 0; x <= dispPos[0] + (dist - 1); ++x) {\r\n      curPos[0] = x;\r\n      if (dispPos[1] >= dist) {\r\n        curPos[1] = dispPos[1] - dist;\r\n        info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\r\n        if (info) {\r\n          return info;\r\n        }\r\n      }\r\n      curPos[1] = dispPos[1] + dist;\r\n      info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\r\n      if (info) {\r\n        return info;\r\n      }\r\n    }\r\n  }\r\n\r\n  // nothing hit.\r\n  outSelectedPosition[0] = inDisplayPosition[0];\r\n  outSelectedPosition[1] = inDisplayPosition[1];\r\n  return null;\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\nfunction convertSelection(fieldassociation, dataMap, buffdata) {\r\n  const sel = [];\r\n  let count = 0;\r\n  dataMap.forEach((value, key) => {\r\n    const child = _Common_DataModel_SelectionNode_js__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance();\r\n    child.setContentType(SelectionContent.INDICES);\r\n    switch (fieldassociation) {\r\n      case FieldAssociations.FIELD_ASSOCIATION_CELLS:\r\n        child.setFieldType(SelectionField.CELL);\r\n        break;\r\n      case FieldAssociations.FIELD_ASSOCIATION_POINTS:\r\n        child.setFieldType(SelectionField.POINT);\r\n        break;\r\n      default:\r\n        vtkErrorMacro(\'Unknown field association\');\r\n    }\r\n    child.getProperties().propID = value.info.propID;\r\n    const wprop = buffdata.webGPURenderer.getPropFromID(value.info.propID);\r\n    child.getProperties().prop = wprop.getRenderable();\r\n    child.getProperties().compositeID = value.info.compositeID;\r\n    child.getProperties().pixelCount = value.pixelCount;\r\n    if (buffdata.captureZValues) {\r\n      child.getProperties().displayPosition = [value.info.displayPosition[0], value.info.displayPosition[1], value.info.zValue];\r\n      child.getProperties().worldPosition = buffdata.webGPURenderWindow.displayToWorld(value.info.displayPosition[0], value.info.displayPosition[1], value.info.zValue, buffdata.renderer);\r\n    }\r\n    child.setSelectionList(value.attributeIDs);\r\n    sel[count] = child;\r\n    count++;\r\n  });\r\n  return sel;\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\nfunction generateSelectionWithData(buffdata, fx1, fy1, fx2, fy2) {\r\n  const x1 = Math.floor(fx1);\r\n  const y1 = Math.floor(fy1);\r\n  const x2 = Math.floor(fx2);\r\n  const y2 = Math.floor(fy2);\r\n  const dataMap = new Map();\r\n  const outSelectedPosition = [0, 0];\r\n  for (let yy = y1; yy <= y2; yy++) {\r\n    for (let xx = x1; xx <= x2; xx++) {\r\n      const pos = [xx, yy];\r\n      const info = getPixelInformationWithData(buffdata, pos, 0, outSelectedPosition);\r\n      if (info) {\r\n        const hash = getInfoHash(info);\r\n        if (!dataMap.has(hash)) {\r\n          dataMap.set(hash, {\r\n            info,\r\n            pixelCount: 1,\r\n            attributeIDs: [info.attributeID]\r\n          });\r\n        } else {\r\n          const dmv = dataMap.get(hash);\r\n          dmv.pixelCount++;\r\n          if (buffdata.captureZValues) {\r\n            if (info.zValue < dmv.info.zValue) {\r\n              dmv.info = info;\r\n            }\r\n          }\r\n          if (dmv.attributeIDs.indexOf(info.attributeID) === -1) {\r\n            dmv.attributeIDs.push(info.attributeID);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return convertSelection(buffdata.fieldAssociation, dataMap, buffdata);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUHardwareSelector methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUHardwareSelector(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkWebGPUHardwareSelector\');\r\n\r\n  //----------------------------------------------------------------------------\r\n  publicAPI.endSelection = () => {\r\n    model.WebGPURenderer.setSelector(null);\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  // note we ignore the x,y arguments as WebGPU has to do buffer copies\r\n  // of the entire depth bufer. We could realloc hardware selection textures\r\n  // based on the passed in size etc but it gets messy so for now we always\r\n  // render the full size window and copy it to the buffers.\r\n  publicAPI.getSourceDataAsync = async renderer => {\r\n    if (!renderer || !model._WebGPURenderWindow) {\r\n      vtkErrorMacro(\'Renderer and view must be set before calling Select.\');\r\n      return false;\r\n    }\r\n\r\n    // todo revisit making selection part of core\r\n    // then we can do this in core\r\n    model._WebGPURenderWindow.getRenderable().preRender();\r\n    if (!model._WebGPURenderWindow.getInitialized()) {\r\n      model._WebGPURenderWindow.initialize();\r\n      await new Promise(resolve => {\r\n        model._WebGPURenderWindow.onInitialized(resolve);\r\n      });\r\n    }\r\n    const webGPURenderer = model._WebGPURenderWindow.getViewNodeFor(renderer);\r\n    if (!webGPURenderer) {\r\n      return false;\r\n    }\r\n\r\n    // Initialize renderer for selection.\r\n    // change the renderer\'s background to black, which will indicate a miss\r\n    const originalSuppress = webGPURenderer.getSuppressClear();\r\n    webGPURenderer.setSuppressClear(true);\r\n    model._selectionPass.traverse(model._WebGPURenderWindow, webGPURenderer);\r\n\r\n    // restore original background\r\n    webGPURenderer.setSuppressClear(originalSuppress);\r\n    const device = model._WebGPURenderWindow.getDevice();\r\n    const texture = model._selectionPass.getColorTexture();\r\n    const depthTexture = model._selectionPass.getDepthTexture();\r\n\r\n    // as this is async we really don\'t want to store things in\r\n    // the class as multiple calls may start before resolving\r\n    // so anything specific to this request gets put into the\r\n    // result object (by value in most cases)\r\n    const result = {\r\n      area: [0, 0, texture.getWidth() - 1, texture.getHeight() - 1],\r\n      captureZValues: model.captureZValues,\r\n      fieldAssociation: model.fieldAssociation,\r\n      renderer,\r\n      webGPURenderer,\r\n      webGPURenderWindow: model._WebGPURenderWindow,\r\n      width: texture.getWidth(),\r\n      height: texture.getHeight()\r\n    };\r\n\r\n    // must be a multiple of 256 bytes, so 16 texels with rgba32uint\r\n    result.colorBufferWidth = 16 * Math.floor((result.width + 15) / 16);\r\n    result.colorBufferSizeInBytes = result.colorBufferWidth * result.height * 4 * 4;\r\n    const colorBuffer = _Buffer_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({\r\n      label: \'hardwareSelectColorBuffer\'\r\n    });\r\n    colorBuffer.setDevice(device);\r\n    /* eslint-disable no-bitwise */\r\n    /* eslint-disable no-undef */\r\n    colorBuffer.create(result.colorBufferSizeInBytes, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST);\r\n    /* eslint-enable no-bitwise */\r\n    /* eslint-enable no-undef */\r\n\r\n    const cmdEnc = model._WebGPURenderWindow.getCommandEncoder();\r\n    cmdEnc.copyTextureToBuffer({\r\n      texture: texture.getHandle()\r\n    }, {\r\n      buffer: colorBuffer.getHandle(),\r\n      bytesPerRow: 16 * result.colorBufferWidth,\r\n      rowsPerImage: result.height\r\n    }, {\r\n      width: result.width,\r\n      height: result.height,\r\n      depthOrArrayLayers: 1\r\n    });\r\n    let zbuffer;\r\n    if (model.captureZValues) {\r\n      result.zbufferBufferWidth = 64 * Math.floor((result.width + 63) / 64);\r\n      zbuffer = _Buffer_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({\r\n        label: \'hardwareSelectDepthBuffer\'\r\n      });\r\n      zbuffer.setDevice(device);\r\n      result.zbufferSizeInBytes = result.height * result.zbufferBufferWidth * 4;\r\n      /* eslint-disable no-bitwise */\r\n      /* eslint-disable no-undef */\r\n      zbuffer.create(result.zbufferSizeInBytes, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST);\r\n      /* eslint-enable no-bitwise */\r\n      /* eslint-enable no-undef */\r\n\r\n      cmdEnc.copyTextureToBuffer({\r\n        texture: depthTexture.getHandle(),\r\n        aspect: \'depth-only\'\r\n      }, {\r\n        buffer: zbuffer.getHandle(),\r\n        bytesPerRow: 4 * result.zbufferBufferWidth,\r\n        rowsPerImage: result.height\r\n      }, {\r\n        width: result.width,\r\n        height: result.height,\r\n        depthOrArrayLayers: 1\r\n      });\r\n    }\r\n    device.submitCommandEncoder(cmdEnc);\r\n\r\n    /* eslint-disable no-undef */\r\n    const cLoad = colorBuffer.mapAsync(GPUMapMode.READ);\r\n    if (model.captureZValues) {\r\n      const zLoad = zbuffer.mapAsync(GPUMapMode.READ);\r\n      await Promise.all([cLoad, zLoad]);\r\n      result.depthValues = new Float32Array(zbuffer.getMappedRange().slice());\r\n      zbuffer.unmap();\r\n    } else {\r\n      await cLoad;\r\n    }\r\n    /* eslint-enable no-undef */\r\n\r\n    result.colorValues = new Uint32Array(colorBuffer.getMappedRange().slice());\r\n    colorBuffer.unmap();\r\n    result.generateSelection = (fx1, fy1, fx2, fy2) => generateSelectionWithData(result, fx1, fy1, fx2, fy2);\r\n    return result;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  // WebGPURenderWindow: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _Core_HardwareSelector_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues);\r\n  model._selectionPass = _HardwareSelectionPass_js__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, [\'_WebGPURenderWindow\']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.moveToProtected(publicAPI, model, [\'WebGPURenderWindow\']);\r\n\r\n  // Object methods\r\n  vtkWebGPUHardwareSelector(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, \'vtkWebGPUHardwareSelector\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUHardwareSelector$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/HardwareSelector.js?')},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/IndexBuffer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUIndexBuffer$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _BufferManager_Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BufferManager/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager/Constants.js\");\n/* harmony import */ var _Core_Property_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/Property.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Property.js\");\n/* harmony import */ var _Buffer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Buffer.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Buffer.js\");\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  Representation\r\n} = _Core_Property_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\r\nconst {\r\n  PrimitiveTypes\r\n} = _BufferManager_Constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\n\r\n// Simulate a small map of pointId to flatId for a cell. The original code\r\n// used a map and was 2.6x slower (4.7 to 1.9 seconds). Using two fixed\r\n// length arrays with a count is so much faster even with the required for\r\n// loops and if statements. This only works as we know the usage is\r\n// restricted to clear(), set() get() and has() so the count is always\r\n// incrmenting except for clear where it goes back to 0. Performance\r\n// improvement is probably due to this appoach not hitting the heap but wow\r\n// it is so much faster. Code that adds to these vectors checks against 9 to\r\n// make sure there is room. Switching to test against vec.length -1 results\r\n// in a small performance hit, so if you change 10, search for 9 in this\r\n// small class and change those as well.\r\nclass _LimitedMap {\r\n  constructor() {\r\n    this.keys = new Uint32Array(10);\r\n    this.values = new Uint32Array(10);\r\n    this.count = 0;\r\n  }\r\n  clear() {\r\n    this.count = 0;\r\n  }\r\n  has(key) {\r\n    for (let i = 0; i < this.count; i++) {\r\n      if (this.keys[i] === key) {\r\n        return true;\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n  get(key) {\r\n    for (let i = 0; i < this.count; i++) {\r\n      if (this.keys[i] === key) {\r\n        return this.values[i];\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n  set(key, value) {\r\n    if (this.count < 9) {\r\n      this.keys[this.count] = key;\r\n      this.values[this.count++] = value;\r\n    }\r\n  }\r\n}\r\nfunction getPrimitiveName(primType) {\r\n  switch (primType) {\r\n    case PrimitiveTypes.Points:\r\n      return 'points';\r\n    case PrimitiveTypes.Lines:\r\n      return 'lines';\r\n    case PrimitiveTypes.Triangles:\r\n    case PrimitiveTypes.TriangleEdges:\r\n      return 'polys';\r\n    case PrimitiveTypes.TriangleStripEdges:\r\n    case PrimitiveTypes.TriangleStrips:\r\n      return 'strips';\r\n    default:\r\n      return '';\r\n  }\r\n}\r\nfunction _getOrAddFlatId(state, ptId, cellId) {\r\n  let flatId = state.pointIdToFlatId[ptId];\r\n  if (flatId < 0) {\r\n    flatId = state.flatId;\r\n    state.pointIdToFlatId[ptId] = flatId;\r\n    state.flatIdToPointId[state.flatId] = ptId;\r\n    state.flatIdToCellId[state.flatId] = cellId;\r\n    state.flatId++;\r\n  }\r\n  return flatId;\r\n}\r\nfunction fillCell(ptIds, cellId, state) {\r\n  const numPtIds = ptIds.length;\r\n  // are any points already marked for this cell? If so use that as the provoking point\r\n  for (let ptIdx = 0; ptIdx < numPtIds; ptIdx++) {\r\n    let ptId = ptIds[ptIdx];\r\n    if (state.cellProvokedMap.has(ptId)) {\r\n      state.ibo[state.iboId++] = state.cellProvokedMap.get(ptId);\r\n\r\n      // insert remaining ptIds (they do not need to provoke)\r\n      for (let ptIdx2 = ptIdx + 1; ptIdx2 < ptIdx + numPtIds; ptIdx2++) {\r\n        ptId = ptIds[ptIdx2 % numPtIds];\r\n        const flatId = _getOrAddFlatId(state, ptId, cellId);\r\n        // add to ibo\r\n        state.ibo[state.iboId++] = flatId;\r\n      }\r\n      // all done now\r\n      return;\r\n    }\r\n  }\r\n\r\n  // else have any of the points not been used yet? (not in provokedPointIds)\r\n  for (let ptIdx = 0; ptIdx < numPtIds; ptIdx++) {\r\n    let ptId = ptIds[ptIdx];\r\n    if (!state.provokedPointIds[ptId]) {\r\n      let flatId = _getOrAddFlatId(state, ptId, cellId);\r\n      // mark provoking and add to ibo\r\n      state.provokedPointIds[ptId] = 1;\r\n      state.cellProvokedMap.set(ptId, flatId);\r\n      // when provoking always set the cellId as an original non-provoking value\r\n      // will have been stored and we need to overwrite that\r\n      state.flatIdToCellId[flatId] = cellId;\r\n      state.ibo[state.iboId++] = flatId;\r\n\r\n      // insert remaining ptIds (they do not need to provoke)\r\n      for (let ptIdx2 = ptIdx + 1; ptIdx2 < ptIdx + numPtIds; ptIdx2++) {\r\n        ptId = ptIds[ptIdx2 % numPtIds];\r\n        flatId = _getOrAddFlatId(state, ptId, cellId);\r\n        // add to ibo\r\n        state.ibo[state.iboId++] = flatId;\r\n      }\r\n      // all done now\r\n      return;\r\n    }\r\n  }\r\n\r\n  // if we got here then none of the ptIds could be used to provoke\r\n  // so just duplicate the first one\r\n  let ptId = ptIds[0];\r\n  let flatId = state.flatId;\r\n  state.cellProvokedMap.set(ptId, flatId);\r\n  state.flatIdToPointId[state.flatId] = ptId;\r\n  state.flatIdToCellId[state.flatId] = cellId;\r\n  state.flatId++;\r\n\r\n  // add to ibo\r\n  state.ibo[state.iboId++] = flatId;\r\n\r\n  // insert remaining ptIds (they do not need to provoke)\r\n  for (let ptIdx2 = 1; ptIdx2 < numPtIds; ptIdx2++) {\r\n    ptId = ptIds[ptIdx2];\r\n    flatId = _getOrAddFlatId(state, ptId, cellId);\r\n    // add to ibo\r\n    state.ibo[state.iboId++] = flatId;\r\n  }\r\n}\r\nfunction countCell(ptIds, cellId, state) {\r\n  const numPtIds = ptIds.length;\r\n  state.iboSize += numPtIds;\r\n\r\n  // are any points already marked for this cell? If so use that as the provoking point\r\n  for (let ptIdx = 0; ptIdx < numPtIds; ptIdx++) {\r\n    const ptId = ptIds[ptIdx];\r\n    if (state.cellProvokedMap.has(ptId)) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  // else have any of the points not been used yet? (not in provokedPointIds)\r\n  for (let ptIdx = 0; ptIdx < numPtIds; ptIdx++) {\r\n    const ptId = ptIds[ptIdx];\r\n    if (!state.provokedPointIds[ptId]) {\r\n      state.provokedPointIds[ptId] = 1;\r\n      state.cellProvokedMap.set(ptId, 1);\r\n      return;\r\n    }\r\n  }\r\n  // if we got here then none of the ptIds could be used to provoke\r\n  state.cellProvokedMap.set(ptIds[0], 1);\r\n  state.extraPoints++;\r\n}\r\nlet processCell;\r\nconst _single = new Uint32Array(1);\r\nconst _double = new Uint32Array(2);\r\nconst _triple = new Uint32Array(3);\r\nconst _indexCellBuilders = {\r\n  // easy, every input point becomes an output point\r\n  anythingToPoints(numPoints, cellPts, offset, cellId, state) {\r\n    for (let i = 0; i < numPoints; ++i) {\r\n      _single[0] = cellPts[offset + i];\r\n      processCell(_single, cellId, state);\r\n    }\r\n  },\r\n  linesToWireframe(numPoints, cellPts, offset, cellId, state) {\r\n    // for lines we add a bunch of segments\r\n    for (let i = 0; i < numPoints - 1; ++i) {\r\n      _double[0] = cellPts[offset + i];\r\n      _double[1] = cellPts[offset + i + 1];\r\n      processCell(_double, cellId, state);\r\n    }\r\n  },\r\n  polysToWireframe(numPoints, cellPts, offset, cellId, state) {\r\n    // for polys we add a bunch of segments and close it\r\n    if (numPoints > 2) {\r\n      for (let i = 0; i < numPoints; ++i) {\r\n        _double[0] = cellPts[offset + i];\r\n        _double[1] = cellPts[offset + (i + 1) % numPoints];\r\n        processCell(_double, cellId, state);\r\n      }\r\n    }\r\n  },\r\n  stripsToWireframe(numPoints, cellPts, offset, cellId, state) {\r\n    if (numPoints > 2) {\r\n      // for strips we add a bunch of segments and close it\r\n      for (let i = 0; i < numPoints - 1; ++i) {\r\n        _double[0] = cellPts[offset + i];\r\n        _double[1] = cellPts[offset + i + 1];\r\n        processCell(_double, cellId, state);\r\n      }\r\n      for (let i = 0; i < numPoints - 2; i++) {\r\n        _double[0] = cellPts[offset + i];\r\n        _double[1] = cellPts[offset + i + 2];\r\n        processCell(_double, cellId, state);\r\n      }\r\n    }\r\n  },\r\n  polysToSurface(npts, cellPts, offset, cellId, state) {\r\n    for (let i = 0; i < npts - 2; i++) {\r\n      _triple[0] = cellPts[offset];\r\n      _triple[1] = cellPts[offset + i + 1];\r\n      _triple[2] = cellPts[offset + i + 2];\r\n      processCell(_triple, cellId, state);\r\n    }\r\n  },\r\n  stripsToSurface(npts, cellPts, offset, cellId, state) {\r\n    for (let i = 0; i < npts - 2; i++) {\r\n      _triple[0] = cellPts[offset + i];\r\n      _triple[1] = cellPts[offset + i + 1 + i % 2];\r\n      _triple[2] = cellPts[offset + i + 1 + (i + 1) % 2];\r\n      processCell(_triple, cellId, state);\r\n    }\r\n  }\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUIndexBufferManager methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUIndexBuffer(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUIndexBuffer');\r\n  publicAPI.buildIndexBuffer = req => {\r\n    const cellArray = req.cells;\r\n    const primitiveType = req.primitiveType;\r\n    const representation = req.representation;\r\n    const cellOffset = req.cellOffset;\r\n    const array = cellArray.getData();\r\n    const cellArraySize = array.length;\r\n    const inRepName = getPrimitiveName(primitiveType);\r\n    const numPts = req.numberOfPoints;\r\n    const state = {\r\n      provokedPointIds: new Uint8Array(numPts),\r\n      // size is good\r\n      extraPoints: 0,\r\n      iboSize: 0,\r\n      flatId: 0,\r\n      iboId: 0,\r\n      cellProvokedMap: new _LimitedMap()\r\n    };\r\n    let func = null;\r\n    if (representation === Representation.POINTS || primitiveType === PrimitiveTypes.Points) {\r\n      func = _indexCellBuilders.anythingToPoints;\r\n    } else if (representation === Representation.WIREFRAME || primitiveType === PrimitiveTypes.Lines) {\r\n      func = _indexCellBuilders[`${inRepName}ToWireframe`];\r\n    } else {\r\n      func = _indexCellBuilders[`${inRepName}ToSurface`];\r\n    }\r\n\r\n    // first we count how many extra provoking points we need\r\n    processCell = countCell;\r\n    let cellId = cellOffset || 0;\r\n    for (let cellArrayIndex = 0; cellArrayIndex < cellArraySize;) {\r\n      state.cellProvokedMap.clear();\r\n      func(array[cellArrayIndex], array, cellArrayIndex + 1, cellId, state);\r\n      cellArrayIndex += array[cellArrayIndex] + 1;\r\n      cellId++;\r\n    }\r\n\r\n    // then we allocate the remaining structures\r\n    // (we pick the best size to save space and transfer costs)\r\n    if (numPts <= 0xffff) {\r\n      state.flatIdToPointId = new Uint16Array(numPts + state.extraPoints);\r\n    } else {\r\n      state.flatIdToPointId = new Uint32Array(numPts + state.extraPoints);\r\n    }\r\n    if (numPts + state.extraPoints < 0x8fff) {\r\n      state.pointIdToFlatId = new Int16Array(numPts);\r\n    } else {\r\n      state.pointIdToFlatId = new Int32Array(numPts);\r\n    }\r\n    if (numPts + state.extraPoints <= 0xffff) {\r\n      state.ibo = new Uint16Array(state.iboSize);\r\n      req.format = 'uint16';\r\n    } else {\r\n      state.ibo = new Uint32Array(state.iboSize);\r\n      req.format = 'uint32';\r\n    }\r\n    if (cellId <= 0xffff) {\r\n      state.flatIdToCellId = new Uint16Array(numPts + state.extraPoints);\r\n    } else {\r\n      state.flatIdToCellId = new Uint32Array(numPts + state.extraPoints);\r\n    }\r\n    state.pointIdToFlatId.fill(-1);\r\n    state.provokedPointIds.fill(0);\r\n\r\n    // and fill them in\r\n    processCell = fillCell;\r\n    cellId = cellOffset || 0;\r\n    for (let cellArrayIndex = 0; cellArrayIndex < cellArraySize;) {\r\n      state.cellProvokedMap.clear();\r\n      func(array[cellArrayIndex], array, cellArrayIndex + 1, cellId, state);\r\n      cellArrayIndex += array[cellArrayIndex] + 1;\r\n      cellId++;\r\n    }\r\n    delete state.provokedPointIds;\r\n    delete state.pointIdToFlatId;\r\n\r\n    // store the results we need\r\n    req.nativeArray = state.ibo;\r\n    model.flatIdToPointId = state.flatIdToPointId;\r\n    model.flatIdToCellId = state.flatIdToCellId;\r\n    model.flatSize = state.flatId;\r\n    model.indexCount = state.iboId;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  flatIdToPointId: null,\r\n  flatIdToCellId: null,\r\n  flatSize: 0,\r\n  indexCount: 0\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _Buffer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].extend(publicAPI, model, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['flatIdToPointId', 'flatIdToCellId', 'flatSize', 'indexCount']);\r\n  vtkWebGPUIndexBuffer(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUIndexBuffer$1 = {\r\n  newInstance,\r\n  extend,\r\n  ..._BufferManager_Constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/IndexBuffer.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/OpaquePass.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUOpaquePass$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _RenderEncoder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RenderEncoder.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/RenderEncoder.js\");\n/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Texture.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Texture.js\");\n/* harmony import */ var _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../SceneGraph/RenderPass.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js\");\n\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUOpaquePass(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUOpaquePass');\r\n\r\n  // this pass implements a forward rendering pipeline\r\n  // if both volumes and opaque geometry are present\r\n  // it will mix the two together by capturing a zbuffer\r\n  // first\r\n  publicAPI.traverse = (renNode, viewNode) => {\r\n    if (model.deleted) {\r\n      return;\r\n    }\r\n\r\n    // we just render our delegates in order\r\n    model._currentParent = viewNode;\r\n    const device = viewNode.getDevice();\r\n    if (!model.renderEncoder) {\r\n      publicAPI.createRenderEncoder();\r\n      model.colorTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance({\r\n        label: 'opaquePassColor'\r\n      });\r\n      model.colorTexture.create(device, {\r\n        width: viewNode.getCanvas().width,\r\n        height: viewNode.getCanvas().height,\r\n        format: 'rgba16float',\r\n        /* eslint-disable no-undef */\r\n        /* eslint-disable no-bitwise */\r\n        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC\r\n      });\r\n      const ctView = model.colorTexture.createView('opaquePassColorTexture');\r\n      model.renderEncoder.setColorTextureView(0, ctView);\r\n      model.depthFormat = 'depth32float';\r\n      model.depthTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance({\r\n        label: 'opaquePassDepth'\r\n      });\r\n      model.depthTexture.create(device, {\r\n        width: viewNode.getCanvas().width,\r\n        height: viewNode.getCanvas().height,\r\n        format: model.depthFormat,\r\n        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC\r\n      });\r\n      const dView = model.depthTexture.createView('opaquePassDepthTexture');\r\n      model.renderEncoder.setDepthTextureView(dView);\r\n    } else {\r\n      model.colorTexture.resize(viewNode.getCanvas().width, viewNode.getCanvas().height);\r\n      model.depthTexture.resize(viewNode.getCanvas().width, viewNode.getCanvas().height);\r\n    }\r\n    model.renderEncoder.attachTextureViews();\r\n    publicAPI.setCurrentOperation('opaquePass');\r\n    renNode.setRenderEncoder(model.renderEncoder);\r\n    renNode.traverse(publicAPI);\r\n  };\r\n  publicAPI.getColorTextureView = () => model.renderEncoder.getColorTextureViews()[0];\r\n  publicAPI.getDepthTextureView = () => model.renderEncoder.getDepthTextureView();\r\n  publicAPI.createRenderEncoder = () => {\r\n    model.renderEncoder = _RenderEncoder_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance({\r\n      label: 'OpaquePass'\r\n    });\r\n    // default settings are fine for this\r\n    model.renderEncoder.setPipelineHash('op');\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  renderEncoder: null,\r\n  colorTexture: null,\r\n  depthTexture: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].extend(publicAPI, model, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['colorTexture', 'depthTexture']);\r\n\r\n  // Object methods\r\n  vtkWebGPUOpaquePass(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkWebGPUOpaquePass');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUOpaquePass$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/OpaquePass.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/OrderIndependentTranslucentPass.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUOrderIndepenentTranslucentPass),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Texture.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Texture.js\");\n/* harmony import */ var _RenderEncoder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RenderEncoder.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/RenderEncoder.js\");\n/* harmony import */ var _ShaderCache_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ShaderCache.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderCache.js\");\n/* harmony import */ var _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../SceneGraph/RenderPass.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js\");\n/* harmony import */ var _FullScreenQuad_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./FullScreenQuad.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/FullScreenQuad.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst oitpFragTemplate = `\r\n//VTK::Mapper::Dec\r\n\r\n//VTK::TCoord::Dec\r\n\r\n//VTK::RenderEncoder::Dec\r\n\r\n//VTK::IOStructs::Dec\r\n\r\n@fragment\r\nfn main(\r\n//VTK::IOStructs::Input\r\n)\r\n//VTK::IOStructs::Output\r\n{\r\n  var output: fragmentOutput;\r\n\r\n  var tcoord: vec2<i32> = vec2<i32>(i32(input.fragPos.x), i32(input.fragPos.y));\r\n  var reveal: f32 = textureLoad(oitpAccumTexture, tcoord, 0).r;\r\n  if (reveal == 1.0) { discard; }\r\n  var tcolor: vec4<f32> = textureLoad(oitpColorTexture, tcoord, 0);\r\n  var total: f32 = max(tcolor.a, 0.01);\r\n  var computedColor: vec4<f32> = vec4<f32>(tcolor.r/total, tcolor.g/total, tcolor.b/total, 1.0 - reveal);\r\n\r\n  //VTK::RenderEncoder::Impl\r\n  return output;\r\n}\r\n`;\r\nfunction vtkWebGPUOrderIndependentTranslucentPass(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUOrderIndependentTranslucentPass');\r\n\r\n  // this pass implements a forward rendering pipeline\r\n  // if both volumes and opaque geometry are present\r\n  // it will mix the two together by capturing a zbuffer\r\n  // first\r\n  publicAPI.traverse = (renNode, viewNode) => {\r\n    if (model.deleted) {\r\n      return;\r\n    }\r\n\r\n    // we just render our delegates in order\r\n    model._currentParent = viewNode;\r\n    const device = viewNode.getDevice();\r\n    if (!model.translucentRenderEncoder) {\r\n      publicAPI.createRenderEncoder();\r\n      publicAPI.createFinalEncoder();\r\n      model.translucentColorTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance({\r\n        label: 'translucentPassColor'\r\n      });\r\n      model.translucentColorTexture.create(device, {\r\n        width: viewNode.getCanvas().width,\r\n        height: viewNode.getCanvas().height,\r\n        format: 'rgba16float',\r\n        /* eslint-disable no-undef */\r\n        /* eslint-disable no-bitwise */\r\n        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING\r\n      });\r\n      const v1 = model.translucentColorTexture.createView('oitpColorTexture');\r\n      model.translucentRenderEncoder.setColorTextureView(0, v1);\r\n      model.translucentAccumulateTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance({\r\n        label: 'translucentPassAccumulate'\r\n      });\r\n      model.translucentAccumulateTexture.create(device, {\r\n        width: viewNode.getCanvas().width,\r\n        height: viewNode.getCanvas().height,\r\n        format: 'r16float',\r\n        /* eslint-disable no-undef */\r\n        /* eslint-disable no-bitwise */\r\n        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING\r\n      });\r\n      const v2 = model.translucentAccumulateTexture.createView('oitpAccumTexture');\r\n      model.translucentRenderEncoder.setColorTextureView(1, v2);\r\n      model.fullScreenQuad = _FullScreenQuad_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance();\r\n      model.fullScreenQuad.setDevice(viewNode.getDevice());\r\n      model.fullScreenQuad.setPipelineHash('oitpfsq');\r\n      model.fullScreenQuad.setTextureViews(model.translucentRenderEncoder.getColorTextureViews());\r\n      model.fullScreenQuad.setFragmentShaderTemplate(oitpFragTemplate);\r\n    } else {\r\n      model.translucentColorTexture.resizeToMatch(model.colorTextureView.getTexture());\r\n      model.translucentAccumulateTexture.resizeToMatch(model.colorTextureView.getTexture());\r\n    }\r\n    model.translucentRenderEncoder.setDepthTextureView(model.depthTextureView);\r\n    model.translucentRenderEncoder.attachTextureViews();\r\n    publicAPI.setCurrentOperation('translucentPass');\r\n    renNode.setRenderEncoder(model.translucentRenderEncoder);\r\n    renNode.traverse(publicAPI);\r\n    publicAPI.finalPass(viewNode, renNode);\r\n  };\r\n  publicAPI.finalPass = (viewNode, renNode) => {\r\n    model.translucentFinalEncoder.setColorTextureView(0, model.colorTextureView);\r\n    model.translucentFinalEncoder.attachTextureViews();\r\n    model.translucentFinalEncoder.begin(viewNode.getCommandEncoder());\r\n    renNode.scissorAndViewport(model.translucentFinalEncoder);\r\n    model.fullScreenQuad.prepareAndDraw(model.translucentFinalEncoder);\r\n    model.translucentFinalEncoder.end();\r\n  };\r\n  publicAPI.getTextures = () => [model.translucentColorTexture, model.translucentAccumulateTexture];\r\n  publicAPI.createRenderEncoder = () => {\r\n    model.translucentRenderEncoder = _RenderEncoder_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance({\r\n      label: 'translucentRender'\r\n    });\r\n    const rDesc = model.translucentRenderEncoder.getDescription();\r\n    rDesc.colorAttachments = [{\r\n      view: undefined,\r\n      clearValue: [0.0, 0.0, 0.0, 0.0],\r\n      loadOp: 'clear',\r\n      storeOp: 'store'\r\n    }, {\r\n      view: undefined,\r\n      clearValue: [1.0, 0.0, 0.0, 0.0],\r\n      loadOp: 'clear',\r\n      storeOp: 'store'\r\n    }];\r\n    rDesc.depthStencilAttachment = {\r\n      view: undefined,\r\n      depthLoadOp: 'load',\r\n      depthStoreOp: 'store'\r\n    };\r\n    model.translucentRenderEncoder.setReplaceShaderCodeFunction(pipeline => {\r\n      const fDesc = pipeline.getShaderDescription('fragment');\r\n      fDesc.addOutput('vec4<f32>', 'outColor');\r\n      fDesc.addOutput('f32', 'outAccum');\r\n      fDesc.addBuiltinInput('vec4<f32>', '@builtin(position) fragPos');\r\n      let code = fDesc.getCode();\r\n      code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].substitute(code, '//VTK::RenderEncoder::Impl', [\r\n      // very simple depth weighting in w z ranges from 1.0 near to 0.0\r\n      'var w: f32 = computedColor.a * pow(0.1 + input.fragPos.z, 2.0);', 'output.outColor = vec4<f32>(computedColor.rgb*w, w);', 'output.outAccum = computedColor.a;']).result;\r\n      fDesc.setCode(code);\r\n    });\r\n    model.translucentRenderEncoder.setPipelineHash('oitpr');\r\n    model.translucentRenderEncoder.setPipelineSettings({\r\n      primitive: {\r\n        cullMode: 'none'\r\n      },\r\n      depthStencil: {\r\n        depthWriteEnabled: false,\r\n        depthCompare: 'greater',\r\n        format: 'depth32float'\r\n      },\r\n      fragment: {\r\n        targets: [{\r\n          format: 'rgba16float',\r\n          blend: {\r\n            color: {\r\n              srcFactor: 'one',\r\n              dstFactor: 'one'\r\n            },\r\n            alpha: {\r\n              srcfactor: 'one',\r\n              dstFactor: 'one'\r\n            }\r\n          }\r\n        }, {\r\n          format: 'r16float',\r\n          blend: {\r\n            color: {\r\n              srcFactor: 'zero',\r\n              dstFactor: 'one-minus-src'\r\n            },\r\n            alpha: {\r\n              srcfactor: 'one',\r\n              dstFactor: 'one-minus-src-alpha'\r\n            }\r\n          }\r\n        }]\r\n      }\r\n    });\r\n  };\r\n  publicAPI.createFinalEncoder = () => {\r\n    model.translucentFinalEncoder = _RenderEncoder_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance({\r\n      label: 'translucentFinal'\r\n    });\r\n    model.translucentFinalEncoder.setDescription({\r\n      colorAttachments: [{\r\n        view: null,\r\n        loadOp: 'load',\r\n        storeOp: 'store'\r\n      }]\r\n    });\r\n    model.translucentFinalEncoder.setReplaceShaderCodeFunction(pipeline => {\r\n      const fDesc = pipeline.getShaderDescription('fragment');\r\n      fDesc.addOutput('vec4<f32>', 'outColor');\r\n      fDesc.addBuiltinInput('vec4<f32>', '@builtin(position) fragPos');\r\n      let code = fDesc.getCode();\r\n      code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].substitute(code, '//VTK::RenderEncoder::Impl', ['output.outColor = vec4<f32>(computedColor.rgb, computedColor.a);']).result;\r\n      fDesc.setCode(code);\r\n    });\r\n    model.translucentFinalEncoder.setPipelineHash('oitpf');\r\n    model.translucentFinalEncoder.setPipelineSettings({\r\n      primitive: {\r\n        cullMode: 'none'\r\n      },\r\n      fragment: {\r\n        targets: [{\r\n          format: 'rgba16float',\r\n          blend: {\r\n            color: {\r\n              srcFactor: 'src-alpha',\r\n              dstFactor: 'one-minus-src-alpha'\r\n            },\r\n            alpha: {\r\n              srcfactor: 'one',\r\n              dstFactor: 'one-minus-src-alpha'\r\n            }\r\n          }\r\n        }]\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  colorTextureView: null,\r\n  depthTextureView: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].extend(publicAPI, model, initialValues);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['colorTextureView', 'depthTextureView']);\r\n\r\n  // Object methods\r\n  vtkWebGPUOrderIndependentTranslucentPass(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkWebGPUOrderIndependentTranslucentPass');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUOrderIndepenentTranslucentPass = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/OrderIndependentTranslucentPass.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Pipeline.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUPipeline$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUPipeline methods\r\n// ----------------------------------------------------------------------------\r\nfunction vtkWebGPUPipeline(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUPipeline');\r\n  publicAPI.getShaderDescriptions = () => model.shaderDescriptions;\r\n  publicAPI.initialize = (device, hash) => {\r\n    // start with the renderencoder settings\r\n    model.pipelineDescription = model.renderEncoder.getPipelineSettings();\r\n    model.pipelineDescription.primitive.topology = model.topology;\r\n    model.pipelineDescription.vertex = model.vertexState;\r\n    model.pipelineDescription.label = hash;\r\n\r\n    // add in bind group layouts\r\n    const bindGroupLayouts = [];\r\n    for (let i = 0; i < model.layouts.length; i++) {\r\n      bindGroupLayouts.push(model.layouts[i].layout);\r\n    }\r\n    model.pipelineLayout = device.getHandle().createPipelineLayout({\r\n      bindGroupLayouts\r\n    });\r\n    model.pipelineDescription.layout = model.pipelineLayout;\r\n    for (let i = 0; i < model.shaderDescriptions.length; i++) {\r\n      const sd = model.shaderDescriptions[i];\r\n      const sm = device.getShaderModule(sd);\r\n      if (sd.getType() === 'vertex') {\r\n        model.pipelineDescription.vertex.module = sm.getHandle();\r\n        model.pipelineDescription.vertex.entryPoint = 'main';\r\n      }\r\n      if (sd.getType() === 'fragment') {\r\n        model.pipelineDescription.fragment.module = sm.getHandle();\r\n        model.pipelineDescription.fragment.entryPoint = 'main';\r\n      }\r\n    }\r\n    model.handle = device.getHandle().createRenderPipeline(model.pipelineDescription);\r\n  };\r\n  publicAPI.getShaderDescription = stype => {\r\n    for (let i = 0; i < model.shaderDescriptions.length; i++) {\r\n      if (model.shaderDescriptions[i].getType() === stype) return model.shaderDescriptions[i];\r\n    }\r\n    return null;\r\n  };\r\n  publicAPI.addBindGroupLayout = bindGroup => {\r\n    if (!bindGroup) {\r\n      return;\r\n    }\r\n    model.layouts.push({\r\n      layout: bindGroup.getBindGroupLayout(model.device),\r\n      label: bindGroup.getLabel()\r\n    });\r\n  };\r\n  publicAPI.getBindGroupLayout = idx => model.layouts[idx].layout;\r\n  publicAPI.getBindGroupLayoutCount = llabel => {\r\n    for (let i = 0; i < model.layouts.length; i++) {\r\n      if (model.layouts[i].label === llabel) {\r\n        return i;\r\n      }\r\n    }\r\n    return 0;\r\n  };\r\n  publicAPI.bindVertexInput = (renderEncoder, vInput) => {\r\n    vInput.bindBuffers(renderEncoder);\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\nconst DEFAULT_VALUES = {\r\n  handle: null,\r\n  layouts: null,\r\n  renderEncoder: null,\r\n  shaderDescriptions: null,\r\n  vertexState: null,\r\n  topology: null,\r\n  pipelineDescription: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.o)(publicAPI, model);\r\n  model.layouts = [];\r\n  model.shaderDescriptions = [];\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.g)(publicAPI, model, ['handle', 'pipelineDescription']);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.e)(publicAPI, model, ['device', 'renderEncoder', 'topology', 'vertexState']);\r\n\r\n  // For more macro methods, see \"Sources/macros.js\"\r\n  // Object specific methods\r\n  vtkWebGPUPipeline(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, 'vtkWebGPUPipeline');\r\n\r\n// ----------------------------------------------------------------------------\r\nvar vtkWebGPUPipeline$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/Pipeline.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/PixelSpaceCallbackMapper.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ index),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/ViewNodeFactory.js");\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUPixelSpaceCallbackMapper methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUPixelSpaceCallbackMapper(publicAPI, model) {\r\n  model.classHierarchy.push(\'vtkWebGPUPixelSpaceCallbackMapper\');\r\n  publicAPI.opaquePass = (prepass, renderPass) => {\r\n    model.WebGPURenderer = publicAPI.getFirstAncestorOfType(\'vtkWebGPURenderer\');\r\n    model.WebGPURenderWindow = model.WebGPURenderer.getParent();\r\n    const aspectRatio = model.WebGPURenderer.getAspectRatio();\r\n    const camera = model.WebGPURenderer ? model.WebGPURenderer.getRenderable().getActiveCamera() : null;\r\n    const tsize = model.WebGPURenderer.getTiledSizeAndOrigin();\r\n    const texels = null;\r\n    if (model.renderable.getUseZValues()) ;\r\n    model.renderable.invokeCallback(model.renderable.getInputData(), camera, aspectRatio, tsize, texels);\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues);\r\n\r\n  // Object methods\r\n  vtkWebGPUPixelSpaceCallbackMapper(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, \'vtkWebGPUPixelSpaceCallbackMapper\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar index = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to WebGPU backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_2__.registerOverride)(\'vtkPixelSpaceCallbackMapper\', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/PixelSpaceCallbackMapper.js?')},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/PolyDataMapper.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ vtkWebGPUPolyDataMapper$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _BufferManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BufferManager.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager.js");\n/* harmony import */ var _CellArrayMapper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CellArrayMapper.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/CellArrayMapper.js");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/ViewNodeFactory.js");\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  PrimitiveTypes\r\n} = _BufferManager_js__WEBPACK_IMPORTED_MODULE_1__["default"];\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUPolyDataMapper methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUPolyDataMapper(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkWebGPUPolyDataMapper\');\r\n  publicAPI.createCellArrayMapper = () => _CellArrayMapper_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      model.WebGPUActor = publicAPI.getFirstAncestorOfType(\'vtkWebGPUActor\');\r\n      if (!model.renderable.getStatic()) {\r\n        model.renderable.update();\r\n      }\r\n      const poly = model.renderable.getInputData();\r\n      model.renderable.mapScalars(poly, 1.0);\r\n      publicAPI.updateCellArrayMappers(poly);\r\n    }\r\n  };\r\n  publicAPI.updateCellArrayMappers = poly => {\r\n    const prims = [poly.getVerts(), poly.getLines(), poly.getPolys(), poly.getStrips()];\r\n\r\n    // we instantiate a cell array mapper for each cellArray that has cells\r\n    // and they handle the rendering of that cell array\r\n    const cellMappers = [];\r\n    let cellOffset = 0;\r\n    for (let i = PrimitiveTypes.Points; i <= PrimitiveTypes.Triangles; i++) {\r\n      if (prims[i].getNumberOfValues() > 0) {\r\n        if (!model.primitives[i]) {\r\n          model.primitives[i] = publicAPI.createCellArrayMapper();\r\n        }\r\n        const cellMapper = model.primitives[i];\r\n        cellMapper.setCellArray(prims[i]);\r\n        cellMapper.setCurrentInput(poly);\r\n        cellMapper.setCellOffset(cellOffset);\r\n        cellMapper.setPrimitiveType(i);\r\n        cellMapper.setRenderable(model.renderable);\r\n        cellOffset += prims[i].getNumberOfCells();\r\n        cellMappers.push(cellMapper);\r\n      } else {\r\n        model.primitives[i] = null;\r\n      }\r\n    }\r\n    if (model.WebGPUActor.getRenderable().getProperty().getEdgeVisibility()) {\r\n      for (let i = PrimitiveTypes.TriangleEdges; i <= PrimitiveTypes.TriangleStripEdges; i++) {\r\n        if (prims[i - 2].getNumberOfValues() > 0) {\r\n          if (!model.primitives[i]) {\r\n            model.primitives[i] = publicAPI.createCellArrayMapper();\r\n          }\r\n          const cellMapper = model.primitives[i];\r\n          cellMapper.setCellArray(prims[i - 2]);\r\n          cellMapper.setCurrentInput(poly);\r\n          cellMapper.setCellOffset(model.primitives[i - 2].getCellOffset());\r\n          cellMapper.setPrimitiveType(i);\r\n          cellMapper.setRenderable(model.renderable);\r\n          cellMappers.push(cellMapper);\r\n        } else {\r\n          model.primitives[i] = null;\r\n        }\r\n      }\r\n    }\r\n    publicAPI.prepareNodes();\r\n    publicAPI.addMissingChildren(cellMappers);\r\n    publicAPI.removeUnusedNodes();\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  primitives: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_3__["default"].extend(publicAPI, model, initialValues);\r\n  model.primitives = [];\r\n\r\n  // Object methods\r\n  vtkWebGPUPolyDataMapper(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, \'vtkWebGPUPolyDataMapper\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUPolyDataMapper$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to WebGPU backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_4__.registerOverride)(\'vtkMapper\', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/PolyDataMapper.js?')},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/PolyDataMapper2D.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ index),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _BufferManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BufferManager.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager.js");\n/* harmony import */ var _CellArrayMapper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CellArrayMapper.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/CellArrayMapper.js");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/ViewNodeFactory.js");\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  PrimitiveTypes\r\n} = _BufferManager_js__WEBPACK_IMPORTED_MODULE_1__["default"];\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUPolyDataMapper methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUPolyDataMapper2D(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkWebGPUPolyDataMapper2D\');\r\n  publicAPI.createCellArrayMapper = () => _CellArrayMapper_js__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance();\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      model.WebGPUActor = publicAPI.getFirstAncestorOfType(\'vtkWebGPUActor2D\');\r\n      if (!model.renderable.getStatic()) {\r\n        model.renderable.update();\r\n      }\r\n      const poly = model.renderable.getInputData();\r\n      model.renderable.mapScalars(poly, 1.0);\r\n      publicAPI.updateCellArrayMappers(poly);\r\n    }\r\n  };\r\n  publicAPI.updateCellArrayMappers = poly => {\r\n    const prims = [poly.getVerts(), poly.getLines(), poly.getPolys(), poly.getStrips()];\r\n\r\n    // we instantiate a cell array mapper for each cellArray that has cells\r\n    // and they handle the rendering of that cell array\r\n    const cellMappers = [];\r\n    let cellOffset = 0;\r\n    for (let i = PrimitiveTypes.Points; i <= PrimitiveTypes.Triangles; i++) {\r\n      if (prims[i].getNumberOfValues() > 0) {\r\n        if (!model.primitives[i]) {\r\n          model.primitives[i] = publicAPI.createCellArrayMapper();\r\n        }\r\n        const cellMapper = model.primitives[i];\r\n        cellMapper.setCellArray(prims[i]);\r\n        cellMapper.setCurrentInput(poly);\r\n        cellMapper.setCellOffset(cellOffset);\r\n        cellMapper.setPrimitiveType(i);\r\n        cellMapper.setRenderable(model.renderable);\r\n        cellMapper.setIs2D(true);\r\n        cellOffset += prims[i].getNumberOfCells();\r\n        cellMappers.push(cellMapper);\r\n      } else {\r\n        model.primitives[i] = null;\r\n      }\r\n    }\r\n    publicAPI.prepareNodes();\r\n    publicAPI.addMissingChildren(cellMappers);\r\n    publicAPI.removeUnusedNodes();\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction defaultValues(initialValues) {\r\n  return {\r\n    primitives: [],\r\n    ...initialValues\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, defaultValues(initialValues));\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_3__["default"].extend(publicAPI, model, initialValues);\r\n  model.primitives = [];\r\n\r\n  // Object methods\r\n  vtkWebGPUPolyDataMapper2D(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, \'vtkWebGPUPolyDataMapper2D\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar index = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to WebGPU backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_4__.registerOverride)(\'vtkMapper2D\', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/PolyDataMapper2D.js?')},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/RenderEncoder.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPURenderEncoder$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _ShaderCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ShaderCache.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderCache.js\");\n\r\n\r\n\r\n// methods we forward to the handle\r\nconst forwarded = ['setBindGroup', 'setIndexBuffer', 'setVertexBuffer', 'draw', 'drawIndexed'];\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPURenderEncoder methods\r\n// ----------------------------------------------------------------------------\r\nfunction vtkWebGPURenderEncoder(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPURenderEncoder');\r\n  publicAPI.begin = encoder => {\r\n    model.drawCallbacks = [];\r\n    model.handle = encoder.beginRenderPass(model.description);\r\n    if (model.label) {\r\n      model.handle.pushDebugGroup(model.label);\r\n    }\r\n  };\r\n  publicAPI.end = () => {\r\n    // loop over registered pipelines and their callbacks\r\n    for (let i = 0; i < model.drawCallbacks.length; i++) {\r\n      const pStruct = model.drawCallbacks[i];\r\n      const pl = pStruct.pipeline;\r\n      publicAPI.setPipeline(pl);\r\n      for (let cb = 0; cb < pStruct.callbacks.length; cb++) {\r\n        pStruct.callbacks[cb](publicAPI);\r\n      }\r\n    }\r\n    if (model.label) {\r\n      model.handle.popDebugGroup();\r\n    }\r\n    model.handle.end();\r\n    model.boundPipeline = null;\r\n  };\r\n  publicAPI.setPipeline = pl => {\r\n    if (model.boundPipeline === pl) {\r\n      return;\r\n    }\r\n    model.handle.setPipeline(pl.getHandle());\r\n    const pd = pl.getPipelineDescription();\r\n\r\n    // check attachment state\r\n    if (model.colorTextureViews.length !== pd.fragment.targets.length) {\r\n      console.log(`mismatched attachment counts on pipeline ${pd.fragment.targets.length} while encoder has ${model.colorTextureViews.length}`);\r\n      console.trace();\r\n    } else {\r\n      for (let i = 0; i < model.colorTextureViews.length; i++) {\r\n        const fmt = model.colorTextureViews[i].getTexture()?.getFormat();\r\n        if (fmt && fmt !== pd.fragment.targets[i].format) {\r\n          console.log(`mismatched attachments for attachment ${i} on pipeline ${pd.fragment.targets[i].format} while encoder has ${fmt}`);\r\n          console.trace();\r\n        }\r\n      }\r\n    }\r\n\r\n    // check depth buffer\r\n    if (!model.depthTextureView !== !('depthStencil' in pd)) {\r\n      console.log('mismatched depth attachments');\r\n      console.trace();\r\n    } else if (model.depthTextureView) {\r\n      const dfmt = model.depthTextureView.getTexture()?.getFormat();\r\n      if (dfmt && dfmt !== pd.depthStencil.format) {\r\n        console.log(`mismatched depth attachments on pipeline ${pd.depthStencil.format} while encoder has ${dfmt}`);\r\n        console.trace();\r\n      }\r\n    }\r\n    model.boundPipeline = pl;\r\n  };\r\n  publicAPI.replaceShaderCode = pipeline => {\r\n    model.replaceShaderCodeFunction(pipeline);\r\n  };\r\n  publicAPI.setColorTextureView = (idx, view) => {\r\n    if (model.colorTextureViews[idx] === view) {\r\n      return;\r\n    }\r\n    model.colorTextureViews[idx] = view;\r\n  };\r\n  publicAPI.activateBindGroup = bg => {\r\n    const device = model.boundPipeline.getDevice();\r\n    const midx = model.boundPipeline.getBindGroupLayoutCount(bg.getLabel());\r\n    model.handle.setBindGroup(midx, bg.getBindGroup(device));\r\n    // verify bind group layout matches\r\n    const bgl1 = device.getBindGroupLayoutDescription(bg.getBindGroupLayout(device));\r\n    const bgl2 = device.getBindGroupLayoutDescription(model.boundPipeline.getBindGroupLayout(midx));\r\n    if (bgl1 !== bgl2) {\r\n      console.log(`renderEncoder ${model.pipelineHash} mismatched bind group layouts bind group has\\n${bgl1}\\n versus pipeline\\n${bgl2}\\n`);\r\n      console.trace();\r\n    }\r\n  };\r\n  publicAPI.attachTextureViews = () => {\r\n    // for each texture create a view if we do not already have one\r\n    for (let i = 0; i < model.colorTextureViews.length; i++) {\r\n      if (!model.description.colorAttachments[i]) {\r\n        model.description.colorAttachments[i] = {\r\n          view: model.colorTextureViews[i].getHandle()\r\n        };\r\n      } else {\r\n        model.description.colorAttachments[i].view = model.colorTextureViews[i].getHandle();\r\n      }\r\n    }\r\n    if (model.depthTextureView) {\r\n      model.description.depthStencilAttachment.view = model.depthTextureView.getHandle();\r\n    }\r\n  };\r\n\r\n  // register pipeline callbacks from a mapper\r\n  publicAPI.registerDrawCallback = (pipeline, cb) => {\r\n    // if there is a matching pipeline just add the cb\r\n    for (let i = 0; i < model.drawCallbacks.length; i++) {\r\n      if (model.drawCallbacks[i].pipeline === pipeline) {\r\n        model.drawCallbacks[i].callbacks.push(cb);\r\n        return;\r\n      }\r\n    }\r\n    model.drawCallbacks.push({\r\n      pipeline,\r\n      callbacks: [cb]\r\n    });\r\n  };\r\n\r\n  // simple forwarders\r\n  for (let i = 0; i < forwarded.length; i++) {\r\n    publicAPI[forwarded[i]] = function () {\r\n      return model.handle[forwarded[i]](...arguments);\r\n    };\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\nconst DEFAULT_VALUES = {\r\n  description: null,\r\n  handle: null,\r\n  boundPipeline: null,\r\n  pipelineHash: null,\r\n  pipelineSettings: null,\r\n  replaceShaderCodeFunction: null,\r\n  depthTextureView: null,\r\n  label: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.o)(publicAPI, model);\r\n  model.description = {\r\n    colorAttachments: [{\r\n      view: undefined,\r\n      loadOp: 'load',\r\n      storeOp: 'store'\r\n    }],\r\n    depthStencilAttachment: {\r\n      view: undefined,\r\n      depthLoadOp: 'clear',\r\n      depthClearValue: 0.0,\r\n      depthStoreOp: 'store'\r\n    }\r\n  };\r\n\r\n  // default shader code just writes out the computedColor\r\n  model.replaceShaderCodeFunction = pipeline => {\r\n    const fDesc = pipeline.getShaderDescription('fragment');\r\n    fDesc.addOutput('vec4<f32>', 'outColor');\r\n    let code = fDesc.getCode();\r\n    code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].substitute(code, '//VTK::RenderEncoder::Impl', ['output.outColor = computedColor;']).result;\r\n    fDesc.setCode(code);\r\n  };\r\n\r\n  // default pipeline settings\r\n  model.pipelineSettings = {\r\n    primitive: {\r\n      cullMode: 'none'\r\n    },\r\n    depthStencil: {\r\n      depthWriteEnabled: true,\r\n      depthCompare: 'greater-equal',\r\n      format: 'depth32float'\r\n    },\r\n    fragment: {\r\n      targets: [{\r\n        format: 'rgba16float',\r\n        blend: {\r\n          color: {\r\n            srcFactor: 'src-alpha',\r\n            dstFactor: 'one-minus-src-alpha'\r\n          },\r\n          alpha: {\r\n            srcfactor: 'one',\r\n            dstFactor: 'one-minus-src-alpha'\r\n          }\r\n        }\r\n      }]\r\n    }\r\n  };\r\n  model.colorTextureViews = [];\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.g)(publicAPI, model, ['boundPipeline', 'colorTextureViews']);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.e)(publicAPI, model, ['depthTextureView', 'description', 'handle', 'label', 'pipelineHash', 'pipelineSettings', 'replaceShaderCodeFunction']);\r\n\r\n  // For more macro methods, see \"Sources/macros.js\"\r\n  // Object specific methods\r\n  vtkWebGPURenderEncoder(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, 'vtkWebGPURenderEncoder');\r\n\r\n// ----------------------------------------------------------------------------\r\nvar vtkWebGPURenderEncoder$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/RenderEncoder.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/RenderWindow.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkRenderWindow),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Core_RenderWindow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/RenderWindow.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/RenderWindow.js\");\n/* harmony import */ var _ForwardPass_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ForwardPass.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ForwardPass.js\");\n/* harmony import */ var _Buffer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Buffer.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Buffer.js\");\n/* harmony import */ var _Device_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Device.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Device.js\");\n/* harmony import */ var _HardwareSelector_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./HardwareSelector.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/HardwareSelector.js\");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ViewNodeFactory.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ViewNodeFactory.js\");\n/* harmony import */ var _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../SceneGraph/RenderPass.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js\");\n/* harmony import */ var _SceneGraph_RenderWindowViewNode_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../SceneGraph/RenderWindowViewNode.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderWindowViewNode.js\");\n/* harmony import */ var _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../Common/Core/HalfFloat.js */ \"./node_modules/@kitware/vtk.js/Common/Core/HalfFloat.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\n// const IS_CHROME = navigator.userAgent.indexOf('Chrome') !== -1;\r\nconst SCREENSHOT_PLACEHOLDER = {\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  width: '100%',\r\n  height: '100%'\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPURenderWindow methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPURenderWindow(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPURenderWindow');\r\n  publicAPI.getViewNodeFactory = () => model.myFactory;\r\n\r\n  // Auto update style\r\n  const previousSize = [0, 0];\r\n  function updateWindow() {\r\n    // Canvas size\r\n    if (model.renderable) {\r\n      if (model.size[0] !== previousSize[0] || model.size[1] !== previousSize[1]) {\r\n        previousSize[0] = model.size[0];\r\n        previousSize[1] = model.size[1];\r\n        model.canvas.setAttribute('width', model.size[0]);\r\n        model.canvas.setAttribute('height', model.size[1]);\r\n        publicAPI.recreateSwapChain();\r\n      }\r\n    }\r\n\r\n    // ImageStream size\r\n    if (model.viewStream) {\r\n      // If same size that's a NoOp\r\n      model.viewStream.setSize(model.size[0], model.size[1]);\r\n    }\r\n\r\n    // Offscreen ?\r\n    model.canvas.style.display = model.useOffScreen ? 'none' : 'block';\r\n\r\n    // Cursor type\r\n    if (model.el) {\r\n      model.el.style.cursor = model.cursorVisibility ? model.cursor : 'none';\r\n    }\r\n\r\n    // Invalidate cached DOM container size\r\n    model.containerSize = null;\r\n  }\r\n  publicAPI.onModified(updateWindow);\r\n  publicAPI.recreateSwapChain = () => {\r\n    if (model.context) {\r\n      model.context.unconfigure();\r\n      model.presentationFormat = navigator.gpu.getPreferredCanvasFormat(model.adapter);\r\n\r\n      /* eslint-disable no-undef */\r\n      /* eslint-disable no-bitwise */\r\n      model.context.configure({\r\n        device: model.device.getHandle(),\r\n        format: model.presentationFormat,\r\n        alphaMode: 'premultiplied',\r\n        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,\r\n        width: model.size[0],\r\n        height: model.size[1]\r\n      });\r\n      model._configured = true;\r\n    }\r\n  };\r\n  publicAPI.getCurrentTexture = () => model.context.getCurrentTexture();\r\n\r\n  // Builds myself.\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      if (!model.renderable) {\r\n        return;\r\n      }\r\n      publicAPI.prepareNodes();\r\n      publicAPI.addMissingNodes(model.renderable.getRenderersByReference());\r\n      publicAPI.removeUnusedNodes();\r\n      publicAPI.initialize();\r\n    } else if (model.initialized) {\r\n      if (!model._configured) {\r\n        publicAPI.recreateSwapChain();\r\n      }\r\n      model.commandEncoder = model.device.createCommandEncoder();\r\n    }\r\n  };\r\n\r\n  // publicAPI.traverseRenderers = (renPass) => {\r\n  //   // iterate over renderers\r\n  //   const numlayers = publicAPI.getRenderable().getNumberOfLayers();\r\n  //   const renderers = publicAPI.getChildren();\r\n  //   for (let i = 0; i < numlayers; i++) {\r\n  //     for (let index = 0; index < renderers.length; index++) {\r\n  //       const renNode = renderers[index];\r\n  //       const ren = publicAPI.getRenderable().getRenderers()[index];\r\n  //       if (ren.getDraw() && ren.getLayer() === i) {\r\n  //         renNode.traverse(renPass);\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  publicAPI.initialize = () => {\r\n    if (!model.initializing) {\r\n      model.initializing = true;\r\n      if (!navigator.gpu) {\r\n        vtkErrorMacro('WebGPU is not enabled.');\r\n        return;\r\n      }\r\n      publicAPI.create3DContextAsync().then(() => {\r\n        model.initialized = true;\r\n        if (model.deleted) {\r\n          return;\r\n        }\r\n        publicAPI.invokeInitialized();\r\n      });\r\n    }\r\n  };\r\n  publicAPI.setContainer = el => {\r\n    if (model.el && model.el !== el) {\r\n      if (model.canvas.parentNode !== model.el) {\r\n        vtkErrorMacro('Error: canvas parent node does not match container');\r\n      }\r\n\r\n      // Remove canvas from previous container\r\n      model.el.removeChild(model.canvas);\r\n\r\n      // If the renderer has previously added\r\n      // a background image, remove it from the DOM.\r\n      if (model.el.contains(model.bgImage)) {\r\n        model.el.removeChild(model.bgImage);\r\n      }\r\n    }\r\n    if (model.el !== el) {\r\n      model.el = el;\r\n      if (model.el) {\r\n        model.el.appendChild(model.canvas);\r\n\r\n        // If the renderer is set to use a background\r\n        // image, attach it to the DOM.\r\n        if (model.useBackgroundImage) {\r\n          model.el.appendChild(model.bgImage);\r\n        }\r\n      }\r\n\r\n      // Trigger modified()\r\n      publicAPI.modified();\r\n    }\r\n  };\r\n  publicAPI.getContainer = () => model.el;\r\n  publicAPI.getContainerSize = () => {\r\n    if (!model.containerSize && model.el) {\r\n      const {\r\n        width,\r\n        height\r\n      } = model.el.getBoundingClientRect();\r\n      model.containerSize = [width, height];\r\n    }\r\n    return model.containerSize || model.size;\r\n  };\r\n  publicAPI.getFramebufferSize = () => model.size;\r\n  publicAPI.create3DContextAsync = async () => {\r\n    // Get a GPU device to render with\r\n    model.adapter = await navigator.gpu.requestAdapter({\r\n      powerPreference: 'high-performance'\r\n    });\r\n    if (model.deleted) {\r\n      return;\r\n    }\r\n    // console.log([...model.adapter.features]);\r\n    model.device = _Device_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance();\r\n    model.device.initialize(await model.adapter.requestDevice());\r\n    if (model.deleted) {\r\n      model.device = null;\r\n      return;\r\n    }\r\n    // model.device.getHandle().lost.then((info) => {\r\n    //   console.log(`${info.message}`);\r\n    //   publicAPI.releaseGraphicsResources();\r\n    // });\r\n    model.context = model.canvas.getContext('webgpu');\r\n  };\r\n  publicAPI.releaseGraphicsResources = () => {\r\n    const rp = _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].newInstance();\r\n    rp.setCurrentOperation('Release');\r\n    rp.traverse(publicAPI, null);\r\n    model.adapter = null;\r\n    model.device = null;\r\n    model.context = null;\r\n    model.initialized = false;\r\n    model.initializing = false;\r\n  };\r\n  publicAPI.setBackgroundImage = img => {\r\n    model.bgImage.src = img.src;\r\n  };\r\n  publicAPI.setUseBackgroundImage = value => {\r\n    model.useBackgroundImage = value;\r\n\r\n    // Add or remove the background image from the\r\n    // DOM as specified.\r\n    if (model.useBackgroundImage && !model.el.contains(model.bgImage)) {\r\n      model.el.appendChild(model.bgImage);\r\n    } else if (!model.useBackgroundImage && model.el.contains(model.bgImage)) {\r\n      model.el.removeChild(model.bgImage);\r\n    }\r\n  };\r\n  async function getCanvasDataURL() {\r\n    let format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : model.imageFormat;\r\n    // Copy current canvas to not modify the original\r\n    const temporaryCanvas = document.createElement('canvas');\r\n    const temporaryContext = temporaryCanvas.getContext('2d');\r\n    temporaryCanvas.width = model.canvas.width;\r\n    temporaryCanvas.height = model.canvas.height;\r\n    const result = await publicAPI.getPixelsAsync();\r\n    const imageData = new ImageData(result.colorValues, result.width, result.height);\r\n    // temporaryCanvas.putImageData(imageData, 0, 0);\r\n    temporaryContext.putImageData(imageData, 0, 0);\r\n\r\n    // Get current client rect to place canvas\r\n    const mainBoundingClientRect = model.canvas.getBoundingClientRect();\r\n    const renderWindow = model.renderable;\r\n    const renderers = renderWindow.getRenderers();\r\n    renderers.forEach(renderer => {\r\n      const viewProps = renderer.getViewProps();\r\n      viewProps.forEach(viewProp => {\r\n        // Check if the prop has a container that should have canvas\r\n        if (viewProp.getContainer) {\r\n          const container = viewProp.getContainer();\r\n          const canvasList = container.getElementsByTagName('canvas');\r\n          // Go throughout all canvas and copy it into temporary main canvas\r\n          for (let i = 0; i < canvasList.length; i++) {\r\n            const currentCanvas = canvasList[i];\r\n            const boundingClientRect = currentCanvas.getBoundingClientRect();\r\n            const newXPosition = boundingClientRect.x - mainBoundingClientRect.x;\r\n            const newYPosition = boundingClientRect.y - mainBoundingClientRect.y;\r\n            temporaryContext.drawImage(currentCanvas, newXPosition, newYPosition);\r\n          }\r\n        }\r\n      });\r\n    });\r\n    const screenshot = temporaryCanvas.toDataURL(format);\r\n    temporaryCanvas.remove();\r\n    publicAPI.invokeImageReady(screenshot);\r\n  }\r\n  publicAPI.captureNextImage = function () {\r\n    let format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\r\n    let {\r\n      resetCamera = false,\r\n      size = null,\r\n      scale = 1\r\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    if (model.deleted) {\r\n      return null;\r\n    }\r\n    model.imageFormat = format;\r\n    const previous = model.notifyStartCaptureImage;\r\n    model.notifyStartCaptureImage = true;\r\n    model._screenshot = {\r\n      size: !!size || scale !== 1 ? size || model.size.map(val => val * scale) : null\r\n    };\r\n    return new Promise((resolve, reject) => {\r\n      const subscription = publicAPI.onImageReady(imageURL => {\r\n        if (model._screenshot.size === null) {\r\n          model.notifyStartCaptureImage = previous;\r\n          subscription.unsubscribe();\r\n          if (model._screenshot.placeHolder) {\r\n            // resize the main canvas back to its original size and show it\r\n            model.size = model._screenshot.originalSize;\r\n\r\n            // process the resize\r\n            publicAPI.modified();\r\n\r\n            // restore the saved camera parameters, if applicable\r\n            if (model._screenshot.cameras) {\r\n              model._screenshot.cameras.forEach(_ref => {\r\n                let {\r\n                  restoreParamsFn,\r\n                  arg\r\n                } = _ref;\r\n                return restoreParamsFn(arg);\r\n              });\r\n            }\r\n\r\n            // Trigger a render at the original size\r\n            publicAPI.traverseAllPasses();\r\n\r\n            // Remove and clean up the placeholder, revealing the original\r\n            model.el.removeChild(model._screenshot.placeHolder);\r\n            model._screenshot.placeHolder.remove();\r\n            model._screenshot = null;\r\n          }\r\n          resolve(imageURL);\r\n        } else {\r\n          // Create a placeholder image overlay while we resize and render\r\n          const tmpImg = document.createElement('img');\r\n          tmpImg.style = SCREENSHOT_PLACEHOLDER;\r\n          tmpImg.src = imageURL;\r\n          model._screenshot.placeHolder = model.el.appendChild(tmpImg);\r\n\r\n          // hide the main canvas\r\n          model.canvas.style.display = 'none';\r\n\r\n          // remember the main canvas original size, then resize it\r\n          model._screenshot.originalSize = model.size;\r\n          model.size = model._screenshot.size;\r\n          model._screenshot.size = null;\r\n\r\n          // process the resize\r\n          publicAPI.modified();\r\n          if (resetCamera) {\r\n            const isUserResetCamera = resetCamera !== true;\r\n\r\n            // If resetCamera was requested, we first save camera parameters\r\n            // from all the renderers, so we can restore them later\r\n            model._screenshot.cameras = model.renderable.getRenderers().map(renderer => {\r\n              const camera = renderer.getActiveCamera();\r\n              const params = camera.get('focalPoint', 'position', 'parallelScale');\r\n              return {\r\n                resetCameraArgs: isUserResetCamera ? {\r\n                  renderer\r\n                } : undefined,\r\n                resetCameraFn: isUserResetCamera ? resetCamera : renderer.resetCamera,\r\n                restoreParamsFn: camera.set,\r\n                // \"clone\" the params so we don't keep refs to properties\r\n                arg: JSON.parse(JSON.stringify(params))\r\n              };\r\n            });\r\n\r\n            // Perform the resetCamera() on each renderer only after capturing\r\n            // the params from all active cameras, in case there happen to be\r\n            // linked cameras among the renderers.\r\n            model._screenshot.cameras.forEach(_ref2 => {\r\n              let {\r\n                resetCameraFn,\r\n                resetCameraArgs\r\n              } = _ref2;\r\n              return resetCameraFn(resetCameraArgs);\r\n            });\r\n          }\r\n\r\n          // Trigger a render at the custom size\r\n          publicAPI.traverseAllPasses();\r\n        }\r\n      });\r\n    });\r\n  };\r\n  publicAPI.traverseAllPasses = () => {\r\n    if (model.deleted) {\r\n      return;\r\n    }\r\n    // if we are not initialized then we call initialize\r\n    // which is async so we will not actually get a render\r\n    // so we queue up another traverse for when we are initialized\r\n    if (!model.initialized) {\r\n      publicAPI.initialize();\r\n      const subscription = publicAPI.onInitialized(() => {\r\n        subscription.unsubscribe();\r\n        publicAPI.traverseAllPasses();\r\n      });\r\n    } else {\r\n      if (model.renderPasses) {\r\n        for (let index = 0; index < model.renderPasses.length; ++index) {\r\n          model.renderPasses[index].traverse(publicAPI, null);\r\n        }\r\n      }\r\n      if (model.commandEncoder) {\r\n        model.device.submitCommandEncoder(model.commandEncoder);\r\n        model.commandEncoder = null;\r\n        if (model.notifyStartCaptureImage) {\r\n          model.device.onSubmittedWorkDone().then(() => {\r\n            getCanvasDataURL();\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  publicAPI.setViewStream = stream => {\r\n    if (model.viewStream === stream) {\r\n      return false;\r\n    }\r\n    if (model.subscription) {\r\n      model.subscription.unsubscribe();\r\n      model.subscription = null;\r\n    }\r\n    model.viewStream = stream;\r\n    if (model.viewStream) {\r\n      // Force background to be transparent + render\r\n      const mainRenderer = model.renderable.getRenderers()[0];\r\n      mainRenderer.getBackgroundByReference()[3] = 0;\r\n\r\n      // Enable display of the background image\r\n      publicAPI.setUseBackgroundImage(true);\r\n\r\n      // Bind to remote stream\r\n      model.subscription = model.viewStream.onImageReady(e => publicAPI.setBackgroundImage(e.image));\r\n      model.viewStream.setSize(model.size[0], model.size[1]);\r\n      model.viewStream.invalidateCache();\r\n      model.viewStream.render();\r\n      publicAPI.modified();\r\n    }\r\n    return true;\r\n  };\r\n  publicAPI.getUniquePropID = () => model.nextPropID++;\r\n  publicAPI.getPropFromID = id => {\r\n    for (let i = 0; i < model.children.length; i++) {\r\n      const res = model.children[i].getPropFromID(id);\r\n      if (res !== null) {\r\n        return res;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n  publicAPI.getPixelsAsync = async () => {\r\n    const device = model.device;\r\n    const texture = model.renderPasses[0].getOpaquePass().getColorTexture();\r\n\r\n    // as this is async we really don't want to store things in\r\n    // the class as multiple calls may start before resolving\r\n    // so anything specific to this request gets put into the\r\n    // result object (by value in most cases)\r\n    const result = {\r\n      width: texture.getWidth(),\r\n      height: texture.getHeight()\r\n    };\r\n\r\n    // must be a multiple of 256 bytes, so 32 texels with rgba16\r\n    result.colorBufferWidth = 32 * Math.floor((result.width + 31) / 32);\r\n    result.colorBufferSizeInBytes = result.colorBufferWidth * result.height * 8;\r\n    const colorBuffer = _Buffer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance();\r\n    colorBuffer.setDevice(device);\r\n    /* eslint-disable no-bitwise */\r\n    /* eslint-disable no-undef */\r\n    colorBuffer.create(result.colorBufferSizeInBytes, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST);\r\n    /* eslint-enable no-bitwise */\r\n    /* eslint-enable no-undef */\r\n\r\n    const cmdEnc = model.device.createCommandEncoder();\r\n    cmdEnc.copyTextureToBuffer({\r\n      texture: texture.getHandle()\r\n    }, {\r\n      buffer: colorBuffer.getHandle(),\r\n      bytesPerRow: 8 * result.colorBufferWidth,\r\n      rowsPerImage: result.height\r\n    }, {\r\n      width: result.width,\r\n      height: result.height,\r\n      depthOrArrayLayers: 1\r\n    });\r\n    device.submitCommandEncoder(cmdEnc);\r\n\r\n    /* eslint-disable no-undef */\r\n    const cLoad = colorBuffer.mapAsync(GPUMapMode.READ);\r\n    await cLoad;\r\n    /* eslint-enable no-undef */\r\n\r\n    result.colorValues = new Uint16Array(colorBuffer.getMappedRange().slice());\r\n    colorBuffer.unmap();\r\n    // repack the array\r\n    const tmparray = new Uint8ClampedArray(result.height * result.width * 4);\r\n    for (let y = 0; y < result.height; y++) {\r\n      for (let x = 0; x < result.width; x++) {\r\n        const doffset = (y * result.width + x) * 4;\r\n        const soffset = (y * result.colorBufferWidth + x) * 4;\r\n        tmparray[doffset] = 255.0 * _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].fromHalf(result.colorValues[soffset]);\r\n        tmparray[doffset + 1] = 255.0 * _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].fromHalf(result.colorValues[soffset + 1]);\r\n        tmparray[doffset + 2] = 255.0 * _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].fromHalf(result.colorValues[soffset + 2]);\r\n        tmparray[doffset + 3] = 255.0 * _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].fromHalf(result.colorValues[soffset + 3]);\r\n      }\r\n    }\r\n    result.colorValues = tmparray;\r\n    return result;\r\n  };\r\n  publicAPI.createSelector = () => {\r\n    const ret = _HardwareSelector_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance();\r\n    ret.setWebGPURenderWindow(publicAPI);\r\n    return ret;\r\n  };\r\n  const superSetSize = publicAPI.setSize;\r\n  publicAPI.setSize = (width, height) => {\r\n    const modified = superSetSize(width, height);\r\n    if (modified) {\r\n      publicAPI.invokeWindowResizeEvent({\r\n        width,\r\n        height\r\n      });\r\n    }\r\n    return modified;\r\n  };\r\n  publicAPI.delete = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.chain(publicAPI.delete, publicAPI.setViewStream);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  initialized: false,\r\n  context: null,\r\n  adapter: null,\r\n  device: null,\r\n  canvas: null,\r\n  cursorVisibility: true,\r\n  cursor: 'pointer',\r\n  containerSize: null,\r\n  renderPasses: [],\r\n  notifyStartCaptureImage: false,\r\n  imageFormat: 'image/png',\r\n  useOffScreen: false,\r\n  useBackgroundImage: false,\r\n  nextPropID: 1,\r\n  xrSupported: false,\r\n  presentationFormat: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Create internal instances\r\n  model.canvas = document.createElement('canvas');\r\n  model.canvas.style.width = '100%';\r\n\r\n  // Create internal bgImage\r\n  model.bgImage = new Image();\r\n  model.bgImage.style.position = 'absolute';\r\n  model.bgImage.style.left = '0';\r\n  model.bgImage.style.top = '0';\r\n  model.bgImage.style.width = '100%';\r\n  model.bgImage.style.height = '100%';\r\n  model.bgImage.style.zIndex = '-1';\r\n\r\n  // Inheritance\r\n  _SceneGraph_RenderWindowViewNode_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].extend(publicAPI, model, initialValues);\r\n  model.myFactory = _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].newInstance();\r\n\r\n  // setup default forward pass rendering\r\n  model.renderPasses[0] = _ForwardPass_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance();\r\n  if (!model.selector) {\r\n    model.selector = _HardwareSelector_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance();\r\n    model.selector.setWebGPURenderWindow(publicAPI);\r\n  }\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.event(publicAPI, model, 'imageReady');\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.event(publicAPI, model, 'initialized');\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['commandEncoder', 'device', 'presentationFormat', 'useBackgroundImage', 'xrSupported']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['initialized', 'context', 'canvas', 'device', 'renderPasses', 'notifyStartCaptureImage', 'cursor', 'useOffScreen']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGetArray(publicAPI, model, ['size'], 2);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.event(publicAPI, model, 'windowResizeEvent');\r\n\r\n  // Object methods\r\n  vtkWebGPURenderWindow(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkWebGPURenderWindow');\r\n\r\n// ----------------------------------------------------------------------------\r\n// Register API specific RenderWindow implementation\r\n// ----------------------------------------------------------------------------\r\n\r\n(0,_Core_RenderWindow_js__WEBPACK_IMPORTED_MODULE_1__.registerViewConstructor)('WebGPU', newInstance);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkRenderWindow = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to WebGPU backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_6__.registerOverride)('vtkRenderWindow', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/RenderWindow.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Renderer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ index),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js\");\n/* harmony import */ var _BindGroup_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BindGroup.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/BindGroup.js\");\n/* harmony import */ var _FullScreenQuad_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./FullScreenQuad.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/FullScreenQuad.js\");\n/* harmony import */ var _StorageBuffer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./StorageBuffer.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/StorageBuffer.js\");\n/* harmony import */ var _UniformBuffer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./UniformBuffer.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/UniformBuffer.js\");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ViewNodeFactory.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ViewNodeFactory.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  vtkDebugMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.c;\r\nconst clearFragColorTemplate = `\r\n//VTK::Renderer::Dec\r\n\r\n//VTK::Mapper::Dec\r\n\r\n//VTK::TCoord::Dec\r\n\r\n//VTK::RenderEncoder::Dec\r\n\r\n//VTK::IOStructs::Dec\r\n\r\n@fragment\r\nfn main(\r\n//VTK::IOStructs::Input\r\n)\r\n//VTK::IOStructs::Output\r\n{\r\n  var output: fragmentOutput;\r\n\r\n  var computedColor: vec4<f32> = mapperUBO.BackgroundColor;\r\n\r\n  //VTK::RenderEncoder::Impl\r\n  return output;\r\n}\r\n`;\r\nconst clearFragTextureTemplate = `\r\nfn vecToRectCoord(dir: vec3<f32>) -> vec2<f32> {\r\n  var tau: f32 = 6.28318530718;\r\n  var pi: f32 = 3.14159265359;\r\n  var out: vec2<f32> = vec2<f32>(0.0);\r\n\r\n  out.x = atan2(dir.z, dir.x) / tau;\r\n  out.x += 0.5;\r\n\r\n  var phix: f32 = length(vec2(dir.x, dir.z));\r\n  out.y = atan2(dir.y, phix) / pi + 0.5;\r\n\r\n  return out;\r\n}\r\n\r\n//VTK::Renderer::Dec\r\n\r\n//VTK::Mapper::Dec\r\n\r\n//VTK::TCoord::Dec\r\n\r\n//VTK::RenderEncoder::Dec\r\n\r\n//VTK::IOStructs::Dec\r\n\r\n@fragment\r\nfn main(\r\n//VTK::IOStructs::Input\r\n)\r\n//VTK::IOStructs::Output\r\n{\r\n  var output: fragmentOutput;\r\n\r\n  var tcoord: vec4<f32> = vec4<f32>(input.vertexVC.xy, -1, 1);\r\n  var V: vec4<f32> = normalize(mapperUBO.FSQMatrix * tcoord); // vec2<f32>((input.tcoordVS.x - 0.5) * 2, -(input.tcoordVS.y - 0.5) * 2);\r\n  // textureSampleLevel gets rid of some ugly artifacts\r\n  var background = textureSampleLevel(EnvironmentTexture, EnvironmentTextureSampler, vecToRectCoord(V.xyz), 0.0);\r\n  var computedColor: vec4<f32> = vec4<f32>(background.rgb, 1);\r\n\r\n  //VTK::RenderEncoder::Impl\r\n  return output;\r\n}\r\n`;\r\nconst _fsqClearMat4 = new Float64Array(16);\r\nconst _tNormalMat4 = new Float64Array(16);\r\n\r\n// Light type index gives either 0, 1, or 2 which indicates what type of light there is.\r\n// While technically, there are only spot and directional lights, within the CellArrayMapper\r\n// there is a third, positional light. It is technically just a variant of a spot light with\r\n// a cone angle of 90 or above, however certain calculations can be skipped if it is treated\r\n// separately.\r\n// The mappings are shown below:\r\n// 0 -> positional light\r\n// 1 -> directional light\r\n// 2 -> spot light\r\nfunction getLightTypeIndex(light) {\r\n  if (light.getPositional()) {\r\n    if (light.getConeAngle() >= 90) {\r\n      return 0;\r\n    }\r\n    return 2;\r\n  }\r\n  return 1;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPURenderer methods\r\n// ----------------------------------------------------------------------------\r\n/* eslint-disable no-bitwise */\r\n\r\nfunction vtkWebGPURenderer(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPURenderer');\r\n\r\n  // Builds myself.\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      if (!model.renderable) {\r\n        return;\r\n      }\r\n      model.camera = model.renderable.getActiveCamera();\r\n      publicAPI.updateLights();\r\n      publicAPI.prepareNodes();\r\n      publicAPI.addMissingNode(model.camera);\r\n      publicAPI.addMissingNodes(model.renderable.getViewPropsWithNestedProps());\r\n      publicAPI.removeUnusedNodes();\r\n      model.webgpuCamera = publicAPI.getViewNodeFor(model.camera);\r\n      publicAPI.updateStabilizedMatrix();\r\n    }\r\n  };\r\n  publicAPI.updateStabilizedMatrix = () => {\r\n    // This method is designed to help with floating point\r\n    // issues when rendering datasets that push the limits of\r\n    // resolutions on float.\r\n    //\r\n    // One of the most common cases is when the dataset is located far\r\n    // away from the origin relative to the clipping range we are looking\r\n    // at. For that case we want to perform the floating point sensitive\r\n    // multiplications on the CPU in double. To this end we want the\r\n    // vertex rendering ops to look something like\r\n    //\r\n    // Compute shifted points and load those into the VBO\r\n    // pointCoordsSC = WorldToStabilizedMatrix * pointCoords;\r\n    //\r\n    // In the vertex shader do the following\r\n    // positionVC = StabilizedToDeviceMatrix * ModelToStabilizedMatrix*vertexIn;\r\n    //\r\n    // We use two matrices because it is expensive to change the\r\n    // WorldToStabilized matrix as we have to reupload all pointCoords\r\n    // So that matrix (MCSCMatrix) is fairly static, the Stabilized to\r\n    // Device matrix is the one that gets updated every time the camera\r\n    // changes.\r\n    //\r\n    // The basic idea is that we should translate the data so that\r\n    // when the center of the view frustum moves a lot\r\n    // we recenter it. The center of the view frustum is roughly\r\n    // camPos + dirOfProj*(far + near)*0.5\r\n    const clipRange = model.camera.getClippingRange();\r\n    const pos = model.camera.getPositionByReference();\r\n    const dop = model.camera.getDirectionOfProjectionByReference();\r\n    const center = [];\r\n    const offset = [];\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_8__.scale(offset, dop, 0.5 * (clipRange[0] + clipRange[1]));\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_8__.add(center, pos, offset);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_8__.sub(offset, center, model.stabilizedCenter);\r\n    const length = gl_matrix__WEBPACK_IMPORTED_MODULE_8__.len(offset);\r\n    if (length / (clipRange[1] - clipRange[0]) > model.recenterThreshold) {\r\n      model.stabilizedCenter = center;\r\n      model.stabilizedTime.modified();\r\n    }\r\n  };\r\n  publicAPI.updateLights = () => {\r\n    let count = 0;\r\n    const lights = model.renderable.getLightsByReference();\r\n    for (let index = 0; index < lights.length; ++index) {\r\n      if (lights[index].getSwitch() > 0.0) {\r\n        count++;\r\n      }\r\n    }\r\n    if (!count) {\r\n      vtkDebugMacro('No lights are on, creating one.');\r\n      model.renderable.createLight();\r\n    }\r\n    return count;\r\n  };\r\n  publicAPI.updateUBO = () => {\r\n    // make sure the data is up to date\r\n    // has the camera changed?\r\n    const utime = model.UBO.getSendTime();\r\n    if (model._parent.getMTime() > utime || publicAPI.getMTime() > utime || model.camera.getMTime() > utime || model.renderable.getMTime() > utime) {\r\n      const keyMats = model.webgpuCamera.getKeyMatrices(publicAPI);\r\n      model.UBO.setArray('WCVCMatrix', keyMats.wcvc);\r\n      model.UBO.setArray('SCPCMatrix', keyMats.scpc);\r\n      model.UBO.setArray('PCSCMatrix', keyMats.pcsc);\r\n      model.UBO.setArray('SCVCMatrix', keyMats.scvc);\r\n      model.UBO.setArray('VCPCMatrix', keyMats.vcpc);\r\n      model.UBO.setArray('WCVCNormals', keyMats.normalMatrix);\r\n      model.UBO.setValue('LightCount', model.renderable.getLights().length);\r\n      model.UBO.setValue('MaxEnvironmentMipLevel', model.renderable.getEnvironmentTexture()?.getMipLevel());\r\n      model.UBO.setValue('BackgroundDiffuseStrength', model.renderable.getEnvironmentTextureDiffuseStrength());\r\n      model.UBO.setValue('BackgroundSpecularStrength', model.renderable.getEnvironmentTextureSpecularStrength());\r\n      const tsize = publicAPI.getYInvertedTiledSizeAndOrigin();\r\n      model.UBO.setArray('viewportSize', [tsize.usize, tsize.vsize]);\r\n      model.UBO.setValue('cameraParallel', model.camera.getParallelProjection());\r\n      const device = model._parent.getDevice();\r\n      model.UBO.sendIfNeeded(device);\r\n    }\r\n  };\r\n  publicAPI.updateSSBO = () => {\r\n    const lights = model.renderable.getLights();\r\n    const keyMats = model.webgpuCamera.getKeyMatrices(publicAPI);\r\n    let lightTimeString = `${model.renderable.getMTime()}`;\r\n    for (let i = 0; i < lights.length; i++) {\r\n      lightTimeString += lights[i].getMTime();\r\n    }\r\n    if (lightTimeString !== model.lightTimeString) {\r\n      const lightPosArray = new Float32Array(lights.length * 4);\r\n      const lightDirArray = new Float32Array(lights.length * 4);\r\n      const lightColorArray = new Float32Array(lights.length * 4);\r\n      const lightTypeArray = new Float32Array(lights.length * 4);\r\n      for (let i = 0; i < lights.length; i++) {\r\n        const offset = i * 4;\r\n\r\n        // Position\r\n        const viewCoordinatePosition = lights[i].getPosition();\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_8__.transformMat4(viewCoordinatePosition, viewCoordinatePosition, keyMats.wcvc);\r\n        // viewCoordinatePosition\r\n        lightPosArray[offset] = viewCoordinatePosition[0];\r\n        lightPosArray[offset + 1] = viewCoordinatePosition[1];\r\n        lightPosArray[offset + 2] = viewCoordinatePosition[2];\r\n        lightPosArray[offset + 3] = 0;\r\n\r\n        // Rotation (All are negative to correct for -Z being forward)\r\n        lightDirArray[offset] = -lights[i].getDirection()[0];\r\n        lightDirArray[offset + 1] = -lights[i].getDirection()[1];\r\n        lightDirArray[offset + 2] = -lights[i].getDirection()[2];\r\n        lightDirArray[offset + 3] = 0;\r\n\r\n        // Color\r\n        lightColorArray[offset] = lights[i].getColor()[0];\r\n        lightColorArray[offset + 1] = lights[i].getColor()[1];\r\n        lightColorArray[offset + 2] = lights[i].getColor()[2];\r\n        lightColorArray[offset + 3] = lights[i].getIntensity() * 5; // arbitrary multiplication to fix the dullness of low value PBR lights\r\n\r\n        // Type\r\n        lightTypeArray[offset] = getLightTypeIndex(lights[i]); // Type\r\n        lightTypeArray[offset + 1] = Math.cos((0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.r)(lights[i].getConeAngle())); // Inner Phi, should probably do some check on these to make sure they dont excede limits\r\n        lightTypeArray[offset + 2] = Math.cos((0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_1__.r)(lights[i].getConeAngle() + lights[i].getConeFalloff())); // Outer Phi\r\n        lightTypeArray[offset + 3] = 0;\r\n      }\r\n\r\n      // Im not sure how correct this is, but this is what the example does\r\n      // https://kitware.github.io/vtk-js/api/Rendering_WebGPU_VolumePassFSQ.html\r\n      model.SSBO.clearData();\r\n      model.SSBO.setNumberOfInstances(lights.length);\r\n      model.SSBO.addEntry('LightPos', 'vec4<f32>'); // Position\r\n      model.SSBO.addEntry('LightDir', 'vec4<f32>'); // Direction\r\n      model.SSBO.addEntry('LightColor', 'vec4<f32>'); // Color (r, g, b, intensity)\r\n      model.SSBO.addEntry('LightData', 'vec4<f32>'); // Other data (type, etc, etc, etc)\r\n\r\n      model.SSBO.setAllInstancesFromArray('LightPos', lightPosArray);\r\n      model.SSBO.setAllInstancesFromArray('LightDir', lightDirArray);\r\n      model.SSBO.setAllInstancesFromArray('LightColor', lightColorArray);\r\n      model.SSBO.setAllInstancesFromArray('LightData', lightTypeArray);\r\n      const device = model._parent.getDevice();\r\n      model.SSBO.send(device);\r\n    }\r\n    model.lightTimeString = lightTimeString;\r\n  };\r\n  publicAPI.scissorAndViewport = encoder => {\r\n    const tsize = publicAPI.getYInvertedTiledSizeAndOrigin();\r\n    encoder.getHandle().setViewport(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize, 0.0, 1.0);\r\n    // set scissor\r\n    encoder.getHandle().setScissorRect(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize);\r\n  };\r\n  publicAPI.bindUBO = renderEncoder => {\r\n    renderEncoder.activateBindGroup(model.bindGroup);\r\n  };\r\n\r\n  // Renders myself\r\n  publicAPI.opaquePass = prepass => {\r\n    if (prepass) {\r\n      model.renderEncoder.begin(model._parent.getCommandEncoder());\r\n      publicAPI.updateUBO();\r\n      publicAPI.updateSSBO();\r\n    } else {\r\n      publicAPI.scissorAndViewport(model.renderEncoder);\r\n      publicAPI.clear();\r\n      model.renderEncoder.end();\r\n    }\r\n  };\r\n  publicAPI.clear = () => {\r\n    if (model.renderable.getTransparent() || model.suppressClear) {\r\n      return;\r\n    }\r\n    const device = model._parent.getDevice();\r\n    // Normal Solid Color\r\n    if (!model.clearFSQ) {\r\n      model.clearFSQ = _FullScreenQuad_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance();\r\n      model.clearFSQ.setDevice(device);\r\n      model.clearFSQ.setPipelineHash('clearfsq');\r\n      model.clearFSQ.setFragmentShaderTemplate(clearFragColorTemplate);\r\n      const ubo = _UniformBuffer_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].newInstance({\r\n        label: 'mapperUBO'\r\n      });\r\n      ubo.addEntry('FSQMatrix', 'mat4x4<f32>');\r\n      ubo.addEntry('BackgroundColor', 'vec4<f32>');\r\n      model.clearFSQ.setUBO(ubo);\r\n      model.backgroundTex = model.renderable.getEnvironmentTexture();\r\n    }\r\n    // Textured Background\r\n    if (model.clearFSQ.getPipelineHash() !== 'clearfsqwithtexture' && model.renderable.getUseEnvironmentTextureAsBackground() && model.backgroundTex?.getImageLoaded()) {\r\n      model.clearFSQ.setFragmentShaderTemplate(clearFragTextureTemplate);\r\n      const ubo = _UniformBuffer_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].newInstance({\r\n        label: 'mapperUBO'\r\n      });\r\n      ubo.addEntry('FSQMatrix', 'mat4x4<f32>');\r\n      ubo.addEntry('BackgroundColor', 'vec4<f32>');\r\n      model.clearFSQ.setUBO(ubo);\r\n      const environmentTextureHash = device.getTextureManager().getTextureForVTKTexture(model.backgroundTex);\r\n      if (environmentTextureHash.getReady()) {\r\n        const tview = environmentTextureHash.createView(`EnvironmentTexture`);\r\n        model.clearFSQ.setTextureViews([tview]);\r\n        model.backgroundTexLoaded = true;\r\n        const interpolate = model.backgroundTex.getInterpolate() ? 'linear' : 'nearest';\r\n        tview.addSampler(device, {\r\n          addressModeU: 'repeat',\r\n          addressModeV: 'clamp-to-edge',\r\n          addressModeW: 'repeat',\r\n          minFilter: interpolate,\r\n          magFilter: interpolate,\r\n          mipmapFilter: 'linear'\r\n        });\r\n      }\r\n      model.clearFSQ.setPipelineHash('clearfsqwithtexture');\r\n    } else if (model.clearFSQ.getPipelineHash() === 'clearfsqwithtexture' && !model.renderable.getUseEnvironmentTextureAsBackground()) {\r\n      // In case the mode is changed at runtime\r\n      model.clearFSQ = _FullScreenQuad_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance();\r\n      model.clearFSQ.setDevice(device);\r\n      model.clearFSQ.setPipelineHash('clearfsq');\r\n      model.clearFSQ.setFragmentShaderTemplate(clearFragColorTemplate);\r\n      const ubo = _UniformBuffer_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].newInstance({\r\n        label: 'mapperUBO'\r\n      });\r\n      ubo.addEntry('FSQMatrix', 'mat4x4<f32>');\r\n      ubo.addEntry('BackgroundColor', 'vec4<f32>');\r\n      model.clearFSQ.setUBO(ubo);\r\n    }\r\n    const keyMats = model.webgpuCamera.getKeyMatrices(publicAPI);\r\n    const background = model.renderable.getBackgroundByReference();\r\n    model.clearFSQ.getUBO().setArray('BackgroundColor', background);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_9__.transpose(_tNormalMat4, keyMats.normalMatrix);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_9__.mul(_fsqClearMat4, keyMats.scvc, keyMats.pcsc);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_9__.mul(_fsqClearMat4, _tNormalMat4, _fsqClearMat4);\r\n    model.clearFSQ.getUBO().setArray('FSQMatrix', _fsqClearMat4);\r\n    model.clearFSQ.getUBO().sendIfNeeded(device);\r\n    model.clearFSQ.prepareAndDraw(model.renderEncoder);\r\n  };\r\n  publicAPI.translucentPass = prepass => {\r\n    if (prepass) {\r\n      model.renderEncoder.begin(model._parent.getCommandEncoder());\r\n    } else {\r\n      publicAPI.scissorAndViewport(model.renderEncoder);\r\n      model.renderEncoder.end();\r\n    }\r\n  };\r\n  publicAPI.volumeDepthRangePass = prepass => {\r\n    if (prepass) {\r\n      model.renderEncoder.begin(model._parent.getCommandEncoder());\r\n    } else {\r\n      publicAPI.scissorAndViewport(model.renderEncoder);\r\n      model.renderEncoder.end();\r\n    }\r\n  };\r\n  publicAPI.getAspectRatio = () => {\r\n    const size = model._parent.getSizeByReference();\r\n    const viewport = model.renderable.getViewportByReference();\r\n    return size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * size[1]);\r\n  };\r\n  publicAPI.convertToOpenGLDepth = val => model.webgpuCamera.convertToOpenGLDepth(val);\r\n  publicAPI.getYInvertedTiledSizeAndOrigin = () => {\r\n    const res = publicAPI.getTiledSizeAndOrigin();\r\n    const size = model._parent.getSizeByReference();\r\n    res.lowerLeftV = size[1] - res.vsize - res.lowerLeftV;\r\n    return res;\r\n  };\r\n  publicAPI.getTiledSizeAndOrigin = () => {\r\n    const vport = model.renderable.getViewportByReference();\r\n\r\n    // if there is no window assume 0 1\r\n    const tileViewPort = [0.0, 0.0, 1.0, 1.0];\r\n\r\n    // find the lower left corner of the viewport, taking into account the\r\n    // lower left boundary of this tile\r\n    const vpu = vport[0] - tileViewPort[0];\r\n    const vpv = vport[1] - tileViewPort[1];\r\n\r\n    // store the result as a pixel value\r\n    const ndvp = model._parent.normalizedDisplayToDisplay(vpu, vpv);\r\n    const lowerLeftU = Math.round(ndvp[0]);\r\n    const lowerLeftV = Math.round(ndvp[1]);\r\n\r\n    // find the upper right corner of the viewport, taking into account the\r\n    // lower left boundary of this tile\r\n    const vpu2 = vport[2] - tileViewPort[0];\r\n    const vpv2 = vport[3] - tileViewPort[1];\r\n    const ndvp2 = model._parent.normalizedDisplayToDisplay(vpu2, vpv2);\r\n\r\n    // now compute the size of the intersection of the viewport with the\r\n    // current tile\r\n    let usize = Math.round(ndvp2[0]) - lowerLeftU;\r\n    let vsize = Math.round(ndvp2[1]) - lowerLeftV;\r\n    if (usize < 0) {\r\n      usize = 0;\r\n    }\r\n    if (vsize < 0) {\r\n      vsize = 0;\r\n    }\r\n    return {\r\n      usize,\r\n      vsize,\r\n      lowerLeftU,\r\n      lowerLeftV\r\n    };\r\n  };\r\n  publicAPI.getPropFromID = id => {\r\n    for (let i = 0; i < model.children.length; i++) {\r\n      const res = model.children[i].getPropID ? model.children[i].getPropID() : -1;\r\n      if (res === id) {\r\n        return model.children[i];\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n  publicAPI.getStabilizedTime = () => model.stabilizedTime.getMTime();\r\n  publicAPI.releaseGraphicsResources = () => {\r\n    if (model.selector !== null) {\r\n      model.selector.releaseGraphicsResources();\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  bindGroup: null,\r\n  selector: null,\r\n  renderEncoder: null,\r\n  recenterThreshold: 20.0,\r\n  suppressClear: false,\r\n  stabilizedCenter: [0.0, 0.0, 0.0]\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(publicAPI, model, initialValues);\r\n\r\n  // UBO\r\n  model.UBO = _UniformBuffer_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].newInstance({\r\n    label: 'rendererUBO'\r\n  });\r\n  model.UBO.addEntry('WCVCMatrix', 'mat4x4<f32>');\r\n  model.UBO.addEntry('SCPCMatrix', 'mat4x4<f32>');\r\n  model.UBO.addEntry('PCSCMatrix', 'mat4x4<f32>');\r\n  model.UBO.addEntry('SCVCMatrix', 'mat4x4<f32>');\r\n  model.UBO.addEntry('VCPCMatrix', 'mat4x4<f32>');\r\n  model.UBO.addEntry('WCVCNormals', 'mat4x4<f32>');\r\n  model.UBO.addEntry('viewportSize', 'vec2<f32>');\r\n  model.UBO.addEntry('LightCount', 'i32');\r\n  model.UBO.addEntry('MaxEnvironmentMipLevel', 'f32');\r\n  model.UBO.addEntry('BackgroundDiffuseStrength', 'f32');\r\n  model.UBO.addEntry('BackgroundSpecularStrength', 'f32');\r\n  model.UBO.addEntry('cameraParallel', 'u32');\r\n\r\n  // SSBO (Light data)\r\n  model.SSBO = _StorageBuffer_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance({\r\n    label: 'rendererLightSSBO'\r\n  });\r\n  model.lightTimeString = '';\r\n  model.bindGroup = _BindGroup_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance({\r\n    label: 'rendererBG'\r\n  });\r\n  model.bindGroup.setBindables([model.UBO, model.SSBO]);\r\n  model.tmpMat4 = gl_matrix__WEBPACK_IMPORTED_MODULE_9__.identity(new Float64Array(16));\r\n  model.stabilizedTime = {};\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.o)(model.stabilizedTime, {\r\n    mtime: 0\r\n  });\r\n\r\n  // Build VTK API\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.g)(publicAPI, model, ['bindGroup', 'stabilizedTime']);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.k)(publicAPI, model, ['stabilizedCenter']);\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.e)(publicAPI, model, ['renderEncoder', 'selector', 'suppressClear', 'UBO']);\r\n\r\n  // Object methods\r\n  vtkWebGPURenderer(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, 'vtkWebGPURenderer');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar index = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to WebGPU backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_7__.registerOverride)('vtkRenderer', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/Renderer.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Sampler.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUSampler$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n\r\n\r\n/* eslint-disable no-bitwise */\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUSampler methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUSampler(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUSampler');\r\n  publicAPI.create = function (device) {\r\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    model.device = device;\r\n    model.options.addressModeU = options.addressModeU ? options.addressModeU : 'clamp-to-edge';\r\n    model.options.addressModeV = options.addressModeV ? options.addressModeV : 'clamp-to-edge';\r\n    model.options.addressModeW = options.addressModeW ? options.addressModeW : 'clamp-to-edge';\r\n    model.options.magFilter = options.magFilter ? options.magFilter : 'nearest';\r\n    model.options.minFilter = options.minFilter ? options.minFilter : 'nearest';\r\n    model.options.mipmapFilter = options.mipmapFilter ? options.mipmapFilter : 'nearest';\r\n    model.options.label = model.label;\r\n    model.handle = model.device.getHandle().createSampler(model.options);\r\n    model.bindGroupTime.modified();\r\n  };\r\n  publicAPI.getShaderCode = (binding, group) => {\r\n    const result = `@binding(${binding}) @group(${group}) var ${model.label}: sampler;`;\r\n    return result;\r\n  };\r\n  publicAPI.getBindGroupEntry = () => {\r\n    const foo = {\r\n      resource: model.handle\r\n    };\r\n    return foo;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  device: null,\r\n  handle: null,\r\n  label: null,\r\n  options: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Object methods\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  model.options = {};\r\n  model.bindGroupLayoutEntry = {\r\n    /* eslint-disable no-undef */\r\n    visibility: GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT,\r\n    /* eslint-enable no-undef */\r\n    sampler: {\r\n      // type: 'filtering',\r\n    }\r\n  };\r\n  model.bindGroupTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.bindGroupTime, {\r\n    mtime: 0\r\n  });\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['bindGroupTime', 'handle', 'options']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['bindGroupLayoutEntry', 'device', 'label']);\r\n  vtkWebGPUSampler(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUSampler$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/Sampler.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ScalarBarActor.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ index),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _Core_ScalarBarActor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/ScalarBarActor.js */ "./node_modules/@kitware/vtk.js/Rendering/Core/ScalarBarActor.js");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ "./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js");\n/* harmony import */ var _ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ViewNodeFactory.js */ "./node_modules/@kitware/vtk.js/Rendering/WebGPU/ViewNodeFactory.js");\n\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUScalarBarActor methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUScalarBarActor(publicAPI, model) {\r\n  model.classHierarchy.push(\'vtkWebGPUScalarBarActor\');\r\n\r\n  // Builds myself.\r\n  publicAPI.buildPass = prepass => {\r\n    if (prepass) {\r\n      model.WebGPURenderer = publicAPI.getFirstAncestorOfType(\'vtkWebGPURenderer\');\r\n      model.WebGPURenderWindow = model.WebGPURenderer.getParent();\r\n      if (!model.scalarBarActorHelper.getRenderable()) {\r\n        model.scalarBarActorHelper.setRenderable(model.renderable);\r\n      }\r\n      publicAPI.prepareNodes();\r\n      publicAPI.addMissingNode(model.scalarBarActorHelper.getBarActor());\r\n      publicAPI.addMissingNode(model.scalarBarActorHelper.getTmActor());\r\n      publicAPI.removeUnusedNodes();\r\n    }\r\n  };\r\n  publicAPI.opaquePass = (prepass, renderPass) => {\r\n    if (prepass) {\r\n      const camera = model.WebGPURenderer ? model.WebGPURenderer.getRenderable().getActiveCamera() : null;\r\n      const tsize = model.WebGPURenderer.getTiledSizeAndOrigin();\r\n      model.scalarBarActorHelper.updateAPISpecificData([tsize.usize, tsize.vsize], camera, model.WebGPURenderWindow.getRenderable());\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(publicAPI, model, initialValues);\r\n  model.scalarBarActorHelper = _Core_ScalarBarActor_js__WEBPACK_IMPORTED_MODULE_1__["default"].newScalarBarActorHelper();\r\n\r\n  // Object methods\r\n  vtkWebGPUScalarBarActor(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, \'vtkWebGPUScalarBarActor\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar index = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n// Register ourself to WebGPU backend if imported\r\n(0,_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_3__.registerOverride)(\'vtkScalarBarActor\', newInstance);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/ScalarBarActor.js?')},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderCache.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUShaderCache$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _ShaderModule_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ShaderModule.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderModule.js\");\n\r\n\r\n\r\n// perform in place string substitutions, indicate if a substitution was done\r\n// this is useful for building up shader strings which typically involve\r\n// lots of string substitutions. Return true if a substitution was done.\r\nfunction substitute(source, search, replace) {\r\n  let all = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\r\n  const replaceStr = Array.isArray(replace) ? replace.join('\\n') : replace;\r\n  let replaced = false;\r\n  if (source.search(search) !== -1) {\r\n    replaced = true;\r\n  }\r\n  let gflag = '';\r\n  if (all) {\r\n    gflag = 'g';\r\n  }\r\n  const regex = new RegExp(search, gflag);\r\n  const resultstr = source.replace(regex, replaceStr);\r\n  return {\r\n    replace: replaced,\r\n    result: resultstr\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUShaderCache methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUShaderCache(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUShaderCache');\r\n  publicAPI.getShaderModule = shaderDesc => {\r\n    // has it already been created?\r\n    const sType = shaderDesc.getType();\r\n    const sHash = shaderDesc.getHash();\r\n    const keys = model._shaderModules.keys();\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (key.getHash() === sHash && key.getType() === sType) {\r\n        return model._shaderModules.get(key);\r\n      }\r\n    }\r\n\r\n    // console.log(JSON.stringify(shaderDesc));\r\n\r\n    const sm = _ShaderModule_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n    sm.initialize(model.device, shaderDesc);\r\n    model._shaderModules.set(shaderDesc, sm);\r\n    return sm;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  shaderModules: null,\r\n  device: null,\r\n  window: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Internal objects\r\n  model._shaderModules = new Map();\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['device', 'window']);\r\n\r\n  // Object methods\r\n  vtkWebGPUShaderCache(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkWebGPUShaderCache');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUShaderCache$1 = {\r\n  newInstance,\r\n  extend,\r\n  substitute\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderCache.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderDescription.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUShaderDescription$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _ShaderCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ShaderCache.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderCache.js\");\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUShaderDescription methods\r\n// ----------------------------------------------------------------------------\r\n\r\n// shader description\r\n\r\nfunction vtkWebGPUShaderDescription(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUShaderDescription');\r\n  publicAPI.hasOutput = name => model.outputNames.includes(name);\r\n  publicAPI.addOutput = function (type, name) {\r\n    let interpolation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\r\n    model.outputTypes.push(type);\r\n    model.outputNames.push(name);\r\n    model.outputInterpolations.push(interpolation);\r\n  };\r\n  publicAPI.addBuiltinOutput = (type, name) => {\r\n    model.builtinOutputTypes.push(type);\r\n    model.builtinOutputNames.push(name);\r\n  };\r\n  publicAPI.addBuiltinInput = (type, name) => {\r\n    model.builtinInputTypes.push(type);\r\n    model.builtinInputNames.push(name);\r\n  };\r\n\r\n  // perform shader replacements for the input and outputs\r\n  // of this shader. That includes vertex inputs if specified\r\n  publicAPI.replaceShaderCode = (priorStage, vertexInput) => {\r\n    const inputImpl = [];\r\n    let iodec = [];\r\n    if (vertexInput) {\r\n      inputImpl.push(vertexInput.getShaderCode());\r\n    }\r\n    if (priorStage || model.builtinInputNames.length) {\r\n      const inputStruct = [];\r\n      inputStruct.push(`struct ${model.type}Input\\n{`);\r\n      if (priorStage) {\r\n        const inputNames = priorStage.getOutputNamesByReference();\r\n        const inputTypes = priorStage.getOutputTypesByReference();\r\n        const inputInterpolations = priorStage.getOutputInterpolationsByReference();\r\n        for (let i = 0; i < inputNames.length; i++) {\r\n          if (inputInterpolations[i] !== undefined) {\r\n            inputStruct.push(`  @location(${i}) @interpolate(${inputInterpolations[i]}) ${inputNames[i]} : ${inputTypes[i]},`);\r\n          } else {\r\n            inputStruct.push(`  @location(${i}) ${inputNames[i]} : ${inputTypes[i]},`);\r\n          }\r\n        }\r\n      }\r\n      for (let i = 0; i < model.builtinInputNames.length; i++) {\r\n        inputStruct.push(`  ${model.builtinInputNames[i]} : ${model.builtinInputTypes[i]},`);\r\n      }\r\n      if (inputStruct.length > 1) {\r\n        inputStruct.push('};');\r\n        iodec = inputStruct;\r\n        inputImpl[inputImpl.length - 1] += ',';\r\n        inputImpl.push(`input: ${model.type}Input`);\r\n      }\r\n    }\r\n    if (inputImpl.length) {\r\n      model.code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].substitute(model.code, '//VTK::IOStructs::Input', inputImpl).result;\r\n    }\r\n    if (model.outputNames.length + model.builtinOutputNames.length) {\r\n      const outputStruct = [`struct ${model.type}Output\\n{`];\r\n      for (let i = 0; i < model.outputNames.length; i++) {\r\n        if (model.outputInterpolations[i] !== undefined) {\r\n          outputStruct.push(`  @location(${i}) @interpolate(${model.outputInterpolations[i]}) ${model.outputNames[i]} : ${model.outputTypes[i]},`);\r\n        } else {\r\n          outputStruct.push(`  @location(${i}) ${model.outputNames[i]} : ${model.outputTypes[i]},`);\r\n        }\r\n      }\r\n      for (let i = 0; i < model.builtinOutputNames.length; i++) {\r\n        outputStruct.push(`  ${model.builtinOutputNames[i]} : ${model.builtinOutputTypes[i]},`);\r\n      }\r\n      outputStruct.push('};');\r\n      iodec = iodec.concat(outputStruct);\r\n      model.code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].substitute(model.code, '//VTK::IOStructs::Output', [`-> ${model.type}Output`]).result;\r\n    }\r\n    model.code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].substitute(model.code, '//VTK::IOStructs::Dec', iodec).result;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  type: null,\r\n  // 'vertex' or 'fragment'\r\n  hash: null,\r\n  code: null,\r\n  outputNames: null,\r\n  outputTypes: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n  model.outputNames = [];\r\n  model.outputTypes = [];\r\n  model.outputInterpolations = [];\r\n  model.builtinOutputNames = [];\r\n  model.builtinOutputTypes = [];\r\n  model.builtinInputNames = [];\r\n  model.builtinInputTypes = [];\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['type', 'hash', 'code']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.getArray(publicAPI, model, ['outputTypes', 'outputNames', 'outputInterpolations']);\r\n\r\n  // Object methods\r\n  vtkWebGPUShaderDescription(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkWebGPUShaderDescription');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUShaderDescription$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderDescription.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderModule.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUShaderModule$1)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUShaderModule methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUShaderModule(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUShaderModule');\r\n  publicAPI.initialize = (device, shaderDesc) => {\r\n    model.device = device;\r\n    // console.log(shaderDesc.getCode());\r\n    model.handle = model.device.getHandle().createShaderModule({\r\n      code: shaderDesc.getCode()\r\n    });\r\n  };\r\n\r\n  // publicAPI.setLastCameraMTime = (mtime) => {\r\n  //   model.lastCameraMTime = mtime;\r\n  // };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  device: null,\r\n  handle: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['lastCameraMTime']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['device', 'handle']);\r\n\r\n  // Object methods\r\n  vtkWebGPUShaderModule(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkWebGPUShaderModule');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUShaderModule$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderModule.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/SimpleMapper.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUSimpleMapper$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../SceneGraph/ViewNode.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js\");\n/* harmony import */ var _BindGroup_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BindGroup.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/BindGroup.js\");\n/* harmony import */ var _Pipeline_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Pipeline.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Pipeline.js\");\n/* harmony import */ var _ShaderCache_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ShaderCache.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderCache.js\");\n/* harmony import */ var _ShaderDescription_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ShaderDescription.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderDescription.js\");\n/* harmony import */ var _VertexInput_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./VertexInput.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/VertexInput.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst vtkWebGPUSimpleMapperVS = `\r\n//VTK::Renderer::Dec\r\n\r\n//VTK::Color::Dec\r\n\r\n//VTK::Normal::Dec\r\n\r\n//VTK::TCoord::Dec\r\n\r\n//VTK::Select::Dec\r\n\r\n//VTK::Mapper::Dec\r\n\r\n//VTK::IOStructs::Dec\r\n\r\n@vertex\r\nfn main(\r\n//VTK::IOStructs::Input\r\n)\r\n//VTK::IOStructs::Output\r\n{\r\n  var output : vertexOutput;\r\n\r\n  // var vertex: vec4<f32> = vertexBC;\r\n\r\n  //VTK::Color::Impl\r\n\r\n  //VTK::Normal::Impl\r\n\r\n  //VTK::TCoord::Impl\r\n\r\n  //VTK::Select::Impl\r\n\r\n  //VTK::Position::Impl\r\n\r\n  return output;\r\n}\r\n`;\r\nconst vtkWebGPUSimpleMapperFS = `\r\n//VTK::Renderer::Dec\r\n\r\n//VTK::Color::Dec\r\n\r\n//VTK::Normal::Dec\r\n\r\n//VTK::TCoord::Dec\r\n\r\n//VTK::Select::Dec\r\n\r\n//VTK::RenderEncoder::Dec\r\n\r\n//VTK::Mapper::Dec\r\n\r\n//VTK::IOStructs::Dec\r\n\r\n@fragment\r\nfn main(\r\n//VTK::IOStructs::Input\r\n)\r\n//VTK::IOStructs::Output\r\n{\r\n  var output : fragmentOutput;\r\n\r\n  //VTK::Color::Impl\r\n\r\n  //VTK::Normal::Impl\r\n\r\n  //VTK::Light::Impl\r\n\r\n  //VTK::TCoord::Impl\r\n\r\n  //VTK::Select::Impl\r\n\r\n  // var computedColor:vec4<f32> = vec4<f32>(1.0,0.5,0.5,1.0);\r\n\r\n  //VTK::RenderEncoder::Impl\r\n  return output;\r\n}\r\n`;\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUSimpleMapper methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUSimpleMapper(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUSimpleMapper');\r\n  publicAPI.generateShaderDescriptions = (hash, pipeline, vertexInput) => {\r\n    // create the shader descriptions\r\n    const vDesc = _ShaderDescription_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance({\r\n      type: 'vertex',\r\n      hash,\r\n      code: model.vertexShaderTemplate\r\n    });\r\n    const fDesc = _ShaderDescription_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance({\r\n      type: 'fragment',\r\n      hash,\r\n      code: model.fragmentShaderTemplate\r\n    });\r\n\r\n    // add them to the pipeline\r\n    const sdrs = pipeline.getShaderDescriptions();\r\n    sdrs.push(vDesc);\r\n    sdrs.push(fDesc);\r\n\r\n    // look for replacements to invoke\r\n    const scode = model.vertexShaderTemplate + model.fragmentShaderTemplate;\r\n    // eslint-disable-next-line prefer-regex-literals\r\n    const re = new RegExp('//VTK::[^:]*::', 'g');\r\n    const unique = scode.match(re).filter((v, i, a) => a.indexOf(v) === i);\r\n    const fnames = unique.map(v => `replaceShader${v.substring(7, v.length - 2)}`);\r\n\r\n    // now invoke shader replacement functions\r\n    for (let i = 0; i < fnames.length; i++) {\r\n      const fname = fnames[i];\r\n      if (fname !== 'replaceShaderIOStructs' && model.shaderReplacements.has(fname)) {\r\n        model.shaderReplacements.get(fname)(hash, pipeline, vertexInput);\r\n      }\r\n    }\r\n\r\n    // always replace the IOStructs last as other replacement funcs may\r\n    // add inputs or outputs\r\n    publicAPI.replaceShaderIOStructs(hash, pipeline, vertexInput);\r\n\r\n    // console.log(vDesc.getCode());\r\n    // console.log(fDesc.getCode());\r\n  };\r\n\r\n  publicAPI.replaceShaderIOStructs = (hash, pipeline, vertexInput) => {\r\n    const vDesc = pipeline.getShaderDescription('vertex');\r\n    vDesc.replaceShaderCode(null, vertexInput);\r\n    const fDesc = pipeline.getShaderDescription('fragment');\r\n    fDesc.replaceShaderCode(vDesc);\r\n  };\r\n  publicAPI.replaceShaderRenderEncoder = (hash, pipeline, vertexInput) => {\r\n    model.renderEncoder.replaceShaderCode(pipeline);\r\n  };\r\n  model.shaderReplacements.set('replaceShaderRenderEncoder', publicAPI.replaceShaderRenderEncoder);\r\n  publicAPI.replaceShaderRenderer = (hash, pipeline, vertexInput) => {\r\n    if (!model.WebGPURenderer) {\r\n      return;\r\n    }\r\n    const ubocode = model.WebGPURenderer.getBindGroup().getShaderCode(pipeline);\r\n    const vDesc = pipeline.getShaderDescription('vertex');\r\n    let code = vDesc.getCode();\r\n    code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].substitute(code, '//VTK::Renderer::Dec', [ubocode]).result;\r\n    vDesc.setCode(code);\r\n    const fDesc = pipeline.getShaderDescription('fragment');\r\n    code = fDesc.getCode();\r\n    code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].substitute(code, '//VTK::Renderer::Dec', [ubocode]).result;\r\n    fDesc.setCode(code);\r\n  };\r\n  model.shaderReplacements.set('replaceShaderRenderer', publicAPI.replaceShaderRenderer);\r\n  publicAPI.replaceShaderMapper = (hash, pipeline, vertexInput) => {\r\n    const ubocode = model.bindGroup.getShaderCode(pipeline);\r\n    const vDesc = pipeline.getShaderDescription('vertex');\r\n    let code = vDesc.getCode();\r\n    code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].substitute(code, '//VTK::Mapper::Dec', [ubocode]).result;\r\n    vDesc.setCode(code);\r\n    const fDesc = pipeline.getShaderDescription('fragment');\r\n    fDesc.addBuiltinInput('bool', '@builtin(front_facing) frontFacing');\r\n    code = fDesc.getCode();\r\n    code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].substitute(code, '//VTK::Mapper::Dec', [ubocode]).result;\r\n    fDesc.setCode(code);\r\n  };\r\n  model.shaderReplacements.set('replaceShaderMapper', publicAPI.replaceShaderMapper);\r\n  publicAPI.replaceShaderPosition = (hash, pipeline, vertexInput) => {\r\n    const vDesc = pipeline.getShaderDescription('vertex');\r\n    vDesc.addBuiltinOutput('vec4<f32>', '@builtin(position) Position');\r\n    let code = vDesc.getCode();\r\n    code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].substitute(code, '//VTK::Position::Impl', ['    output.Position = rendererUBO.SCPCMatrix*vertexBC;']).result;\r\n    vDesc.setCode(code);\r\n  };\r\n  model.shaderReplacements.set('replaceShaderPosition', publicAPI.replaceShaderPosition);\r\n  publicAPI.replaceShaderTCoord = (hash, pipeline, vertexInput) => {\r\n    const vDesc = pipeline.getShaderDescription('vertex');\r\n    vDesc.addOutput('vec2<f32>', 'tcoordVS');\r\n  };\r\n  model.shaderReplacements.set('replaceShaderTCoord', publicAPI.replaceShaderTCoord);\r\n  publicAPI.addTextureView = view => {\r\n    // is it already there?\r\n    if (model.textureViews.includes(view)) {\r\n      return;\r\n    }\r\n    model.textureViews.push(view);\r\n  };\r\n\r\n  // do everything required for this mapper to be rerady to draw\r\n  // but do not bind or do the actual draw commands as the pipeline\r\n  // is not neccessarily bound yet\r\n  publicAPI.prepareToDraw = renderEncoder => {\r\n    model.renderEncoder = renderEncoder;\r\n\r\n    // do anything needed to get our input data up to date\r\n    publicAPI.updateInput();\r\n\r\n    // make sure buffers are created and up to date\r\n    publicAPI.updateBuffers();\r\n\r\n    // update bindings and bind groups/layouts\r\n    // does not acutally bind them, that is done in draw(...)\r\n    publicAPI.updateBindings();\r\n\r\n    // update the pipeline, includes computing the hash, and if needed\r\n    // creating the pipeline, shader code etc\r\n    publicAPI.updatePipeline();\r\n  };\r\n  publicAPI.updateInput = () => {};\r\n  publicAPI.updateBuffers = () => {};\r\n  publicAPI.updateBindings = () => {\r\n    // bindings can change without a pipeline change\r\n    // as long as their layout remains the same.\r\n    // That is why this is done even when the pipeline\r\n    // hash doesn't change.\r\n    model.bindGroup.setBindables(publicAPI.getBindables());\r\n  };\r\n  publicAPI.computePipelineHash = () => {};\r\n  publicAPI.registerDrawCallback = encoder => {\r\n    encoder.registerDrawCallback(model.pipeline, publicAPI.draw);\r\n  };\r\n  publicAPI.prepareAndDraw = encoder => {\r\n    publicAPI.prepareToDraw(encoder);\r\n    encoder.setPipeline(model.pipeline);\r\n    publicAPI.draw(encoder);\r\n  };\r\n\r\n  // do the rest of the calls required to draw this mapper\r\n  // at this point the command encouder and pipeline are\r\n  // created and bound\r\n  publicAPI.draw = renderEncoder => {\r\n    const pipeline = renderEncoder.getBoundPipeline();\r\n\r\n    // bind the mapper bind group\r\n    renderEncoder.activateBindGroup(model.bindGroup);\r\n    if (model.WebGPURenderer) {\r\n      model.WebGPURenderer.bindUBO(renderEncoder);\r\n    }\r\n\r\n    // bind the vertex input\r\n    pipeline.bindVertexInput(renderEncoder, model.vertexInput);\r\n    const indexBuffer = model.vertexInput.getIndexBuffer();\r\n    if (indexBuffer) {\r\n      renderEncoder.drawIndexed(indexBuffer.getIndexCount(), model.numberOfInstances, 0, 0, 0);\r\n    } else {\r\n      renderEncoder.draw(model.numberOfVertices, model.numberOfInstances, 0, 0);\r\n    }\r\n  };\r\n  publicAPI.getBindables = () => {\r\n    const bindables = [...model.additionalBindables];\r\n    if (model.UBO) {\r\n      bindables.push(model.UBO);\r\n    }\r\n    if (model.SSBO) {\r\n      bindables.push(model.SSBO);\r\n    }\r\n\r\n    // add texture BindGroupLayouts\r\n    for (let t = 0; t < model.textureViews.length; t++) {\r\n      bindables.push(model.textureViews[t]);\r\n      const samp = model.textureViews[t].getSampler();\r\n      if (samp) {\r\n        bindables.push(samp);\r\n      }\r\n    }\r\n    return bindables;\r\n  };\r\n  publicAPI.updatePipeline = () => {\r\n    publicAPI.computePipelineHash();\r\n    model.pipeline = model.device.getPipeline(model.pipelineHash);\r\n\r\n    // build the pipeline if needed\r\n    if (!model.pipeline) {\r\n      model.pipeline = _Pipeline_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance();\r\n      model.pipeline.setDevice(model.device);\r\n      if (model.WebGPURenderer) {\r\n        model.pipeline.addBindGroupLayout(model.WebGPURenderer.getBindGroup());\r\n      }\r\n      model.pipeline.addBindGroupLayout(model.bindGroup);\r\n      publicAPI.generateShaderDescriptions(model.pipelineHash, model.pipeline, model.vertexInput);\r\n      model.pipeline.setTopology(model.topology);\r\n      model.pipeline.setRenderEncoder(model.renderEncoder);\r\n      model.pipeline.setVertexState(model.vertexInput.getVertexInputInformation());\r\n      model.device.createPipeline(model.pipelineHash, model.pipeline);\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  additionalBindables: undefined,\r\n  bindGroup: null,\r\n  device: null,\r\n  fragmentShaderTemplate: null,\r\n  numberOfInstances: 1,\r\n  numberOfVertices: 0,\r\n  pipelineHash: null,\r\n  shaderReplacements: null,\r\n  SSBO: null,\r\n  textureViews: null,\r\n  topology: 'triangle-list',\r\n  UBO: null,\r\n  vertexShaderTemplate: null,\r\n  WebGPURenderer: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNode_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].extend(publicAPI, model, initialValues);\r\n  model.textureViews = [];\r\n  model.vertexInput = _VertexInput_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].newInstance();\r\n  model.bindGroup = _BindGroup_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance({\r\n    label: 'mapperBG'\r\n  });\r\n  model.additionalBindables = [];\r\n  model.fragmentShaderTemplate = model.fragmentShaderTemplate || vtkWebGPUSimpleMapperFS;\r\n  model.vertexShaderTemplate = model.vertexShaderTemplate || vtkWebGPUSimpleMapperVS;\r\n  model.shaderReplacements = new Map();\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['pipeline', 'vertexInput']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['additionalBindables', 'device', 'fragmentShaderTemplate', 'interpolate', 'numberOfInstances', 'numberOfVertices', 'pipelineHash', 'shaderReplacements', 'SSBO', 'textureViews', 'topology', 'UBO', 'vertexShaderTemplate', 'WebGPURenderer']);\r\n\r\n  // Object methods\r\n  vtkWebGPUSimpleMapper(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkWebGPUSimpleMapper');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUSimpleMapper$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/SimpleMapper.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/StorageBuffer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUStorageBuffer$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _BufferManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BufferManager.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Types.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Types.js\");\n\r\n\r\n\r\n\r\nconst {\r\n  BufferUsage\r\n} = _BufferManager_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUStorageBuffer - similar to the UniformBuffer class\r\n// but YOU are responsible for layout issues and alignment.\r\n// The order you add entries is the order they will be layed out\r\n// in memory. But you must follow layout rules.\r\n// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUStorageBuffer methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUStorageBuffer(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUStorageBuffer');\r\n  publicAPI.addEntry = (name, type) => {\r\n    if (model._bufferEntryNames.has(name)) {\r\n      vtkErrorMacro(`entry named ${name} already exists`);\r\n      return;\r\n    }\r\n    model._bufferEntryNames.set(name, model.bufferEntries.length);\r\n    const sizeInBytes = _Types_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getByteStrideFromShaderFormat(type);\r\n    model.bufferEntries.push({\r\n      name,\r\n      type,\r\n      sizeInBytes,\r\n      offset: model.sizeInBytes,\r\n      nativeType: _Types_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getNativeTypeFromShaderFormat(type)\r\n    });\r\n    model.sizeInBytes += sizeInBytes;\r\n  };\r\n  publicAPI.send = device => {\r\n    if (!model._buffer) {\r\n      const req = {\r\n        nativeArray: model.Float32Array,\r\n        usage: BufferUsage.Storage,\r\n        label: model.label\r\n      };\r\n      model._buffer = device.getBufferManager().getBuffer(req);\r\n      model.bindGroupTime.modified();\r\n      model._sendTime.modified();\r\n      return;\r\n    }\r\n    device.getHandle().queue.writeBuffer(model._buffer.getHandle(), 0, model.arrayBuffer, 0, model.sizeInBytes * model.numberOfInstances);\r\n    model._sendTime.modified();\r\n  };\r\n  publicAPI.createView = type => {\r\n    if (type in model === false) {\r\n      if (!model.arrayBuffer) {\r\n        model.arrayBuffer = new ArrayBuffer(model.sizeInBytes * model.numberOfInstances);\r\n      }\r\n      model[type] = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newTypedArray(type, model.arrayBuffer);\r\n    }\r\n  };\r\n  publicAPI.setValue = (name, instance, val) => {\r\n    const idx = model._bufferEntryNames.get(name);\r\n    if (idx === undefined) {\r\n      vtkErrorMacro(`entry named ${name} not found in UBO`);\r\n      return;\r\n    }\r\n    const entry = model.bufferEntries[idx];\r\n    publicAPI.createView(entry.nativeType);\r\n    const view = model[entry.nativeType];\r\n    view[(entry.offset + instance * model.sizeInBytes) / view.BYTES_PER_ELEMENT] = val;\r\n  };\r\n  publicAPI.setArray = (name, instance, arr) => {\r\n    const idx = model._bufferEntryNames.get(name);\r\n    if (idx === undefined) {\r\n      vtkErrorMacro(`entry named ${name} not found in UBO`);\r\n      return;\r\n    }\r\n    const entry = model.bufferEntries[idx];\r\n    publicAPI.createView(entry.nativeType);\r\n    const view = model[entry.nativeType];\r\n    const ioffset = (entry.offset + instance * model.sizeInBytes) / view.BYTES_PER_ELEMENT;\r\n    for (let i = 0; i < arr.length; i++) {\r\n      view[ioffset + i] = arr[i];\r\n    }\r\n  };\r\n  publicAPI.setAllInstancesFromArray = (name, arr) => {\r\n    const idx = model._bufferEntryNames.get(name);\r\n    if (idx === undefined) {\r\n      vtkErrorMacro(`entry named ${name} not found in UBO`);\r\n      return;\r\n    }\r\n    const entry = model.bufferEntries[idx];\r\n    publicAPI.createView(entry.nativeType);\r\n    const view = model[entry.nativeType];\r\n    const numComponents = arr.length / model.numberOfInstances;\r\n    for (let inst = 0; inst < model.numberOfInstances; inst++) {\r\n      const ioffset = (entry.offset + inst * model.sizeInBytes) / view.BYTES_PER_ELEMENT;\r\n      for (let i = 0; i < numComponents; i++) {\r\n        view[ioffset + i] = arr[inst * numComponents + i];\r\n      }\r\n    }\r\n  };\r\n  publicAPI.setAllInstancesFromArrayColorToFloat = (name, arr) => {\r\n    const idx = model._bufferEntryNames.get(name);\r\n    if (idx === undefined) {\r\n      vtkErrorMacro(`entry named ${name} not found in UBO`);\r\n      return;\r\n    }\r\n    const entry = model.bufferEntries[idx];\r\n    publicAPI.createView(entry.nativeType);\r\n    const view = model[entry.nativeType];\r\n    const numComponents = arr.length / model.numberOfInstances;\r\n    for (let inst = 0; inst < model.numberOfInstances; inst++) {\r\n      const ioffset = (entry.offset + inst * model.sizeInBytes) / view.BYTES_PER_ELEMENT;\r\n      for (let i = 0; i < numComponents; i++) {\r\n        view[ioffset + i] = arr[inst * numComponents + i] / 255.0;\r\n      }\r\n    }\r\n  };\r\n  publicAPI.setAllInstancesFromArray3x3To4x4 = (name, arr) => {\r\n    const idx = model._bufferEntryNames.get(name);\r\n    if (idx === undefined) {\r\n      vtkErrorMacro(`entry named ${name} not found in UBO`);\r\n      return;\r\n    }\r\n    const entry = model.bufferEntries[idx];\r\n    publicAPI.createView(entry.nativeType);\r\n    const view = model[entry.nativeType];\r\n    const numComponents = 9;\r\n    for (let inst = 0; inst < model.numberOfInstances; inst++) {\r\n      const ioffset = (entry.offset + inst * model.sizeInBytes) / view.BYTES_PER_ELEMENT;\r\n      for (let j = 0; j < 3; j++) {\r\n        for (let i = 0; i < 3; i++) {\r\n          view[ioffset + j * 4 + i] = arr[inst * numComponents + j * 3 + i];\r\n        }\r\n      }\r\n    }\r\n  };\r\n  publicAPI.getSendTime = () => model._sendTime.getMTime();\r\n  publicAPI.getShaderCode = (binding, group) => {\r\n    const lines = [`struct ${model.label}StructEntry\\n{`];\r\n    for (let i = 0; i < model.bufferEntries.length; i++) {\r\n      const entry = model.bufferEntries[i];\r\n      lines.push(`  ${entry.name}: ${entry.type},`);\r\n    }\r\n    lines.push(`\r\n};\r\nstruct ${model.label}Struct\r\n{\r\n  values: array<${model.label}StructEntry>,\r\n};\r\n@binding(${binding}) @group(${group}) var<storage, read> ${model.label}: ${model.label}Struct;\r\n`);\r\n    return lines.join('\\n');\r\n  };\r\n  publicAPI.getBindGroupEntry = () => {\r\n    const foo = {\r\n      resource: {\r\n        buffer: model._buffer.getHandle()\r\n      }\r\n    };\r\n    return foo;\r\n  };\r\n  publicAPI.clearData = () => {\r\n    model.numberOfInstances = 0;\r\n    model.sizeInBytes = 0;\r\n    model.bufferEntries = [];\r\n    model._bufferEntryNames = new Map();\r\n    model._buffer = null;\r\n    delete model.arrayBuffer;\r\n    delete model.Float32Array;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  bufferEntries: null,\r\n  bufferEntryNames: null,\r\n  sizeInBytes: 0,\r\n  label: null,\r\n  numberOfInstances: 1\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n\r\n  // Internal objects\r\n  model._bufferEntryNames = new Map();\r\n  model.bufferEntries = [];\r\n  model._sendTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model._sendTime, {\r\n    mtime: 0\r\n  });\r\n  model.bindGroupTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.bindGroupTime, {\r\n    mtime: 0\r\n  });\r\n\r\n  // default SSBO desc\r\n  model.bindGroupLayoutEntry = model.bindGroupLayoutEntry || {\r\n    buffer: {\r\n      type: 'read-only-storage'\r\n    }\r\n  };\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['bindGroupTime']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['device', 'bindGroupLayoutEntry', 'label', 'numberOfInstances', 'sizeInBytes']);\r\n\r\n  // Object methods\r\n  vtkWebGPUStorageBuffer(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkWebGPUStorageBuffer');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUStorageBuffer$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/StorageBuffer.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Texture.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUTexture$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/Core/HalfFloat.js */ \"./node_modules/@kitware/vtk.js/Common/Core/HalfFloat.js\");\n/* harmony import */ var _BufferManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BufferManager.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager.js\");\n/* harmony import */ var _TextureView_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TextureView.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/TextureView.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Types.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Types.js\");\n/* harmony import */ var _Core_Texture_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Core/Texture.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Texture.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  BufferUsage\r\n} = _BufferManager_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUTexture methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUTexture(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUTexture');\r\n  publicAPI.create = (device, options) => {\r\n    model.device = device;\r\n    model.width = options.width;\r\n    model.height = options.height;\r\n    model.depth = options.depth ? options.depth : 1;\r\n    const dimension = model.depth === 1 ? '2d' : '3d';\r\n    model.format = options.format ? options.format : 'rgba8unorm';\r\n    model.mipLevel = options.mipLevel ? options.mipLevel : 0;\r\n    /* eslint-disable no-undef */\r\n    /* eslint-disable no-bitwise */\r\n    model.usage = options.usage ? options.usage : GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST;\r\n    /* eslint-enable no-undef */\r\n    /* eslint-enable no-bitwise */\r\n    model.handle = model.device.getHandle().createTexture({\r\n      size: [model.width, model.height, model.depth],\r\n      format: model.format,\r\n      // 'rgba8unorm',\r\n      usage: model.usage,\r\n      label: model.label,\r\n      dimension,\r\n      mipLevelCount: model.mipLevel + 1\r\n    });\r\n  };\r\n  publicAPI.assignFromHandle = (device, handle, options) => {\r\n    model.device = device;\r\n    model.handle = handle;\r\n    model.width = options.width;\r\n    model.height = options.height;\r\n    model.depth = options.depth ? options.depth : 1;\r\n    model.format = options.format ? options.format : 'rgba8unorm';\r\n    /* eslint-disable no-undef */\r\n    /* eslint-disable no-bitwise */\r\n    model.usage = options.usage ? options.usage : GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST;\r\n    /* eslint-enable no-undef */\r\n    /* eslint-enable no-bitwise */\r\n  };\r\n\r\n  publicAPI.writeImageData = req => {\r\n    let nativeArray = [];\r\n    if (req.canvas) {\r\n      model.device.getHandle().queue.copyExternalImageToTexture({\r\n        source: req.canvas,\r\n        flipY: req.flip\r\n      }, {\r\n        texture: model.handle,\r\n        premultipliedAlpha: true\r\n      }, [model.width, model.height, model.depth]);\r\n      model.ready = true;\r\n      return;\r\n    }\r\n    if (req.jsImageData && !req.nativeArray) {\r\n      req.width = req.jsImageData.width;\r\n      req.height = req.jsImageData.height;\r\n      req.depth = 1;\r\n      req.format = 'rgba8unorm';\r\n      req.flip = true;\r\n      req.nativeArray = req.jsImageData.data;\r\n    }\r\n    const tDetails = _Types_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getDetailsFromTextureFormat(model.format);\r\n    let bufferBytesPerRow = model.width * tDetails.stride;\r\n    const fixAll = (arr, height, depth) => {\r\n      // bytesPerRow must be a multiple of 256 so we might need to rebuild\r\n      // the data here before passing to the buffer. e.g. if it is unorm8x4 then\r\n      // we need to have width be a multiple of 64\r\n      const inWidthInBytes = arr.length / (height * depth) * arr.BYTES_PER_ELEMENT;\r\n\r\n      // is this a half float texture?\r\n      const halfFloat = tDetails.elementSize === 2 && tDetails.sampleType === 'float';\r\n\r\n      // if we need to copy the data\r\n      if (halfFloat || inWidthInBytes % 256) {\r\n        const inArray = arr;\r\n        const inWidth = inWidthInBytes / inArray.BYTES_PER_ELEMENT;\r\n        const outBytesPerElement = tDetails.elementSize;\r\n        const outWidthInBytes = 256 * Math.floor((inWidth * outBytesPerElement + 255) / 256);\r\n        const outWidth = outWidthInBytes / outBytesPerElement;\r\n        const outArray = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newTypedArray(halfFloat ? 'Uint16Array' : inArray.constructor.name, outWidth * height * depth);\r\n        for (let v = 0; v < height * depth; v++) {\r\n          if (halfFloat) {\r\n            for (let i = 0; i < inWidth; i++) {\r\n              outArray[v * outWidth + i] = _Common_Core_HalfFloat_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].toHalf(inArray[v * inWidth + i]);\r\n            }\r\n          } else {\r\n            outArray.set(inArray.subarray(v * inWidth, (v + 1) * inWidth), v * outWidth);\r\n          }\r\n        }\r\n        return [outArray, outWidthInBytes];\r\n      }\r\n      return [arr, inWidthInBytes];\r\n    };\r\n    if (req.nativeArray) {\r\n      nativeArray = req.nativeArray;\r\n    }\r\n    if (req.image) {\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = req.image.width;\r\n      canvas.height = req.image.height;\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.translate(0, canvas.height);\r\n      ctx.scale(1, -1);\r\n      ctx.drawImage(req.image, 0, 0, req.image.width, req.image.height, 0, 0, canvas.width, canvas.height);\r\n      const imageData = ctx.getImageData(0, 0, req.image.width, req.image.height);\r\n      nativeArray = imageData.data;\r\n    }\r\n    const cmdEnc = model.device.createCommandEncoder();\r\n    if (publicAPI.getDimensionality() !== 3) {\r\n      // Non-3D, supports mipmaps\r\n      const mips = _Core_Texture_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].generateMipmaps(nativeArray, model.width, model.height, model.mipLevel);\r\n      let currentWidth = model.width;\r\n      let currentHeight = model.height;\r\n      for (let m = 0; m <= model.mipLevel; m++) {\r\n        const fix = fixAll(mips[m], currentHeight, 1);\r\n        bufferBytesPerRow = fix[1];\r\n        const buffRequest = {\r\n          dataArray: req.dataArray ? req.dataArray : null,\r\n          nativeArray: fix[0],\r\n          /* eslint-disable no-undef */\r\n          usage: BufferUsage.Texture\r\n          /* eslint-enable no-undef */\r\n        };\r\n\r\n        const buff = model.device.getBufferManager().getBuffer(buffRequest);\r\n        cmdEnc.copyBufferToTexture({\r\n          buffer: buff.getHandle(),\r\n          offset: 0,\r\n          bytesPerRow: bufferBytesPerRow,\r\n          rowsPerImage: currentHeight\r\n        }, {\r\n          texture: model.handle,\r\n          mipLevel: m\r\n        }, [currentWidth, currentHeight, 1]);\r\n        currentWidth /= 2;\r\n        currentHeight /= 2;\r\n      }\r\n      model.device.submitCommandEncoder(cmdEnc);\r\n      model.ready = true;\r\n    } else {\r\n      // 3D, no mipmaps\r\n      const fix = fixAll(nativeArray, model.height, model.depth);\r\n      bufferBytesPerRow = fix[1];\r\n      const buffRequest = {\r\n        dataArray: req.dataArray ? req.dataArray : null,\r\n        /* eslint-disable no-undef */\r\n        usage: BufferUsage.Texture\r\n        /* eslint-enable no-undef */\r\n      };\r\n\r\n      buffRequest.nativeArray = fix[0];\r\n      const buff = model.device.getBufferManager().getBuffer(buffRequest);\r\n      cmdEnc.copyBufferToTexture({\r\n        buffer: buff.getHandle(),\r\n        offset: 0,\r\n        bytesPerRow: bufferBytesPerRow,\r\n        rowsPerImage: model.height\r\n      }, {\r\n        texture: model.handle\r\n      }, [model.width, model.height, model.depth]);\r\n      model.device.submitCommandEncoder(cmdEnc);\r\n      model.ready = true;\r\n    }\r\n  };\r\n\r\n  // when data is pulled out of this texture what scale must be applied to\r\n  // get back to the original source data. For formats such as r8unorm we\r\n  // have to multiply by 255.0, for formats such as r16float it is 1.0\r\n  publicAPI.getScale = () => {\r\n    const tDetails = _Types_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getDetailsFromTextureFormat(model.format);\r\n    const halfFloat = tDetails.elementSize === 2 && tDetails.sampleType === 'float';\r\n    return halfFloat ? 1.0 : 255.0;\r\n  };\r\n  publicAPI.getNumberOfComponents = () => {\r\n    const tDetails = _Types_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getDetailsFromTextureFormat(model.format);\r\n    return tDetails.numComponents;\r\n  };\r\n  publicAPI.getDimensionality = () => {\r\n    let dims = 0;\r\n    if (model.width > 1) dims++;\r\n    if (model.height > 1) dims++;\r\n    if (model.depth > 1) dims++;\r\n    return dims;\r\n  };\r\n  publicAPI.resizeToMatch = tex => {\r\n    if (tex.getWidth() !== model.width || tex.getHeight() !== model.height || tex.getDepth() !== model.depth) {\r\n      model.width = tex.getWidth();\r\n      model.height = tex.getHeight();\r\n      model.depth = tex.getDepth();\r\n      model.handle = model.device.getHandle().createTexture({\r\n        size: [model.width, model.height, model.depth],\r\n        format: model.format,\r\n        usage: model.usage,\r\n        label: model.label\r\n      });\r\n    }\r\n  };\r\n  publicAPI.resize = function (width, height) {\r\n    let depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\r\n    if (width !== model.width || height !== model.height || depth !== model.depth) {\r\n      model.width = width;\r\n      model.height = height;\r\n      model.depth = depth;\r\n      model.handle = model.device.getHandle().createTexture({\r\n        size: [model.width, model.height, model.depth],\r\n        format: model.format,\r\n        usage: model.usage,\r\n        label: model.label\r\n      });\r\n    }\r\n  };\r\n  publicAPI.createView = function (label) {\r\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    // if options is missing values try to add them in\r\n    if (!options.dimension) {\r\n      options.dimension = model.depth === 1 ? '2d' : '3d';\r\n    }\r\n    const view = _TextureView_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].newInstance({\r\n      label\r\n    });\r\n    view.create(publicAPI, options);\r\n    return view;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  device: null,\r\n  handle: null,\r\n  buffer: null,\r\n  ready: false,\r\n  label: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Object methods\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['handle', 'ready', 'width', 'height', 'depth', 'format', 'usage']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['device', 'label']);\r\n  vtkWebGPUTexture(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUTexture$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/Texture.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/TextureManager.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUTextureManager$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/Core/DataArray.js */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray.js\");\n/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Texture.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Texture.js\");\n\r\n\r\n\r\n\r\nconst {\r\n  VtkDataTypes\r\n} = _Common_Core_DataArray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\n\r\n// ----------------------------------------------------------------------------\r\n// Global methods\r\n// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUTextureManager methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUTextureManager(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUTextureManager');\r\n\r\n  // fills in request values based on what is missing/provided\r\n  function _fillRequest(req) {\r\n    // fill in values based on imageData if the request has it\r\n    if (req.imageData) {\r\n      req.dataArray = req.imageData.getPointData().getScalars();\r\n      req.time = req.dataArray.getMTime();\r\n      req.nativeArray = req.dataArray.getData();\r\n      const dims = req.imageData.getDimensions();\r\n      req.width = dims[0];\r\n      req.height = dims[1];\r\n      req.depth = dims[2];\r\n      const numComp = req.dataArray.getNumberOfComponents();\r\n      // todo fix handling of 3 component\r\n      switch (numComp) {\r\n        case 1:\r\n          req.format = 'r';\r\n          break;\r\n        case 2:\r\n          req.format = 'rg';\r\n          break;\r\n        case 3:\r\n        case 4:\r\n        default:\r\n          req.format = 'rgba';\r\n          break;\r\n      }\r\n      const dataType = req.dataArray.getDataType();\r\n      switch (dataType) {\r\n        case VtkDataTypes.UNSIGNED_CHAR:\r\n          req.format += '8unorm';\r\n          break;\r\n        // todo extend to other types that are not filterable\r\n        // as they can be useful\r\n        case VtkDataTypes.FLOAT:\r\n        case VtkDataTypes.UNSIGNED_INT:\r\n        case VtkDataTypes.INT:\r\n        case VtkDataTypes.DOUBLE:\r\n        case VtkDataTypes.UNSIGNED_SHORT:\r\n        case VtkDataTypes.SHORT:\r\n        default:\r\n          req.format += '16float';\r\n          break;\r\n      }\r\n    }\r\n\r\n    // fill in values based on image if the request has it\r\n    if (req.image) {\r\n      req.width = req.image.width;\r\n      req.height = req.image.height;\r\n      req.depth = 1;\r\n      req.format = 'rgba8unorm';\r\n    }\r\n\r\n    // fill in based on js imageData\r\n    if (req.jsImageData) {\r\n      req.width = req.jsImageData.width;\r\n      req.height = req.jsImageData.height;\r\n      req.depth = 1;\r\n      req.format = 'rgba8unorm';\r\n      req.flip = true;\r\n      req.nativeArray = req.jsImageData.data;\r\n    }\r\n    if (req.canvas) {\r\n      req.width = req.canvas.width;\r\n      req.height = req.canvas.height;\r\n      req.depth = 1;\r\n      req.format = 'rgba8unorm';\r\n      req.flip = true;\r\n      /* eslint-disable no-undef */\r\n      /* eslint-disable no-bitwise */\r\n      req.usage = GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST | GPUTextureUsage.RENDER_ATTACHMENT;\r\n      /* eslint-enable no-undef */\r\n      /* eslint-enable no-bitwise */\r\n    }\r\n  }\r\n\r\n  // create a texture (used by getTexture)\r\n  function _createTexture(req) {\r\n    const newTex = _Texture_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance();\r\n    newTex.create(model.device, {\r\n      width: req.width,\r\n      height: req.height,\r\n      depth: req.depth,\r\n      format: req.format,\r\n      usage: req.usage,\r\n      mipLevel: req.mipLevel\r\n    });\r\n\r\n    // fill the texture if we have data\r\n    if (req.nativeArray || req.image || req.canvas) {\r\n      newTex.writeImageData(req);\r\n    }\r\n    return newTex;\r\n  }\r\n\r\n  // get a texture or create it if not cached.\r\n  // this is the main entry point\r\n  publicAPI.getTexture = req => {\r\n    // if we have a source the get/create/cache the texture\r\n    if (req.hash) {\r\n      // if a matching texture already exists then return it\r\n      return model.device.getCachedObject(req.hash, _createTexture, req);\r\n    }\r\n    return _createTexture(req);\r\n  };\r\n  publicAPI.getTextureForImageData = imgData => {\r\n    const treq = {\r\n      time: imgData.getMTime()\r\n    };\r\n    treq.imageData = imgData;\r\n    // fill out the req time and format based on imageData/image\r\n    _fillRequest(treq);\r\n    treq.hash = treq.time + treq.format + treq.mipLevel;\r\n    return model.device.getTextureManager().getTexture(treq);\r\n  };\r\n  publicAPI.getTextureForVTKTexture = srcTexture => {\r\n    const treq = {\r\n      time: srcTexture.getMTime()\r\n    };\r\n    if (srcTexture.getInputData()) {\r\n      treq.imageData = srcTexture.getInputData();\r\n    } else if (srcTexture.getImage()) {\r\n      treq.image = srcTexture.getImage();\r\n    } else if (srcTexture.getJsImageData()) {\r\n      treq.jsImageData = srcTexture.getJsImageData();\r\n    } else if (srcTexture.getCanvas()) {\r\n      treq.canvas = srcTexture.getCanvas();\r\n    }\r\n    // fill out the req time and format based on imageData/image\r\n    _fillRequest(treq);\r\n    treq.mipLevel = srcTexture.getMipLevel();\r\n    treq.hash = treq.time + treq.format + treq.mipLevel;\r\n    return model.device.getTextureManager().getTexture(treq);\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  handle: null,\r\n  device: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Object methods\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['device']);\r\n  vtkWebGPUTextureManager(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUTextureManager$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/TextureManager.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/TextureView.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUTextureView$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Sampler_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Sampler.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Sampler.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Types.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Types.js\");\n\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUTextureView methods\r\n// ----------------------------------------------------------------------------\r\n\r\n/* eslint-disable no-bitwise */\r\n\r\nfunction vtkWebGPUTextureView(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUTextureView');\r\n  publicAPI.create = (texture, options) => {\r\n    model.texture = texture;\r\n    model.options = options;\r\n    model.options.dimension = model.options.dimension || '2d';\r\n    model.options.label = model.label;\r\n    model.textureHandle = texture.getHandle();\r\n    model.handle = model.textureHandle.createView(model.options);\r\n    model.bindGroupLayoutEntry.texture.viewDimension = model.options.dimension;\r\n    const tDetails = _Types_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getDetailsFromTextureFormat(model.texture.getFormat());\r\n    model.bindGroupLayoutEntry.texture.sampleType = tDetails.sampleType;\r\n  };\r\n  publicAPI.createFromTextureHandle = (textureHandle, options) => {\r\n    model.texture = null;\r\n    model.options = options;\r\n    model.options.dimension = model.options.dimension || '2d';\r\n    model.options.label = model.label;\r\n    model.textureHandle = textureHandle;\r\n    model.handle = model.textureHandle.createView(model.options);\r\n    model.bindGroupLayoutEntry.texture.viewDimension = model.options.dimension;\r\n    const tDetails = _Types_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getDetailsFromTextureFormat(options.format);\r\n    model.bindGroupLayoutEntry.texture.sampleType = tDetails.sampleType;\r\n    model.bindGroupTime.modified();\r\n  };\r\n  publicAPI.getBindGroupEntry = () => {\r\n    const foo = {\r\n      resource: publicAPI.getHandle()\r\n    };\r\n    return foo;\r\n  };\r\n  publicAPI.getShaderCode = (binding, group) => {\r\n    let ttype = 'f32';\r\n    if (model.bindGroupLayoutEntry.texture.sampleType === 'sint') {\r\n      ttype = 'i32';\r\n    } else if (model.bindGroupLayoutEntry.texture.sampleType === 'uint') {\r\n      ttype = 'u32';\r\n    }\r\n    let result = `@binding(${binding}) @group(${group}) var ${model.label}: texture_${model.options.dimension}<${ttype}>;`;\r\n    if (model.bindGroupLayoutEntry.texture.sampleType === 'depth') {\r\n      result = `@binding(${binding}) @group(${group}) var ${model.label}: texture_depth_${model.options.dimension};`;\r\n    }\r\n    return result;\r\n  };\r\n  publicAPI.addSampler = (device, options) => {\r\n    const newSamp = _Sampler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance({\r\n      label: `${model.label}Sampler`\r\n    });\r\n    newSamp.create(device, options);\r\n    publicAPI.setSampler(newSamp);\r\n  };\r\n  publicAPI.getBindGroupTime = () => {\r\n    // check if the handle changed\r\n    if (model.texture && model.texture.getHandle() !== model.textureHandle) {\r\n      model.textureHandle = model.texture.getHandle();\r\n      model.handle = model.textureHandle.createView(model.options);\r\n      model.bindGroupTime.modified();\r\n    }\r\n    return model.bindGroupTime;\r\n  };\r\n\r\n  // if the texture has changed then get a new view\r\n  publicAPI.getHandle = () => {\r\n    if (model.texture && model.texture.getHandle() !== model.textureHandle) {\r\n      model.textureHandle = model.texture.getHandle();\r\n      model.handle = model.textureHandle.createView(model.options);\r\n      model.bindGroupTime.modified();\r\n    }\r\n    return model.handle;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  texture: null,\r\n  handle: null,\r\n  sampler: null,\r\n  label: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Object methods\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n  model.bindGroupLayoutEntry = {\r\n    /* eslint-disable no-undef */\r\n    visibility: GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT,\r\n    /* eslint-enable no-undef */\r\n    texture: {\r\n      sampleType: 'float',\r\n      viewDimension: '2d'\r\n      // multisampled: false,\r\n    }\r\n  };\r\n\r\n  model.bindGroupTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.bindGroupTime, {\r\n    mtime: 0\r\n  });\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['bindGroupTime', 'texture']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['bindGroupLayoutEntry', 'label', 'sampler']);\r\n  vtkWebGPUTextureView(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend);\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUTextureView$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/TextureView.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Types.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUTypes)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUDevice static functions\r\n//\r\n// WebGPU uses types in a many places and calls, and often those types\r\n// need to be associated with byte sizes, alignments, native arrays etc.\r\n// The folowing methods are designed to help vtk.js introspect those types.\r\n// WebGPU currently tends to use multiple type formats:\r\n//  - buffer types such as float32x4\r\n//  - shader types suchs as vec4<f32>\r\n//  - texture types such as rgba32float\r\n// ----------------------------------------------------------------------------\r\n\r\n// see https://gpuweb.github.io/gpuweb/#texture-formats\r\n// for possible formats, there are a lot of them\r\nconst textureDetails = {\r\n  // 8-bit formats\r\n  r8unorm: {\r\n    numComponents: 1,\r\n    nativeType: Uint8Array,\r\n    stride: 1,\r\n    elementSize: 1,\r\n    sampleType: 'float'\r\n  },\r\n  r8snorm: {\r\n    numComponents: 1,\r\n    nativeType: Int8Array,\r\n    stride: 1,\r\n    elementSize: 1,\r\n    sampleType: 'float'\r\n  },\r\n  r8uint: {\r\n    numComponents: 1,\r\n    nativeType: Uint8Array,\r\n    stride: 1,\r\n    elementSize: 1,\r\n    sampleType: 'uint'\r\n  },\r\n  r8sint: {\r\n    numComponents: 1,\r\n    nativeType: Int8Array,\r\n    stride: 1,\r\n    elementSize: 1,\r\n    sampleType: 'sint'\r\n  },\r\n  // 16-bit formats\r\n  r16uint: {\r\n    numComponents: 1,\r\n    nativeType: Uint16Array,\r\n    stride: 2,\r\n    elementSize: 2,\r\n    sampleType: 'uint'\r\n  },\r\n  r16sint: {\r\n    numComponents: 1,\r\n    nativeType: Int16Array,\r\n    stride: 2,\r\n    elementSize: 2,\r\n    sampleType: 'sint'\r\n  },\r\n  r16float: {\r\n    numComponents: 1,\r\n    nativeType: Float32Array,\r\n    stride: 2,\r\n    elementSize: 2,\r\n    sampleType: 'float'\r\n  },\r\n  rg8unorm: {\r\n    numComponents: 2,\r\n    nativeType: Uint8Array,\r\n    stride: 2,\r\n    elementSize: 1,\r\n    sampleType: 'float'\r\n  },\r\n  rg8snorm: {\r\n    numComponents: 2,\r\n    nativeType: Int8Array,\r\n    stride: 2,\r\n    elementSize: 1,\r\n    sampleType: 'float'\r\n  },\r\n  rg8uint: {\r\n    numComponents: 2,\r\n    nativeType: Uint8Array,\r\n    stride: 2,\r\n    elementSize: 1,\r\n    sampleType: 'uint'\r\n  },\r\n  rg8sint: {\r\n    numComponents: 2,\r\n    nativeType: Int8Array,\r\n    stride: 2,\r\n    elementSize: 1,\r\n    sampleType: 'sint'\r\n  },\r\n  // 32-bit formats\r\n  r32uint: {\r\n    numComponents: 1,\r\n    nativeType: Uint32Array,\r\n    stride: 4,\r\n    elementSize: 4,\r\n    sampleType: 'uint'\r\n  },\r\n  r32sint: {\r\n    numComponents: 1,\r\n    nativeType: Int32Array,\r\n    stride: 4,\r\n    elementSize: 4,\r\n    sampleType: 'sint'\r\n  },\r\n  r32float: {\r\n    numComponents: 1,\r\n    nativeType: Float32Array,\r\n    stride: 4,\r\n    elementSize: 4,\r\n    sampleType: 'unfilterable-float'\r\n  },\r\n  rg16uint: {\r\n    numComponents: 2,\r\n    nativeType: Uint16Array,\r\n    stride: 4,\r\n    elementSize: 2,\r\n    sampleType: 'uint'\r\n  },\r\n  rg16sint: {\r\n    numComponents: 2,\r\n    nativeType: Int16Array,\r\n    stride: 4,\r\n    elementSize: 2,\r\n    sampleType: 'sint'\r\n  },\r\n  rg16float: {\r\n    numComponents: 2,\r\n    nativeType: Float32Array,\r\n    stride: 4,\r\n    elementSize: 2,\r\n    sampleType: 'float'\r\n  },\r\n  rgba8unorm: {\r\n    numComponents: 4,\r\n    nativeType: Uint8Array,\r\n    stride: 4,\r\n    elementSize: 1,\r\n    sampleType: 'float'\r\n  },\r\n  'rgba8unorm-srgb': {\r\n    numComponents: 4,\r\n    nativeType: Uint8Array,\r\n    stride: 4,\r\n    elementSize: 1,\r\n    sampleType: 'float'\r\n  },\r\n  rgba8snorm: {\r\n    numComponents: 4,\r\n    nativeType: Int8Array,\r\n    stride: 4,\r\n    elementSize: 1,\r\n    sampleType: 'float'\r\n  },\r\n  rgba8uint: {\r\n    numComponents: 4,\r\n    nativeType: Uint8Array,\r\n    stride: 4,\r\n    elementSize: 1,\r\n    sampleType: 'uint'\r\n  },\r\n  rgba8sint: {\r\n    numComponents: 4,\r\n    nativeType: Int8Array,\r\n    stride: 4,\r\n    elementSize: 1,\r\n    sampleType: 'sint'\r\n  },\r\n  bgra8unorm: {\r\n    numComponents: 4,\r\n    nativeType: Uint8Array,\r\n    stride: 4,\r\n    elementSize: 1,\r\n    sampleType: 'float'\r\n  },\r\n  'bgra8unorm-srgb': {\r\n    numComponents: 4,\r\n    nativeType: Uint8Array,\r\n    stride: 4,\r\n    elementSize: 1,\r\n    sampleType: 'float'\r\n  },\r\n  // Packed 32-bit formats\r\n  rgb9e5ufloat: {\r\n    numComponents: 4,\r\n    nativeType: Uint32Array,\r\n    stride: 4,\r\n    sampleType: 'float'\r\n  },\r\n  rgb10a2unorm: {\r\n    numComponents: 4,\r\n    nativeType: Uint32Array,\r\n    stride: 4,\r\n    sampleType: 'float'\r\n  },\r\n  rg11b10ufloat: {\r\n    numComponents: 4,\r\n    nativeType: Float32Array,\r\n    stride: 4,\r\n    sampleType: 'float'\r\n  },\r\n  // 64-bit formats\r\n  rg32uint: {\r\n    numComponents: 2,\r\n    nativeType: Uint32Array,\r\n    stride: 8,\r\n    elementSize: 4,\r\n    sampleType: 'uint'\r\n  },\r\n  rg32sint: {\r\n    numComponents: 2,\r\n    nativeType: Int32Array,\r\n    stride: 8,\r\n    elementSize: 4,\r\n    sampleType: 'sint'\r\n  },\r\n  rg32float: {\r\n    numComponents: 2,\r\n    nativeType: Float32Array,\r\n    stride: 8,\r\n    elementSize: 4,\r\n    sampleType: 'unfilterable-float'\r\n  },\r\n  rgba16uint: {\r\n    numComponents: 4,\r\n    nativeType: Uint16Array,\r\n    stride: 8,\r\n    elementSize: 2,\r\n    sampleType: 'uint'\r\n  },\r\n  rgba16sint: {\r\n    numComponents: 4,\r\n    nativeType: Int16Array,\r\n    stride: 8,\r\n    elementSize: 2,\r\n    sampleType: 'sint'\r\n  },\r\n  rgba16float: {\r\n    numComponents: 4,\r\n    nativeType: Float32Array,\r\n    stride: 8,\r\n    elementSize: 2,\r\n    sampleType: 'float'\r\n  },\r\n  // 128-bit formats\r\n  rgba32uint: {\r\n    numComponents: 4,\r\n    nativeType: Uint32Array,\r\n    stride: 16,\r\n    elementSize: 4,\r\n    sampleType: 'uint'\r\n  },\r\n  rgba32sint: {\r\n    numComponents: 4,\r\n    nativeType: Int32Array,\r\n    stride: 16,\r\n    elementSize: 4,\r\n    sampleType: 'sint'\r\n  },\r\n  rgba32float: {\r\n    numComponents: 4,\r\n    nativeType: Float32Array,\r\n    stride: 16,\r\n    elementSize: 4,\r\n    sampleType: 'unfilterable-float'\r\n  },\r\n  // Depth and stencil formats\r\n  stencil8: {\r\n    numComponents: 1,\r\n    nativeType: Uint8Array,\r\n    stride: 1,\r\n    elementSize: 1,\r\n    sampleType: 'uint'\r\n  },\r\n  depth16unorm: {\r\n    numComponents: 1,\r\n    nativeType: Uint16Array,\r\n    stride: 2,\r\n    elementSize: 2,\r\n    sampleType: 'depth'\r\n  },\r\n  depth24plus: {\r\n    numComponents: 1,\r\n    nativeType: Uint32Array,\r\n    stride: 4,\r\n    elementSize: 3,\r\n    sampleType: 'depth'\r\n  },\r\n  'depth24plus-stencil8': {\r\n    numComponents: 2,\r\n    nativeType: Uint32Array,\r\n    stride: 4,\r\n    sampleType: 'mixed'\r\n  },\r\n  depth32float: {\r\n    numComponents: 1,\r\n    nativeType: Float32Array,\r\n    stride: 4,\r\n    elementSize: 4,\r\n    sampleType: 'depth'\r\n  }\r\n};\r\nfunction getDetailsFromTextureFormat(format) {\r\n  if (!format || format.length < 6) return 0;\r\n  if (format in textureDetails === true) {\r\n    return textureDetails[format];\r\n  }\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)(`unknown format ${format}`);\r\n  return null;\r\n}\r\n\r\n// see https://gpuweb.github.io/gpuweb/#enumdef-gpuvertexformat\r\n// for possible formats\r\nfunction getByteStrideFromBufferFormat(format) {\r\n  if (!format || format.length < 5) return 0;\r\n\r\n  // options are x2, x3, x4 or nothing\r\n  let numComp = 1;\r\n  if (format[format.length - 2] === 'x') {\r\n    numComp = Number(format[format.length - 1]);\r\n  }\r\n  const sizeStart = numComp === 1 ? format.length - 1 : format.length - 3;\r\n  // options are 8, 16, 32 resulting in 8, 6, 2 as the last char\r\n  // plugged into the formula below gives 1, 2, 4 respectively\r\n  const num = Number(format[sizeStart]);\r\n  if (Number.isNaN(num)) {\r\n    (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)(`unknown format ${format}`);\r\n    return 0;\r\n  }\r\n  const typeSize = 5 - num / 2;\r\n  return numComp * typeSize;\r\n}\r\n\r\n// see https://gpuweb.github.io/gpuweb/#enumdef-gpuvertexformat\r\n// for possible formats\r\nfunction getNumberOfComponentsFromBufferFormat(format) {\r\n  if (!format || format.length < 5) return 0;\r\n\r\n  // options are x2, x3, x4 or nothing\r\n  let numComp = 1;\r\n  if (format[format.length - 2] === 'x') {\r\n    numComp = Number(format[format.length - 1]);\r\n  }\r\n  return numComp;\r\n}\r\n\r\n// see https://gpuweb.github.io/gpuweb/#enumdef-gpuvertexformat\r\n// for possible formats\r\nfunction getNativeTypeFromBufferFormat(format) {\r\n  if (!format || format.length < 5) return 0;\r\n\r\n  // raw types are Uint Int or Float as follows\r\n  let result;\r\n  if (format[0] === 'f') {\r\n    result = 'Float';\r\n  } else if (format[0] === 's') {\r\n    result = 'Int';\r\n  } else if (format[0] === 'u') {\r\n    result = 'Uint';\r\n  } else {\r\n    (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)(`unknown format ${format}`);\r\n    return undefined;\r\n  }\r\n\r\n  // options are 8, 16, 32 resulting in 8, 6, 2 as the last char\r\n  // plugged into the formula below gives 1, 2, 4 respectively\r\n  const base = format.split('x')[0];\r\n  const num = Number(base[base.length - 1]);\r\n  if (Number.isNaN(num)) {\r\n    (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)(`unknown format ${format}`);\r\n    return undefined;\r\n  }\r\n  result += 8 * (5 - num / 2);\r\n  result += 'Array';\r\n  return result;\r\n}\r\nfunction getShaderTypeFromBufferFormat(format) {\r\n  let dataType;\r\n  if (format[0] === 'f' || format[1] === 'n') {\r\n    dataType = 'f32';\r\n  } else if (format[0] === 's' && format[1] === 'i') {\r\n    dataType = 'i32';\r\n  } else if (format[0] === 'u' && format[1] === 'i') {\r\n    dataType = 'u32';\r\n  } else {\r\n    (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)(`unknown format ${format}`);\r\n    return undefined;\r\n  }\r\n\r\n  // options are x2, x3, x4 or nothing\r\n  let numComp = 1;\r\n  if (format[format.length - 2] === 'x') {\r\n    numComp = Number(format[format.length - 1]);\r\n  }\r\n  if (numComp === 4) return `vec4<${dataType}>`;\r\n  if (numComp === 3) return `vec3<${dataType}>`;\r\n  if (numComp === 2) return `vec2<${dataType}>`;\r\n  return dataType;\r\n}\r\nfunction getByteStrideFromShaderFormat(format) {\r\n  if (!format) return 0;\r\n  let numComp = 1;\r\n  if (format.substring(0, 3) === 'vec') {\r\n    numComp = Number(format[3]);\r\n  } else if (format.substring(0, 3) === 'mat') {\r\n    numComp = format[3] * format[5];\r\n  }\r\n  const typeSize = 4;\r\n  return numComp * typeSize;\r\n}\r\nfunction getNativeTypeFromShaderFormat(format) {\r\n  if (!format) return undefined;\r\n  if (format.includes('f32')) return 'Float32Array';\r\n  if (format.includes('i32')) return 'Int32Array';\r\n  if (format.includes('u32')) return 'Uint32Array';\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.r)(`unknown format ${format}`);\r\n  return undefined;\r\n}\r\nvar vtkWebGPUTypes = {\r\n  getDetailsFromTextureFormat,\r\n  getByteStrideFromBufferFormat,\r\n  getNumberOfComponentsFromBufferFormat,\r\n  getNativeTypeFromBufferFormat,\r\n  getShaderTypeFromBufferFormat,\r\n  getByteStrideFromShaderFormat,\r\n  getNativeTypeFromShaderFormat\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/Types.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/UniformBuffer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUUniformBuffer$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _BufferManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BufferManager.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Types.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Types.js\");\n\r\n\r\n\r\n\r\nconst {\r\n  BufferUsage\r\n} = _BufferManager_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\nconst {\r\n  vtkErrorMacro\r\n} = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m;\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUUniformBuffer methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUUniformBuffer(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUUniformBuffer');\r\n  publicAPI.addEntry = (name, type) => {\r\n    if (model._bufferEntryNames.has(name)) {\r\n      vtkErrorMacro(`entry named ${name} already exists`);\r\n      return;\r\n    }\r\n    model.sortDirty = true;\r\n    model._bufferEntryNames.set(name, model.bufferEntries.length);\r\n    model.bufferEntries.push({\r\n      name,\r\n      type,\r\n      sizeInBytes: _Types_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getByteStrideFromShaderFormat(type),\r\n      offset: -1,\r\n      nativeType: _Types_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getNativeTypeFromShaderFormat(type),\r\n      packed: false\r\n    });\r\n  };\r\n\r\n  // UBOs have layout rules in terms of how memory is aligned so we\r\n  // have to be careful how we order the entries. For example a vec4<f32>\r\n  // must be aligned on a 16 byte offset, etc. See\r\n  // https://gpuweb.github.io/gpuweb/wgsl/#memory-layouts\r\n  // for more details. Right now you can create a situation that would fail\r\n  // in the future we could add dummy spacer entries where needed to\r\n  // handle alignment issues\r\n  publicAPI.sortBufferEntries = () => {\r\n    if (!model.sortDirty) {\r\n      return;\r\n    }\r\n    let currOffset = 0;\r\n    const newEntries = [];\r\n\r\n    // compute the max alignment, this is required as WebGPU defines a UBO to have\r\n    // a size that is a multiple of the maxAlignment\r\n    let maxAlignment = 4;\r\n    for (let i = 0; i < model.bufferEntries.length; i++) {\r\n      const entry = model.bufferEntries[i];\r\n      if (entry.sizeInBytes % 16 === 0) {\r\n        maxAlignment = Math.max(16, maxAlignment);\r\n      }\r\n      if (entry.sizeInBytes % 8 === 0) {\r\n        maxAlignment = Math.max(8, maxAlignment);\r\n      }\r\n    }\r\n\r\n    // pack anything whose size is a multiple of 16 bytes first\r\n    // this includes a couple types that don't require 16 byte alignment\r\n    // such as mat2x2<f32> but that is OK\r\n    for (let i = 0; i < model.bufferEntries.length; i++) {\r\n      const entry = model.bufferEntries[i];\r\n      if (entry.packed === false && entry.sizeInBytes % 16 === 0) {\r\n        entry.packed = true;\r\n        entry.offset = currOffset;\r\n        newEntries.push(entry);\r\n        currOffset += entry.sizeInBytes;\r\n      }\r\n    }\r\n\r\n    // now it gets tough, we have the following common types (f32, i32, u32)\r\n    // - vec2<f32> 8 byte size, 8 byte alignment\r\n    // - vec3<f32> 12 byte size, 16 byte alignment\r\n    // - f32 4 byte size, 4 byte alignment\r\n\r\n    // try adding 12 byte, 4 byte pairs\r\n    for (let i = 0; i < model.bufferEntries.length; i++) {\r\n      const entry = model.bufferEntries[i];\r\n      if (entry.packed === false && entry.sizeInBytes === 12) {\r\n        for (let i2 = 0; i2 < model.bufferEntries.length; i2++) {\r\n          const entry2 = model.bufferEntries[i2];\r\n          if (entry2.packed === false && entry2.sizeInBytes === 4) {\r\n            entry.packed = true;\r\n            entry.offset = currOffset;\r\n            newEntries.push(entry);\r\n            currOffset += entry.sizeInBytes;\r\n            entry2.packed = true;\r\n            entry2.offset = currOffset;\r\n            newEntries.push(entry2);\r\n            currOffset += entry2.sizeInBytes;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // try adding 8 byte, 8 byte pairs\r\n    for (let i = 0; i < model.bufferEntries.length; i++) {\r\n      const entry = model.bufferEntries[i];\r\n      if (!entry.packed && entry.sizeInBytes % 8 === 0) {\r\n        for (let i2 = i + 1; i2 < model.bufferEntries.length; i2++) {\r\n          const entry2 = model.bufferEntries[i2];\r\n          if (!entry2.packed && entry2.sizeInBytes % 8 === 0) {\r\n            entry.packed = true;\r\n            entry.offset = currOffset;\r\n            newEntries.push(entry);\r\n            currOffset += entry.sizeInBytes;\r\n            entry2.packed = true;\r\n            entry2.offset = currOffset;\r\n            newEntries.push(entry2);\r\n            currOffset += entry2.sizeInBytes;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // try adding 8 byte, 4 byte 4 byte triplets\r\n    for (let i = 0; i < model.bufferEntries.length; i++) {\r\n      const entry = model.bufferEntries[i];\r\n      if (!entry.packed && entry.sizeInBytes % 8 === 0) {\r\n        let found = false;\r\n        for (let i2 = 0; !found && i2 < model.bufferEntries.length; i2++) {\r\n          const entry2 = model.bufferEntries[i2];\r\n          if (!entry2.packed && entry2.sizeInBytes === 4) {\r\n            for (let i3 = i2 + 1; i3 < model.bufferEntries.length; i3++) {\r\n              const entry3 = model.bufferEntries[i3];\r\n              if (!entry3.packed && entry3.sizeInBytes === 4) {\r\n                entry.packed = true;\r\n                entry.offset = currOffset;\r\n                newEntries.push(entry);\r\n                currOffset += entry.sizeInBytes;\r\n                entry2.packed = true;\r\n                entry2.offset = currOffset;\r\n                newEntries.push(entry2);\r\n                currOffset += entry2.sizeInBytes;\r\n                entry3.packed = true;\r\n                entry3.offset = currOffset;\r\n                newEntries.push(entry3);\r\n                currOffset += entry3.sizeInBytes;\r\n                found = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Add anything remaining that is larger than 4 bytes and hope we get lucky.\r\n    // Likely if there is more than one item added here it will result\r\n    // in a failed UBO\r\n    for (let i = 0; i < model.bufferEntries.length; i++) {\r\n      const entry = model.bufferEntries[i];\r\n      if (!entry.packed && entry.sizeInBytes > 4) {\r\n        entry.packed = true;\r\n        entry.offset = currOffset;\r\n        newEntries.push(entry);\r\n        currOffset += entry.sizeInBytes;\r\n      }\r\n    }\r\n\r\n    // finally add remaining 4 byte items\r\n    for (let i = 0; i < model.bufferEntries.length; i++) {\r\n      const entry = model.bufferEntries[i];\r\n      if (!entry.packed) {\r\n        entry.packed = true;\r\n        entry.offset = currOffset;\r\n        newEntries.push(entry);\r\n        currOffset += entry.sizeInBytes;\r\n      }\r\n    }\r\n\r\n    // update entries and entryNames\r\n    model.bufferEntries = newEntries;\r\n    model._bufferEntryNames.clear();\r\n    for (let i = 0; i < model.bufferEntries.length; i++) {\r\n      model._bufferEntryNames.set(model.bufferEntries[i].name, i);\r\n    }\r\n    model.sizeInBytes = currOffset;\r\n    model.sizeInBytes = maxAlignment * Math.ceil(model.sizeInBytes / maxAlignment);\r\n    model.sortDirty = false;\r\n  };\r\n  publicAPI.sendIfNeeded = device => {\r\n    if (!model.UBO) {\r\n      const req = {\r\n        nativeArray: model.Float32Array,\r\n        usage: BufferUsage.UniformArray,\r\n        label: model.label\r\n      };\r\n      model.UBO = device.getBufferManager().getBuffer(req);\r\n      model.bindGroupTime.modified();\r\n      model.sendDirty = false;\r\n    }\r\n\r\n    // send data down if needed\r\n    if (model.sendDirty) {\r\n      device.getHandle().queue.writeBuffer(model.UBO.getHandle(), 0, model.arrayBuffer, 0, model.sizeInBytes);\r\n      model.sendDirty = false;\r\n    }\r\n\r\n    // always updated as mappers depend on this time\r\n    // it is more of a sentIfNeededTime\r\n    model.sendTime.modified();\r\n  };\r\n  publicAPI.createView = type => {\r\n    if (type in model === false) {\r\n      if (!model.arrayBuffer) {\r\n        model.arrayBuffer = new ArrayBuffer(model.sizeInBytes);\r\n      }\r\n      model[type] = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newTypedArray(type, model.arrayBuffer);\r\n    }\r\n  };\r\n  publicAPI.setValue = (name, val) => {\r\n    publicAPI.sortBufferEntries();\r\n    const idx = model._bufferEntryNames.get(name);\r\n    if (idx === undefined) {\r\n      vtkErrorMacro(`entry named ${name} not found in UBO`);\r\n      return;\r\n    }\r\n    const entry = model.bufferEntries[idx];\r\n    publicAPI.createView(entry.nativeType);\r\n    const view = model[entry.nativeType];\r\n    if (entry.lastValue !== val) {\r\n      view[entry.offset / view.BYTES_PER_ELEMENT] = val;\r\n      model.sendDirty = true;\r\n    }\r\n    entry.lastValue = val;\r\n  };\r\n  publicAPI.setArray = (name, arr) => {\r\n    publicAPI.sortBufferEntries();\r\n    const idx = model._bufferEntryNames.get(name);\r\n    if (idx === undefined) {\r\n      vtkErrorMacro(`entry named ${name} not found in UBO`);\r\n      return;\r\n    }\r\n    const entry = model.bufferEntries[idx];\r\n    publicAPI.createView(entry.nativeType);\r\n    const view = model[entry.nativeType];\r\n    let changed = false;\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (!entry.lastValue || entry.lastValue[i] !== arr[i]) {\r\n        view[entry.offset / view.BYTES_PER_ELEMENT + i] = arr[i];\r\n        changed = true;\r\n      }\r\n    }\r\n    if (changed) {\r\n      model.sendDirty = true;\r\n      entry.lastValue = [...arr];\r\n    }\r\n  };\r\n  publicAPI.getBindGroupEntry = () => {\r\n    const foo = {\r\n      resource: {\r\n        buffer: model.UBO.getHandle()\r\n      }\r\n    };\r\n    return foo;\r\n  };\r\n  publicAPI.getSendTime = () => model.sendTime.getMTime();\r\n  publicAPI.getShaderCode = (binding, group) => {\r\n    // sort the entries\r\n    publicAPI.sortBufferEntries();\r\n    const lines = [`struct ${model.label}Struct\\n{`];\r\n    for (let i = 0; i < model.bufferEntries.length; i++) {\r\n      const entry = model.bufferEntries[i];\r\n      lines.push(`  ${entry.name}: ${entry.type},`);\r\n    }\r\n    lines.push(`};\\n@binding(${binding}) @group(${group}) var<uniform> ${model.label}: ${model.label}Struct;`);\r\n    return lines.join('\\n');\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  bufferEntries: null,\r\n  bufferEntryNames: null,\r\n  sizeInBytes: 0,\r\n  label: null,\r\n  bindGroupLayoutEntry: null,\r\n  bindGroupEntry: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(publicAPI, model);\r\n\r\n  // Internal objects\r\n  model._bufferEntryNames = new Map();\r\n  model.bufferEntries = [];\r\n\r\n  // default UBO desc\r\n  model.bindGroupLayoutEntry = model.bindGroupLayoutEntry || {\r\n    buffer: {\r\n      type: 'uniform'\r\n    }\r\n  };\r\n  model.sendTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.sendTime, {\r\n    mtime: 0\r\n  });\r\n  model.bindGroupTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.bindGroupTime, {\r\n    mtime: 0\r\n  });\r\n  model.sendDirty = true;\r\n  model.sortDirty = true;\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.get(publicAPI, model, ['binding', 'bindGroupTime']);\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['bindGroupLayoutEntry', 'device', 'label', 'sizeInBytes']);\r\n\r\n  // Object methods\r\n  vtkWebGPUUniformBuffer(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkWebGPUUniformBuffer');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUUniformBuffer$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/UniformBuffer.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/VertexInput.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUVertexInput$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Types.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Types.js\");\n\r\n\r\n\r\nfunction arraysEqual(a, b) {\r\n  if (a === b) return true;\r\n  if (a == null || b == null) return false;\r\n  if (a.length !== b.length) return false;\r\n  for (let i = 0; i < a.length; ++i) {\r\n    if (!b.includes(a[i])) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUVertexInput methods\r\n// ----------------------------------------------------------------------------\r\nfunction vtkWebGPUVertexInput(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUVertexInput');\r\n  publicAPI.addBuffer = function (buffer, inames) {\r\n    let stepMode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'vertex';\r\n    let names = inames;\r\n    if (!Array.isArray(names)) {\r\n      names = [names];\r\n    }\r\n    // only add if it is a new setting\r\n    for (let i = 0; i < model.inputs.length; i++) {\r\n      if (arraysEqual(model.inputs[i].names, names)) {\r\n        if (model.inputs[i].buffer === buffer) {\r\n          return;\r\n        }\r\n        model.inputs[i].buffer = buffer;\r\n        return;\r\n      }\r\n    }\r\n\r\n    // when adding a new entry, make sure we sort the array\r\n    // as the order is important to the shader and must always\r\n    // be the same, so alphabetical is an easy option\r\n    model.inputs.push({\r\n      buffer,\r\n      stepMode,\r\n      names\r\n    });\r\n    model.inputs = model.inputs.sort((v1, v2) => {\r\n      if (v1.names[0] < v2.names[0]) {\r\n        return -1;\r\n      }\r\n      if (v1.names[0] > v2.names[0]) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n  };\r\n  publicAPI.removeBufferIfPresent = name => {\r\n    for (let i = 0; i < model.inputs.length; i++) {\r\n      if (model.inputs[i].names.includes(name)) {\r\n        model.inputs.splice(i, 1);\r\n      }\r\n    }\r\n  };\r\n  publicAPI.getBuffer = name => {\r\n    for (let i = 0; i < model.inputs.length; i++) {\r\n      if (model.inputs[i].names.includes(name)) {\r\n        return model.inputs[i].buffer;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n  publicAPI.hasAttribute = name => {\r\n    for (let i = 0; i < model.inputs.length; i++) {\r\n      if (model.inputs[i].names.includes(name)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  publicAPI.getAttributeTime = name => {\r\n    for (let i = 0; i < model.inputs.length; i++) {\r\n      if (model.inputs[i].names.includes(name)) {\r\n        return model.inputs[i].buffer.getSourceTime();\r\n      }\r\n    }\r\n    return 0;\r\n  };\r\n  publicAPI.getShaderCode = () => {\r\n    let result = '';\r\n    let nameCount = 0;\r\n    for (let i = 0; i < model.inputs.length; i++) {\r\n      for (let nm = 0; nm < model.inputs[i].names.length; nm++) {\r\n        const arrayInfo = model.inputs[i].buffer.getArrayInformation()[nm];\r\n        const type = _Types_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getShaderTypeFromBufferFormat(arrayInfo.format);\r\n        if (nameCount > 0) {\r\n          result += ',\\n';\r\n        }\r\n        result = `${result}  @location(${nameCount}) ${model.inputs[i].names[nm]} : ${type}`;\r\n        nameCount++;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n  publicAPI.getVertexInputInformation = () => {\r\n    const info = {};\r\n    if (model.inputs.length) {\r\n      const vertexBuffers = [];\r\n      let nameCount = 0;\r\n      for (let i = 0; i < model.inputs.length; i++) {\r\n        const buf = model.inputs[i].buffer;\r\n        const buffer = {\r\n          arrayStride: buf.getStrideInBytes(),\r\n          stepMode: model.inputs[i].stepMode,\r\n          attributes: []\r\n        };\r\n        const arrayInfo = buf.getArrayInformation();\r\n        for (let nm = 0; nm < model.inputs[i].names.length; nm++) {\r\n          buffer.attributes.push({\r\n            shaderLocation: nameCount,\r\n            offset: arrayInfo[nm].offset,\r\n            format: arrayInfo[nm].format\r\n          });\r\n          nameCount++;\r\n        }\r\n        vertexBuffers.push(buffer);\r\n      }\r\n      info.buffers = vertexBuffers;\r\n    }\r\n    return info;\r\n  };\r\n  publicAPI.bindBuffers = renderEncoder => {\r\n    for (let i = 0; i < model.inputs.length; i++) {\r\n      renderEncoder.setVertexBuffer(i, model.inputs[i].buffer.getHandle());\r\n    }\r\n    if (model.indexBuffer) {\r\n      renderEncoder.setIndexBuffer(model.indexBuffer.getHandle(), model.indexBuffer.getArrayInformation()[0].format);\r\n    }\r\n  };\r\n  publicAPI.getReady = () => {};\r\n  publicAPI.releaseGraphicsResources = () => {\r\n    if (model.created) {\r\n      model.inputs = [];\r\n      model.bindingDescriptions = [];\r\n      model.attributeDescriptions = [];\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\nconst DEFAULT_VALUES = {\r\n  inputs: null,\r\n  bindingDescriptions: false,\r\n  attributeDescriptions: null,\r\n  indexBuffer: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.o)(publicAPI, model);\r\n  model.bindingDescriptions = [];\r\n  model.attributeDescriptions = [];\r\n  model.inputs = [];\r\n  (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.e)(publicAPI, model, ['created', 'device', 'handle', 'indexBuffer']);\r\n\r\n  // For more macro methods, see \"Sources/macros.js\"\r\n  // Object specific methods\r\n  vtkWebGPUVertexInput(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\nconst newInstance = (0,_macros2_js__WEBPACK_IMPORTED_MODULE_0__.n)(extend, 'vtkWebGPUVertexInput');\r\n\r\n// ----------------------------------------------------------------------------\r\nvar vtkWebGPUVertexInput$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/VertexInput.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ViewNodeFactory.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ vtkWebGPUViewNodeFactory$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance),\n/* harmony export */   registerOverride: () => (/* binding */ registerOverride)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ "./node_modules/@kitware/vtk.js/macros2.js");\n/* harmony import */ var _SceneGraph_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../SceneGraph/ViewNodeFactory.js */ "./node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory.js");\n\r\n\r\n\r\nconst CLASS_MAPPING = Object.create(null);\r\nfunction registerOverride(className, fn) {\r\n  CLASS_MAPPING[className] = fn;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUViewNodeFactory methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUViewNodeFactory(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push(\'vtkWebGPUViewNodeFactory\');\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Static class mapping shared across instances\r\n  model.overrides = CLASS_MAPPING;\r\n\r\n  // Inheritance\r\n  _SceneGraph_ViewNodeFactory_js__WEBPACK_IMPORTED_MODULE_1__["default"].extend(publicAPI, model, initialValues);\r\n\r\n  // Object methods\r\n  vtkWebGPUViewNodeFactory(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, \'vtkWebGPUViewNodeFactory\');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUViewNodeFactory$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/ViewNodeFactory.js?')},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/VolumePass.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUVolumePass$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Common/DataModel/PolyData.js */ \"./node_modules/@kitware/vtk.js/Common/DataModel/PolyData.js\");\n/* harmony import */ var _Core_Property_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/Property.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/Property.js\");\n/* harmony import */ var _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../SceneGraph/RenderPass.js */ \"./node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js\");\n/* harmony import */ var _BufferManager_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./BufferManager.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/BufferManager.js\");\n/* harmony import */ var _SimpleMapper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SimpleMapper.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/SimpleMapper.js\");\n/* harmony import */ var _RenderEncoder_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./RenderEncoder.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/RenderEncoder.js\");\n/* harmony import */ var _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ShaderCache.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderCache.js\");\n/* harmony import */ var _Texture_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Texture.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Texture.js\");\n/* harmony import */ var _UniformBuffer_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./UniformBuffer.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/UniformBuffer.js\");\n/* harmony import */ var _FullScreenQuad_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./FullScreenQuad.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/FullScreenQuad.js\");\n/* harmony import */ var _VolumePassFSQ_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./VolumePassFSQ.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/VolumePassFSQ.js\");\n/* harmony import */ var _Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../Common/Core/Math/index.js */ \"./node_modules/@kitware/vtk.js/Common/Core/Math/index.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst {\r\n  Representation\r\n} = _Core_Property_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\r\nconst {\r\n  BufferUsage,\r\n  PrimitiveTypes\r\n} = _BufferManager_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\r\n\r\n// The volume rendering pass consists of two sub passes. The first\r\n// (depthRange) renders polygonal cubes for the volumes to compute min and\r\n// max bounds in depth for the image. This is then fed into the second pass\r\n// (final) which actually does the raycasting between those bounds sampling\r\n// the volumes along the way. So the first pass tends to be very fast whicle\r\n// the second is where most of the work is done.\r\n\r\n// given x then y then z ordering\r\n//\r\n//     2-----3\r\n//   / |   / |\r\n//  6-----7  |\r\n//  |  |  |  |\r\n//  |  0-----1\r\n//  |/    |/\r\n//  4-----5\r\n//\r\nconst cubeFaceTriangles = [[0, 4, 6], [0, 6, 2], [1, 3, 7], [1, 7, 5], [0, 5, 4], [0, 1, 5], [2, 6, 7], [2, 7, 3], [0, 3, 1], [0, 2, 3], [4, 5, 7], [4, 7, 6]];\r\nconst DepthBoundsFS = `\r\n//VTK::Renderer::Dec\r\n\r\n//VTK::Select::Dec\r\n\r\n//VTK::VolumePass::Dec\r\n\r\n//VTK::TCoord::Dec\r\n\r\n//VTK::RenderEncoder::Dec\r\n\r\n//VTK::Mapper::Dec\r\n\r\n//VTK::IOStructs::Dec\r\n\r\n@fragment\r\nfn main(\r\n//VTK::IOStructs::Input\r\n)\r\n//VTK::IOStructs::Output\r\n{\r\n  var output : fragmentOutput;\r\n\r\n  //VTK::Select::Impl\r\n\r\n  //VTK::TCoord::Impl\r\n\r\n  //VTK::VolumePass::Impl\r\n\r\n  // use the maximum (closest) of the current value and the zbuffer\r\n  // the blend func will then take the min to find the farthest stop value\r\n  var stopval: f32 = max(input.fragPos.z, textureLoad(opaquePassDepthTexture, vec2<i32>(i32(input.fragPos.x), i32(input.fragPos.y)), 0));\r\n\r\n  //VTK::RenderEncoder::Impl\r\n  return output;\r\n}\r\n`;\r\nconst volumeCopyFragTemplate = `\r\n//VTK::Renderer::Dec\r\n\r\n//VTK::Mapper::Dec\r\n\r\n//VTK::TCoord::Dec\r\n\r\n//VTK::RenderEncoder::Dec\r\n\r\n//VTK::IOStructs::Dec\r\n\r\n@fragment\r\nfn main(\r\n//VTK::IOStructs::Input\r\n)\r\n//VTK::IOStructs::Output\r\n{\r\n  var output: fragmentOutput;\r\n\r\n  var computedColor: vec4<f32> = textureSample(volumePassColorTexture,\r\n    volumePassColorTextureSampler, mapperUBO.tscale*input.tcoordVS);\r\n\r\n  //VTK::RenderEncoder::Impl\r\n  return output;\r\n}\r\n`;\r\n\r\n/* eslint-disable no-undef */\r\n/* eslint-disable no-bitwise */\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUVolumePass(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUVolumePass');\r\n\r\n  // create the required textures, encoders, FSQ etc\r\n  publicAPI.initialize = viewNode => {\r\n    if (!model._clearEncoder) {\r\n      publicAPI.createClearEncoder(viewNode);\r\n    }\r\n    if (!model._mergeEncoder) {\r\n      publicAPI.createMergeEncoder(viewNode);\r\n    }\r\n    if (!model._copyEncoder) {\r\n      publicAPI.createCopyEncoder(viewNode);\r\n    }\r\n    if (!model._depthRangeEncoder) {\r\n      publicAPI.createDepthRangeEncoder(viewNode);\r\n    }\r\n    if (!model.fullScreenQuad) {\r\n      model.fullScreenQuad = _VolumePassFSQ_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"].newInstance();\r\n      model.fullScreenQuad.setDevice(viewNode.getDevice());\r\n      model.fullScreenQuad.setTextureViews([...model._depthRangeEncoder.getColorTextureViews()]);\r\n    }\r\n    if (!model._volumeCopyQuad) {\r\n      model._volumeCopyQuad = _FullScreenQuad_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"].newInstance();\r\n      model._volumeCopyQuad.setPipelineHash('volpassfsq');\r\n      model._volumeCopyQuad.setDevice(viewNode.getDevice());\r\n      model._volumeCopyQuad.setFragmentShaderTemplate(volumeCopyFragTemplate);\r\n      model._copyUBO = _UniformBuffer_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].newInstance({\r\n        label: 'mapperUBO'\r\n      });\r\n      model._copyUBO.addEntry('tscale', 'vec2<f32>');\r\n      model._volumeCopyQuad.setUBO(model._copyUBO);\r\n      model._volumeCopyQuad.setTextureViews([model._colorTextureView]);\r\n    }\r\n  };\r\n  publicAPI.traverse = (renNode, viewNode) => {\r\n    if (model.deleted) {\r\n      return;\r\n    }\r\n\r\n    // we just render our delegates in order\r\n    model._currentParent = viewNode;\r\n\r\n    // create stuff we need\r\n    publicAPI.initialize(viewNode);\r\n\r\n    // determine if we are rendering a small size\r\n    publicAPI.computeTiming(viewNode);\r\n\r\n    // first render the boxes to generate a min max depth\r\n    // map for all the volumes\r\n    publicAPI.renderDepthBounds(renNode, viewNode);\r\n\r\n    // always mark true\r\n    model._firstGroup = true;\r\n    const device = viewNode.getDevice();\r\n\r\n    // determine how many volumes we can render at a time. We subtract\r\n    // 4 because we use know we use textures for min, max, ofun and tfun\r\n    const maxVolumes = device.getHandle().limits.maxSampledTexturesPerShaderStage - 4;\r\n\r\n    // if we have to make multiple passes then break the volumes up into groups\r\n    // rendered from farthest to closest\r\n    if (model.volumes.length > maxVolumes) {\r\n      const cameraPos = renNode.getRenderable().getActiveCamera().getPosition();\r\n      // sort from back to front based on volume centroid\r\n      const distances = [];\r\n      for (let v = 0; v < model.volumes.length; v++) {\r\n        const bounds = model.volumes[v].getRenderable().getBounds();\r\n        const centroid = [0.5 * (bounds[1] + bounds[0]), 0.5 * (bounds[3] + bounds[2]), 0.5 * (bounds[5] + bounds[4])];\r\n        distances[v] = (0,_Common_Core_Math_index_js__WEBPACK_IMPORTED_MODULE_12__.e)(centroid, cameraPos);\r\n      }\r\n\r\n      // sort by distance\r\n      const volumeOrder = [...Array(model.volumes.length).keys()];\r\n      volumeOrder.sort((a, b) => distances[b] - distances[a]);\r\n\r\n      // render in chunks back to front\r\n      let volumesToRender = [];\r\n      // start with smallest chunk so that the last (closest) chunk\r\n      // has a full maxVolumes;\r\n      let chunkSize = volumeOrder.length % maxVolumes;\r\n      for (let v = 0; v < volumeOrder.length; v++) {\r\n        volumesToRender.push(model.volumes[volumeOrder[v]]);\r\n        if (volumesToRender.length >= chunkSize) {\r\n          publicAPI.rayCastPass(viewNode, renNode, volumesToRender);\r\n          volumesToRender = [];\r\n          chunkSize = maxVolumes;\r\n          model._firstGroup = false;\r\n        }\r\n      }\r\n    } else {\r\n      // if not rendering in chunks then just draw all of them at once\r\n      publicAPI.rayCastPass(viewNode, renNode, model.volumes);\r\n    }\r\n\r\n    // copy back to the original color buffer\r\n\r\n    // final composite\r\n    model._volumeCopyQuad.setWebGPURenderer(renNode);\r\n    if (model._useSmallViewport) {\r\n      const width = model._colorTextureView.getTexture().getWidth();\r\n      const height = model._colorTextureView.getTexture().getHeight();\r\n      model._copyUBO.setArray('tscale', [model._smallViewportWidth / width, model._smallViewportHeight / height]);\r\n    } else {\r\n      model._copyUBO.setArray('tscale', [1.0, 1.0]);\r\n    }\r\n    model._copyUBO.sendIfNeeded(device);\r\n    model._copyEncoder.setColorTextureView(0, model.colorTextureView);\r\n    model._copyEncoder.attachTextureViews();\r\n    model._copyEncoder.begin(viewNode.getCommandEncoder());\r\n    renNode.scissorAndViewport(model._copyEncoder);\r\n    model._volumeCopyQuad.prepareAndDraw(model._copyEncoder);\r\n    model._copyEncoder.end();\r\n  };\r\n\r\n  // unsubscribe from our listeners\r\n  publicAPI.delete = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.chain(() => {\r\n    if (model._animationRateSubscription) {\r\n      model._animationRateSubscription.unsubscribe();\r\n      model._animationRateSubscription = null;\r\n    }\r\n  }, publicAPI.delete);\r\n  publicAPI.computeTiming = viewNode => {\r\n    const rwi = viewNode.getRenderable().getInteractor();\r\n    if (model._lastScale == null) {\r\n      const firstMapper = model.volumes[0].getRenderable().getMapper();\r\n      model._lastScale = firstMapper.getInitialInteractionScale() || 1.0;\r\n    }\r\n    model._useSmallViewport = false;\r\n    if (rwi.isAnimating() && model._lastScale > 1.5) {\r\n      model._useSmallViewport = true;\r\n    }\r\n    model._colorTexture.resize(viewNode.getCanvas().width, viewNode.getCanvas().height);\r\n    if (!model._animationRateSubscription) {\r\n      // when the animation frame rate changes recompute the scale factor\r\n      model._animationRateSubscription = rwi.onAnimationFrameRateUpdate(() => {\r\n        const firstMapper = model.volumes[0].getRenderable().getMapper();\r\n        if (firstMapper.getAutoAdjustSampleDistances()) {\r\n          const frate = rwi.getRecentAnimationFrameRate();\r\n          const targetScale = model._lastScale * rwi.getDesiredUpdateRate() / frate;\r\n          model._lastScale = targetScale;\r\n          // clamp scale to some reasonable values.\r\n          // Below 1.5 we will just be using full resolution as that is close enough\r\n          // Above 400 seems like a lot so we limit to that 1/20th per axis\r\n          if (model._lastScale > 400) {\r\n            model._lastScale = 400;\r\n          }\r\n        } else {\r\n          model._lastScale = firstMapper.getImageSampleDistance() * firstMapper.getImageSampleDistance();\r\n        }\r\n        if (model._lastScale < 1.5) {\r\n          model._lastScale = 1.5;\r\n        }\r\n      });\r\n    }\r\n  };\r\n  publicAPI.rayCastPass = (viewNode, renNode, volumes) => {\r\n    const encoder = model._firstGroup ? model._clearEncoder : model._mergeEncoder;\r\n    encoder.attachTextureViews();\r\n    encoder.begin(viewNode.getCommandEncoder());\r\n    let width = model._colorTextureView.getTexture().getWidth();\r\n    let height = model._colorTextureView.getTexture().getHeight();\r\n    if (model._useSmallViewport) {\r\n      const canvas = viewNode.getCanvas();\r\n      const scaleFactor = 1 / Math.sqrt(model._lastScale);\r\n      model._smallViewportWidth = Math.ceil(scaleFactor * canvas.width);\r\n      model._smallViewportHeight = Math.ceil(scaleFactor * canvas.height);\r\n      width = model._smallViewportWidth;\r\n      height = model._smallViewportHeight;\r\n    }\r\n    encoder.getHandle().setViewport(0, 0, width, height, 0.0, 1.0);\r\n    // set scissor\r\n    encoder.getHandle().setScissorRect(0, 0, width, height);\r\n    model.fullScreenQuad.setWebGPURenderer(renNode);\r\n    model.fullScreenQuad.setVolumes(volumes);\r\n    model.fullScreenQuad.prepareAndDraw(encoder);\r\n    encoder.end();\r\n  };\r\n  publicAPI.renderDepthBounds = (renNode, viewNode) => {\r\n    publicAPI.updateDepthPolyData(renNode);\r\n    const pd = model._boundsPoly;\r\n    const points = pd.getPoints();\r\n    const cells = pd.getPolys();\r\n    let buffRequest = {\r\n      hash: `vp${cells.getMTime()}`,\r\n      usage: BufferUsage.Index,\r\n      cells,\r\n      numberOfPoints: points.getNumberOfPoints(),\r\n      primitiveType: PrimitiveTypes.Triangles,\r\n      representation: Representation.SURFACE\r\n    };\r\n    const indexBuffer = viewNode.getDevice().getBufferManager().getBuffer(buffRequest);\r\n    model._mapper.getVertexInput().setIndexBuffer(indexBuffer);\r\n\r\n    // points\r\n    buffRequest = {\r\n      usage: BufferUsage.PointArray,\r\n      format: 'float32x4',\r\n      hash: `vp${points.getMTime()}${cells.getMTime()}`,\r\n      dataArray: points,\r\n      indexBuffer,\r\n      packExtra: true\r\n    };\r\n    const buff = viewNode.getDevice().getBufferManager().getBuffer(buffRequest);\r\n    model._mapper.getVertexInput().addBuffer(buff, ['vertexBC']);\r\n    model._mapper.setNumberOfVertices(buff.getSizeInBytes() / buff.getStrideInBytes());\r\n    publicAPI.drawDepthRange(renNode, viewNode);\r\n  };\r\n  publicAPI.updateDepthPolyData = renNode => {\r\n    // check mtimes first\r\n    let update = false;\r\n    for (let i = 0; i < model.volumes.length; i++) {\r\n      const mtime = model.volumes[i].getMTime();\r\n      if (!model._lastMTimes[i] || mtime !== model._lastMTimes[i]) {\r\n        update = true;\r\n        model._lastMTimes[i] = mtime;\r\n      }\r\n    }\r\n\r\n    // also check stabilized time\r\n    const stime = renNode.getStabilizedTime();\r\n    if (model._lastMTimes.length <= model.volumes.length || stime !== model._lastMTimes[model.volumes.length]) {\r\n      update = true;\r\n      model._lastMTimes[model.volumes.length] = stime;\r\n    }\r\n\r\n    // if no need to update then return\r\n    if (!update) {\r\n      return;\r\n    }\r\n\r\n    // rebuild\r\n    const center = renNode.getStabilizedCenterByReference();\r\n    const numPts = model.volumes.length * 8;\r\n    const points = new Float64Array(numPts * 3);\r\n    const numTris = model.volumes.length * 12;\r\n    const polys = new Uint16Array(numTris * 4);\r\n\r\n    // add points and cells\r\n    for (let i = 0; i < model.volumes.length; i++) {\r\n      model.volumes[i].getBoundingCubePoints(points, i * 24);\r\n      let cellIdx = i * 12 * 4;\r\n      const offset = i * 8;\r\n      for (let t = 0; t < 12; t++) {\r\n        polys[cellIdx++] = 3;\r\n        polys[cellIdx++] = offset + cubeFaceTriangles[t][0];\r\n        polys[cellIdx++] = offset + cubeFaceTriangles[t][1];\r\n        polys[cellIdx++] = offset + cubeFaceTriangles[t][2];\r\n      }\r\n    }\r\n    for (let p = 0; p < points.length; p += 3) {\r\n      points[p] -= center[0];\r\n      points[p + 1] -= center[1];\r\n      points[p + 2] -= center[2];\r\n    }\r\n    model._boundsPoly.getPoints().setData(points, 3);\r\n    model._boundsPoly.getPoints().modified();\r\n    model._boundsPoly.getPolys().setData(polys, 1);\r\n    model._boundsPoly.getPolys().modified();\r\n    model._boundsPoly.modified();\r\n  };\r\n  publicAPI.drawDepthRange = (renNode, viewNode) => {\r\n    // copy current depth buffer to\r\n    model._depthRangeTexture.resizeToMatch(model.colorTextureView.getTexture());\r\n    model._depthRangeTexture2.resizeToMatch(model.colorTextureView.getTexture());\r\n    model._depthRangeEncoder.attachTextureViews();\r\n    publicAPI.setCurrentOperation('volumeDepthRangePass');\r\n    renNode.setRenderEncoder(model._depthRangeEncoder);\r\n    renNode.volumeDepthRangePass(true);\r\n    model._mapper.setWebGPURenderer(renNode);\r\n    model._mapper.prepareToDraw(model._depthRangeEncoder);\r\n    model._mapper.registerDrawCallback(model._depthRangeEncoder);\r\n    renNode.volumeDepthRangePass(false);\r\n  };\r\n  publicAPI.createDepthRangeEncoder = viewNode => {\r\n    const device = viewNode.getDevice();\r\n    model._depthRangeEncoder = _RenderEncoder_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].newInstance({\r\n      label: 'VolumePass DepthRange'\r\n    });\r\n    model._depthRangeEncoder.setPipelineHash('volr');\r\n    model._depthRangeEncoder.setReplaceShaderCodeFunction(pipeline => {\r\n      const fDesc = pipeline.getShaderDescription('fragment');\r\n      fDesc.addOutput('vec4<f32>', 'outColor1');\r\n      fDesc.addOutput('vec4<f32>', 'outColor2');\r\n      let code = fDesc.getCode();\r\n      code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::RenderEncoder::Impl', ['output.outColor1 = vec4<f32>(input.fragPos.z, 0.0, 0.0, 0.0);', 'output.outColor2 = vec4<f32>(stopval, 0.0, 0.0, 0.0);']).result;\r\n      fDesc.setCode(code);\r\n    });\r\n    model._depthRangeEncoder.setDescription({\r\n      colorAttachments: [{\r\n        view: null,\r\n        clearValue: [0.0, 0.0, 0.0, 0.0],\r\n        loadOp: 'clear',\r\n        storeOp: 'store'\r\n      }, {\r\n        view: null,\r\n        clearValue: [1.0, 1.0, 1.0, 1.0],\r\n        loadOp: 'clear',\r\n        storeOp: 'store'\r\n      }]\r\n    });\r\n    model._depthRangeEncoder.setPipelineSettings({\r\n      primitive: {\r\n        cullMode: 'none'\r\n      },\r\n      fragment: {\r\n        targets: [{\r\n          format: 'r16float',\r\n          blend: {\r\n            color: {\r\n              srcFactor: 'one',\r\n              dstFactor: 'one',\r\n              operation: 'max'\r\n            },\r\n            alpha: {\r\n              srcfactor: 'one',\r\n              dstFactor: 'one',\r\n              operation: 'max'\r\n            }\r\n          }\r\n        }, {\r\n          format: 'r16float',\r\n          blend: {\r\n            color: {\r\n              srcFactor: 'one',\r\n              dstFactor: 'one',\r\n              operation: 'min'\r\n            },\r\n            alpha: {\r\n              srcfactor: 'one',\r\n              dstFactor: 'one',\r\n              operation: 'min'\r\n            }\r\n          }\r\n        }]\r\n      }\r\n    });\r\n\r\n    // and the textures it needs\r\n    model._depthRangeTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].newInstance({\r\n      label: 'volumePassMaxDepth'\r\n    });\r\n    model._depthRangeTexture.create(device, {\r\n      width: viewNode.getCanvas().width,\r\n      height: viewNode.getCanvas().height,\r\n      format: 'r16float',\r\n      usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING\r\n    });\r\n    const maxView = model._depthRangeTexture.createView('maxTexture');\r\n    model._depthRangeEncoder.setColorTextureView(0, maxView);\r\n    model._depthRangeTexture2 = _Texture_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].newInstance({\r\n      label: 'volumePassDepthMin'\r\n    });\r\n    model._depthRangeTexture2.create(device, {\r\n      width: viewNode.getCanvas().width,\r\n      height: viewNode.getCanvas().height,\r\n      format: 'r16float',\r\n      usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING\r\n    });\r\n    const minView = model._depthRangeTexture2.createView('minTexture');\r\n    model._depthRangeEncoder.setColorTextureView(1, minView);\r\n    model._mapper.setDevice(viewNode.getDevice());\r\n    model._mapper.setTextureViews([model.depthTextureView]);\r\n  };\r\n  publicAPI.createClearEncoder = viewNode => {\r\n    model._colorTexture = _Texture_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].newInstance({\r\n      label: 'volumePassColor'\r\n    });\r\n    model._colorTexture.create(viewNode.getDevice(), {\r\n      width: viewNode.getCanvas().width,\r\n      height: viewNode.getCanvas().height,\r\n      format: 'bgra8unorm',\r\n      /* eslint-disable no-undef */\r\n      /* eslint-disable no-bitwise */\r\n      usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC\r\n    });\r\n    model._colorTextureView = model._colorTexture.createView('volumePassColorTexture');\r\n    model._colorTextureView.addSampler(viewNode.getDevice(), {\r\n      minFilter: 'linear',\r\n      magFilter: 'linear'\r\n    });\r\n    model._clearEncoder = _RenderEncoder_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].newInstance({\r\n      label: 'VolumePass Clear'\r\n    });\r\n    model._clearEncoder.setColorTextureView(0, model._colorTextureView);\r\n    model._clearEncoder.setDescription({\r\n      colorAttachments: [{\r\n        view: null,\r\n        clearValue: [0.0, 0.0, 0.0, 0.0],\r\n        loadOp: 'clear',\r\n        storeOp: 'store'\r\n      }]\r\n    });\r\n    model._clearEncoder.setPipelineHash('volpf');\r\n    model._clearEncoder.setPipelineSettings({\r\n      primitive: {\r\n        cullMode: 'none'\r\n      },\r\n      fragment: {\r\n        targets: [{\r\n          format: 'bgra8unorm',\r\n          blend: {\r\n            color: {\r\n              srcFactor: 'src-alpha',\r\n              dstFactor: 'one-minus-src-alpha'\r\n            },\r\n            alpha: {\r\n              srcfactor: 'one',\r\n              dstFactor: 'one-minus-src-alpha'\r\n            }\r\n          }\r\n        }]\r\n      }\r\n    });\r\n  };\r\n  publicAPI.createCopyEncoder = viewNode => {\r\n    model._copyEncoder = _RenderEncoder_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].newInstance({\r\n      label: 'volumePassCopy'\r\n    });\r\n    model._copyEncoder.setDescription({\r\n      colorAttachments: [{\r\n        view: null,\r\n        loadOp: 'load',\r\n        storeOp: 'store'\r\n      }]\r\n    });\r\n    model._copyEncoder.setPipelineHash('volcopypf');\r\n    model._copyEncoder.setPipelineSettings({\r\n      primitive: {\r\n        cullMode: 'none'\r\n      },\r\n      fragment: {\r\n        targets: [{\r\n          format: 'rgba16float',\r\n          blend: {\r\n            color: {\r\n              srcFactor: 'one',\r\n              dstFactor: 'one-minus-src-alpha'\r\n            },\r\n            alpha: {\r\n              srcfactor: 'one',\r\n              dstFactor: 'one-minus-src-alpha'\r\n            }\r\n          }\r\n        }]\r\n      }\r\n    });\r\n  };\r\n  publicAPI.createMergeEncoder = viewNode => {\r\n    model._mergeEncoder = _RenderEncoder_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].newInstance({\r\n      label: 'volumePassMerge'\r\n    });\r\n    model._mergeEncoder.setColorTextureView(0, model._colorTextureView);\r\n    model._mergeEncoder.setDescription({\r\n      colorAttachments: [{\r\n        view: null,\r\n        loadOp: 'load',\r\n        storeOp: 'store'\r\n      }]\r\n    });\r\n    model._mergeEncoder.setReplaceShaderCodeFunction(pipeline => {\r\n      const fDesc = pipeline.getShaderDescription('fragment');\r\n      fDesc.addOutput('vec4<f32>', 'outColor');\r\n      let code = fDesc.getCode();\r\n      code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].substitute(code, '//VTK::RenderEncoder::Impl', ['output.outColor = vec4<f32>(computedColor.rgb, computedColor.a);']).result;\r\n      fDesc.setCode(code);\r\n    });\r\n    model._mergeEncoder.setPipelineHash('volpf');\r\n    model._mergeEncoder.setPipelineSettings({\r\n      primitive: {\r\n        cullMode: 'none'\r\n      },\r\n      fragment: {\r\n        targets: [{\r\n          format: 'bgra8unorm',\r\n          blend: {\r\n            color: {\r\n              srcFactor: 'src-alpha',\r\n              dstFactor: 'one-minus-src-alpha'\r\n            },\r\n            alpha: {\r\n              srcfactor: 'one',\r\n              dstFactor: 'one-minus-src-alpha'\r\n            }\r\n          }\r\n        }]\r\n      }\r\n    });\r\n  };\r\n\r\n  // marks modified when needed\r\n  publicAPI.setVolumes = val => {\r\n    if (!model.volumes || model.volumes.length !== val.length) {\r\n      model.volumes = [...val];\r\n      publicAPI.modified();\r\n      return;\r\n    }\r\n    for (let i = 0; i < val.length; i++) {\r\n      if (val[i] !== model.volumes[i]) {\r\n        model.volumes = [...val];\r\n        publicAPI.modified();\r\n        return;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  colorTextureView: null,\r\n  depthTextureView: null,\r\n  volumes: null\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Build VTK API\r\n  _SceneGraph_RenderPass_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].extend(publicAPI, model, initialValues);\r\n  model._mapper = _SimpleMapper_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance();\r\n  model._mapper.setFragmentShaderTemplate(DepthBoundsFS);\r\n  model._mapper.getShaderReplacements().set('replaceShaderVolumePass', (hash, pipeline, vertexInput) => {\r\n    const fDesc = pipeline.getShaderDescription('fragment');\r\n    fDesc.addBuiltinInput('vec4<f32>', '@builtin(position) fragPos');\r\n  });\r\n  model._boundsPoly = _Common_DataModel_PolyData_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance();\r\n  model._lastMTimes = [];\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.setGet(publicAPI, model, ['colorTextureView', 'depthTextureView']);\r\n\r\n  // Object methods\r\n  vtkWebGPUVolumePass(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkWebGPUVolumePass');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUVolumePass$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/VolumePass.js?")},"./node_modules/@kitware/vtk.js/Rendering/WebGPU/VolumePassFSQ.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtkWebGPUVolumePassFSQ$1),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   newInstance: () => (/* binding */ newInstance)\n/* harmony export */ });\n/* harmony import */ var _macros2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../macros2.js */ \"./node_modules/@kitware/vtk.js/macros2.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var _FullScreenQuad_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FullScreenQuad.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/FullScreenQuad.js\");\n/* harmony import */ var _UniformBuffer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UniformBuffer.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/UniformBuffer.js\");\n/* harmony import */ var _ShaderCache_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ShaderCache.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderCache.js\");\n/* harmony import */ var _StorageBuffer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./StorageBuffer.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/StorageBuffer.js\");\n/* harmony import */ var _Sampler_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Sampler.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Sampler.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Types.js */ \"./node_modules/@kitware/vtk.js/Rendering/WebGPU/Types.js\");\n/* harmony import */ var _Core_VolumeMapper_Constants_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Core/VolumeMapper/Constants.js */ \"./node_modules/@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst volFragTemplate = `\r\n//VTK::Renderer::Dec\r\n\r\n//VTK::Mapper::Dec\r\n\r\n//VTK::TCoord::Dec\r\n\r\n//VTK::Volume::TraverseDec\r\n\r\n//VTK::RenderEncoder::Dec\r\n\r\n//VTK::IOStructs::Dec\r\n\r\nfn getTextureValue(vTex: texture_3d<f32>, tpos: vec4<f32>) -> f32\r\n{\r\n  // todo multicomponent support\r\n  return textureSampleLevel(vTex, clampSampler, tpos.xyz, 0.0).r;\r\n}\r\n\r\nfn getGradient(vTex: texture_3d<f32>, tpos: vec4<f32>, vNum: i32, scalar: f32) -> vec4<f32>\r\n{\r\n  var result: vec4<f32>;\r\n\r\n  var tstep: vec4<f32> = volumeSSBO.values[vNum].tstep;\r\n  result.x = getTextureValue(vTex, tpos + vec4<f32>(tstep.x, 0.0, 0.0, 1.0)) - scalar;\r\n  result.y = getTextureValue(vTex, tpos + vec4<f32>(0.0, tstep.y, 0.0, 1.0)) - scalar;\r\n  result.z = getTextureValue(vTex, tpos + vec4<f32>(0.0, 0.0, tstep.z, 1.0)) - scalar;\r\n  result.w = 0.0;\r\n\r\n  // divide by spacing as that is our delta\r\n  result = result / volumeSSBO.values[vNum].spacing;\r\n  // now we have a gradient in unit tcoords\r\n\r\n  var grad: f32 = length(result.xyz);\r\n  if (grad > 0.0)\r\n  {\r\n    // rotate to View Coords, needed for lighting and shading\r\n    var nMat: mat4x4<f32> = rendererUBO.SCVCMatrix * volumeSSBO.values[vNum].planeNormals;\r\n    result = nMat * result;\r\n    result = result / length(result);\r\n  }\r\n\r\n  // store gradient magnitude in .w\r\n  result.w = grad;\r\n\r\n  return result;\r\n}\r\n\r\nfn processVolume(vTex: texture_3d<f32>, vNum: i32, cNum: i32, posSC: vec4<f32>, tfunRows: f32) -> vec4<f32>\r\n{\r\n  var outColor: vec4<f32> = vec4<f32>(0.0, 0.0, 0.0, 0.0);\r\n\r\n  // convert to tcoords and reject if outside the volume\r\n  var tpos: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*posSC;\r\n  if (tpos.x < 0.0 || tpos.y < 0.0 || tpos.z < 0.0 ||\r\n      tpos.x > 1.0 || tpos.y > 1.0 || tpos.z > 1.0) { return outColor; }\r\n\r\n  var scalar: f32 = getTextureValue(vTex, tpos);\r\n\r\n  var coord: vec2<f32> =\r\n    vec2<f32>(scalar * componentSSBO.values[cNum].cScale + componentSSBO.values[cNum].cShift,\r\n      (0.5 + 2.0 * f32(vNum)) / tfunRows);\r\n  var color: vec4<f32> = textureSampleLevel(tfunTexture, clampSampler, coord, 0.0);\r\n\r\n  var gofactor: f32 = 1.0;\r\n  var normal: vec4<f32> = vec4<f32>(0.0,0.0,0.0,0.0);\r\n  if (componentSSBO.values[cNum].gomin <  1.0 || volumeSSBO.values[vNum].shade[0] > 0.0)\r\n  {\r\n    normal = getGradient(vTex, tpos, vNum, scalar);\r\n    if (componentSSBO.values[cNum].gomin <  1.0)\r\n    {\r\n      gofactor = clamp(normal.a*componentSSBO.values[cNum].goScale + componentSSBO.values[cNum].goShift,\r\n      componentSSBO.values[cNum].gomin, componentSSBO.values[cNum].gomax);\r\n    }\r\n  }\r\n\r\n  coord.x = (scalar * componentSSBO.values[cNum].oScale + componentSSBO.values[cNum].oShift);\r\n  var opacity: f32 = textureSampleLevel(ofunTexture, clampSampler, coord, 0.0).r;\r\n\r\n  if (volumeSSBO.values[vNum].shade[0] > 0.0)\r\n  {\r\n    color = color*abs(normal.z);\r\n  }\r\n\r\n  outColor = vec4<f32>(color.rgb, gofactor * opacity);\r\n\r\n  return outColor;\r\n}\r\n\r\n// adjust the start and end point of a raycast such that it intersects the unit cube.\r\n// This function is used to take a raycast starting point and step vector\r\n// and numSteps and return the startijng and ending steps for intersecting the\r\n// unit cube. Recall for a 3D texture, the unit cube is the range of texture coordsinates\r\n// that have valid values. So this funtion can be used to take a ray in texture coordinates\r\n// and bound it to intersecting the texture.\r\n//\r\nfn adjustBounds(tpos: vec4<f32>, tstep: vec4<f32>, numSteps: f32) -> vec2<f32>\r\n{\r\n  var result: vec2<f32> = vec2<f32>(0.0, numSteps);\r\n  var tpos2: vec4<f32> = tpos + tstep*numSteps;\r\n\r\n  // move tpos to the start of the volume\r\n  var adjust: f32 =\r\n    min(\r\n      max(tpos.x/tstep.x, (tpos.x - 1.0)/tstep.x),\r\n      min(\r\n        max((tpos.y - 1.0)/tstep.y, tpos.y/tstep.y),\r\n        max((tpos.z - 1.0)/tstep.z, tpos.z/tstep.z)));\r\n  if (adjust < 0.0)\r\n  {\r\n    result.x = result.x - adjust;\r\n  }\r\n\r\n  // adjust length to the end\r\n  adjust =\r\n    max(\r\n      min(tpos2.x/tstep.x, (tpos2.x - 1.0)/tstep.x),\r\n      max(\r\n        min((tpos2.y - 1.0)/tstep.y, tpos2.y/tstep.y),\r\n        min((tpos2.z - 1.0)/tstep.z, tpos2.z/tstep.z)));\r\n  if (adjust > 0.0)\r\n  {\r\n    result.y = result.y - adjust;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfn getSimpleColor(scalar: f32, vNum: i32, cNum: i32) -> vec4<f32>\r\n{\r\n  // how many rows (tfuns) do we have in our tfunTexture\r\n  var tfunRows: f32 = f32(textureDimensions(tfunTexture).y);\r\n\r\n  var coord: vec2<f32> =\r\n    vec2<f32>(scalar * componentSSBO.values[cNum].cScale + componentSSBO.values[cNum].cShift,\r\n      (0.5 + 2.0 * f32(vNum)) / tfunRows);\r\n  var color: vec4<f32> = textureSampleLevel(tfunTexture, clampSampler, coord, 0.0);\r\n  coord.x = (scalar * componentSSBO.values[cNum].oScale + componentSSBO.values[cNum].oShift);\r\n  var opacity: f32 = textureSampleLevel(ofunTexture, clampSampler, coord, 0.0).r;\r\n  return vec4<f32>(color.rgb, opacity);\r\n}\r\n\r\nfn traverseMax(vTex: texture_3d<f32>, vNum: i32, cNum: i32, rayLengthSC: f32, minPosSC: vec4<f32>, rayStepSC: vec4<f32>)\r\n{\r\n  // convert to tcoords and reject if outside the volume\r\n  var numSteps: f32 = rayLengthSC/mapperUBO.SampleDistance;\r\n  var tpos: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*minPosSC;\r\n  var tpos2: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*(minPosSC + rayStepSC);\r\n  var tstep: vec4<f32> = tpos2 - tpos;\r\n\r\n  var rayBounds: vec2<f32> = adjustBounds(tpos, tstep, numSteps);\r\n\r\n  // did we hit anything\r\n  if (rayBounds.x >= rayBounds.y)\r\n  {\r\n    traverseVals[vNum] = vec4<f32>(0.0,0.0,0.0,0.0);\r\n    return;\r\n  }\r\n\r\n  tpos = tpos + tstep*rayBounds.x;\r\n  var curDist: f32 = rayBounds.x;\r\n  var maxVal: f32 = -1.0e37;\r\n  loop\r\n  {\r\n    var scalar: f32 = getTextureValue(vTex, tpos);\r\n    if (scalar > maxVal)\r\n    {\r\n      maxVal = scalar;\r\n    }\r\n\r\n    // increment position\r\n    curDist = curDist + 1.0;\r\n    tpos = tpos + tstep;\r\n\r\n    // check if we have reached a terminating condition\r\n    if (curDist > rayBounds.y) { break; }\r\n  }\r\n\r\n  // process to get the color and opacity\r\n  traverseVals[vNum] = getSimpleColor(maxVal, vNum, cNum);\r\n}\r\n\r\nfn traverseMin(vTex: texture_3d<f32>, vNum: i32, cNum: i32, rayLengthSC: f32, minPosSC: vec4<f32>, rayStepSC: vec4<f32>)\r\n{\r\n  // convert to tcoords and reject if outside the volume\r\n  var numSteps: f32 = rayLengthSC/mapperUBO.SampleDistance;\r\n  var tpos: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*minPosSC;\r\n  var tpos2: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*(minPosSC + rayStepSC);\r\n  var tstep: vec4<f32> = tpos2 - tpos;\r\n\r\n  var rayBounds: vec2<f32> = adjustBounds(tpos, tstep, numSteps);\r\n\r\n  // did we hit anything\r\n  if (rayBounds.x >= rayBounds.y)\r\n  {\r\n    traverseVals[vNum] = vec4<f32>(0.0,0.0,0.0,0.0);\r\n    return;\r\n  }\r\n\r\n  tpos = tpos + tstep*rayBounds.x;\r\n  var curDist: f32 = rayBounds.x;\r\n  var minVal: f32 = 1.0e37;\r\n  loop\r\n  {\r\n    var scalar: f32 = getTextureValue(vTex, tpos);\r\n    if (scalar < minVal)\r\n    {\r\n      minVal = scalar;\r\n    }\r\n\r\n    // increment position\r\n    curDist = curDist + 1.0;\r\n    tpos = tpos + tstep;\r\n\r\n    // check if we have reached a terminating condition\r\n    if (curDist > rayBounds.y) { break; }\r\n  }\r\n\r\n  // process to get the color and opacity\r\n  traverseVals[vNum] = getSimpleColor(minVal, vNum, cNum);\r\n}\r\n\r\nfn traverseAverage(vTex: texture_3d<f32>, vNum: i32, cNum: i32, rayLengthSC: f32, minPosSC: vec4<f32>, rayStepSC: vec4<f32>)\r\n{\r\n  // convert to tcoords and reject if outside the volume\r\n  var numSteps: f32 = rayLengthSC/mapperUBO.SampleDistance;\r\n  var tpos: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*minPosSC;\r\n  var tpos2: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*(minPosSC + rayStepSC);\r\n  var tstep: vec4<f32> = tpos2 - tpos;\r\n\r\n  var rayBounds: vec2<f32> = adjustBounds(tpos, tstep, numSteps);\r\n\r\n  // did we hit anything\r\n  if (rayBounds.x >= rayBounds.y)\r\n  {\r\n    traverseVals[vNum] = vec4<f32>(0.0,0.0,0.0,0.0);\r\n    return;\r\n  }\r\n\r\n  let ipRange: vec4<f32> = volumeSSBO.values[vNum].ipScalarRange;\r\n  tpos = tpos + tstep*rayBounds.x;\r\n  var curDist: f32 = rayBounds.x;\r\n  var avgVal: f32 = 0.0;\r\n  var sampleCount: f32 = 0.0;\r\n  loop\r\n  {\r\n    var sample: f32 = getTextureValue(vTex, tpos);\r\n    // right now leave filtering off until WebGL changes get merged\r\n    // if (ipRange.z == 0.0 || sample >= ipRange.x && sample <= ipRange.y)\r\n    // {\r\n      avgVal = avgVal + sample;\r\n      sampleCount = sampleCount + 1.0;\r\n    // }\r\n\r\n    // increment position\r\n    curDist = curDist + 1.0;\r\n    tpos = tpos + tstep;\r\n\r\n    // check if we have reached a terminating condition\r\n    if (curDist > rayBounds.y) { break; }\r\n  }\r\n\r\n  if (sampleCount <= 0.0)\r\n  {\r\n    traverseVals[vNum] = vec4<f32>(0.0,0.0,0.0,0.0);\r\n  }\r\n\r\n  // process to get the color and opacity\r\n  traverseVals[vNum] = getSimpleColor(avgVal/sampleCount, vNum, cNum);\r\n}\r\n\r\nfn traverseAdditive(vTex: texture_3d<f32>, vNum: i32, cNum: i32, rayLengthSC: f32, minPosSC: vec4<f32>, rayStepSC: vec4<f32>)\r\n{\r\n  // convert to tcoords and reject if outside the volume\r\n  var numSteps: f32 = rayLengthSC/mapperUBO.SampleDistance;\r\n  var tpos: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*minPosSC;\r\n  var tpos2: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*(minPosSC + rayStepSC);\r\n  var tstep: vec4<f32> = tpos2 - tpos;\r\n\r\n  var rayBounds: vec2<f32> = adjustBounds(tpos, tstep, numSteps);\r\n\r\n  // did we hit anything\r\n  if (rayBounds.x >= rayBounds.y)\r\n  {\r\n    traverseVals[vNum] = vec4<f32>(0.0,0.0,0.0,0.0);\r\n    return;\r\n  }\r\n\r\n  let ipRange: vec4<f32> = volumeSSBO.values[vNum].ipScalarRange;\r\n  tpos = tpos + tstep*rayBounds.x;\r\n  var curDist: f32 = rayBounds.x;\r\n  var sumVal: f32 = 0.0;\r\n  loop\r\n  {\r\n    var sample: f32 = getTextureValue(vTex, tpos);\r\n    // right now leave filtering off until WebGL changes get merged\r\n    // if (ipRange.z == 0.0 || sample >= ipRange.x && sample <= ipRange.y)\r\n    // {\r\n      sumVal = sumVal + sample;\r\n    // }\r\n\r\n    // increment position\r\n    curDist = curDist + 1.0;\r\n    tpos = tpos + tstep;\r\n\r\n    // check if we have reached a terminating condition\r\n    if (curDist > rayBounds.y) { break; }\r\n  }\r\n\r\n  // process to get the color and opacity\r\n  traverseVals[vNum] = getSimpleColor(sumVal, vNum, cNum);\r\n}\r\n\r\nfn composite(rayLengthSC: f32, minPosSC: vec4<f32>, rayStepSC: vec4<f32>) -> vec4<f32>\r\n{\r\n  // initial ray position is at the beginning\r\n  var rayPosSC: vec4<f32> = minPosSC;\r\n\r\n  // how many rows (tfuns) do we have in our tfunTexture\r\n  var tfunRows: f32 = f32(textureDimensions(tfunTexture).y);\r\n\r\n  var curDist: f32 = 0.0;\r\n  var computedColor: vec4<f32> = vec4<f32>(0.0, 0.0, 0.0, 0.0);\r\n  var sampleColor: vec4<f32>;\r\n//VTK::Volume::TraverseCalls\r\n\r\n  loop\r\n  {\r\n    // for each volume, sample and accumulate color\r\n//VTK::Volume::CompositeCalls\r\n\r\n    // increment position\r\n    curDist = curDist + mapperUBO.SampleDistance;\r\n    rayPosSC = rayPosSC + rayStepSC;\r\n\r\n    // check if we have reached a terminating condition\r\n    if (curDist > rayLengthSC) { break; }\r\n    if (computedColor.a > 0.98) { break; }\r\n  }\r\n  return computedColor;\r\n}\r\n\r\n@fragment\r\nfn main(\r\n//VTK::IOStructs::Input\r\n)\r\n//VTK::IOStructs::Output\r\n{\r\n  var output: fragmentOutput;\r\n\r\n  var rayMax: f32 = textureSampleLevel(maxTexture, clampSampler, input.tcoordVS, 0.0).r;\r\n  var rayMin: f32 = textureSampleLevel(minTexture, clampSampler, input.tcoordVS, 0.0).r;\r\n\r\n  // discard empty rays\r\n  if (rayMax <= rayMin) { discard; }\r\n  else\r\n  {\r\n    // compute start and end ray positions in view coordinates\r\n    var minPosSC: vec4<f32> = rendererUBO.PCSCMatrix*vec4<f32>(2.0 * input.tcoordVS.x - 1.0, 1.0 - 2.0 * input.tcoordVS.y, rayMax, 1.0);\r\n    minPosSC = minPosSC * (1.0 / minPosSC.w);\r\n    var maxPosSC: vec4<f32> = rendererUBO.PCSCMatrix*vec4<f32>(2.0 * input.tcoordVS.x - 1.0, 1.0 - 2.0 * input.tcoordVS.y, rayMin, 1.0);\r\n    maxPosSC = maxPosSC * (1.0 / maxPosSC.w);\r\n\r\n    var rayLengthSC: f32 = distance(minPosSC.xyz, maxPosSC.xyz);\r\n    var rayStepSC: vec4<f32> = (maxPosSC - minPosSC)*(mapperUBO.SampleDistance/rayLengthSC);\r\n    rayStepSC.w = 0.0;\r\n\r\n    var computedColor: vec4<f32>;\r\n\r\n//VTK::Volume::Loop\r\n\r\n//VTK::RenderEncoder::Impl\r\n  }\r\n\r\n  return output;\r\n}\r\n`;\r\nconst tmpMat4 = new Float64Array(16);\r\nconst tmp2Mat4 = new Float64Array(16);\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkWebGPUVolumePassFSQ methods\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction vtkWebGPUVolumePassFSQ(publicAPI, model) {\r\n  // Set our className\r\n  model.classHierarchy.push('vtkWebGPUVolumePassFSQ');\r\n  publicAPI.replaceShaderPosition = (hash, pipeline, vertexInput) => {\r\n    const vDesc = pipeline.getShaderDescription('vertex');\r\n    vDesc.addBuiltinOutput('vec4<f32>', '@builtin(position) Position');\r\n    let code = vDesc.getCode();\r\n    code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].substitute(code, '//VTK::Position::Impl', ['output.tcoordVS = vec2<f32>(vertexBC.x * 0.5 + 0.5, 1.0 - vertexBC.y * 0.5 - 0.5);', 'output.Position = vec4<f32>(vertexBC, 1.0);']).result;\r\n    vDesc.setCode(code);\r\n    const fDesc = pipeline.getShaderDescription('fragment');\r\n    fDesc.addBuiltinInput('vec4<f32>', '@builtin(position) fragPos');\r\n  };\r\n  model.shaderReplacements.set('replaceShaderPosition', publicAPI.replaceShaderPosition);\r\n  publicAPI.replaceShaderVolume = (hash, pipeline, vertexInput) => {\r\n    const fDesc = pipeline.getShaderDescription('fragment');\r\n    let code = fDesc.getCode();\r\n    const compositeCalls = [];\r\n    const traverseCalls = [];\r\n    for (let i = 0; i < model.volumes.length; i++) {\r\n      // todo pass rowPos\r\n      const blendMode = model.volumes[i].getRenderable().getMapper().getBlendMode();\r\n      if (blendMode === _Core_VolumeMapper_Constants_js__WEBPACK_IMPORTED_MODULE_7__.BlendMode.COMPOSITE_BLEND) {\r\n        compositeCalls.push(`    sampleColor = processVolume(volTexture${i}, ${i}, ${model.rowStarts[i]}, rayPosSC, tfunRows);`);\r\n        compositeCalls.push(`    computedColor = vec4<f32>(\r\n          sampleColor.a * sampleColor.rgb * (1.0 - computedColor.a) + computedColor.rgb,\r\n          (1.0 - computedColor.a)*sampleColor.a + computedColor.a);`);\r\n      } else {\r\n        traverseCalls.push(`  sampleColor = traverseVals[${i}];`);\r\n        traverseCalls.push(`  computedColor = vec4<f32>(\r\n          sampleColor.a * sampleColor.rgb * (1.0 - computedColor.a) + computedColor.rgb,\r\n          (1.0 - computedColor.a)*sampleColor.a + computedColor.a);`);\r\n      }\r\n    }\r\n    code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].substitute(code, '//VTK::Volume::CompositeCalls', compositeCalls).result;\r\n    code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].substitute(code, '//VTK::Volume::TraverseCalls', traverseCalls).result;\r\n    code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].substitute(code, '//VTK::Volume::TraverseDec', [`var<private> traverseVals: array<vec4<f32>,${model.volumes.length}>;`]).result;\r\n\r\n    // call the full and partial methods as needed\r\n    let compositeWhileTraversing = false;\r\n    for (let vidx = 0; vidx < model.volumes.length; vidx++) {\r\n      const blendMode = model.volumes[vidx].getRenderable().getMapper().getBlendMode();\r\n      if (blendMode === _Core_VolumeMapper_Constants_js__WEBPACK_IMPORTED_MODULE_7__.BlendMode.COMPOSITE_BLEND) {\r\n        compositeWhileTraversing = true;\r\n      } else if (blendMode === _Core_VolumeMapper_Constants_js__WEBPACK_IMPORTED_MODULE_7__.BlendMode.MAXIMUM_INTENSITY_BLEND) {\r\n        code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].substitute(code, '//VTK::Volume::Loop', [`    traverseMax(volTexture${vidx}, ${vidx}, ${vidx}, rayLengthSC, minPosSC, rayStepSC);`, `    computedColor = traverseVals[${vidx}];`, '//VTK::Volume::Loop']).result;\r\n      } else if (blendMode === _Core_VolumeMapper_Constants_js__WEBPACK_IMPORTED_MODULE_7__.BlendMode.MINIMUM_INTENSITY_BLEND) {\r\n        code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].substitute(code, '//VTK::Volume::Loop', [`    traverseMin(volTexture${vidx}, ${vidx}, ${vidx}, rayLengthSC, minPosSC, rayStepSC);`, `    computedColor = traverseVals[${vidx}];`, '//VTK::Volume::Loop']).result;\r\n      } else if (blendMode === _Core_VolumeMapper_Constants_js__WEBPACK_IMPORTED_MODULE_7__.BlendMode.AVERAGE_INTENSITY_BLEND) {\r\n        code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].substitute(code, '//VTK::Volume::Loop', [`    traverseAverage(volTexture${vidx}, ${vidx}, ${vidx}, rayLengthSC, minPosSC, rayStepSC);`, `    computedColor = traverseVals[${vidx}];`, '//VTK::Volume::Loop']).result;\r\n      } else if (blendMode === _Core_VolumeMapper_Constants_js__WEBPACK_IMPORTED_MODULE_7__.BlendMode.ADDITIVE_INTENSITY_BLEND) {\r\n        code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].substitute(code, '//VTK::Volume::Loop', [`    traverseAdditive(volTexture${vidx}, ${vidx}, ${vidx}, rayLengthSC, minPosSC, rayStepSC);`, `    computedColor = traverseVals[${vidx}];`, '//VTK::Volume::Loop']).result;\r\n      }\r\n    }\r\n    if (compositeWhileTraversing) {\r\n      code = _ShaderCache_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].substitute(code, '//VTK::Volume::Loop', ['    computedColor = composite(rayLengthSC, minPosSC, rayStepSC);']).result;\r\n    }\r\n    fDesc.setCode(code);\r\n  };\r\n  model.shaderReplacements.set('replaceShaderVolume', publicAPI.replaceShaderVolume);\r\n  publicAPI.updateLUTImage = device => {\r\n    // depends on\r\n    // - volumes array (length and values) - mtime\r\n    // - tfun arrays - renderable/property mtime\r\n\r\n    let mtime = publicAPI.getMTime();\r\n    for (let i = 0; i < model.volumes.length; i++) {\r\n      const vol = model.volumes[i].getRenderable();\r\n      const image = vol.getMapper().getInputData();\r\n      mtime = Math.max(mtime, vol.getMTime(), image.getMTime());\r\n    }\r\n    if (mtime < model.lutBuildTime.getMTime()) {\r\n      return;\r\n    }\r\n\r\n    // first determine how large the image should be\r\n    model.numRows = 0;\r\n    model.rowStarts = [];\r\n    for (let vidx = 0; vidx < model.volumes.length; vidx++) {\r\n      model.rowStarts.push(model.numRows);\r\n      const webgpuvol = model.volumes[vidx];\r\n      const actor = webgpuvol.getRenderable();\r\n      const volMapr = actor.getMapper();\r\n      const vprop = actor.getProperty();\r\n      const image = volMapr.getInputData();\r\n      const scalars = image.getPointData() && image.getPointData().getScalars();\r\n      const numComp = scalars.getNumberOfComponents();\r\n      const iComps = vprop.getIndependentComponents();\r\n      const numIComps = iComps ? numComp : 1;\r\n      model.numRows += numIComps;\r\n    }\r\n\r\n    // allocate the image array\r\n    const colorArray = new Uint8ClampedArray(model.numRows * 2 * model.rowLength * 4);\r\n    const opacityArray = new Float32Array(model.numRows * 2 * model.rowLength);\r\n    let imgRow = 0;\r\n    const tmpTable = new Float32Array(model.rowLength * 3);\r\n    const rowLength = model.rowLength;\r\n    for (let vidx = 0; vidx < model.volumes.length; vidx++) {\r\n      const webgpuvol = model.volumes[vidx];\r\n      const actor = webgpuvol.getRenderable();\r\n      const volMapr = actor.getMapper();\r\n      const vprop = actor.getProperty();\r\n      const image = volMapr.getInputData();\r\n      const scalars = image.getPointData() && image.getPointData().getScalars();\r\n      const numComp = scalars.getNumberOfComponents();\r\n      const iComps = vprop.getIndependentComponents();\r\n      const numIComps = iComps ? numComp : 1;\r\n      for (let c = 0; c < numIComps; ++c) {\r\n        const cfun = vprop.getRGBTransferFunction(c);\r\n        const cRange = cfun.getRange();\r\n        cfun.getTable(cRange[0], cRange[1], rowLength, tmpTable, 1);\r\n        let ioffset = imgRow * rowLength * 4;\r\n        for (let i = 0; i < rowLength; ++i) {\r\n          colorArray[ioffset + i * 4] = 255.0 * tmpTable[i * 3];\r\n          colorArray[ioffset + i * 4 + 1] = 255.0 * tmpTable[i * 3 + 1];\r\n          colorArray[ioffset + i * 4 + 2] = 255.0 * tmpTable[i * 3 + 2];\r\n          colorArray[ioffset + i * 4 + 3] = 255.0;\r\n          for (let co = 0; co < 4; co++) {\r\n            colorArray[ioffset + (rowLength + i) * 4 + co] = colorArray[ioffset + i * 4 + co];\r\n          }\r\n        }\r\n        const ofun = vprop.getScalarOpacity(c);\r\n        const opacityFactor = model.sampleDist / vprop.getScalarOpacityUnitDistance(c);\r\n        const oRange = ofun.getRange();\r\n        ofun.getTable(oRange[0], oRange[1], rowLength, tmpTable, 1);\r\n        // adjust for sample distance etc\r\n        ioffset = imgRow * rowLength;\r\n        for (let i = 0; i < rowLength; ++i) {\r\n          opacityArray[ioffset + i] = 1.0 - (1.0 - tmpTable[i]) ** opacityFactor;\r\n          opacityArray[ioffset + i + rowLength] = opacityArray[ioffset + i];\r\n        }\r\n        imgRow += 2;\r\n      }\r\n    }\r\n    {\r\n      const treq = {\r\n        nativeArray: colorArray,\r\n        width: model.rowLength,\r\n        height: model.numRows * 2,\r\n        depth: 1,\r\n        format: 'rgba8unorm'\r\n      };\r\n      const newTex = device.getTextureManager().getTexture(treq);\r\n      const tview = newTex.createView('tfunTexture');\r\n      model.textureViews[2] = tview;\r\n    }\r\n    {\r\n      const treq = {\r\n        nativeArray: opacityArray,\r\n        width: model.rowLength,\r\n        height: model.numRows * 2,\r\n        depth: 1,\r\n        format: 'r16float'\r\n      };\r\n      const newTex = device.getTextureManager().getTexture(treq);\r\n      const tview = newTex.createView('ofunTexture');\r\n      model.textureViews[3] = tview;\r\n    }\r\n    model.lutBuildTime.modified();\r\n  };\r\n  publicAPI.updateSSBO = device => {\r\n    // if any of\r\n    // - color or opacity tfun ranges changed - volume Mtime\r\n    // - any volume matrix changed - volume MTime\r\n    // - stabilized center changed - ren.stabilizedMTime\r\n    // - any volume's input data worldtoindex or dimensions changed - input's mtime\r\n    //\r\n    let mtime = Math.max(publicAPI.getMTime(), model.WebGPURenderer.getStabilizedTime());\r\n    for (let i = 0; i < model.volumes.length; i++) {\r\n      const vol = model.volumes[i].getRenderable();\r\n      const volMapr = vol.getMapper();\r\n      const image = volMapr.getInputData();\r\n      mtime = Math.max(mtime, vol.getMTime(), image.getMTime(), volMapr.getMTime());\r\n    }\r\n    if (mtime < model.SSBO.getSendTime()) {\r\n      return;\r\n    }\r\n\r\n    // create the volumeSBBO\r\n    const center = model.WebGPURenderer.getStabilizedCenterByReference();\r\n    model.SSBO.clearData();\r\n    model.SSBO.setNumberOfInstances(model.volumes.length);\r\n\r\n    // create SCTC matrices  SC -> world -> model -> index -> tcoord\r\n    //\r\n    // when doing coord conversions from A to C recall\r\n    // the order is mat4.mult(AtoC, BtoC, AtoB);\r\n    //\r\n    const marray = new Float64Array(model.volumes.length * 16);\r\n    const vPlaneArray = new Float64Array(model.volumes.length * 16);\r\n    const tstepArray = new Float64Array(model.volumes.length * 4);\r\n    const shadeArray = new Float64Array(model.volumes.length * 4);\r\n    const spacingArray = new Float64Array(model.volumes.length * 4);\r\n    const ipScalarRangeArray = new Float64Array(model.volumes.length * 4);\r\n    for (let vidx = 0; vidx < model.volumes.length; vidx++) {\r\n      const webgpuvol = model.volumes[vidx];\r\n      const actor = webgpuvol.getRenderable();\r\n      const volMapr = actor.getMapper();\r\n      const image = volMapr.getInputData();\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_8__.identity(tmpMat4);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_8__.translate(tmpMat4, tmpMat4, center);\r\n      // tmpMat4 is now SC->World\r\n\r\n      const mcwcmat = actor.getMatrix();\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_8__.transpose(tmp2Mat4, mcwcmat);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_8__.invert(tmp2Mat4, tmp2Mat4);\r\n      // tmp2Mat4 is now world to model\r\n\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_8__.multiply(tmpMat4, tmp2Mat4, tmpMat4);\r\n      // tmp4Mat is now SC->Model\r\n\r\n      // the method on the data is world to index but the volume is in\r\n      // model coordinates so really in this context it is model to index\r\n      const modelToIndex = image.getWorldToIndex();\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_8__.multiply(tmpMat4, modelToIndex, tmpMat4);\r\n      // tmpMat4 is now SC -> Index\r\n\r\n      const dims = image.getDimensions();\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_8__.identity(tmp2Mat4);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_8__.scale(tmp2Mat4, tmp2Mat4, [1.0 / dims[0], 1.0 / dims[1], 1.0 / dims[2]]);\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_8__.multiply(tmpMat4, tmp2Mat4, tmpMat4);\r\n      // tmpMat4 is now SC -> Tcoord\r\n\r\n      for (let j = 0; j < 16; j++) {\r\n        marray[vidx * 16 + j] = tmpMat4[j];\r\n      }\r\n      gl_matrix__WEBPACK_IMPORTED_MODULE_8__.invert(tmpMat4, tmpMat4);\r\n      // now it is Tcoord To SC\r\n\r\n      for (let j = 0; j < 4; j++) {\r\n        vPlaneArray[vidx * 16 + j * 4] = tmpMat4[j * 4];\r\n        vPlaneArray[vidx * 16 + j * 4 + 1] = tmpMat4[j * 4 + 1];\r\n        vPlaneArray[vidx * 16 + j * 4 + 2] = tmpMat4[j * 4 + 2];\r\n        vPlaneArray[vidx * 16 + j * 4 + 3] = 0.0;\r\n      }\r\n      tstepArray[vidx * 4] = 1.0 / dims[0];\r\n      tstepArray[vidx * 4 + 1] = 1.0 / dims[1];\r\n      tstepArray[vidx * 4 + 2] = 1.0 / dims[2];\r\n      tstepArray[vidx * 4 + 3] = 1.0;\r\n      shadeArray[vidx * 4] = actor.getProperty().getShade() ? 1.0 : 0.0;\r\n      const spacing = image.getSpacing();\r\n      spacingArray[vidx * 4] = spacing[0];\r\n      spacingArray[vidx * 4 + 1] = spacing[1];\r\n      spacingArray[vidx * 4 + 2] = spacing[2];\r\n      spacingArray[vidx * 4 + 3] = 1.0;\r\n\r\n      // handle filteringMode\r\n      const tScale = model.textureViews[vidx + 4].getTexture().getScale();\r\n      const ipScalarRange = volMapr.getIpScalarRange();\r\n      ipScalarRangeArray[vidx * 4] = ipScalarRange[0] / tScale;\r\n      ipScalarRangeArray[vidx * 4 + 1] = ipScalarRange[1] / tScale;\r\n      ipScalarRangeArray[vidx * 4 + 2] = volMapr.getFilterMode();\r\n    }\r\n    model.SSBO.addEntry('SCTCMatrix', 'mat4x4<f32>');\r\n    model.SSBO.addEntry('planeNormals', 'mat4x4<f32>');\r\n    model.SSBO.addEntry('shade', 'vec4<f32>');\r\n    model.SSBO.addEntry('tstep', 'vec4<f32>');\r\n    model.SSBO.addEntry('spacing', 'vec4<f32>');\r\n    model.SSBO.addEntry('ipScalarRange', 'vec4<f32>');\r\n    model.SSBO.setAllInstancesFromArray('SCTCMatrix', marray);\r\n    model.SSBO.setAllInstancesFromArray('planeNormals', vPlaneArray);\r\n    model.SSBO.setAllInstancesFromArray('shade', shadeArray);\r\n    model.SSBO.setAllInstancesFromArray('tstep', tstepArray);\r\n    model.SSBO.setAllInstancesFromArray('spacing', spacingArray);\r\n    model.SSBO.setAllInstancesFromArray('ipScalarRange', ipScalarRangeArray);\r\n    model.SSBO.send(device);\r\n\r\n    // now create the componentSSBO\r\n    model.componentSSBO.clearData();\r\n    model.componentSSBO.setNumberOfInstances(model.numRows);\r\n    const cScaleArray = new Float64Array(model.numRows);\r\n    const cShiftArray = new Float64Array(model.numRows);\r\n    const oScaleArray = new Float64Array(model.numRows);\r\n    const oShiftArray = new Float64Array(model.numRows);\r\n    const gominArray = new Float64Array(model.numRows);\r\n    const gomaxArray = new Float64Array(model.numRows);\r\n    const goshiftArray = new Float64Array(model.numRows);\r\n    const goscaleArray = new Float64Array(model.numRows);\r\n    let rowIdx = 0;\r\n    for (let vidx = 0; vidx < model.volumes.length; vidx++) {\r\n      const webgpuvol = model.volumes[vidx];\r\n      const actor = webgpuvol.getRenderable();\r\n      const volMapr = actor.getMapper();\r\n      const vprop = actor.getProperty();\r\n      const image = volMapr.getInputData();\r\n      const scalars = image.getPointData() && image.getPointData().getScalars();\r\n      const numComp = scalars.getNumberOfComponents();\r\n      const iComps = vprop.getIndependentComponents();\r\n      // const numIComps = iComps ? numComp : 1;\r\n\r\n      // half float?\r\n      const tformat = model.textureViews[vidx + 4].getTexture().getFormat();\r\n      const tDetails = _Types_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].getDetailsFromTextureFormat(tformat);\r\n      const halfFloat = tDetails.elementSize === 2 && tDetails.sampleType === 'float';\r\n      const volInfo = {\r\n        scale: [255.0],\r\n        offset: [0.0]\r\n      };\r\n      if (halfFloat) {\r\n        volInfo.scale[0] = 1.0;\r\n      }\r\n\r\n      // three levels of shift scale combined into one\r\n      // for performance in the fragment shader\r\n      for (let compIdx = 0; compIdx < numComp; compIdx++) {\r\n        const target = iComps ? compIdx : 0;\r\n        const sscale = volInfo.scale[compIdx];\r\n        const ofun = vprop.getScalarOpacity(target);\r\n        const oRange = ofun.getRange();\r\n        const oscale = sscale / (oRange[1] - oRange[0]);\r\n        const oshift = (volInfo.offset[compIdx] - oRange[0]) / (oRange[1] - oRange[0]);\r\n        oShiftArray[rowIdx] = oshift;\r\n        oScaleArray[rowIdx] = oscale;\r\n        const cfun = vprop.getRGBTransferFunction(target);\r\n        const cRange = cfun.getRange();\r\n        cShiftArray[rowIdx] = (volInfo.offset[compIdx] - cRange[0]) / (cRange[1] - cRange[0]);\r\n        cScaleArray[rowIdx] = sscale / (cRange[1] - cRange[0]);\r\n\r\n        // todo sscale for dependent should be based off of the A channel?\r\n        // not target (which is 0 in that case)\r\n        const useGO = vprop.getUseGradientOpacity(target);\r\n        if (useGO) {\r\n          const gomin = vprop.getGradientOpacityMinimumOpacity(target);\r\n          const gomax = vprop.getGradientOpacityMaximumOpacity(target);\r\n          gominArray[rowIdx] = gomin;\r\n          gomaxArray[rowIdx] = gomax;\r\n          const goRange = [vprop.getGradientOpacityMinimumValue(target), vprop.getGradientOpacityMaximumValue(target)];\r\n          goscaleArray[rowIdx] = sscale * (gomax - gomin) / (goRange[1] - goRange[0]);\r\n          goshiftArray[rowIdx] = -goRange[0] * (gomax - gomin) / (goRange[1] - goRange[0]) + gomin;\r\n        } else {\r\n          gominArray[rowIdx] = 1.0;\r\n          gomaxArray[rowIdx] = 1.0;\r\n          goscaleArray[rowIdx] = 0.0;\r\n          goshiftArray[rowIdx] = 1.0;\r\n        }\r\n        rowIdx++;\r\n      }\r\n    }\r\n    model.componentSSBO.addEntry('cScale', 'f32');\r\n    model.componentSSBO.addEntry('cShift', 'f32');\r\n    model.componentSSBO.addEntry('oScale', 'f32');\r\n    model.componentSSBO.addEntry('oShift', 'f32');\r\n    model.componentSSBO.addEntry('goShift', 'f32');\r\n    model.componentSSBO.addEntry('goScale', 'f32');\r\n    model.componentSSBO.addEntry('gomin', 'f32');\r\n    model.componentSSBO.addEntry('gomax', 'f32');\r\n    model.componentSSBO.setAllInstancesFromArray('cScale', cScaleArray);\r\n    model.componentSSBO.setAllInstancesFromArray('cShift', cShiftArray);\r\n    model.componentSSBO.setAllInstancesFromArray('oScale', oScaleArray);\r\n    model.componentSSBO.setAllInstancesFromArray('oShift', oShiftArray);\r\n    model.componentSSBO.setAllInstancesFromArray('goScale', goscaleArray);\r\n    model.componentSSBO.setAllInstancesFromArray('goShift', goshiftArray);\r\n    model.componentSSBO.setAllInstancesFromArray('gomin', gominArray);\r\n    model.componentSSBO.setAllInstancesFromArray('gomax', gomaxArray);\r\n    model.componentSSBO.send(device);\r\n  };\r\n  const superClassUpdateBuffers = publicAPI.updateBuffers;\r\n  publicAPI.updateBuffers = () => {\r\n    superClassUpdateBuffers();\r\n    // compute the min step size\r\n    let sampleDist = model.volumes[0].getRenderable().getMapper().getSampleDistance();\r\n    for (let i = 0; i < model.volumes.length; i++) {\r\n      const vol = model.volumes[i];\r\n      const volMapr = vol.getRenderable().getMapper();\r\n      const sd = volMapr.getSampleDistance();\r\n      if (sd < sampleDist) {\r\n        sampleDist = sd;\r\n      }\r\n    }\r\n    if (model.sampleDist !== sampleDist) {\r\n      model.sampleDist = sampleDist;\r\n      model.UBO.setValue('SampleDistance', sampleDist);\r\n      model.UBO.sendIfNeeded(model.device);\r\n    }\r\n\r\n    // add in 3d volume textures\r\n    for (let vidx = 0; vidx < model.volumes.length; vidx++) {\r\n      const webgpuvol = model.volumes[vidx];\r\n      const actor = webgpuvol.getRenderable();\r\n      const volMapr = actor.getMapper();\r\n      const image = volMapr.getInputData();\r\n      const newTex = model.device.getTextureManager().getTextureForImageData(image);\r\n      if (!model.textureViews[vidx + 4] || model.textureViews[vidx + 4].getTexture() !== newTex) {\r\n        const tview = newTex.createView(`volTexture${vidx}`);\r\n        model.textureViews[vidx + 4] = tview;\r\n      }\r\n    }\r\n\r\n    // clear any old leftovers\r\n    if (model.volumes.length < model.lastVolumeLength) {\r\n      // we may have gaps in the array right now so no splice\r\n      for (let i = model.volumes.length; i < model.lastVolumeLength; i++) {\r\n        model.textureViews.pop();\r\n      }\r\n    }\r\n    model.lastVolumeLength = model.volumes.length;\r\n    publicAPI.updateLUTImage(model.device);\r\n    publicAPI.updateSSBO(model.device);\r\n    if (!model.clampSampler) {\r\n      model.clampSampler = _Sampler_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].newInstance({\r\n        label: 'clampSampler'\r\n      });\r\n      model.clampSampler.create(model.device, {\r\n        minFilter: 'linear',\r\n        magFilter: 'linear'\r\n      });\r\n    }\r\n  };\r\n  publicAPI.computePipelineHash = () => {\r\n    model.pipelineHash = 'volfsq';\r\n    for (let vidx = 0; vidx < model.volumes.length; vidx++) {\r\n      const blendMode = model.volumes[vidx].getRenderable().getMapper().getBlendMode();\r\n      model.pipelineHash += `${blendMode}`;\r\n    }\r\n  };\r\n\r\n  // marks modified when needed\r\n  publicAPI.setVolumes = val => {\r\n    if (!model.volumes || model.volumes.length !== val.length) {\r\n      model.volumes = [...val];\r\n      publicAPI.modified();\r\n      return;\r\n    }\r\n    for (let i = 0; i < val.length; i++) {\r\n      if (val[i] !== model.volumes[i]) {\r\n        model.volumes = [...val];\r\n        publicAPI.modified();\r\n        return;\r\n      }\r\n    }\r\n  };\r\n  const superclassGetBindables = publicAPI.getBindables;\r\n  publicAPI.getBindables = () => {\r\n    const bindables = superclassGetBindables();\r\n    bindables.push(model.componentSSBO);\r\n    bindables.push(model.clampSampler);\r\n    return bindables;\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Object factory\r\n// ----------------------------------------------------------------------------\r\n\r\nconst DEFAULT_VALUES = {\r\n  volumes: null,\r\n  rowLength: 1024,\r\n  lastVolumeLength: 0\r\n};\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction extend(publicAPI, model) {\r\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  Object.assign(model, DEFAULT_VALUES, initialValues);\r\n\r\n  // Inheritance\r\n  _FullScreenQuad_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].extend(publicAPI, model, initialValues);\r\n  model.fragmentShaderTemplate = volFragTemplate;\r\n  model.UBO = _UniformBuffer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance({\r\n    label: 'mapperUBO'\r\n  });\r\n  model.UBO.addEntry('SampleDistance', 'f32');\r\n  model.SSBO = _StorageBuffer_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance({\r\n    label: 'volumeSSBO'\r\n  });\r\n  model.componentSSBO = _StorageBuffer_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].newInstance({\r\n    label: 'componentSSBO'\r\n  });\r\n  model.lutBuildTime = {};\r\n  _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.obj(model.lutBuildTime, {\r\n    mtime: 0\r\n  });\r\n\r\n  // Object methods\r\n  vtkWebGPUVolumePassFSQ(publicAPI, model);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nconst newInstance = _macros2_js__WEBPACK_IMPORTED_MODULE_0__.m.newInstance(extend, 'vtkWebGPUVolumePassFSQ');\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nvar vtkWebGPUVolumePassFSQ$1 = {\r\n  newInstance,\r\n  extend\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/Rendering/WebGPU/VolumePassFSQ.js?")},"./node_modules/@kitware/vtk.js/macros2.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (/* binding */ uncapitalize),\n/* harmony export */   B: () => (/* binding */ formatBytesToProperUnit),\n/* harmony export */   C: () => (/* binding */ formatNumbersWithThousandSeparator),\n/* harmony export */   D: () => (/* binding */ setImmediateVTK),\n/* harmony export */   E: () => (/* binding */ measurePromiseExecution),\n/* harmony export */   F: () => (/* binding */ setArray),\n/* harmony export */   G: () => (/* binding */ EVENT_ABORT),\n/* harmony export */   H: () => (/* binding */ isVtkObject),\n/* harmony export */   I: () => (/* binding */ debounce),\n/* harmony export */   J: () => (/* binding */ throttle),\n/* harmony export */   K: () => (/* binding */ keystore),\n/* harmony export */   L: () => (/* binding */ proxyPropertyState),\n/* harmony export */   M: () => (/* binding */ normalizeWheel),\n/* harmony export */   T: () => (/* binding */ TYPED_ARRAYS),\n/* harmony export */   V: () => (/* binding */ VOID),\n/* harmony export */   _: () => (/* binding */ _capitalize),\n/* harmony export */   a: () => (/* binding */ newTypedArray),\n/* harmony export */   b: () => (/* binding */ newTypedArrayFrom),\n/* harmony export */   c: () => (/* binding */ macro$1),\n/* harmony export */   d: () => (/* binding */ algo),\n/* harmony export */   e: () => (/* binding */ setGet),\n/* harmony export */   f: () => (/* binding */ event),\n/* harmony export */   g: () => (/* binding */ get),\n/* harmony export */   h: () => (/* binding */ chain),\n/* harmony export */   i: () => (/* binding */ moveToProtected),\n/* harmony export */   j: () => (/* binding */ proxyPropertyMapping),\n/* harmony export */   k: () => (/* binding */ getArray),\n/* harmony export */   l: () => (/* binding */ setGetArray),\n/* harmony export */   m: () => (/* binding */ macro),\n/* harmony export */   n: () => (/* binding */ newInstance),\n/* harmony export */   o: () => (/* binding */ obj),\n/* harmony export */   p: () => (/* binding */ proxy),\n/* harmony export */   q: () => (/* binding */ capitalize),\n/* harmony export */   r: () => (/* binding */ vtkErrorMacro),\n/* harmony export */   s: () => (/* binding */ set),\n/* harmony export */   t: () => (/* binding */ traverseInstanceTree),\n/* harmony export */   u: () => (/* binding */ setLoggerFunction),\n/* harmony export */   v: () => (/* binding */ vtkWarningMacro),\n/* harmony export */   w: () => (/* binding */ vtkLogMacro),\n/* harmony export */   x: () => (/* binding */ vtkInfoMacro),\n/* harmony export */   y: () => (/* binding */ vtkDebugMacro),\n/* harmony export */   z: () => (/* binding */ vtkOnceErrorMacro)\n/* harmony export */ });\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fast-deep-equal */ \"./node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _vtk_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vtk.js */ \"./node_modules/@kitware/vtk.js/vtk.js\");\n/* harmony import */ var _Common_Core_ClassHierarchy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Common/Core/ClassHierarchy.js */ \"./node_modules/@kitware/vtk.js/Common/Core/ClassHierarchy.js\");\n\r\n\r\n\r\n\r\n/**\r\n * macros.js is the old macro.js.\r\n * The name change is so we do not get eaten by babel-plugin-macros.\r\n */\r\nlet globalMTime = 0;\r\nconst VOID = Symbol('void');\r\nfunction getCurrentGlobalMTime() {\r\n  return globalMTime;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Logging function calls\r\n// ----------------------------------------------------------------------------\r\n/* eslint-disable no-prototype-builtins                                      */\r\n\r\nconst fakeConsole = {};\r\nfunction noOp() {}\r\nconst consoleMethods = ['log', 'debug', 'info', 'warn', 'error', 'time', 'timeEnd', 'group', 'groupEnd'];\r\nconsoleMethods.forEach(methodName => {\r\n  fakeConsole[methodName] = noOp;\r\n});\r\n_vtk_js__WEBPACK_IMPORTED_MODULE_1__.vtkGlobal.console = console.hasOwnProperty('log') ? console : fakeConsole;\r\nconst loggerFunctions = {\r\n  debug: noOp,\r\n  // Don't print debug by default\r\n  error: _vtk_js__WEBPACK_IMPORTED_MODULE_1__.vtkGlobal.console.error || noOp,\r\n  info: _vtk_js__WEBPACK_IMPORTED_MODULE_1__.vtkGlobal.console.info || noOp,\r\n  log: _vtk_js__WEBPACK_IMPORTED_MODULE_1__.vtkGlobal.console.log || noOp,\r\n  warn: _vtk_js__WEBPACK_IMPORTED_MODULE_1__.vtkGlobal.console.warn || noOp\r\n};\r\nfunction setLoggerFunction(name, fn) {\r\n  if (loggerFunctions[name]) {\r\n    loggerFunctions[name] = fn || noOp;\r\n  }\r\n}\r\nfunction vtkLogMacro() {\r\n  loggerFunctions.log(...arguments);\r\n}\r\nfunction vtkInfoMacro() {\r\n  loggerFunctions.info(...arguments);\r\n}\r\nfunction vtkDebugMacro() {\r\n  loggerFunctions.debug(...arguments);\r\n}\r\nfunction vtkErrorMacro() {\r\n  loggerFunctions.error(...arguments);\r\n}\r\nfunction vtkWarningMacro() {\r\n  loggerFunctions.warn(...arguments);\r\n}\r\nconst ERROR_ONCE_MAP = {};\r\nfunction vtkOnceErrorMacro(str) {\r\n  if (!ERROR_ONCE_MAP[str]) {\r\n    loggerFunctions.error(str);\r\n    ERROR_ONCE_MAP[str] = true;\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// TypedArray\r\n// ----------------------------------------------------------------------------\r\n\r\nconst TYPED_ARRAYS = Object.create(null);\r\nTYPED_ARRAYS.Float32Array = Float32Array;\r\nTYPED_ARRAYS.Float64Array = Float64Array;\r\nTYPED_ARRAYS.Uint8Array = Uint8Array;\r\nTYPED_ARRAYS.Int8Array = Int8Array;\r\nTYPED_ARRAYS.Uint16Array = Uint16Array;\r\nTYPED_ARRAYS.Int16Array = Int16Array;\r\nTYPED_ARRAYS.Uint32Array = Uint32Array;\r\nTYPED_ARRAYS.Int32Array = Int32Array;\r\nTYPED_ARRAYS.Uint8ClampedArray = Uint8ClampedArray;\r\ntry {\r\n  TYPED_ARRAYS.BigInt64Array = BigInt64Array;\r\n  TYPED_ARRAYS.BigUint64Array = BigUint64Array;\r\n} catch {\r\n  // ignore\r\n}\r\nfunction newTypedArray(type) {\r\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n    args[_key - 1] = arguments[_key];\r\n  }\r\n  return new (TYPED_ARRAYS[type] || Float64Array)(...args);\r\n}\r\nfunction newTypedArrayFrom(type) {\r\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\r\n    args[_key2 - 1] = arguments[_key2];\r\n  }\r\n  return (TYPED_ARRAYS[type] || Float64Array).from(...args);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// capitilize provided string\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction capitalize(str) {\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\nfunction _capitalize(str) {\r\n  return capitalize(str[0] === '_' ? str.slice(1) : str);\r\n}\r\nfunction uncapitalize(str) {\r\n  return str.charAt(0).toLowerCase() + str.slice(1);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Convert byte size into a well formatted string\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction formatBytesToProperUnit(size) {\r\n  let precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\r\n  let chunkSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;\r\n  const units = ['TB', 'GB', 'MB', 'KB'];\r\n  let value = Number(size);\r\n  let currentUnit = 'B';\r\n  while (value > chunkSize) {\r\n    value /= chunkSize;\r\n    currentUnit = units.pop();\r\n  }\r\n  return `${value.toFixed(precision)} ${currentUnit}`;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Convert thousand number with proper separator\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction formatNumbersWithThousandSeparator(n) {\r\n  let separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\r\n  const sections = [];\r\n  let size = n;\r\n  while (size > 1000) {\r\n    sections.push(`000${size % 1000}`.slice(-3));\r\n    size = Math.floor(size / 1000);\r\n  }\r\n  if (size > 0) {\r\n    sections.push(size);\r\n  }\r\n  sections.reverse();\r\n  return sections.join(separator);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Array helper\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction safeArrays(model) {\r\n  Object.keys(model).forEach(key => {\r\n    if (Array.isArray(model[key])) {\r\n      model[key] = [].concat(model[key]);\r\n    }\r\n  });\r\n}\r\nfunction isTypedArray(value) {\r\n  return Object.values(TYPED_ARRAYS).some(ctor => value instanceof ctor);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// shallow equals\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction shallowEquals(a, b) {\r\n  if (a === b) {\r\n    return true;\r\n  }\r\n  if (Array.isArray(a) && Array.isArray(b)) {\r\n    if (a.length !== b.length) {\r\n      return false;\r\n    }\r\n    for (let i = 0; i < a.length; i++) {\r\n      if (a[i] !== b[i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction enumToString(e, value) {\r\n  return Object.keys(e).find(key => e[key] === value);\r\n}\r\nfunction getStateArrayMapFunc(item) {\r\n  if (item && item.isA) {\r\n    return item.getState();\r\n  }\r\n  return item;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// setImmediate\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction setImmediateVTK(fn) {\r\n  setTimeout(fn, 0);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// measurePromiseExecution\r\n//\r\n// Measures the time it takes for a promise to finish from\r\n//   the time this function is invoked.\r\n// The callback receives the time it took for the promise to resolve or reject.\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction measurePromiseExecution(promise, callback) {\r\n  const start = performance.now();\r\n  promise.finally(() => {\r\n    const delta = performance.now() - start;\r\n    callback(delta);\r\n  });\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// vtkObject: modified(), onModified(callback), delete()\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction obj() {\r\n  let publicAPI = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n  let model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  // Ensure each instance as a unique ref of array\r\n  safeArrays(model);\r\n  const callbacks = [];\r\n  if (!Number.isInteger(model.mtime)) {\r\n    model.mtime = ++globalMTime;\r\n  }\r\n  if (!('classHierarchy' in model)) {\r\n    model.classHierarchy = new _Common_Core_ClassHierarchy_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('vtkObject');\r\n  } else if (!(model.classHierarchy instanceof _Common_Core_ClassHierarchy_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])) {\r\n    const hierarchy = new _Common_Core_ClassHierarchy_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n    for (let i = 0; i < model.classHierarchy.length; i++) {\r\n      hierarchy.push(model.classHierarchy[i]);\r\n    }\r\n    model.classHierarchy = hierarchy;\r\n  }\r\n  function off(index) {\r\n    callbacks[index] = null;\r\n  }\r\n  function on(index) {\r\n    function unsubscribe() {\r\n      off(index);\r\n    }\r\n    return Object.freeze({\r\n      unsubscribe\r\n    });\r\n  }\r\n  publicAPI.isDeleted = () => !!model.deleted;\r\n  publicAPI.modified = otherMTime => {\r\n    if (model.deleted) {\r\n      vtkErrorMacro('instance deleted - cannot call any method');\r\n      return;\r\n    }\r\n    if (otherMTime && otherMTime < publicAPI.getMTime()) {\r\n      return;\r\n    }\r\n    model.mtime = ++globalMTime;\r\n    callbacks.forEach(callback => callback && callback(publicAPI));\r\n  };\r\n  publicAPI.onModified = callback => {\r\n    if (model.deleted) {\r\n      vtkErrorMacro('instance deleted - cannot call any method');\r\n      return null;\r\n    }\r\n    const index = callbacks.length;\r\n    callbacks.push(callback);\r\n    return on(index);\r\n  };\r\n  publicAPI.getMTime = () => model.mtime;\r\n  publicAPI.isA = className => {\r\n    let count = model.classHierarchy.length;\r\n    // we go backwards as that is more likely for\r\n    // early termination\r\n    while (count--) {\r\n      if (model.classHierarchy[count] === className) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  publicAPI.getClassName = function () {\r\n    let depth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n    return model.classHierarchy[model.classHierarchy.length - 1 - depth];\r\n  };\r\n  publicAPI.set = function () {\r\n    let map = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    let noWarning = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n    let noFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n    let ret = false;\r\n    Object.keys(map).forEach(name => {\r\n      const fn = noFunction ? null : publicAPI[`set${capitalize(name)}`];\r\n      if (fn && Array.isArray(map[name]) && fn.length > 1) {\r\n        ret = fn(...map[name]) || ret;\r\n      } else if (fn) {\r\n        ret = fn(map[name]) || ret;\r\n      } else {\r\n        // Set data on model directly\r\n        if (['mtime'].indexOf(name) === -1 && !noWarning) {\r\n          vtkWarningMacro(`Warning: Set value to model directly ${name}, ${map[name]}`);\r\n        }\r\n        ret = model[name] !== map[name] || ret;\r\n        model[name] = map[name];\r\n      }\r\n    });\r\n    return ret;\r\n  };\r\n  publicAPI.get = function () {\r\n    for (var _len3 = arguments.length, list = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\r\n      list[_key3] = arguments[_key3];\r\n    }\r\n    if (!list.length) {\r\n      return model;\r\n    }\r\n    const subset = {};\r\n    list.forEach(name => {\r\n      subset[name] = model[name];\r\n    });\r\n    return subset;\r\n  };\r\n  publicAPI.getReferenceByName = val => model[val];\r\n  publicAPI.delete = () => {\r\n    Object.keys(model).forEach(field => delete model[field]);\r\n    callbacks.forEach((el, index) => off(index));\r\n\r\n    // Flag the instance being deleted\r\n    model.deleted = true;\r\n  };\r\n\r\n  // Add serialization support\r\n  publicAPI.getState = () => {\r\n    if (model.deleted) {\r\n      return null;\r\n    }\r\n    const jsonArchive = {\r\n      ...model,\r\n      vtkClass: publicAPI.getClassName()\r\n    };\r\n\r\n    // Convert every vtkObject to its serializable form\r\n    Object.keys(jsonArchive).forEach(keyName => {\r\n      if (jsonArchive[keyName] === null || jsonArchive[keyName] === undefined || keyName[0] === '_' // protected members start with _\r\n      ) {\r\n        delete jsonArchive[keyName];\r\n      } else if (jsonArchive[keyName].isA) {\r\n        jsonArchive[keyName] = jsonArchive[keyName].getState();\r\n      } else if (Array.isArray(jsonArchive[keyName])) {\r\n        jsonArchive[keyName] = jsonArchive[keyName].map(getStateArrayMapFunc);\r\n      } else if (isTypedArray(jsonArchive[keyName])) {\r\n        jsonArchive[keyName] = Array.from(jsonArchive[keyName]);\r\n      }\r\n    });\r\n\r\n    // Sort resulting object by key name\r\n    const sortedObj = {};\r\n    Object.keys(jsonArchive).sort().forEach(name => {\r\n      sortedObj[name] = jsonArchive[name];\r\n    });\r\n\r\n    // Remove mtime\r\n    if (sortedObj.mtime) {\r\n      delete sortedObj.mtime;\r\n    }\r\n    return sortedObj;\r\n  };\r\n\r\n  // Add shallowCopy(otherInstance) support\r\n  publicAPI.shallowCopy = function (other) {\r\n    let debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n    if (other.getClassName() !== publicAPI.getClassName()) {\r\n      throw new Error(`Cannot ShallowCopy ${other.getClassName()} into ${publicAPI.getClassName()}`);\r\n    }\r\n    const otherModel = other.get();\r\n    const keyList = Object.keys(model).sort();\r\n    const otherKeyList = Object.keys(otherModel).sort();\r\n    otherKeyList.forEach(key => {\r\n      const keyIdx = keyList.indexOf(key);\r\n      if (keyIdx === -1) {\r\n        if (debug) {\r\n          vtkDebugMacro(`add ${key} in shallowCopy`);\r\n        }\r\n      } else {\r\n        keyList.splice(keyIdx, 1);\r\n      }\r\n      model[key] = otherModel[key];\r\n    });\r\n    if (keyList.length && debug) {\r\n      vtkDebugMacro(`Untouched keys: ${keyList.join(', ')}`);\r\n    }\r\n    publicAPI.modified();\r\n  };\r\n\r\n  // This function will get called when one invoke JSON.stringify(vtkObject)\r\n  // JSON.stringify will only stringify the return value of this function\r\n  publicAPI.toJSON = function vtkObjToJSON() {\r\n    return publicAPI.getState();\r\n  };\r\n\r\n  // Allow usage as decorator\r\n  return publicAPI;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// getXXX: add getters\r\n// ----------------------------------------------------------------------------\r\n\r\nconst objectGetterMap = {\r\n  object(publicAPI, model, field) {\r\n    return function getter() {\r\n      return {\r\n        ...model[field.name]\r\n      };\r\n    };\r\n  }\r\n};\r\nfunction get(publicAPI, model, fieldNames) {\r\n  fieldNames.forEach(field => {\r\n    if (typeof field === 'object') {\r\n      const getter = objectGetterMap[field.type];\r\n      if (getter) {\r\n        publicAPI[`get${_capitalize(field.name)}`] = getter(publicAPI, model, field);\r\n      } else {\r\n        publicAPI[`get${_capitalize(field.name)}`] = () => model[field.name];\r\n      }\r\n    } else {\r\n      publicAPI[`get${_capitalize(field)}`] = () => model[field];\r\n    }\r\n  });\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// setXXX: add setters\r\n// ----------------------------------------------------------------------------\r\n\r\nconst objectSetterMap = {\r\n  enum(publicAPI, model, field) {\r\n    const onChanged = `_on${_capitalize(field.name)}Changed`;\r\n    return value => {\r\n      if (typeof value === 'string') {\r\n        if (field.enum[value] !== undefined) {\r\n          if (model[field.name] !== field.enum[value]) {\r\n            model[field.name] = field.enum[value];\r\n            publicAPI.modified();\r\n            return true;\r\n          }\r\n          return false;\r\n        }\r\n        vtkErrorMacro(`Set Enum with invalid argument ${field}, ${value}`);\r\n        throw new RangeError('Set Enum with invalid string argument');\r\n      }\r\n      if (typeof value === 'number') {\r\n        if (model[field.name] !== value) {\r\n          if (Object.keys(field.enum).map(key => field.enum[key]).indexOf(value) !== -1) {\r\n            const previousValue = model[field.name];\r\n            model[field.name] = value;\r\n            model[onChanged]?.(publicAPI, model, value, previousValue);\r\n            publicAPI.modified();\r\n            return true;\r\n          }\r\n          vtkErrorMacro(`Set Enum outside numeric range ${field}, ${value}`);\r\n          throw new RangeError('Set Enum outside numeric range');\r\n        }\r\n        return false;\r\n      }\r\n      vtkErrorMacro(`Set Enum with invalid argument (String/Number) ${field}, ${value}`);\r\n      throw new TypeError('Set Enum with invalid argument (String/Number)');\r\n    };\r\n  },\r\n  object(publicAPI, model, field) {\r\n    const onChanged = `_on${_capitalize(field.name)}Changed`;\r\n    return value => {\r\n      if (!fast_deep_equal__WEBPACK_IMPORTED_MODULE_0___default()(model[field.name], value)) {\r\n        const previousValue = model[field.name];\r\n        model[field.name] = value;\r\n        model[onChanged]?.(publicAPI, model, value, previousValue);\r\n        publicAPI.modified();\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n  }\r\n};\r\nfunction findSetter(field) {\r\n  if (typeof field === 'object') {\r\n    const fn = objectSetterMap[field.type];\r\n    if (fn) {\r\n      return (publicAPI, model) => fn(publicAPI, model, field);\r\n    }\r\n    vtkErrorMacro(`No setter for field ${field}`);\r\n    throw new TypeError('No setter for field');\r\n  }\r\n  return function getSetter(publicAPI, model) {\r\n    const onChanged = `_on${_capitalize(field)}Changed`;\r\n    return function setter(value) {\r\n      if (model.deleted) {\r\n        vtkErrorMacro('instance deleted - cannot call any method');\r\n        return false;\r\n      }\r\n      if (model[field] !== value) {\r\n        const previousValue = model[field.name];\r\n        model[field] = value;\r\n        model[onChanged]?.(publicAPI, model, value, previousValue);\r\n        publicAPI.modified();\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n  };\r\n}\r\nfunction set(publicAPI, model, fields) {\r\n  fields.forEach(field => {\r\n    if (typeof field === 'object') {\r\n      publicAPI[`set${_capitalize(field.name)}`] = findSetter(field)(publicAPI, model);\r\n    } else {\r\n      publicAPI[`set${_capitalize(field)}`] = findSetter(field)(publicAPI, model);\r\n    }\r\n  });\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// set/get XXX: add both setters and getters\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction setGet(publicAPI, model, fieldNames) {\r\n  get(publicAPI, model, fieldNames);\r\n  set(publicAPI, model, fieldNames);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// getXXX: add getters for object of type array with copy to be safe\r\n// getXXXByReference: add getters for object of type array without copy\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction getArray(publicAPI, model, fieldNames) {\r\n  fieldNames.forEach(field => {\r\n    publicAPI[`get${_capitalize(field)}`] = () => model[field] ? Array.from(model[field]) : model[field];\r\n    publicAPI[`get${_capitalize(field)}ByReference`] = () => model[field];\r\n  });\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// setXXX: add setter for object of type array\r\n// if 'defaultVal' is supplied, shorter arrays will be padded to 'size' with 'defaultVal'\r\n// set...From: fast path to copy the content of an array to the current one without call to modified.\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction setArray(publicAPI, model, fieldNames, size) {\r\n  let defaultVal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\r\n  fieldNames.forEach(field => {\r\n    if (model[field] && size && model[field].length !== size) {\r\n      throw new RangeError(`Invalid initial number of values for array (${field})`);\r\n    }\r\n    const onChanged = `_on${_capitalize(field)}Changed`;\r\n    publicAPI[`set${_capitalize(field)}`] = function () {\r\n      if (model.deleted) {\r\n        vtkErrorMacro('instance deleted - cannot call any method');\r\n        return false;\r\n      }\r\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\r\n        args[_key4] = arguments[_key4];\r\n      }\r\n      let array = args;\r\n      let changeDetected;\r\n      let needCopy = false;\r\n      // allow null or an array to be passed as a single arg.\r\n      if (array.length === 1 && (array[0] == null || array[0].length >= 0)) {\r\n        /* eslint-disable prefer-destructuring */\r\n        array = array[0];\r\n        /* eslint-enable prefer-destructuring */\r\n        needCopy = true;\r\n      }\r\n      if (array == null) {\r\n        changeDetected = model[field] !== array;\r\n      } else {\r\n        if (size && array.length !== size) {\r\n          if (array.length < size && defaultVal !== undefined) {\r\n            array = Array.from(array);\r\n            needCopy = false;\r\n            while (array.length < size) array.push(defaultVal);\r\n          } else {\r\n            throw new RangeError(`Invalid number of values for array setter (${field})`);\r\n          }\r\n        }\r\n        changeDetected = model[field] == null || model[field].length !== array.length;\r\n        for (let i = 0; !changeDetected && i < array.length; ++i) {\r\n          changeDetected = model[field][i] !== array[i];\r\n        }\r\n        if (changeDetected && needCopy) {\r\n          array = Array.from(array);\r\n        }\r\n      }\r\n      if (changeDetected) {\r\n        const previousValue = model[field.name];\r\n        model[field] = array;\r\n        model[onChanged]?.(publicAPI, model, array, previousValue);\r\n        publicAPI.modified();\r\n      }\r\n      return changeDetected;\r\n    };\r\n    publicAPI[`set${_capitalize(field)}From`] = otherArray => {\r\n      const target = model[field];\r\n      otherArray.forEach((v, i) => {\r\n        target[i] = v;\r\n      });\r\n    };\r\n  });\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// set/get XXX: add setter and getter for object of type array\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction setGetArray(publicAPI, model, fieldNames, size) {\r\n  let defaultVal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\r\n  getArray(publicAPI, model, fieldNames);\r\n  setArray(publicAPI, model, fieldNames, size, defaultVal);\r\n}\r\nfunction moveToProtected(publicAPI, model, fieldNames) {\r\n  for (let i = 0; i < fieldNames.length; i++) {\r\n    const fieldName = fieldNames[i];\r\n    if (model[fieldName] !== undefined) {\r\n      model[`_${fieldName}`] = model[fieldName];\r\n      delete model[fieldName];\r\n    }\r\n  }\r\n}\r\n// ----------------------------------------------------------------------------\r\n// vtkAlgorithm: setInputData(), setInputConnection(), getOutputData(), getOutputPort()\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction algo(publicAPI, model, numberOfInputs, numberOfOutputs) {\r\n  if (model.inputData) {\r\n    model.inputData = model.inputData.map(_vtk_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\r\n  } else {\r\n    model.inputData = [];\r\n  }\r\n  if (model.inputConnection) {\r\n    model.inputConnection = model.inputConnection.map(_vtk_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\r\n  } else {\r\n    model.inputConnection = [];\r\n  }\r\n  if (model.output) {\r\n    model.output = model.output.map(_vtk_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\r\n  } else {\r\n    model.output = [];\r\n  }\r\n  if (model.inputArrayToProcess) {\r\n    model.inputArrayToProcess = model.inputArrayToProcess.map(_vtk_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\r\n  } else {\r\n    model.inputArrayToProcess = [];\r\n  }\r\n\r\n  // Cache the argument for later manipulation\r\n  model.numberOfInputs = numberOfInputs;\r\n\r\n  // Methods\r\n  function setInputData(dataset) {\r\n    let port = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n    if (model.deleted) {\r\n      vtkErrorMacro('instance deleted - cannot call any method');\r\n      return;\r\n    }\r\n    if (port >= model.numberOfInputs) {\r\n      vtkErrorMacro(`algorithm ${publicAPI.getClassName()} only has ${model.numberOfInputs} input ports. To add more input ports, use addInputData()`);\r\n      return;\r\n    }\r\n    if (model.inputData[port] !== dataset || model.inputConnection[port]) {\r\n      model.inputData[port] = dataset;\r\n      model.inputConnection[port] = null;\r\n      if (publicAPI.modified) {\r\n        publicAPI.modified();\r\n      }\r\n    }\r\n  }\r\n  function getInputData() {\r\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n    if (model.inputConnection[port]) {\r\n      model.inputData[port] = model.inputConnection[port]();\r\n    }\r\n    return model.inputData[port];\r\n  }\r\n  function setInputConnection(outputPort) {\r\n    let port = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\r\n    if (model.deleted) {\r\n      vtkErrorMacro('instance deleted - cannot call any method');\r\n      return;\r\n    }\r\n    if (port >= model.numberOfInputs) {\r\n      let msg = `algorithm ${publicAPI.getClassName()} only has `;\r\n      msg += `${model.numberOfInputs}`;\r\n      msg += ' input ports. To add more input ports, use addInputConnection()';\r\n      vtkErrorMacro(msg);\r\n      return;\r\n    }\r\n    model.inputData[port] = null;\r\n    model.inputConnection[port] = outputPort;\r\n  }\r\n  function getInputConnection() {\r\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n    return model.inputConnection[port];\r\n  }\r\n  function getPortToFill() {\r\n    let portToFill = model.numberOfInputs;\r\n    while (portToFill && !model.inputData[portToFill - 1] && !model.inputConnection[portToFill - 1]) {\r\n      portToFill--;\r\n    }\r\n    if (portToFill === model.numberOfInputs) {\r\n      model.numberOfInputs++;\r\n    }\r\n    return portToFill;\r\n  }\r\n  function addInputConnection(outputPort) {\r\n    if (model.deleted) {\r\n      vtkErrorMacro('instance deleted - cannot call any method');\r\n      return;\r\n    }\r\n    setInputConnection(outputPort, getPortToFill());\r\n  }\r\n  function addInputData(dataset) {\r\n    if (model.deleted) {\r\n      vtkErrorMacro('instance deleted - cannot call any method');\r\n      return;\r\n    }\r\n    setInputData(dataset, getPortToFill());\r\n  }\r\n  function getOutputData() {\r\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n    if (model.deleted) {\r\n      vtkErrorMacro('instance deleted - cannot call any method');\r\n      return null;\r\n    }\r\n    if (publicAPI.shouldUpdate()) {\r\n      publicAPI.update();\r\n    }\r\n    return model.output[port];\r\n  }\r\n  publicAPI.shouldUpdate = () => {\r\n    const localMTime = publicAPI.getMTime();\r\n    let minOutputMTime = Infinity;\r\n    let count = numberOfOutputs;\r\n    while (count--) {\r\n      if (!model.output[count] || model.output[count].isDeleted()) {\r\n        return true;\r\n      }\r\n      const mt = model.output[count].getMTime();\r\n      if (mt < localMTime) {\r\n        return true;\r\n      }\r\n      if (mt < minOutputMTime) {\r\n        minOutputMTime = mt;\r\n      }\r\n    }\r\n    count = model.numberOfInputs;\r\n    while (count--) {\r\n      if (model.inputConnection[count]?.filter.shouldUpdate() || publicAPI.getInputData(count)?.getMTime() > minOutputMTime) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  function getOutputPort() {\r\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n    const outputPortAccess = () => getOutputData(port);\r\n    // Add reference to filter\r\n    outputPortAccess.filter = publicAPI;\r\n    return outputPortAccess;\r\n  }\r\n\r\n  // Handle input if needed\r\n  if (model.numberOfInputs) {\r\n    // Reserve inputs\r\n    let count = model.numberOfInputs;\r\n    while (count--) {\r\n      model.inputData.push(null);\r\n      model.inputConnection.push(null);\r\n    }\r\n\r\n    // Expose public methods\r\n    publicAPI.setInputData = setInputData;\r\n    publicAPI.setInputConnection = setInputConnection;\r\n    publicAPI.addInputData = addInputData;\r\n    publicAPI.addInputConnection = addInputConnection;\r\n    publicAPI.getInputData = getInputData;\r\n    publicAPI.getInputConnection = getInputConnection;\r\n  }\r\n  if (numberOfOutputs) {\r\n    publicAPI.getOutputData = getOutputData;\r\n    publicAPI.getOutputPort = getOutputPort;\r\n  }\r\n  publicAPI.update = () => {\r\n    const ins = [];\r\n    if (model.numberOfInputs) {\r\n      let count = 0;\r\n      while (count < model.numberOfInputs) {\r\n        ins[count] = publicAPI.getInputData(count);\r\n        count++;\r\n      }\r\n    }\r\n    if (publicAPI.shouldUpdate() && publicAPI.requestData) {\r\n      publicAPI.requestData(ins, model.output);\r\n    }\r\n  };\r\n  publicAPI.getNumberOfInputPorts = () => model.numberOfInputs;\r\n  publicAPI.getNumberOfOutputPorts = () => numberOfOutputs || model.output.length;\r\n  publicAPI.getInputArrayToProcess = inputPort => {\r\n    const arrayDesc = model.inputArrayToProcess[inputPort];\r\n    const ds = model.inputData[inputPort];\r\n    if (arrayDesc && ds) {\r\n      return ds[`get${arrayDesc.fieldAssociation}`]().getArray(arrayDesc.arrayName);\r\n    }\r\n    return null;\r\n  };\r\n  publicAPI.setInputArrayToProcess = function (inputPort, arrayName, fieldAssociation) {\r\n    let attributeType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'Scalars';\r\n    while (model.inputArrayToProcess.length < inputPort) {\r\n      model.inputArrayToProcess.push(null);\r\n    }\r\n    model.inputArrayToProcess[inputPort] = {\r\n      arrayName,\r\n      fieldAssociation,\r\n      attributeType\r\n    };\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Event handling: onXXX(callback), invokeXXX(args...)\r\n// ----------------------------------------------------------------------------\r\n\r\nconst EVENT_ABORT = Symbol('Event abort');\r\nfunction event(publicAPI, model, eventName) {\r\n  const callbacks = [];\r\n  const previousDelete = publicAPI.delete;\r\n  let curCallbackID = 1;\r\n  function off(callbackID) {\r\n    for (let i = 0; i < callbacks.length; ++i) {\r\n      const [cbID] = callbacks[i];\r\n      if (cbID === callbackID) {\r\n        callbacks.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  function on(callbackID) {\r\n    function unsubscribe() {\r\n      off(callbackID);\r\n    }\r\n    return Object.freeze({\r\n      unsubscribe\r\n    });\r\n  }\r\n  function invoke() {\r\n    if (model.deleted) {\r\n      vtkErrorMacro('instance deleted - cannot call any method');\r\n      return;\r\n    }\r\n    /* eslint-disable prefer-rest-params */\r\n    // Go through a copy of the callbacks array in case new callbacks\r\n    // get prepended within previous callbacks\r\n    const currentCallbacks = callbacks.slice();\r\n    for (let index = 0; index < currentCallbacks.length; ++index) {\r\n      const [, cb, priority] = currentCallbacks[index];\r\n      if (!cb) {\r\n        continue; // eslint-disable-line\r\n      }\r\n\r\n      if (priority < 0) {\r\n        setTimeout(() => cb.apply(publicAPI, arguments), 1 - priority);\r\n      } else {\r\n        // Abort only if the callback explicitly returns false\r\n        const continueNext = cb.apply(publicAPI, arguments);\r\n        if (continueNext === EVENT_ABORT) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    /* eslint-enable prefer-rest-params */\r\n  }\r\n\r\n  publicAPI[`invoke${_capitalize(eventName)}`] = invoke;\r\n  publicAPI[`on${_capitalize(eventName)}`] = function (callback) {\r\n    let priority = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.0;\r\n    if (!callback.apply) {\r\n      console.error(`Invalid callback for event ${eventName}`);\r\n      return null;\r\n    }\r\n    if (model.deleted) {\r\n      vtkErrorMacro('instance deleted - cannot call any method');\r\n      return null;\r\n    }\r\n    const callbackID = curCallbackID++;\r\n    callbacks.push([callbackID, callback, priority]);\r\n    callbacks.sort((cb1, cb2) => cb2[2] - cb1[2]);\r\n    return on(callbackID);\r\n  };\r\n  publicAPI.delete = () => {\r\n    previousDelete();\r\n    callbacks.forEach(_ref => {\r\n      let [cbID] = _ref;\r\n      return off(cbID);\r\n    });\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// newInstance\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction newInstance(extend, className) {\r\n  const constructor = function () {\r\n    let initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    const model = {};\r\n    const publicAPI = {};\r\n    extend(publicAPI, model, initialValues);\r\n    return Object.freeze(publicAPI);\r\n  };\r\n\r\n  // Register constructor to factory\r\n  if (className) {\r\n    _vtk_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].register(className, constructor);\r\n  }\r\n  return constructor;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Chain function calls\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction chain() {\r\n  for (var _len5 = arguments.length, fn = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\r\n    fn[_key5] = arguments[_key5];\r\n  }\r\n  return function () {\r\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\r\n      args[_key6] = arguments[_key6];\r\n    }\r\n    return fn.filter(i => !!i).map(i => i(...args));\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Some utility methods for vtk objects\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction isVtkObject(instance) {\r\n  return instance && instance.isA && instance.isA('vtkObject');\r\n}\r\nfunction traverseInstanceTree(instance, extractFunction) {\r\n  let accumulator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\r\n  let visitedInstances = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\r\n  if (isVtkObject(instance)) {\r\n    if (visitedInstances.indexOf(instance) >= 0) {\r\n      // avoid cycles\r\n      return accumulator;\r\n    }\r\n    visitedInstances.push(instance);\r\n    const result = extractFunction(instance);\r\n    if (result !== undefined) {\r\n      accumulator.push(result);\r\n    }\r\n\r\n    // Now go through this instance's model\r\n    const model = instance.get();\r\n    Object.keys(model).forEach(key => {\r\n      const modelObj = model[key];\r\n      if (Array.isArray(modelObj)) {\r\n        modelObj.forEach(subObj => {\r\n          traverseInstanceTree(subObj, extractFunction, accumulator, visitedInstances);\r\n        });\r\n      } else {\r\n        traverseInstanceTree(modelObj, extractFunction, accumulator, visitedInstances);\r\n      }\r\n    });\r\n  }\r\n  return accumulator;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\n\r\nfunction debounce(func, wait, immediate) {\r\n  var _this = this;\r\n  let timeout;\r\n  const debounced = function () {\r\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\r\n      args[_key7] = arguments[_key7];\r\n    }\r\n    const context = _this;\r\n    const later = () => {\r\n      timeout = null;\r\n      if (!immediate) {\r\n        func.apply(context, args);\r\n      }\r\n    };\r\n    const callNow = immediate && !timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n    if (callNow) {\r\n      func.apply(context, args);\r\n    }\r\n  };\r\n  debounced.cancel = () => clearTimeout(timeout);\r\n  return debounced;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Creates a throttled function that only invokes `func` at most once per\r\n// every `wait` milliseconds.\r\n\r\nfunction throttle(callback, delay) {\r\n  let isThrottled = false;\r\n  let argsToUse = null;\r\n  function next() {\r\n    isThrottled = false;\r\n    if (argsToUse !== null) {\r\n      wrapper(...argsToUse); // eslint-disable-line\r\n      argsToUse = null;\r\n    }\r\n  }\r\n  function wrapper() {\r\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\r\n      args[_key8] = arguments[_key8];\r\n    }\r\n    if (isThrottled) {\r\n      argsToUse = args;\r\n      return;\r\n    }\r\n    isThrottled = true;\r\n    callback(...args);\r\n    setTimeout(next, delay);\r\n  }\r\n  return wrapper;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// keystore(publicAPI, model, initialKeystore)\r\n//\r\n//    - initialKeystore: Initial keystore. This can be either a Map or an\r\n//      object.\r\n//\r\n// Generated API\r\n//  setKey(key, value) : mixed (returns value)\r\n//  getKey(key) : mixed\r\n//  getAllKeys() : [mixed]\r\n//  deleteKey(key) : Boolean\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction keystore(publicAPI, model) {\r\n  let initialKeystore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  model.keystore = Object.assign(model.keystore || {}, initialKeystore);\r\n  publicAPI.setKey = (key, value) => {\r\n    model.keystore[key] = value;\r\n  };\r\n  publicAPI.getKey = key => model.keystore[key];\r\n  publicAPI.getAllKeys = () => Object.keys(model.keystore);\r\n  publicAPI.deleteKey = key => delete model.keystore[key];\r\n  publicAPI.clearKeystore = () => publicAPI.getAllKeys().forEach(key => delete model.keystore[key]);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// proxy(publicAPI, model, sectionName, propertyUI)\r\n//\r\n//    - sectionName: Name of the section for UI\r\n//    - propertyUI: List of props with their UI description\r\n//\r\n// Generated API\r\n//  getProxyId() : String\r\n//  listProxyProperties() : [string]\r\n//  updateProxyProperty(name, prop)\r\n//  getProxySection() => List of properties for UI generation\r\n// ----------------------------------------------------------------------------\r\nlet nextProxyId = 1;\r\nconst ROOT_GROUP_NAME = '__root__';\r\nfunction proxy(publicAPI, model) {\r\n  // Proxies are keystores\r\n  keystore(publicAPI, model);\r\n  const parentDelete = publicAPI.delete;\r\n\r\n  // getProxyId\r\n  model.proxyId = `${nextProxyId++}`;\r\n\r\n  // ui handling\r\n  model.ui = JSON.parse(JSON.stringify(model.ui || [])); // deep copy\r\n  get(publicAPI, model, ['proxyId', 'proxyGroup', 'proxyName']);\r\n  setGet(publicAPI, model, ['proxyManager']);\r\n\r\n  // group properties\r\n  const propertyMap = {};\r\n  const groupChildrenNames = {};\r\n  function registerProperties(descriptionList, currentGroupName) {\r\n    if (!groupChildrenNames[currentGroupName]) {\r\n      groupChildrenNames[currentGroupName] = [];\r\n    }\r\n    const childrenNames = groupChildrenNames[currentGroupName];\r\n    for (let i = 0; i < descriptionList.length; i++) {\r\n      childrenNames.push(descriptionList[i].name);\r\n      propertyMap[descriptionList[i].name] = descriptionList[i];\r\n      if (descriptionList[i].children && descriptionList[i].children.length) {\r\n        registerProperties(descriptionList[i].children, descriptionList[i].name);\r\n      }\r\n    }\r\n  }\r\n  registerProperties(model.ui, ROOT_GROUP_NAME);\r\n  publicAPI.updateUI = ui => {\r\n    model.ui = JSON.parse(JSON.stringify(ui || [])); // deep copy\r\n    Object.keys(propertyMap).forEach(k => delete propertyMap[k]);\r\n    Object.keys(groupChildrenNames).forEach(k => delete groupChildrenNames[k]);\r\n    registerProperties(model.ui, ROOT_GROUP_NAME);\r\n    publicAPI.modified();\r\n  };\r\n  function listProxyProperties() {\r\n    let gName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ROOT_GROUP_NAME;\r\n    return groupChildrenNames[gName];\r\n  }\r\n  publicAPI.updateProxyProperty = (propertyName, propUI) => {\r\n    const prop = propertyMap[propertyName];\r\n    if (prop) {\r\n      Object.assign(prop, propUI);\r\n    } else {\r\n      propertyMap[propertyName] = {\r\n        ...propUI\r\n      };\r\n    }\r\n  };\r\n  publicAPI.activate = () => {\r\n    if (model.proxyManager) {\r\n      const setActiveMethod = `setActive${_capitalize(publicAPI.getProxyGroup().slice(0, -1))}`;\r\n      if (model.proxyManager[setActiveMethod]) {\r\n        model.proxyManager[setActiveMethod](publicAPI);\r\n      }\r\n    }\r\n  };\r\n\r\n  // property link\r\n  model.propertyLinkSubscribers = {};\r\n  publicAPI.registerPropertyLinkForGC = (otherLink, type) => {\r\n    if (!(type in model.propertyLinkSubscribers)) {\r\n      model.propertyLinkSubscribers[type] = [];\r\n    }\r\n    model.propertyLinkSubscribers[type].push(otherLink);\r\n  };\r\n  publicAPI.gcPropertyLinks = type => {\r\n    const subscribers = model.propertyLinkSubscribers[type] || [];\r\n    while (subscribers.length) {\r\n      subscribers.pop().unbind(publicAPI);\r\n    }\r\n  };\r\n  model.propertyLinkMap = {};\r\n  publicAPI.getPropertyLink = function (id) {\r\n    let persistent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n    if (model.propertyLinkMap[id]) {\r\n      return model.propertyLinkMap[id];\r\n    }\r\n    let value = null;\r\n    const links = [];\r\n    let count = 0;\r\n    let updateInProgress = false;\r\n    function update(source) {\r\n      let force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n      if (updateInProgress) {\r\n        return null;\r\n      }\r\n      const needUpdate = [];\r\n      let sourceLink = null;\r\n      count = links.length;\r\n      while (count--) {\r\n        const link = links[count];\r\n        if (link.instance === source) {\r\n          sourceLink = link;\r\n        } else {\r\n          needUpdate.push(link);\r\n        }\r\n      }\r\n      if (!sourceLink) {\r\n        return null;\r\n      }\r\n      const newValue = sourceLink.instance[`get${_capitalize(sourceLink.propertyName)}`]();\r\n      if (!shallowEquals(newValue, value) || force) {\r\n        value = newValue;\r\n        updateInProgress = true;\r\n        while (needUpdate.length) {\r\n          const linkToUpdate = needUpdate.pop();\r\n          linkToUpdate.instance.set({\r\n            [linkToUpdate.propertyName]: value\r\n          });\r\n        }\r\n        updateInProgress = false;\r\n      }\r\n      if (model.propertyLinkMap[id].persistent) {\r\n        model.propertyLinkMap[id].value = newValue;\r\n      }\r\n      return newValue;\r\n    }\r\n    function unbind(instance, propertyName) {\r\n      const indexToDelete = [];\r\n      count = links.length;\r\n      while (count--) {\r\n        const link = links[count];\r\n        if (link.instance === instance && (link.propertyName === propertyName || propertyName === undefined)) {\r\n          link.subscription.unsubscribe();\r\n          indexToDelete.push(count);\r\n        }\r\n      }\r\n      while (indexToDelete.length) {\r\n        links.splice(indexToDelete.pop(), 1);\r\n      }\r\n    }\r\n    function bind(instance, propertyName) {\r\n      let updateMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n      const subscription = instance.onModified(update);\r\n      const other = links[0];\r\n      links.push({\r\n        instance,\r\n        propertyName,\r\n        subscription\r\n      });\r\n      if (updateMe) {\r\n        if (model.propertyLinkMap[id].persistent && model.propertyLinkMap[id].value !== undefined) {\r\n          instance.set({\r\n            [propertyName]: model.propertyLinkMap[id].value\r\n          });\r\n        } else if (other) {\r\n          update(other.instance, true);\r\n        }\r\n      }\r\n      return {\r\n        unsubscribe: () => unbind(instance, propertyName)\r\n      };\r\n    }\r\n    function unsubscribe() {\r\n      while (links.length) {\r\n        links.pop().subscription.unsubscribe();\r\n      }\r\n    }\r\n    const linkHandler = {\r\n      bind,\r\n      unbind,\r\n      unsubscribe,\r\n      persistent\r\n    };\r\n    model.propertyLinkMap[id] = linkHandler;\r\n    return linkHandler;\r\n  };\r\n\r\n  // extract values\r\n  function getProperties() {\r\n    let groupName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ROOT_GROUP_NAME;\r\n    const values = [];\r\n    const id = model.proxyId;\r\n    const propertyNames = listProxyProperties(groupName) || [];\r\n    for (let i = 0; i < propertyNames.length; i++) {\r\n      const name = propertyNames[i];\r\n      const method = publicAPI[`get${_capitalize(name)}`];\r\n      const value = method ? method() : undefined;\r\n      const prop = {\r\n        id,\r\n        name,\r\n        value\r\n      };\r\n      const children = getProperties(name);\r\n      if (children.length) {\r\n        prop.children = children;\r\n      }\r\n      values.push(prop);\r\n    }\r\n    return values;\r\n  }\r\n  publicAPI.listPropertyNames = () => getProperties().map(p => p.name);\r\n  publicAPI.getPropertyByName = name => getProperties().find(p => p.name === name);\r\n  publicAPI.getPropertyDomainByName = name => (propertyMap[name] || {}).domain;\r\n\r\n  // ui section\r\n  publicAPI.getProxySection = () => ({\r\n    id: model.proxyId,\r\n    name: model.proxyGroup,\r\n    ui: model.ui,\r\n    properties: getProperties()\r\n  });\r\n\r\n  // free resources\r\n  publicAPI.delete = () => {\r\n    const list = Object.keys(model.propertyLinkMap);\r\n    let count = list.length;\r\n    while (count--) {\r\n      model.propertyLinkMap[list[count]].unsubscribe();\r\n    }\r\n    Object.keys(model.propertyLinkSubscribers).forEach(publicAPI.gcPropertyLinks);\r\n    parentDelete();\r\n  };\r\n\r\n  // @todo fix infinite recursion due to active source\r\n  publicAPI.getState = () => null;\r\n  function registerLinks() {\r\n    // Allow dynamic registration of links at the application level\r\n    if (model.links) {\r\n      for (let i = 0; i < model.links.length; i++) {\r\n        const {\r\n          link,\r\n          property,\r\n          persistent,\r\n          updateOnBind,\r\n          type\r\n        } = model.links[i];\r\n        if (type === 'application') {\r\n          const sLink = model.proxyManager.getPropertyLink(link, persistent);\r\n          publicAPI.registerPropertyLinkForGC(sLink, 'application');\r\n          sLink.bind(publicAPI, property, updateOnBind);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  setImmediateVTK(registerLinks);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// proxyPropertyMapping(publicAPI, model, map)\r\n//\r\n//   map = {\r\n//      opacity: { modelKey: 'property', property: 'opacity' },\r\n//   }\r\n//\r\n// Generated API:\r\n//  Elevate set/get methods from internal object stored in the model to current one\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction proxyPropertyMapping(publicAPI, model, map) {\r\n  const parentDelete = publicAPI.delete;\r\n  const subscriptions = [];\r\n  const propertyNames = Object.keys(map);\r\n  let count = propertyNames.length;\r\n  while (count--) {\r\n    const propertyName = propertyNames[count];\r\n    const {\r\n      modelKey,\r\n      property,\r\n      modified = true\r\n    } = map[propertyName];\r\n    const methodSrc = _capitalize(property);\r\n    const methodDst = _capitalize(propertyName);\r\n    publicAPI[`get${methodDst}`] = model[modelKey][`get${methodSrc}`];\r\n    publicAPI[`set${methodDst}`] = model[modelKey][`set${methodSrc}`];\r\n    if (modified) {\r\n      subscriptions.push(model[modelKey].onModified(publicAPI.modified));\r\n    }\r\n  }\r\n  publicAPI.delete = () => {\r\n    while (subscriptions.length) {\r\n      subscriptions.pop().unsubscribe();\r\n    }\r\n    parentDelete();\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// proxyPropertyState(publicAPI, model, state, defaults)\r\n//\r\n//   state = {\r\n//     representation: {\r\n//       'Surface with edges': { property: { edgeVisibility: true, representation: 2 } },\r\n//       Surface: { property: { edgeVisibility: false, representation: 2 } },\r\n//       Wireframe: { property: { edgeVisibility: false, representation: 1 } },\r\n//       Points: { property: { edgeVisibility: false, representation: 0 } },\r\n//     },\r\n//   }\r\n//\r\n//   defaults = {\r\n//      representation: 'Surface',\r\n//   }\r\n//\r\n// Generated API\r\n//   get / set Representation ( string ) => push state to various internal objects\r\n// ----------------------------------------------------------------------------\r\n\r\nfunction proxyPropertyState(publicAPI, model) {\r\n  let state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  let defaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\r\n  model.this = publicAPI;\r\n  function applyState(map) {\r\n    const modelKeys = Object.keys(map);\r\n    let count = modelKeys.length;\r\n    while (count--) {\r\n      const modelKey = modelKeys[count];\r\n      model[modelKey].set(map[modelKey]);\r\n    }\r\n  }\r\n  const modelKeys = Object.keys(defaults);\r\n  let count = modelKeys.length;\r\n  while (count--) {\r\n    // Add default\r\n    const key = modelKeys[count];\r\n    model[key] = defaults[key];\r\n\r\n    // Add set method\r\n    const mapping = state[key];\r\n    publicAPI[`set${_capitalize(key)}`] = value => {\r\n      if (value !== model[key]) {\r\n        model[key] = value;\r\n        const propValues = mapping[value];\r\n        applyState(propValues);\r\n        publicAPI.modified();\r\n      }\r\n    };\r\n  }\r\n\r\n  // Add getter\r\n  if (modelKeys.length) {\r\n    get(publicAPI, model, modelKeys);\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// From : https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\r\n//\r\n//\r\n// Copyright (c) 2015, Facebook, Inc.\r\n// All rights reserved.\r\n//\r\n// This source code is licensed under the BSD-style license found in the\r\n// LICENSE file in the root directory of this source tree. An additional grant\r\n// of patent rights can be found in the PATENTS file in the same directory.\r\n//\r\n//\r\n// Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\r\n// complicated, thus this doc is long and (hopefully) detailed enough to answer\r\n// your questions.\r\n//\r\n// If you need to react to the mouse wheel in a predictable way, this code is\r\n// like your bestest friend.// hugs//\r\n//\r\n// As of today, there are 4 DOM event types you can listen to:\r\n//\r\n//   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\r\n//   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\r\n//   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\r\n//   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\r\n//\r\n// So what to do?  The is the best:\r\n//\r\n//   normalizeWheel.getEventType();\r\n//\r\n// In your event callback, use this code to get sane interpretation of the\r\n// deltas.  This code will return an object with properties:\r\n//\r\n//   spinX   -- normalized spin speed (use for zoom) - x plane\r\n//   spinY   -- \" - y plane\r\n//   pixelX  -- normalized distance (to pixels) - x plane\r\n//   pixelY  -- \" - y plane\r\n//\r\n// Wheel values are provided by the browser assuming you are using the wheel to\r\n// scroll a web page by a number of lines or pixels (or pages).  Values can vary\r\n// significantly on different platforms and browsers, forgetting that you can\r\n// scroll at different speeds.  Some devices (like trackpads) emit more events\r\n// at smaller increments with fine granularity, and some emit massive jumps with\r\n// linear speed or acceleration.\r\n//\r\n// This code does its best to normalize the deltas for you:\r\n//\r\n//   - spin is trying to normalize how far the wheel was spun (or trackpad\r\n//     dragged).  This is super useful for zoom support where you want to\r\n//     throw away the chunky scroll steps on the PC and make those equal to\r\n//     the slow and smooth tiny steps on the Mac. Key data: This code tries to\r\n//     resolve a single slow step on a wheel to 1.\r\n//\r\n//   - pixel is normalizing the desired scroll delta in pixel units.  You'll\r\n//     get the crazy differences between browsers, but at least it'll be in\r\n//     pixels!\r\n//\r\n//   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\r\n//     should translate to positive value zooming IN, negative zooming OUT.\r\n//     This matches the newer 'wheel' event.\r\n//\r\n// Why are there spinX, spinY (or pixels)?\r\n//\r\n//   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\r\n//     with a mouse.  It results in side-scrolling in the browser by default.\r\n//\r\n//   - spinY is what you expect -- it's the classic axis of a mouse wheel.\r\n//\r\n//   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\r\n//     probably is by browsers in conjunction with fancy 3D controllers .. but\r\n//     you know.\r\n//\r\n// Implementation info:\r\n//\r\n// Examples of 'wheel' event if you scroll slowly (down) by one step with an\r\n// average mouse:\r\n//\r\n//   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\r\n//   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\r\n//   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\r\n//   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\r\n//   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\r\n//\r\n// On the trackpad:\r\n//\r\n//   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\r\n//   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\r\n//\r\n// On other/older browsers.. it's more complicated as there can be multiple and\r\n// also missing delta values.\r\n//\r\n// The 'wheel' event is more standard:\r\n//\r\n// http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\r\n//\r\n// The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\r\n// deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\r\n// backward compatibility with older events.  Those other values help us\r\n// better normalize spin speed.  Example of what the browsers provide:\r\n//\r\n//                          | event.wheelDelta | event.detail\r\n//        ------------------+------------------+--------------\r\n//          Safari v5/OS X  |       -120       |       0\r\n//          Safari v5/Win7  |       -120       |       0\r\n//         Chrome v17/OS X  |       -120       |       0\r\n//         Chrome v17/Win7  |       -120       |       0\r\n//                IE9/Win7  |       -120       |   undefined\r\n//         Firefox v4/OS X  |     undefined    |       1\r\n//         Firefox v4/Win7  |     undefined    |       3\r\n//\r\n// ----------------------------------------------------------------------------\r\n\r\n// Reasonable defaults\r\nconst PIXEL_STEP = 10;\r\nconst LINE_HEIGHT = 40;\r\nconst PAGE_HEIGHT = 800;\r\nfunction normalizeWheel(wheelEvent) {\r\n  let sX = 0; // spinX\r\n  let sY = 0; // spinY\r\n  let pX = 0; // pixelX\r\n  let pY = 0; // pixelY\r\n\r\n  // Legacy\r\n  if ('detail' in wheelEvent) {\r\n    sY = wheelEvent.detail;\r\n  }\r\n  if ('wheelDelta' in wheelEvent) {\r\n    sY = -wheelEvent.wheelDelta / 120;\r\n  }\r\n  if ('wheelDeltaY' in wheelEvent) {\r\n    sY = -wheelEvent.wheelDeltaY / 120;\r\n  }\r\n  if ('wheelDeltaX' in wheelEvent) {\r\n    sX = -wheelEvent.wheelDeltaX / 120;\r\n  }\r\n\r\n  // side scrolling on FF with DOMMouseScroll\r\n  if ('axis' in wheelEvent && wheelEvent.axis === wheelEvent.HORIZONTAL_AXIS) {\r\n    sX = sY;\r\n    sY = 0;\r\n  }\r\n  pX = sX * PIXEL_STEP;\r\n  pY = sY * PIXEL_STEP;\r\n  if ('deltaY' in wheelEvent) {\r\n    pY = wheelEvent.deltaY;\r\n  }\r\n  if ('deltaX' in wheelEvent) {\r\n    pX = wheelEvent.deltaX;\r\n  }\r\n  if ((pX || pY) && wheelEvent.deltaMode) {\r\n    if (wheelEvent.deltaMode === 1) {\r\n      // delta in LINE units\r\n      pX *= LINE_HEIGHT;\r\n      pY *= LINE_HEIGHT;\r\n    } else {\r\n      // delta in PAGE units\r\n      pX *= PAGE_HEIGHT;\r\n      pY *= PAGE_HEIGHT;\r\n    }\r\n  }\r\n\r\n  // Fall-back if spin cannot be determined\r\n  if (pX && !sX) {\r\n    sX = pX < 1 ? -1 : 1;\r\n  }\r\n  if (pY && !sY) {\r\n    sY = pY < 1 ? -1 : 1;\r\n  }\r\n  return {\r\n    spinX: sX,\r\n    spinY: sY || sX,\r\n    pixelX: pX,\r\n    pixelY: pY || pX\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Default export\r\n// ----------------------------------------------------------------------------\r\n\r\nvar macro = {\r\n  algo,\r\n  capitalize,\r\n  chain,\r\n  debounce,\r\n  enumToString,\r\n  event,\r\n  EVENT_ABORT,\r\n  formatBytesToProperUnit,\r\n  formatNumbersWithThousandSeparator,\r\n  get,\r\n  getArray,\r\n  getCurrentGlobalMTime,\r\n  getStateArrayMapFunc,\r\n  isVtkObject,\r\n  keystore,\r\n  measurePromiseExecution,\r\n  moveToProtected,\r\n  newInstance,\r\n  newTypedArray,\r\n  newTypedArrayFrom,\r\n  normalizeWheel,\r\n  obj,\r\n  proxy,\r\n  proxyPropertyMapping,\r\n  proxyPropertyState,\r\n  safeArrays,\r\n  set,\r\n  setArray,\r\n  setGet,\r\n  setGetArray,\r\n  setImmediate: setImmediateVTK,\r\n  setLoggerFunction,\r\n  throttle,\r\n  traverseInstanceTree,\r\n  TYPED_ARRAYS,\r\n  // deprecated todo remove on breaking API revision\r\n  uncapitalize,\r\n  VOID,\r\n  vtkDebugMacro,\r\n  vtkErrorMacro,\r\n  vtkInfoMacro,\r\n  vtkLogMacro,\r\n  vtkOnceErrorMacro,\r\n  vtkWarningMacro\r\n};\r\n\r\nvar macro$1 = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  VOID: VOID,\r\n  setLoggerFunction: setLoggerFunction,\r\n  vtkLogMacro: vtkLogMacro,\r\n  vtkInfoMacro: vtkInfoMacro,\r\n  vtkDebugMacro: vtkDebugMacro,\r\n  vtkErrorMacro: vtkErrorMacro,\r\n  vtkWarningMacro: vtkWarningMacro,\r\n  vtkOnceErrorMacro: vtkOnceErrorMacro,\r\n  TYPED_ARRAYS: TYPED_ARRAYS,\r\n  newTypedArray: newTypedArray,\r\n  newTypedArrayFrom: newTypedArrayFrom,\r\n  capitalize: capitalize,\r\n  _capitalize: _capitalize,\r\n  uncapitalize: uncapitalize,\r\n  formatBytesToProperUnit: formatBytesToProperUnit,\r\n  formatNumbersWithThousandSeparator: formatNumbersWithThousandSeparator,\r\n  setImmediateVTK: setImmediateVTK,\r\n  measurePromiseExecution: measurePromiseExecution,\r\n  obj: obj,\r\n  get: get,\r\n  set: set,\r\n  setGet: setGet,\r\n  getArray: getArray,\r\n  setArray: setArray,\r\n  setGetArray: setGetArray,\r\n  moveToProtected: moveToProtected,\r\n  algo: algo,\r\n  EVENT_ABORT: EVENT_ABORT,\r\n  event: event,\r\n  newInstance: newInstance,\r\n  chain: chain,\r\n  isVtkObject: isVtkObject,\r\n  traverseInstanceTree: traverseInstanceTree,\r\n  debounce: debounce,\r\n  throttle: throttle,\r\n  keystore: keystore,\r\n  proxy: proxy,\r\n  proxyPropertyMapping: proxyPropertyMapping,\r\n  proxyPropertyState: proxyPropertyState,\r\n  normalizeWheel: normalizeWheel,\r\n  'default': macro\r\n});\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/macros2.js?")},"./node_modules/@kitware/vtk.js/vtk.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vtk),\n/* harmony export */   vtkGlobal: () => (/* binding */ vtkGlobal)\n/* harmony export */ });\n/* harmony import */ var globalthis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! globalthis */ \"./node_modules/globalthis/index.js\");\n/* harmony import */ var globalthis__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(globalthis__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\nconst vtkGlobal = globalthis__WEBPACK_IMPORTED_MODULE_0___default()(); // returns native globalThis if compliant\r\n\r\nconst factoryMapping = {\r\n  vtkObject: () => null\r\n};\r\nfunction vtk(obj) {\r\n  if (obj === null || obj === undefined) {\r\n    return obj;\r\n  }\r\n  if (obj.isA) {\r\n    return obj;\r\n  }\r\n  if (!obj.vtkClass) {\r\n    if (vtkGlobal.console && vtkGlobal.console.error) {\r\n      vtkGlobal.console.error('Invalid VTK object');\r\n    }\r\n    return null;\r\n  }\r\n  const constructor = factoryMapping[obj.vtkClass];\r\n  if (!constructor) {\r\n    if (vtkGlobal.console && vtkGlobal.console.error) {\r\n      vtkGlobal.console.error(`No vtk class found for Object of type ${obj.vtkClass}`);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // Shallow copy object\r\n  const model = {\r\n    ...obj\r\n  };\r\n\r\n  // Convert into vtkObject any nested key\r\n  Object.keys(model).forEach(keyName => {\r\n    if (model[keyName] && typeof model[keyName] === 'object' && model[keyName].vtkClass) {\r\n      model[keyName] = vtk(model[keyName]);\r\n    }\r\n  });\r\n\r\n  // Return the root\r\n  const newInst = constructor(model);\r\n  if (newInst && newInst.modified) {\r\n    newInst.modified();\r\n  }\r\n  return newInst;\r\n}\r\nfunction register(vtkClassName, constructor) {\r\n  factoryMapping[vtkClassName] = constructor;\r\n}\r\n\r\n// Nest register method under the vtk function\r\nvtk.register = register;\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/@kitware/vtk.js/vtk.js?")},"./src/components/App.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n/* harmony import */ var _TryVTK__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TryVTK */ "./src/components/TryVTK.js");\n// src/components/App.js\n\n\nconst App = () => {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n    className: "app-container"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_TryVTK__WEBPACK_IMPORTED_MODULE_1__["default"], null), console.log("Renderizando App.js"));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (App);\n\n//# sourceURL=webpack://frontend/./src/components/App.js?')},"./src/components/ArrowButtons.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n\nconst ArrowButtons = ({\n  onArrowClick\n}) => {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n    className: "arrow-buttons"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", {\n    className: "arrow-button",\n    onClick: () => onArrowClick("left")\n  }, "\\u2191"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", {\n    className: "arrow-button",\n    onClick: () => onArrowClick("right")\n  }, "\\u2193"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", {\n    className: "arrow-button",\n    onClick: () => onArrowClick("up")\n  }, "\\u2190"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", {\n    className: "arrow-button",\n    onClick: () => onArrowClick("down")\n  }, "\\u2192"));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArrowButtons);\n\n//# sourceURL=webpack://frontend/./src/components/ArrowButtons.js?')},"./src/components/BrightnessSlider.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n\nconst BrightnessSlider = ({\n  label,\n  value,\n  onChange\n}) => {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n    className: "slider-item"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("label", {\n    htmlFor: label\n  }, label), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("input", {\n    type: "range",\n    id: label,\n    min: "-255",\n    max: "255",\n    step: "1",\n    value: value,\n    onChange: e => onChange(Number(e.target.value))\n  }));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BrightnessSlider);\n\n//# sourceURL=webpack://frontend/./src/components/BrightnessSlider.js?')},"./src/components/ControlButtons.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n\nconst ControlButtons = ({\n  onGenerate,\n  onReset\n}) => {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n    className: "button-container"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", {\n    id: "sendMessageButton",\n    onClick: onGenerate\n  }, "Generar"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", {\n    id: "resetButton",\n    onClick: onReset\n  }, "Reset"));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ControlButtons);\n\n//# sourceURL=webpack://frontend/./src/components/ControlButtons.js?')},"./src/components/ImageDisplay.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n\nconst ImageDisplay = ({\n  imageData\n}) => {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n    id: "imageContainer"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n    id: "messages"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("img", {\n    id: "receivedImage",\n    src: imageData,\n    className: imageData ? "visible" : "hidden",\n    alt: "Received Image"\n  }));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ImageDisplay);\n\n//# sourceURL=webpack://frontend/./src/components/ImageDisplay.js?')},"./src/components/TryVTK.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n/* harmony import */ var _VTKViewer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./VTKViewer */ "./src/components/VTKViewer.js");\n/* harmony import */ var _ImageDisplay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ImageDisplay */ "./src/components/ImageDisplay.js");\n/* harmony import */ var _ControlButtons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ControlButtons */ "./src/components/ControlButtons.js");\n/* harmony import */ var _ArrowButtons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ArrowButtons */ "./src/components/ArrowButtons.js");\n/* harmony import */ var _BrightnessSlider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BrightnessSlider */ "./src/components/BrightnessSlider.js");\n\n\n\n\n\n\nconst TryVTK = () => {\n  const [xValue, setXValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0.3);\n  const [yValue, setYValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0.3);\n  const [zValue, setZValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0.99);\n  const [imageData, setImageData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const [imageData2, setImageData2] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null); // Nueva imagen\n  const [showImage2, setShowImage2] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false); // Estado para mostrar/ocultar imagen 2\n  const [brightnessGeneral, setBrightnessGeneral] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [brightness1, setBrightness1] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [brightness2, setBrightness2] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [brightness3, setBrightness3] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [brightness4, setBrightness4] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [brightness5, setBrightness5] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [brightness6, setBrightness6] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [brightness7, setBrightness7] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [brightness8, setBrightness8] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n\n  // Estado para almacenar la posición del actor especial\n  const [specialActorPosition, setSpecialActorPosition] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([0, 0, 0]);\n  const brightnessRefs = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([brightnessGeneral, brightness1, brightness2, brightness3, brightness4, brightness5, brightness6, brightness7, brightness8]);\n  const vtkContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const chatSocket = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const buttonState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n\n  // Estado para los contadores de flechas\n  const [arrowUpCount, setArrowUpCount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [arrowDownCount, setArrowDownCount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [arrowLeftCount, setArrowLeftCount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [arrowRightCount, setArrowRightCount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const resetValues = () => {\n    setBrightnessGeneral(0);\n    setBrightness1(0);\n    setBrightness2(0);\n    setBrightness3(0);\n    setBrightness4(0);\n    setBrightness5(0);\n    setBrightness6(0);\n    setBrightness7(0);\n    setBrightness8(0);\n    setArrowUpCount(0);\n    setArrowDownCount(0);\n    setArrowLeftCount(0);\n    setArrowRightCount(0);\n    setShowImage2(false); // Resetear también el estado de la imagen 2\n    setImageData2(null); // Limpiar la imagen 2\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    chatSocket.current = new WebSocket(`ws://${window.location.host}/ws/socket-principal-front/`);\n    chatSocket.current.onmessage = e => {\n      const data = JSON.parse(e.data);\n      console.log(\'posicion recibida en tryvtk\', data.position);\n      console.log(\'image_data recibida en tryvtk\', data.image_data_2);\n      if (data.position) {\n        // Asegúrate de que data.position es un array de 3 números\n        if (Array.isArray(data.position)) {\n          setSpecialActorPosition(data.position);\n        } else {\n          console.error("Posición recibida no es un array válido:", data.position);\n        }\n      }\n      if (data.image_data) {\n        setImageData(`data:image/png;base64,${data.image_data}`);\n        if (buttonState.current) sendMessage();\n      } else {\n        console.error("Received empty or undefined image_data");\n      }\n\n      // Recibir la segunda imagen si está disponible\n      if (data.image_data_2) {\n        setImageData2(`data:image/png;base64,${data.image_data_2}`);\n      }\n    };\n    return () => {\n      if (chatSocket.current) chatSocket.current.close();\n    };\n  }, []);\n\n  // Función para enviar mensajes\n  const sendMessage = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((direction = null) => {\n    if (!chatSocket.current || chatSocket.current.readyState !== WebSocket.OPEN) {\n      console.error("WebSocket no está conectado");\n      return;\n    }\n    console.log("Enviando mensaje a través del WebSocket");\n    chatSocket.current.send(JSON.stringify({\n      message: "message",\n      x: xValue + 0.01 * (Math.random() * 2 - 1),\n      y: yValue + 0.01 * (Math.random() * 2 - 1),\n      z: zValue + 0.01 * (Math.random() * 2 - 1),\n      brightness: brightnessRefs.current[0],\n      brightness1: brightnessRefs.current[1],\n      brightness2: brightnessRefs.current[2],\n      brightness3: brightnessRefs.current[3],\n      brightness4: brightnessRefs.current[4],\n      brightness5: brightnessRefs.current[5],\n      brightness6: brightnessRefs.current[6],\n      brightness7: brightnessRefs.current[7],\n      brightness8: brightnessRefs.current[8],\n      arrowUp: arrowUpCount,\n      arrowDown: arrowDownCount,\n      arrowLeft: arrowLeftCount,\n      arrowRight: arrowRightCount,\n      specialActorPosition: specialActorPosition,\n      direction: direction,\n      show_image_2: showImage2 // Enviar el estado de visualización de imagen 2\n    }));\n  }, [xValue, yValue, zValue, arrowUpCount, arrowDownCount, arrowLeftCount, arrowRightCount, specialActorPosition, showImage2]);\n\n  // Función para manejar clics en las flechas\n  const handleArrowClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(direction => {\n    switch (direction) {\n      case "up":\n        setArrowUpCount(prev => prev + 1);\n        break;\n      case "down":\n        setArrowDownCount(prev => prev + 1);\n        break;\n      case "left":\n        setArrowLeftCount(prev => prev + 1);\n        break;\n      case "right":\n        setArrowRightCount(prev => prev + 1);\n        break;\n      default:\n        break;\n    }\n\n    // Enviar la dirección de movimiento a través del WebSocket\n    sendMessage(direction);\n  }, [sendMessage]);\n\n  // Manejador de eventos de teclado\n  const handleKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(event => {\n    // Verificar si la tecla presionada es una de las flechas\n    switch (event.key) {\n      case "ArrowUp":\n        event.preventDefault(); // Prevenir comportamiento por defecto\n        handleArrowClick("up");\n        break;\n      case "ArrowDown":\n        event.preventDefault();\n        handleArrowClick("down");\n        break;\n      case "ArrowLeft":\n        event.preventDefault();\n        handleArrowClick("left");\n        break;\n      case "ArrowRight":\n        event.preventDefault();\n        handleArrowClick("right");\n        break;\n      default:\n        break;\n    }\n  }, [handleArrowClick]);\n\n  // Agregar event listener para teclas\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    window.addEventListener("keydown", handleKeyDown);\n\n    // Limpiar el event listener al desmontar el componente\n    return () => {\n      window.removeEventListener("keydown", handleKeyDown);\n    };\n  }, [handleKeyDown]);\n  const buttonPressed = () => {\n    buttonState.current = !buttonState.current;\n    sendMessage();\n  };\n\n  // Función para alternar la visualización de la segunda imagen\n  const toggleImage2 = () => {\n    setShowImage2(prev => !prev);\n    // No es necesario enviar mensaje inmediatamente, se enviará en el próximo ciclo\n  };\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n    className: "app-container"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n    className: "half-screen half-screen-left"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ImageDisplay__WEBPACK_IMPORTED_MODULE_2__["default"], {\n    imageData: imageData\n  }), showImage2 && imageData2 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n    className: "image2-container"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3", null, "Imagen 2"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ImageDisplay__WEBPACK_IMPORTED_MODULE_2__["default"], {\n    imageData: imageData2\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n    className: "half-screen half-screen-right"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n    ref: vtkContainerRef,\n    className: "vtk-container"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_VTKViewer__WEBPACK_IMPORTED_MODULE_1__["default"], {\n    containerRef: vtkContainerRef,\n    onSpecialActorPositionChange: setSpecialActorPosition,\n    specialActorPosition: specialActorPosition\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n    id: "controls"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ControlButtons__WEBPACK_IMPORTED_MODULE_3__["default"], {\n    onGenerate: buttonPressed,\n    onReset: resetValues\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ArrowButtons__WEBPACK_IMPORTED_MODULE_4__["default"], {\n    onArrowClick: handleArrowClick\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n    className: "toggle-button-container"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", {\n    className: `toggle-button ${showImage2 ? \'active\' : \'\'}`,\n    onClick: toggleImage2\n  }, showImage2 ? \'Ocultar Imagen 2\' : \'Mostrar Imagen 2\')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n    className: "slider-container"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_BrightnessSlider__WEBPACK_IMPORTED_MODULE_5__["default"], {\n    label: "Brillo General",\n    value: brightnessGeneral,\n    onChange: setBrightnessGeneral\n  }), [...Array(8)].map((_, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_BrightnessSlider__WEBPACK_IMPORTED_MODULE_5__["default"], {\n    key: i,\n    label: `Brillo ${i + 1}`,\n    value: brightnessRefs.current[i + 1],\n    onChange: value => {\n      const newBrightness = [...brightnessRefs.current];\n      newBrightness[i + 1] = value;\n      brightnessRefs.current = newBrightness;\n    }\n  }))))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TryVTK);\n\n//# sourceURL=webpack://frontend/./src/components/TryVTK.js?')},"./src/components/VTKViewer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n/* harmony import */ var _kitware_vtk_js_Rendering_Profiles_Geometry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Profiles/Geometry */ "./node_modules/@kitware/vtk.js/Rendering/Profiles/Geometry.js");\n/* harmony import */ var _kitware_vtk_js_Rendering_Misc_FullScreenRenderWindow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow */ "./node_modules/@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow.js");\n/* harmony import */ var _kitware_vtk_js_Rendering_Core_Actor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/Actor */ "./node_modules/@kitware/vtk.js/Rendering/Core/Actor.js");\n/* harmony import */ var _kitware_vtk_js_IO_Geometry_STLReader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @kitware/vtk.js/IO/Geometry/STLReader */ "./node_modules/@kitware/vtk.js/IO/Geometry/STLReader.js");\n/* harmony import */ var _kitware_vtk_js_Rendering_Core_Mapper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @kitware/vtk.js/Rendering/Core/Mapper */ "./node_modules/@kitware/vtk.js/Rendering/Core/Mapper.js");\n/* harmony import */ var _meshColors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./meshColors */ "./src/components/meshColors.js");\n\n\n\n\n\n\n\nconst VTKViewer = ({\n  containerRef,\n  onSpecialActorPositionChange,\n  specialActorPosition\n}) => {\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const specialActorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null); // Referencia para el actor especial\n\n  // Función para obtener la posición del actor especial\n  const getSpecialActorPosition = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    if (specialActorRef.current) {\n      const position = specialActorRef.current.getPosition();\n      console.log("Posición actual del actor especial:", position); // Debug\n      return position;\n    }\n    return null;\n  }, []);\n\n  // Efecto para notificar al padre cuando la posición cambia\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (onSpecialActorPositionChange) {\n      onSpecialActorPositionChange(getSpecialActorPosition());\n    }\n  }, [onSpecialActorPositionChange, getSpecialActorPosition]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (specialActorRef.current && specialActorPosition) {\n      console.log("Nueva posición recibida en useEffect:", specialActorPosition);\n\n      // Verificar que la posición es válida\n      if (Array.isArray(specialActorPosition)) {\n        var _context$current;\n        specialActorRef.current.setPosition(...specialActorPosition);\n        console.log("Posición del actor especial actualizada:", specialActorRef.current.getPosition());\n        if ((_context$current = context.current) !== null && _context$current !== void 0 && _context$current.renderWindow) {\n          context.current.renderWindow.render();\n          console.log("Escena rerenderizada");\n        }\n      } else {\n        console.error("Posición no válida:", specialActorPosition);\n      }\n    }\n  }, [specialActorPosition]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const fetchStlFiles = async () => {\n      try {\n        const response = await fetch("/api/stl-files/");\n        const data = await response.json();\n        return data;\n      } catch (error) {\n        console.error("Error fetching STL files:", error);\n        return {\n          files: [],\n          fov: []\n        };\n      }\n    };\n    const initializeVTK = async () => {\n      if (!context.current && containerRef.current) {\n        // Crear el renderizador de pantalla completa\n        const fullScreenRenderer = _kitware_vtk_js_Rendering_Misc_FullScreenRenderWindow__WEBPACK_IMPORTED_MODULE_2__["default"].newInstance({\n          rootContainer: containerRef.current,\n          containerStyle: {\n            width: "100%",\n            height: "100%"\n          }\n        });\n        const renderer = fullScreenRenderer.getRenderer();\n        const renderWindow = fullScreenRenderer.getRenderWindow();\n        context.current = {\n          fullScreenRenderer,\n          renderWindow,\n          renderer\n        };\n\n        // Cargar los archivos STL\n        const {\n          files\n        } = await fetchStlFiles();\n        files.forEach(file => {\n          const reader = _kitware_vtk_js_IO_Geometry_STLReader__WEBPACK_IMPORTED_MODULE_4__["default"].newInstance();\n          reader.setUrl(`/static/${file}`).then(() => {\n            const source = reader.getOutputData(0);\n            const mapper = _kitware_vtk_js_Rendering_Core_Mapper__WEBPACK_IMPORTED_MODULE_5__["default"].newInstance();\n            mapper.setInputData(source);\n            mapper.setScalarVisibility(false);\n            const actor = _kitware_vtk_js_Rendering_Core_Actor__WEBPACK_IMPORTED_MODULE_3__["default"].newInstance();\n            actor.setMapper(mapper);\n\n            // Asignar colores según el nombre del archivo\n            const name = file.toLowerCase();\n            let assignedColor = [1.0, 1.0, 1.0]; // Color por defecto (blanco)\n            for (const keyword in _meshColors__WEBPACK_IMPORTED_MODULE_6__["default"]) {\n              if (name.includes(keyword.toLowerCase())) {\n                assignedColor = _meshColors__WEBPACK_IMPORTED_MODULE_6__["default"][keyword];\n                break;\n              }\n            }\n            actor.getProperty().setColor(...assignedColor);\n            actor.getProperty().setDiffuseColor(...assignedColor);\n\n            // Verificar si es el archivo especial\n            if (name.includes("transductor y fov")) {\n              specialActorRef.current = actor; // Almacenar el actor especial\n              console.log("Actor especial asignado:", specialActorRef.current); // Debug\n              if (onSpecialActorPositionChange) {\n                // Notificar al padre la posición inicial\n                onSpecialActorPositionChange(actor.getPosition());\n              }\n            }\n\n            // Agregar el actor al renderizador\n            renderer.addActor(actor);\n          }).catch(error => {\n            console.error(`Error loading ${file}:`, error);\n          });\n        });\n\n        // Renderizar la escena\n        renderWindow.render();\n      }\n    };\n    initializeVTK();\n\n    // Limpieza al desmontar el componente\n    return () => {\n      if (context.current) {\n        context.current.fullScreenRenderer.delete();\n        context.current = null;\n      }\n    };\n  }, [containerRef, onSpecialActorPositionChange]);\n  return null;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (VTKViewer);\n\n//# sourceURL=webpack://frontend/./src/components/VTKViewer.js?')},"./src/components/meshColors.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst meshColors = {\n  pelvis: [151 / 255.0, 151 / 255.0, 147 / 255.0],\n  spleen: [1.0, 0, 1.0],\n  liver: [100 / 255.0, 0, 100 / 255.0],\n  surrenalGland: [0, 1.0, 1.0],\n  kidney: [1.0, 1.0, 0],\n  gallbladder: [0, 1.0, 0],\n  pancreas: [0, 0, 1.0],\n  artery: [1.0, 0, 0],\n  bones: [1.0, 1.0, 1.0],\n  skin: [1.0, 1.0, 1.0],\n  transductor: [1.0, 1.0, 1.0]\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meshColors);\n\n//# sourceURL=webpack://frontend/./src/components/meshColors.js?')},"./src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n/* harmony import */ var react_dom_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom/client */ "./node_modules/react-dom/client.js");\n/* harmony import */ var _components_App__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/App */ "./src/components/App.js");\n\n\n\nconst appDiv = document.getElementById("app");\nconst root = (0,react_dom_client__WEBPACK_IMPORTED_MODULE_1__.createRoot)(appDiv);\nroot.render(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_App__WEBPACK_IMPORTED_MODULE_2__["default"], null));\n\n//# sourceURL=webpack://frontend/./src/index.js?')},"./node_modules/define-data-property/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\r\n\r\nvar $defineProperty = __webpack_require__(/*! es-define-property */ \"./node_modules/es-define-property/index.js\");\r\n\r\nvar $SyntaxError = __webpack_require__(/*! es-errors/syntax */ \"./node_modules/es-errors/syntax.js\");\r\nvar $TypeError = __webpack_require__(/*! es-errors/type */ \"./node_modules/es-errors/type.js\");\r\n\r\nvar gopd = __webpack_require__(/*! gopd */ \"./node_modules/gopd/index.js\");\r\n\r\n/** @type {import('.')} */\r\nmodule.exports = function defineDataProperty(\r\n\tobj,\r\n\tproperty,\r\n\tvalue\r\n) {\r\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\r\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\r\n\t}\r\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\r\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\r\n\t}\r\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\r\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\r\n\t}\r\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\r\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\r\n\t}\r\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\r\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\r\n\t}\r\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\r\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\r\n\t}\r\n\r\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\r\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\r\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\r\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\r\n\r\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\r\n\tvar desc = !!gopd && gopd(obj, property);\r\n\r\n\tif ($defineProperty) {\r\n\t\t$defineProperty(obj, property, {\r\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\r\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\r\n\t\t\tvalue: value,\r\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\r\n\t\t});\r\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\r\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\r\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\r\n\t} else {\r\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\r\n\t}\r\n};\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/define-data-property/index.js?")},"./node_modules/define-properties/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\r\n\r\nvar keys = __webpack_require__(/*! object-keys */ \"./node_modules/object-keys/index.js\");\r\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\r\n\r\nvar toStr = Object.prototype.toString;\r\nvar concat = Array.prototype.concat;\r\nvar defineDataProperty = __webpack_require__(/*! define-data-property */ \"./node_modules/define-data-property/index.js\");\r\n\r\nvar isFunction = function (fn) {\r\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\r\n};\r\n\r\nvar supportsDescriptors = __webpack_require__(/*! has-property-descriptors */ \"./node_modules/has-property-descriptors/index.js\")();\r\n\r\nvar defineProperty = function (object, name, value, predicate) {\r\n\tif (name in object) {\r\n\t\tif (predicate === true) {\r\n\t\t\tif (object[name] === value) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else if (!isFunction(predicate) || !predicate()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tif (supportsDescriptors) {\r\n\t\tdefineDataProperty(object, name, value, true);\r\n\t} else {\r\n\t\tdefineDataProperty(object, name, value);\r\n\t}\r\n};\r\n\r\nvar defineProperties = function (object, map) {\r\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\r\n\tvar props = keys(map);\r\n\tif (hasSymbols) {\r\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\r\n\t}\r\n\tfor (var i = 0; i < props.length; i += 1) {\r\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\r\n\t}\r\n};\r\n\r\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\r\n\r\nmodule.exports = defineProperties;\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/define-properties/index.js?")},"./node_modules/es-define-property/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\r\n\r\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/get-intrinsic/index.js\");\r\n\r\n/** @type {import('.')} */\r\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true) || false;\r\nif ($defineProperty) {\r\n\ttry {\r\n\t\t$defineProperty({}, 'a', { value: 1 });\r\n\t} catch (e) {\r\n\t\t// IE 8 has a broken defineProperty\r\n\t\t$defineProperty = false;\r\n\t}\r\n}\r\n\r\nmodule.exports = $defineProperty;\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/es-define-property/index.js?")},"./node_modules/es-errors/eval.js":module=>{"use strict";eval("\r\n\r\n/** @type {import('./eval')} */\r\nmodule.exports = EvalError;\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/es-errors/eval.js?")},"./node_modules/es-errors/index.js":module=>{"use strict";eval("\r\n\r\n/** @type {import('.')} */\r\nmodule.exports = Error;\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/es-errors/index.js?")},"./node_modules/es-errors/range.js":module=>{"use strict";eval("\r\n\r\n/** @type {import('./range')} */\r\nmodule.exports = RangeError;\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/es-errors/range.js?")},"./node_modules/es-errors/ref.js":module=>{"use strict";eval("\r\n\r\n/** @type {import('./ref')} */\r\nmodule.exports = ReferenceError;\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/es-errors/ref.js?")},"./node_modules/es-errors/syntax.js":module=>{"use strict";eval("\r\n\r\n/** @type {import('./syntax')} */\r\nmodule.exports = SyntaxError;\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/es-errors/syntax.js?")},"./node_modules/es-errors/type.js":module=>{"use strict";eval("\r\n\r\n/** @type {import('./type')} */\r\nmodule.exports = TypeError;\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/es-errors/type.js?")},"./node_modules/es-errors/uri.js":module=>{"use strict";eval("\r\n\r\n/** @type {import('./uri')} */\r\nmodule.exports = URIError;\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/es-errors/uri.js?")},"./node_modules/fast-deep-equal/index.js":module=>{"use strict";eval("\r\n\r\n// do not edit .js files directly - edit src/index.jst\r\n\r\n\r\n\r\nmodule.exports = function equal(a, b) {\r\n  if (a === b) return true;\r\n\r\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\r\n    if (a.constructor !== b.constructor) return false;\r\n\r\n    var length, i, keys;\r\n    if (Array.isArray(a)) {\r\n      length = a.length;\r\n      if (length != b.length) return false;\r\n      for (i = length; i-- !== 0;)\r\n        if (!equal(a[i], b[i])) return false;\r\n      return true;\r\n    }\r\n\r\n\r\n\r\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\r\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\r\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\r\n\r\n    keys = Object.keys(a);\r\n    length = keys.length;\r\n    if (length !== Object.keys(b).length) return false;\r\n\r\n    for (i = length; i-- !== 0;)\r\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\r\n\r\n    for (i = length; i-- !== 0;) {\r\n      var key = keys[i];\r\n\r\n      if (!equal(a[key], b[key])) return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  // true if both NaN, false otherwise\r\n  return a!==a && b!==b;\r\n};\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/fast-deep-equal/index.js?")},"./node_modules/function-bind/implementation.js":module=>{"use strict";eval("\r\n\r\n/* eslint no-invalid-this: 1 */\r\n\r\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\r\nvar toStr = Object.prototype.toString;\r\nvar max = Math.max;\r\nvar funcType = '[object Function]';\r\n\r\nvar concatty = function concatty(a, b) {\r\n    var arr = [];\r\n\r\n    for (var i = 0; i < a.length; i += 1) {\r\n        arr[i] = a[i];\r\n    }\r\n    for (var j = 0; j < b.length; j += 1) {\r\n        arr[j + a.length] = b[j];\r\n    }\r\n\r\n    return arr;\r\n};\r\n\r\nvar slicy = function slicy(arrLike, offset) {\r\n    var arr = [];\r\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\r\n        arr[j] = arrLike[i];\r\n    }\r\n    return arr;\r\n};\r\n\r\nvar joiny = function (arr, joiner) {\r\n    var str = '';\r\n    for (var i = 0; i < arr.length; i += 1) {\r\n        str += arr[i];\r\n        if (i + 1 < arr.length) {\r\n            str += joiner;\r\n        }\r\n    }\r\n    return str;\r\n};\r\n\r\nmodule.exports = function bind(that) {\r\n    var target = this;\r\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\r\n        throw new TypeError(ERROR_MESSAGE + target);\r\n    }\r\n    var args = slicy(arguments, 1);\r\n\r\n    var bound;\r\n    var binder = function () {\r\n        if (this instanceof bound) {\r\n            var result = target.apply(\r\n                this,\r\n                concatty(args, arguments)\r\n            );\r\n            if (Object(result) === result) {\r\n                return result;\r\n            }\r\n            return this;\r\n        }\r\n        return target.apply(\r\n            that,\r\n            concatty(args, arguments)\r\n        );\r\n\r\n    };\r\n\r\n    var boundLength = max(0, target.length - args.length);\r\n    var boundArgs = [];\r\n    for (var i = 0; i < boundLength; i++) {\r\n        boundArgs[i] = '$' + i;\r\n    }\r\n\r\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\r\n\r\n    if (target.prototype) {\r\n        var Empty = function Empty() {};\r\n        Empty.prototype = target.prototype;\r\n        bound.prototype = new Empty();\r\n        Empty.prototype = null;\r\n    }\r\n\r\n    return bound;\r\n};\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/function-bind/implementation.js?")},"./node_modules/function-bind/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\r\n\r\nvar implementation = __webpack_require__(/*! ./implementation */ "./node_modules/function-bind/implementation.js");\r\n\r\nmodule.exports = Function.prototype.bind || implementation;\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/function-bind/index.js?')},"./node_modules/get-intrinsic/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\r\n\r\nvar undefined;\r\n\r\nvar $Error = __webpack_require__(/*! es-errors */ \"./node_modules/es-errors/index.js\");\r\nvar $EvalError = __webpack_require__(/*! es-errors/eval */ \"./node_modules/es-errors/eval.js\");\r\nvar $RangeError = __webpack_require__(/*! es-errors/range */ \"./node_modules/es-errors/range.js\");\r\nvar $ReferenceError = __webpack_require__(/*! es-errors/ref */ \"./node_modules/es-errors/ref.js\");\r\nvar $SyntaxError = __webpack_require__(/*! es-errors/syntax */ \"./node_modules/es-errors/syntax.js\");\r\nvar $TypeError = __webpack_require__(/*! es-errors/type */ \"./node_modules/es-errors/type.js\");\r\nvar $URIError = __webpack_require__(/*! es-errors/uri */ \"./node_modules/es-errors/uri.js\");\r\n\r\nvar $Function = Function;\r\n\r\n// eslint-disable-next-line consistent-return\r\nvar getEvalledConstructor = function (expressionSyntax) {\r\n\ttry {\r\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\r\n\t} catch (e) {}\r\n};\r\n\r\nvar $gOPD = Object.getOwnPropertyDescriptor;\r\nif ($gOPD) {\r\n\ttry {\r\n\t\t$gOPD({}, '');\r\n\t} catch (e) {\r\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\r\n\t}\r\n}\r\n\r\nvar throwTypeError = function () {\r\n\tthrow new $TypeError();\r\n};\r\nvar ThrowTypeError = $gOPD\r\n\t? (function () {\r\n\t\ttry {\r\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\r\n\t\t\targuments.callee; // IE 8 does not throw here\r\n\t\t\treturn throwTypeError;\r\n\t\t} catch (calleeThrows) {\r\n\t\t\ttry {\r\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\r\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\r\n\t\t\t} catch (gOPDthrows) {\r\n\t\t\t\treturn throwTypeError;\r\n\t\t\t}\r\n\t\t}\r\n\t}())\r\n\t: throwTypeError;\r\n\r\nvar hasSymbols = __webpack_require__(/*! has-symbols */ \"./node_modules/has-symbols/index.js\")();\r\nvar hasProto = __webpack_require__(/*! has-proto */ \"./node_modules/has-proto/index.js\")();\r\n\r\nvar getProto = Object.getPrototypeOf || (\r\n\thasProto\r\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\r\n\t\t: null\r\n);\r\n\r\nvar needsEval = {};\r\n\r\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\r\n\r\nvar INTRINSICS = {\r\n\t__proto__: null,\r\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\r\n\t'%Array%': Array,\r\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\r\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\r\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\r\n\t'%AsyncFunction%': needsEval,\r\n\t'%AsyncGenerator%': needsEval,\r\n\t'%AsyncGeneratorFunction%': needsEval,\r\n\t'%AsyncIteratorPrototype%': needsEval,\r\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\r\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\r\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\r\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\r\n\t'%Boolean%': Boolean,\r\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\r\n\t'%Date%': Date,\r\n\t'%decodeURI%': decodeURI,\r\n\t'%decodeURIComponent%': decodeURIComponent,\r\n\t'%encodeURI%': encodeURI,\r\n\t'%encodeURIComponent%': encodeURIComponent,\r\n\t'%Error%': $Error,\r\n\t'%eval%': eval, // eslint-disable-line no-eval\r\n\t'%EvalError%': $EvalError,\r\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\r\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\r\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\r\n\t'%Function%': $Function,\r\n\t'%GeneratorFunction%': needsEval,\r\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\r\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\r\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\r\n\t'%isFinite%': isFinite,\r\n\t'%isNaN%': isNaN,\r\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\r\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\r\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\r\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\r\n\t'%Math%': Math,\r\n\t'%Number%': Number,\r\n\t'%Object%': Object,\r\n\t'%parseFloat%': parseFloat,\r\n\t'%parseInt%': parseInt,\r\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\r\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\r\n\t'%RangeError%': $RangeError,\r\n\t'%ReferenceError%': $ReferenceError,\r\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\r\n\t'%RegExp%': RegExp,\r\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\r\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\r\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\r\n\t'%String%': String,\r\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\r\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\r\n\t'%SyntaxError%': $SyntaxError,\r\n\t'%ThrowTypeError%': ThrowTypeError,\r\n\t'%TypedArray%': TypedArray,\r\n\t'%TypeError%': $TypeError,\r\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\r\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\r\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\r\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\r\n\t'%URIError%': $URIError,\r\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\r\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\r\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\r\n};\r\n\r\nif (getProto) {\r\n\ttry {\r\n\t\tnull.error; // eslint-disable-line no-unused-expressions\r\n\t} catch (e) {\r\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\r\n\t\tvar errorProto = getProto(getProto(e));\r\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\r\n\t}\r\n}\r\n\r\nvar doEval = function doEval(name) {\r\n\tvar value;\r\n\tif (name === '%AsyncFunction%') {\r\n\t\tvalue = getEvalledConstructor('async function () {}');\r\n\t} else if (name === '%GeneratorFunction%') {\r\n\t\tvalue = getEvalledConstructor('function* () {}');\r\n\t} else if (name === '%AsyncGeneratorFunction%') {\r\n\t\tvalue = getEvalledConstructor('async function* () {}');\r\n\t} else if (name === '%AsyncGenerator%') {\r\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\r\n\t\tif (fn) {\r\n\t\t\tvalue = fn.prototype;\r\n\t\t}\r\n\t} else if (name === '%AsyncIteratorPrototype%') {\r\n\t\tvar gen = doEval('%AsyncGenerator%');\r\n\t\tif (gen && getProto) {\r\n\t\t\tvalue = getProto(gen.prototype);\r\n\t\t}\r\n\t}\r\n\r\n\tINTRINSICS[name] = value;\r\n\r\n\treturn value;\r\n};\r\n\r\nvar LEGACY_ALIASES = {\r\n\t__proto__: null,\r\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\r\n\t'%ArrayPrototype%': ['Array', 'prototype'],\r\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\r\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\r\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\r\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\r\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\r\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\r\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\r\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\r\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\r\n\t'%DatePrototype%': ['Date', 'prototype'],\r\n\t'%ErrorPrototype%': ['Error', 'prototype'],\r\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\r\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\r\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\r\n\t'%FunctionPrototype%': ['Function', 'prototype'],\r\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\r\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\r\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\r\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\r\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\r\n\t'%JSONParse%': ['JSON', 'parse'],\r\n\t'%JSONStringify%': ['JSON', 'stringify'],\r\n\t'%MapPrototype%': ['Map', 'prototype'],\r\n\t'%NumberPrototype%': ['Number', 'prototype'],\r\n\t'%ObjectPrototype%': ['Object', 'prototype'],\r\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\r\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\r\n\t'%PromisePrototype%': ['Promise', 'prototype'],\r\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\r\n\t'%Promise_all%': ['Promise', 'all'],\r\n\t'%Promise_reject%': ['Promise', 'reject'],\r\n\t'%Promise_resolve%': ['Promise', 'resolve'],\r\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\r\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\r\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\r\n\t'%SetPrototype%': ['Set', 'prototype'],\r\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\r\n\t'%StringPrototype%': ['String', 'prototype'],\r\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\r\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\r\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\r\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\r\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\r\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\r\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\r\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\r\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\r\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\r\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\r\n};\r\n\r\nvar bind = __webpack_require__(/*! function-bind */ \"./node_modules/function-bind/index.js\");\r\nvar hasOwn = __webpack_require__(/*! hasown */ \"./node_modules/hasown/index.js\");\r\nvar $concat = bind.call(Function.call, Array.prototype.concat);\r\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\r\nvar $replace = bind.call(Function.call, String.prototype.replace);\r\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\r\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\r\n\r\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\r\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\r\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\r\nvar stringToPath = function stringToPath(string) {\r\n\tvar first = $strSlice(string, 0, 1);\r\n\tvar last = $strSlice(string, -1);\r\n\tif (first === '%' && last !== '%') {\r\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\r\n\t} else if (last === '%' && first !== '%') {\r\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\r\n\t}\r\n\tvar result = [];\r\n\t$replace(string, rePropName, function (match, number, quote, subString) {\r\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\r\n\t});\r\n\treturn result;\r\n};\r\n/* end adaptation */\r\n\r\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\r\n\tvar intrinsicName = name;\r\n\tvar alias;\r\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\r\n\t\talias = LEGACY_ALIASES[intrinsicName];\r\n\t\tintrinsicName = '%' + alias[0] + '%';\r\n\t}\r\n\r\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\r\n\t\tvar value = INTRINSICS[intrinsicName];\r\n\t\tif (value === needsEval) {\r\n\t\t\tvalue = doEval(intrinsicName);\r\n\t\t}\r\n\t\tif (typeof value === 'undefined' && !allowMissing) {\r\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\talias: alias,\r\n\t\t\tname: intrinsicName,\r\n\t\t\tvalue: value\r\n\t\t};\r\n\t}\r\n\r\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\r\n};\r\n\r\nmodule.exports = function GetIntrinsic(name, allowMissing) {\r\n\tif (typeof name !== 'string' || name.length === 0) {\r\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\r\n\t}\r\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\r\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\r\n\t}\r\n\r\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\r\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\r\n\t}\r\n\tvar parts = stringToPath(name);\r\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\r\n\r\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\r\n\tvar intrinsicRealName = intrinsic.name;\r\n\tvar value = intrinsic.value;\r\n\tvar skipFurtherCaching = false;\r\n\r\n\tvar alias = intrinsic.alias;\r\n\tif (alias) {\r\n\t\tintrinsicBaseName = alias[0];\r\n\t\t$spliceApply(parts, $concat([0, 1], alias));\r\n\t}\r\n\r\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\r\n\t\tvar part = parts[i];\r\n\t\tvar first = $strSlice(part, 0, 1);\r\n\t\tvar last = $strSlice(part, -1);\r\n\t\tif (\r\n\t\t\t(\r\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\r\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\r\n\t\t\t)\r\n\t\t\t&& first !== last\r\n\t\t) {\r\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\r\n\t\t}\r\n\t\tif (part === 'constructor' || !isOwn) {\r\n\t\t\tskipFurtherCaching = true;\r\n\t\t}\r\n\r\n\t\tintrinsicBaseName += '.' + part;\r\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\r\n\r\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\r\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\r\n\t\t} else if (value != null) {\r\n\t\t\tif (!(part in value)) {\r\n\t\t\t\tif (!allowMissing) {\r\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\r\n\t\t\t\t}\r\n\t\t\t\treturn void undefined;\r\n\t\t\t}\r\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\r\n\t\t\t\tvar desc = $gOPD(value, part);\r\n\t\t\t\tisOwn = !!desc;\r\n\r\n\t\t\t\t// By convention, when a data property is converted to an accessor\r\n\t\t\t\t// property to emulate a data property that does not suffer from\r\n\t\t\t\t// the override mistake, that accessor's getter is marked with\r\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\r\n\t\t\t\t// uphold the illusion by pretending to see that original data\r\n\t\t\t\t// property, i.e., returning the value rather than the getter\r\n\t\t\t\t// itself.\r\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\r\n\t\t\t\t\tvalue = desc.get;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = value[part];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tisOwn = hasOwn(value, part);\r\n\t\t\t\tvalue = value[part];\r\n\t\t\t}\r\n\r\n\t\t\tif (isOwn && !skipFurtherCaching) {\r\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn value;\r\n};\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/get-intrinsic/index.js?")},"./node_modules/gl-matrix/esm/common.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ARRAY_TYPE: () => (/* binding */ ARRAY_TYPE),\n/* harmony export */   EPSILON: () => (/* binding */ EPSILON),\n/* harmony export */   RANDOM: () => (/* binding */ RANDOM),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   setMatrixArrayType: () => (/* binding */ setMatrixArrayType),\n/* harmony export */   toRadian: () => (/* binding */ toRadian)\n/* harmony export */ });\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n// Configuration Constants\r\nvar EPSILON = 0.000001;\r\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nvar RANDOM = Math.random;\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\r\n\r\nfunction setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\nvar degree = Math.PI / 180;\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\n\r\nfunction toRadian(a) {\r\n  return a * degree;\r\n}\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\n\r\nfunction equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}\r\nif (!Math.hypot) Math.hypot = function () {\r\n  var y = 0,\r\n      i = arguments.length;\r\n\r\n  while (i--) {\r\n    y += arguments[i] * arguments[i];\r\n  }\r\n\r\n  return Math.sqrt(y);\r\n};\n\n//# sourceURL=webpack://frontend/./node_modules/gl-matrix/esm/common.js?")},"./node_modules/gl-matrix/esm/mat3.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   adjoint: () => (/* binding */ adjoint),\n/* harmony export */   clone: () => (/* binding */ clone),\n/* harmony export */   copy: () => (/* binding */ copy),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   determinant: () => (/* binding */ determinant),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   exactEquals: () => (/* binding */ exactEquals),\n/* harmony export */   frob: () => (/* binding */ frob),\n/* harmony export */   fromMat2d: () => (/* binding */ fromMat2d),\n/* harmony export */   fromMat4: () => (/* binding */ fromMat4),\n/* harmony export */   fromQuat: () => (/* binding */ fromQuat),\n/* harmony export */   fromRotation: () => (/* binding */ fromRotation),\n/* harmony export */   fromScaling: () => (/* binding */ fromScaling),\n/* harmony export */   fromTranslation: () => (/* binding */ fromTranslation),\n/* harmony export */   fromValues: () => (/* binding */ fromValues),\n/* harmony export */   identity: () => (/* binding */ identity),\n/* harmony export */   invert: () => (/* binding */ invert),\n/* harmony export */   mul: () => (/* binding */ mul),\n/* harmony export */   multiply: () => (/* binding */ multiply),\n/* harmony export */   multiplyScalar: () => (/* binding */ multiplyScalar),\n/* harmony export */   multiplyScalarAndAdd: () => (/* binding */ multiplyScalarAndAdd),\n/* harmony export */   normalFromMat4: () => (/* binding */ normalFromMat4),\n/* harmony export */   projection: () => (/* binding */ projection),\n/* harmony export */   rotate: () => (/* binding */ rotate),\n/* harmony export */   scale: () => (/* binding */ scale),\n/* harmony export */   set: () => (/* binding */ set),\n/* harmony export */   str: () => (/* binding */ str),\n/* harmony export */   sub: () => (/* binding */ sub),\n/* harmony export */   subtract: () => (/* binding */ subtract),\n/* harmony export */   translate: () => (/* binding */ translate),\n/* harmony export */   transpose: () => (/* binding */ transpose)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "./node_modules/gl-matrix/esm/common.js");\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\n\r\nfunction create() {\r\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(9);\r\n\r\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n  }\r\n\r\n  out[0] = 1;\r\n  out[4] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\n\r\nfunction clone(a) {\r\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\n\r\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n  var b01 = a22 * a11 - a12 * a21;\r\n  var b11 = -a22 * a10 + a12 * a20;\r\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\r\n\r\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n\r\n  det = 1.0 / det;\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n  out[0] = a11 * a22 - a12 * a21;\r\n  out[1] = a02 * a21 - a01 * a22;\r\n  out[2] = a01 * a12 - a02 * a11;\r\n  out[3] = a12 * a20 - a10 * a22;\r\n  out[4] = a00 * a22 - a02 * a20;\r\n  out[5] = a02 * a10 - a00 * a12;\r\n  out[6] = a10 * a21 - a11 * a20;\r\n  out[7] = a01 * a20 - a00 * a21;\r\n  out[8] = a00 * a11 - a01 * a10;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\n\r\nfunction determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n/**\r\n * Multiplies two mat3\'s\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n  var b00 = b[0],\r\n      b01 = b[1],\r\n      b02 = b[2];\r\n  var b10 = b[3],\r\n      b11 = b[4],\r\n      b12 = b[5];\r\n  var b20 = b[6],\r\n      b21 = b[7],\r\n      b22 = b[8];\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction translate(out, a, v) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      x = v[0],\r\n      y = v[1];\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction rotate(out, a, rad) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n}\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\n\r\nfunction scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1];\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\n\r\nfunction fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n  return out;\r\n}\r\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction normalFromMat4(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\r\n\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n\r\n  det = 1.0 / det;\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  return out;\r\n}\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction projection(out, width, height) {\r\n  out[0] = 2 / width;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -2 / height;\r\n  out[5] = 0;\r\n  out[6] = -1;\r\n  out[7] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\n\r\nfunction str(a) {\r\n  return "mat3(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ", " + a[4] + ", " + a[5] + ", " + a[6] + ", " + a[7] + ", " + a[8] + ")";\r\n}\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\n\r\nfunction frob(a) {\r\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\r\n}\r\n/**\r\n * Adds two mat3\'s\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix\'s elements by\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n/**\r\n * Adds two mat3\'s after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b\'s elements by before adding\r\n * @returns {mat3} out\r\n */\r\n\r\nfunction multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  return out;\r\n}\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\n\r\nfunction exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\n\r\nfunction equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7],\r\n      a8 = a[8];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7],\r\n      b8 = b[8];\r\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\r\n}\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\n\r\nvar mul = multiply;\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\n\r\nvar sub = subtract;\n\n//# sourceURL=webpack://frontend/./node_modules/gl-matrix/esm/mat3.js?')},"./node_modules/gl-matrix/esm/mat4.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   adjoint: () => (/* binding */ adjoint),\n/* harmony export */   clone: () => (/* binding */ clone),\n/* harmony export */   copy: () => (/* binding */ copy),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   determinant: () => (/* binding */ determinant),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   exactEquals: () => (/* binding */ exactEquals),\n/* harmony export */   frob: () => (/* binding */ frob),\n/* harmony export */   fromQuat: () => (/* binding */ fromQuat),\n/* harmony export */   fromQuat2: () => (/* binding */ fromQuat2),\n/* harmony export */   fromRotation: () => (/* binding */ fromRotation),\n/* harmony export */   fromRotationTranslation: () => (/* binding */ fromRotationTranslation),\n/* harmony export */   fromRotationTranslationScale: () => (/* binding */ fromRotationTranslationScale),\n/* harmony export */   fromRotationTranslationScaleOrigin: () => (/* binding */ fromRotationTranslationScaleOrigin),\n/* harmony export */   fromScaling: () => (/* binding */ fromScaling),\n/* harmony export */   fromTranslation: () => (/* binding */ fromTranslation),\n/* harmony export */   fromValues: () => (/* binding */ fromValues),\n/* harmony export */   fromXRotation: () => (/* binding */ fromXRotation),\n/* harmony export */   fromYRotation: () => (/* binding */ fromYRotation),\n/* harmony export */   fromZRotation: () => (/* binding */ fromZRotation),\n/* harmony export */   frustum: () => (/* binding */ frustum),\n/* harmony export */   getRotation: () => (/* binding */ getRotation),\n/* harmony export */   getScaling: () => (/* binding */ getScaling),\n/* harmony export */   getTranslation: () => (/* binding */ getTranslation),\n/* harmony export */   identity: () => (/* binding */ identity),\n/* harmony export */   invert: () => (/* binding */ invert),\n/* harmony export */   lookAt: () => (/* binding */ lookAt),\n/* harmony export */   mul: () => (/* binding */ mul),\n/* harmony export */   multiply: () => (/* binding */ multiply),\n/* harmony export */   multiplyScalar: () => (/* binding */ multiplyScalar),\n/* harmony export */   multiplyScalarAndAdd: () => (/* binding */ multiplyScalarAndAdd),\n/* harmony export */   ortho: () => (/* binding */ ortho),\n/* harmony export */   orthoNO: () => (/* binding */ orthoNO),\n/* harmony export */   orthoZO: () => (/* binding */ orthoZO),\n/* harmony export */   perspective: () => (/* binding */ perspective),\n/* harmony export */   perspectiveFromFieldOfView: () => (/* binding */ perspectiveFromFieldOfView),\n/* harmony export */   perspectiveNO: () => (/* binding */ perspectiveNO),\n/* harmony export */   perspectiveZO: () => (/* binding */ perspectiveZO),\n/* harmony export */   rotate: () => (/* binding */ rotate),\n/* harmony export */   rotateX: () => (/* binding */ rotateX),\n/* harmony export */   rotateY: () => (/* binding */ rotateY),\n/* harmony export */   rotateZ: () => (/* binding */ rotateZ),\n/* harmony export */   scale: () => (/* binding */ scale),\n/* harmony export */   set: () => (/* binding */ set),\n/* harmony export */   str: () => (/* binding */ str),\n/* harmony export */   sub: () => (/* binding */ sub),\n/* harmony export */   subtract: () => (/* binding */ subtract),\n/* harmony export */   targetTo: () => (/* binding */ targetTo),\n/* harmony export */   translate: () => (/* binding */ translate),\n/* harmony export */   transpose: () => (/* binding */ transpose)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "./node_modules/gl-matrix/esm/common.js");\n\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\n\r\nfunction create() {\r\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\r\n\r\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\n\r\nfunction clone(a) {\r\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\n\r\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    var a12 = a[6],\r\n        a13 = a[7];\r\n    var a23 = a[11];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\r\n\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n\r\n  det = 1.0 / det;\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n  return out;\r\n}\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\n\r\nfunction determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\r\n\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15]; // Cache only the current line of the second matrix\r\n\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  b0 = b[4];\r\n  b1 = b[5];\r\n  b2 = b[6];\r\n  b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  b0 = b[8];\r\n  b1 = b[9];\r\n  b2 = b[10];\r\n  b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  b0 = b[12];\r\n  b1 = b[13];\r\n  b2 = b[14];\r\n  b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction translate(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  var a00, a01, a02, a03;\r\n  var a10, a11, a12, a13;\r\n  var a20, a21, a22, a23;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];\r\n    a01 = a[1];\r\n    a02 = a[2];\r\n    a03 = a[3];\r\n    a10 = a[4];\r\n    a11 = a[5];\r\n    a12 = a[6];\r\n    a13 = a[7];\r\n    a20 = a[8];\r\n    a21 = a[9];\r\n    a22 = a[10];\r\n    a23 = a[11];\r\n    out[0] = a00;\r\n    out[1] = a01;\r\n    out[2] = a02;\r\n    out[3] = a03;\r\n    out[4] = a10;\r\n    out[5] = a11;\r\n    out[6] = a12;\r\n    out[7] = a13;\r\n    out[8] = a20;\r\n    out[9] = a21;\r\n    out[10] = a22;\r\n    out[11] = a23;\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\n\r\nfunction scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.hypot(x, y, z);\r\n  var s, c, t;\r\n  var a00, a01, a02, a03;\r\n  var a10, a11, a12, a13;\r\n  var a20, a21, a22, a23;\r\n  var b00, b01, b02;\r\n  var b10, b11, b12;\r\n  var b20, b21, b22;\r\n\r\n  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n  a00 = a[0];\r\n  a01 = a[1];\r\n  a02 = a[2];\r\n  a03 = a[3];\r\n  a10 = a[4];\r\n  a11 = a[5];\r\n  a12 = a[6];\r\n  a13 = a[7];\r\n  a20 = a[8];\r\n  a21 = a[9];\r\n  a22 = a[10];\r\n  a23 = a[11]; // Construct the elements of the rotation matrix\r\n\r\n  b00 = x * x * t + c;\r\n  b01 = y * x * t + z * s;\r\n  b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;\r\n  b11 = y * y * t + c;\r\n  b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;\r\n  b21 = y * z * t - x * s;\r\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\r\n\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  } // Perform axis-specific matrix multiplication\r\n\r\n\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  } // Perform axis-specific matrix multiplication\r\n\r\n\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  } // Perform axis-specific matrix multiplication\r\n\r\n\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.hypot(x, y, z);\r\n  var s, c, t;\r\n\r\n  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c; // Perform rotation-specific matrix multiplication\r\n\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\r\n\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\r\n\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\n\r\nfunction fromQuat2(out, a) {\r\n  var translation = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\r\n\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\n\r\nfunction getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n  return out;\r\n}\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\n\r\nfunction getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n  out[0] = Math.hypot(m11, m12, m13);\r\n  out[1] = Math.hypot(m21, m22, m23);\r\n  out[2] = Math.hypot(m31, m32, m33);\r\n  return out;\r\n}\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\n\r\nfunction getRotation(out, mat) {\r\n  var scaling = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\r\n  getScaling(scaling, mat);\r\n  var is1 = 1 / scaling[0];\r\n  var is2 = 1 / scaling[1];\r\n  var is3 = 1 / scaling[2];\r\n  var sm11 = mat[0] * is1;\r\n  var sm12 = mat[1] * is2;\r\n  var sm13 = mat[2] * is3;\r\n  var sm21 = mat[4] * is1;\r\n  var sm22 = mat[5] * is2;\r\n  var sm23 = mat[6] * is3;\r\n  var sm31 = mat[8] * is1;\r\n  var sm32 = mat[9] * is2;\r\n  var sm33 = mat[10] * is3;\r\n  var trace = sm11 + sm22 + sm33;\r\n  var S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (sm23 - sm32) / S;\r\n    out[1] = (sm31 - sm13) / S;\r\n    out[2] = (sm12 - sm21) / S;\r\n  } else if (sm11 > sm22 && sm11 > sm33) {\r\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\r\n    out[3] = (sm23 - sm32) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (sm12 + sm21) / S;\r\n    out[2] = (sm31 + sm13) / S;\r\n  } else if (sm22 > sm33) {\r\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\r\n    out[3] = (sm31 - sm13) / S;\r\n    out[0] = (sm12 + sm21) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (sm23 + sm32) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\r\n    out[3] = (sm12 - sm21) / S;\r\n    out[0] = (sm31 + sm13) / S;\r\n    out[1] = (sm23 + sm32) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\r\n * which matches WebGL/OpenGL\'s clip volume.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction perspectiveNO(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Alias for {@link mat4.perspectiveNO}\r\n * @function\r\n */\r\n\r\nvar perspective = perspectiveNO;\r\n/**\r\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\r\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\r\n * which matches WebGPU/Vulkan/DirectX/Metal\'s clip volume.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction perspectiveZO(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = far * nf;\r\n    out[14] = far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -near;\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds.\r\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\r\n * which matches WebGL/OpenGL\'s clip volume.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction orthoNO(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Alias for {@link mat4.orthoNO}\r\n * @function\r\n */\r\n\r\nvar ortho = orthoNO;\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds.\r\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\r\n * which matches WebGPU/Vulkan/DirectX/Metal\'s clip volume.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction orthoZO(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = near * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction lookAt(out, eye, center, up) {\r\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON && Math.abs(eyey - centery) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON && Math.abs(eyez - centerz) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n  len = 1 / Math.hypot(z0, z1, z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.hypot(x0, x1, x2);\r\n\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n  len = Math.hypot(y0, y1, y2);\r\n\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n  var z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  var x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\n\r\nfunction str(a) {\r\n  return "mat4(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ", " + a[4] + ", " + a[5] + ", " + a[6] + ", " + a[7] + ", " + a[8] + ", " + a[9] + ", " + a[10] + ", " + a[11] + ", " + a[12] + ", " + a[13] + ", " + a[14] + ", " + a[15] + ")";\r\n}\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\n\r\nfunction frob(a) {\r\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\r\n}\r\n/**\r\n * Adds two mat4\'s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix\'s elements by\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n/**\r\n * Adds two mat4\'s after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b\'s elements by before adding\r\n * @returns {mat4} out\r\n */\r\n\r\nfunction multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\n\r\nfunction exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\n\r\nfunction equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var a8 = a[8],\r\n      a9 = a[9],\r\n      a10 = a[10],\r\n      a11 = a[11];\r\n  var a12 = a[12],\r\n      a13 = a[13],\r\n      a14 = a[14],\r\n      a15 = a[15];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  var b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  var b8 = b[8],\r\n      b9 = b[9],\r\n      b10 = b[10],\r\n      b11 = b[11];\r\n  var b12 = b[12],\r\n      b13 = b[13],\r\n      b14 = b[14],\r\n      b15 = b[15];\r\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\n\r\nvar mul = multiply;\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\n\r\nvar sub = subtract;\n\n//# sourceURL=webpack://frontend/./node_modules/gl-matrix/esm/mat4.js?')},"./node_modules/gl-matrix/esm/quat.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   calculateW: () => (/* binding */ calculateW),\n/* harmony export */   clone: () => (/* binding */ clone),\n/* harmony export */   conjugate: () => (/* binding */ conjugate),\n/* harmony export */   copy: () => (/* binding */ copy),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   dot: () => (/* binding */ dot),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   exactEquals: () => (/* binding */ exactEquals),\n/* harmony export */   exp: () => (/* binding */ exp),\n/* harmony export */   fromEuler: () => (/* binding */ fromEuler),\n/* harmony export */   fromMat3: () => (/* binding */ fromMat3),\n/* harmony export */   fromValues: () => (/* binding */ fromValues),\n/* harmony export */   getAngle: () => (/* binding */ getAngle),\n/* harmony export */   getAxisAngle: () => (/* binding */ getAxisAngle),\n/* harmony export */   identity: () => (/* binding */ identity),\n/* harmony export */   invert: () => (/* binding */ invert),\n/* harmony export */   len: () => (/* binding */ len),\n/* harmony export */   length: () => (/* binding */ length),\n/* harmony export */   lerp: () => (/* binding */ lerp),\n/* harmony export */   ln: () => (/* binding */ ln),\n/* harmony export */   mul: () => (/* binding */ mul),\n/* harmony export */   multiply: () => (/* binding */ multiply),\n/* harmony export */   normalize: () => (/* binding */ normalize),\n/* harmony export */   pow: () => (/* binding */ pow),\n/* harmony export */   random: () => (/* binding */ random),\n/* harmony export */   rotateX: () => (/* binding */ rotateX),\n/* harmony export */   rotateY: () => (/* binding */ rotateY),\n/* harmony export */   rotateZ: () => (/* binding */ rotateZ),\n/* harmony export */   rotationTo: () => (/* binding */ rotationTo),\n/* harmony export */   scale: () => (/* binding */ scale),\n/* harmony export */   set: () => (/* binding */ set),\n/* harmony export */   setAxes: () => (/* binding */ setAxes),\n/* harmony export */   setAxisAngle: () => (/* binding */ setAxisAngle),\n/* harmony export */   slerp: () => (/* binding */ slerp),\n/* harmony export */   sqlerp: () => (/* binding */ sqlerp),\n/* harmony export */   sqrLen: () => (/* binding */ sqrLen),\n/* harmony export */   squaredLength: () => (/* binding */ squaredLength),\n/* harmony export */   str: () => (/* binding */ str)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "./node_modules/gl-matrix/esm/common.js");\n/* harmony import */ var _mat3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mat3.js */ "./node_modules/gl-matrix/esm/mat3.js");\n/* harmony import */ var _vec3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vec3.js */ "./node_modules/gl-matrix/esm/vec3.js");\n/* harmony import */ var _vec4_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vec4.js */ "./node_modules/gl-matrix/esm/vec4.js");\n\r\n\r\n\r\n\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\n\r\nfunction create() {\r\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\r\n\r\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\n\r\nfunction identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\n\r\nfunction setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\n\r\nfunction getAxisAngle(out_axis, q) {\r\n  var rad = Math.acos(q[3]) * 2.0;\r\n  var s = Math.sin(rad / 2.0);\r\n\r\n  if (s > _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n\r\n  return rad;\r\n}\r\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\r\n\r\nfunction getAngle(a, b) {\r\n  var dotproduct = dot(a, b);\r\n  return Math.acos(2 * dotproduct * dotproduct - 1);\r\n}\r\n/**\r\n * Multiplies two quat\'s\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\r\n\r\nfunction multiply(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\n\r\nfunction rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\n\r\nfunction rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var by = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\n\r\nfunction rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bz = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\n\r\nfunction calculateW(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\r\n\r\nfunction exp(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  var r = Math.sqrt(x * x + y * y + z * z);\r\n  var et = Math.exp(w);\r\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\r\n  out[0] = x * s;\r\n  out[1] = y * s;\r\n  out[2] = z * s;\r\n  out[3] = et * Math.cos(r);\r\n  return out;\r\n}\r\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\r\n\r\nfunction ln(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  var r = Math.sqrt(x * x + y * y + z * z);\r\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\r\n  out[0] = x * t;\r\n  out[1] = y * t;\r\n  out[2] = z * t;\r\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\r\n  return out;\r\n}\r\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\r\n\r\nfunction pow(out, a, b) {\r\n  ln(out, a);\r\n  scale(out, out, b);\r\n  exp(out, out);\r\n  return out;\r\n}\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\n\r\nfunction slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\r\n\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\r\n\r\n  if (cosom < 0.0) {\r\n    cosom = -cosom;\r\n    bx = -bx;\r\n    by = -by;\r\n    bz = -bz;\r\n    bw = -bw;\r\n  } // calculate coefficients\r\n\r\n\r\n  if (1.0 - cosom > _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\r\n    // standard case (slerp)\r\n    omega = Math.acos(cosom);\r\n    sinom = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // "from" and "to" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  } // calculate final values\r\n\r\n\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n  return out;\r\n}\r\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\n\r\nfunction random(out) {\r\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\r\n  // TODO: Calling random 3 times is probably not the fastest solution\r\n  var u1 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM();\r\n  var u2 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM();\r\n  var u3 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM();\r\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\r\n  var sqrtU1 = Math.sqrt(u1);\r\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\r\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\r\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\r\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\r\n  return out;\r\n}\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\n\r\nfunction invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0 * invDot;\r\n  out[1] = -a1 * invDot;\r\n  out[2] = -a2 * invDot;\r\n  out[3] = a3 * invDot;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\n\r\nfunction conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\n\r\nfunction fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake\'s article in 1987 SIGGRAPH course notes\r\n  // article "Quaternion Calculus and Fast Animation".\r\n  var fTrace = m[0] + m[4] + m[8];\r\n  var fRoot;\r\n\r\n  if (fTrace > 0.0) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot; // 1/(4w)\r\n\r\n    out[0] = (m[5] - m[7]) * fRoot;\r\n    out[1] = (m[6] - m[2]) * fRoot;\r\n    out[2] = (m[1] - m[3]) * fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    var i = 0;\r\n    if (m[4] > m[0]) i = 1;\r\n    if (m[8] > m[i * 3 + i]) i = 2;\r\n    var j = (i + 1) % 3;\r\n    var k = (i + 2) % 3;\r\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\n\r\nfunction fromEuler(out, x, y, z) {\r\n  var halfToRad = 0.5 * Math.PI / 180.0;\r\n  x *= halfToRad;\r\n  y *= halfToRad;\r\n  z *= halfToRad;\r\n  var sx = Math.sin(x);\r\n  var cx = Math.cos(x);\r\n  var sy = Math.sin(y);\r\n  var cy = Math.cos(y);\r\n  var sz = Math.sin(z);\r\n  var cz = Math.cos(z);\r\n  out[0] = sx * cy * cz - cx * sy * sz;\r\n  out[1] = cx * sy * cz + sx * cy * sz;\r\n  out[2] = cx * cy * sz - sx * sy * cz;\r\n  out[3] = cx * cy * cz + sx * sy * sz;\r\n  return out;\r\n}\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\n\r\nfunction str(a) {\r\n  return "quat(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ")";\r\n}\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\n\r\nvar clone = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.clone;\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\n\r\nvar fromValues = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.fromValues;\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\n\r\nvar copy = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.copy;\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\n\r\nvar set = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.set;\r\n/**\r\n * Adds two quat\'s\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\n\r\nvar add = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.add;\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\n\r\nvar mul = multiply;\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\n\r\nvar scale = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.scale;\r\n/**\r\n * Calculates the dot product of two quat\'s\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\n\r\nvar dot = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.dot;\r\n/**\r\n * Performs a linear interpolation between two quat\'s\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\n\r\nvar lerp = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.lerp;\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\n\r\nvar length = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.length;\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\n\r\nvar len = length;\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\n\r\nvar squaredLength = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.squaredLength;\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\n\r\nvar sqrLen = squaredLength;\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\n\r\nvar normalize = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.normalize;\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\n\r\nvar exactEquals = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.exactEquals;\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\n\r\nvar equals = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.equals;\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\n\r\nvar rotationTo = function () {\r\n  var tmpvec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__.create();\r\n  var xUnitVec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__.fromValues(1, 0, 0);\r\n  var yUnitVec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__.fromValues(0, 1, 0);\r\n  return function (out, a, b) {\r\n    var dot = _vec3_js__WEBPACK_IMPORTED_MODULE_2__.dot(a, b);\r\n\r\n    if (dot < -0.999999) {\r\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__.cross(tmpvec3, xUnitVec3, a);\r\n      if (_vec3_js__WEBPACK_IMPORTED_MODULE_2__.len(tmpvec3) < 0.000001) _vec3_js__WEBPACK_IMPORTED_MODULE_2__.cross(tmpvec3, yUnitVec3, a);\r\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n}();\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\n\r\nvar sqlerp = function () {\r\n  var temp1 = create();\r\n  var temp2 = create();\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n    return out;\r\n  };\r\n}();\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local "right" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local "up" direction\r\n * @returns {quat} out\r\n */\r\n\r\nvar setAxes = function () {\r\n  var matr = _mat3_js__WEBPACK_IMPORTED_MODULE_3__.create();\r\n  return function (out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n}();\n\n//# sourceURL=webpack://frontend/./node_modules/gl-matrix/esm/quat.js?')},"./node_modules/gl-matrix/esm/vec3.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   angle: () => (/* binding */ angle),\n/* harmony export */   bezier: () => (/* binding */ bezier),\n/* harmony export */   ceil: () => (/* binding */ ceil),\n/* harmony export */   clone: () => (/* binding */ clone),\n/* harmony export */   copy: () => (/* binding */ copy),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   cross: () => (/* binding */ cross),\n/* harmony export */   dist: () => (/* binding */ dist),\n/* harmony export */   distance: () => (/* binding */ distance),\n/* harmony export */   div: () => (/* binding */ div),\n/* harmony export */   divide: () => (/* binding */ divide),\n/* harmony export */   dot: () => (/* binding */ dot),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   exactEquals: () => (/* binding */ exactEquals),\n/* harmony export */   floor: () => (/* binding */ floor),\n/* harmony export */   forEach: () => (/* binding */ forEach),\n/* harmony export */   fromValues: () => (/* binding */ fromValues),\n/* harmony export */   hermite: () => (/* binding */ hermite),\n/* harmony export */   inverse: () => (/* binding */ inverse),\n/* harmony export */   len: () => (/* binding */ len),\n/* harmony export */   length: () => (/* binding */ length),\n/* harmony export */   lerp: () => (/* binding */ lerp),\n/* harmony export */   max: () => (/* binding */ max),\n/* harmony export */   min: () => (/* binding */ min),\n/* harmony export */   mul: () => (/* binding */ mul),\n/* harmony export */   multiply: () => (/* binding */ multiply),\n/* harmony export */   negate: () => (/* binding */ negate),\n/* harmony export */   normalize: () => (/* binding */ normalize),\n/* harmony export */   random: () => (/* binding */ random),\n/* harmony export */   rotateX: () => (/* binding */ rotateX),\n/* harmony export */   rotateY: () => (/* binding */ rotateY),\n/* harmony export */   rotateZ: () => (/* binding */ rotateZ),\n/* harmony export */   round: () => (/* binding */ round),\n/* harmony export */   scale: () => (/* binding */ scale),\n/* harmony export */   scaleAndAdd: () => (/* binding */ scaleAndAdd),\n/* harmony export */   set: () => (/* binding */ set),\n/* harmony export */   sqrDist: () => (/* binding */ sqrDist),\n/* harmony export */   sqrLen: () => (/* binding */ sqrLen),\n/* harmony export */   squaredDistance: () => (/* binding */ squaredDistance),\n/* harmony export */   squaredLength: () => (/* binding */ squaredLength),\n/* harmony export */   str: () => (/* binding */ str),\n/* harmony export */   sub: () => (/* binding */ sub),\n/* harmony export */   subtract: () => (/* binding */ subtract),\n/* harmony export */   transformMat3: () => (/* binding */ transformMat3),\n/* harmony export */   transformMat4: () => (/* binding */ transformMat4),\n/* harmony export */   transformQuat: () => (/* binding */ transformQuat),\n/* harmony export */   zero: () => (/* binding */ zero)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\n\r\nfunction create() {\r\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\r\n\r\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\n\r\nfunction clone(a) {\r\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\n\r\nfunction length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return Math.hypot(x, y, z);\r\n}\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\n\r\nfunction fromValues(x, y, z) {\r\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\n\r\nfunction distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return Math.hypot(x, y, z);\r\n}\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\n\r\nfunction squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\n\r\nfunction squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var len = x * x + y * y + z * z;\r\n\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n  }\r\n\r\n  out[0] = a[0] * len;\r\n  out[1] = a[1] * len;\r\n  out[2] = a[2] * len;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\n\r\nfunction dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction cross(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2];\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction hermite(out, a, b, c, d, t) {\r\n  var factorTimes2 = t * t;\r\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  var factor2 = factorTimes2 * (t - 2) + t;\r\n  var factor3 = factorTimes2 * (t - 1);\r\n  var factor4 = factorTimes2 * (3 - 2 * t);\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n  return out;\r\n}\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction bezier(out, a, b, c, d, t) {\r\n  var inverseFactor = 1 - t;\r\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  var factorTimes2 = t * t;\r\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  var factor2 = 3 * t * inverseFactorTimesTwo;\r\n  var factor3 = 3 * factorTimes2 * inverseFactor;\r\n  var factor4 = factorTimes2 * t;\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n  return out;\r\n}\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction random(out, scale) {\r\n  scale = scale || 1.0;\r\n  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2.0 * Math.PI;\r\n  var z = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2.0 - 1.0;\r\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction transformQuat(out, a, q) {\r\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2]; // var qvec = [qx, qy, qz];\r\n  // var uv = vec3.cross([], qvec, a);\r\n\r\n  var uvx = qy * z - qz * y,\r\n      uvy = qz * x - qx * z,\r\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\r\n\r\n  var uuvx = qy * uvz - qz * uvy,\r\n      uuvy = qz * uvx - qx * uvz,\r\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\r\n\r\n  var w2 = qw * 2;\r\n  uvx *= w2;\r\n  uvy *= w2;\r\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\r\n\r\n  uuvx *= 2;\r\n  uuvy *= 2;\r\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\r\n\r\n  out[0] = x + uvx + uuvx;\r\n  out[1] = y + uvy + uuvy;\r\n  out[2] = z + uvz + uuvz;\r\n  return out;\r\n}\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction rotateX(out, a, b, rad) {\r\n  var p = [],\r\n      r = []; //Translate point to the origin\r\n\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2]; //perform rotation\r\n\r\n  r[0] = p[0];\r\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\r\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\r\n\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n  return out;\r\n}\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction rotateY(out, a, b, rad) {\r\n  var p = [],\r\n      r = []; //Translate point to the origin\r\n\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2]; //perform rotation\r\n\r\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\r\n  r[1] = p[1];\r\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\r\n\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n  return out;\r\n}\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction rotateZ(out, a, b, rad) {\r\n  var p = [],\r\n      r = []; //Translate point to the origin\r\n\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2]; //perform rotation\r\n\r\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\r\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\r\n  r[2] = p[2]; //translate to correct position\r\n\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n  return out;\r\n}\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\n\r\nfunction angle(a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\r\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\r\n      mag = mag1 * mag2,\r\n      cosine = mag && dot(a, b) / mag;\r\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\r\n}\r\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\r\n\r\nfunction zero(out) {\r\n  out[0] = 0.0;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  return out;\r\n}\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\n\r\nfunction str(a) {\r\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\r\n}\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\n\r\nfunction exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\n\r\nfunction equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2];\r\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\r\n}\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\n\r\nvar sub = subtract;\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\n\r\nvar mul = multiply;\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\n\r\nvar div = divide;\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\n\r\nvar dist = distance;\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\n\r\nvar sqrDist = squaredDistance;\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\n\r\nvar len = length;\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\n\r\nvar sqrLen = squaredLength;\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\n\r\nvar forEach = function () {\r\n  var vec = create();\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i, l;\r\n\r\n    if (!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];\r\n      vec[1] = a[i + 1];\r\n      vec[2] = a[i + 2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];\r\n      a[i + 1] = vec[1];\r\n      a[i + 2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();\n\n//# sourceURL=webpack://frontend/./node_modules/gl-matrix/esm/vec3.js?")},"./node_modules/gl-matrix/esm/vec4.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   ceil: () => (/* binding */ ceil),\n/* harmony export */   clone: () => (/* binding */ clone),\n/* harmony export */   copy: () => (/* binding */ copy),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   cross: () => (/* binding */ cross),\n/* harmony export */   dist: () => (/* binding */ dist),\n/* harmony export */   distance: () => (/* binding */ distance),\n/* harmony export */   div: () => (/* binding */ div),\n/* harmony export */   divide: () => (/* binding */ divide),\n/* harmony export */   dot: () => (/* binding */ dot),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   exactEquals: () => (/* binding */ exactEquals),\n/* harmony export */   floor: () => (/* binding */ floor),\n/* harmony export */   forEach: () => (/* binding */ forEach),\n/* harmony export */   fromValues: () => (/* binding */ fromValues),\n/* harmony export */   inverse: () => (/* binding */ inverse),\n/* harmony export */   len: () => (/* binding */ len),\n/* harmony export */   length: () => (/* binding */ length),\n/* harmony export */   lerp: () => (/* binding */ lerp),\n/* harmony export */   max: () => (/* binding */ max),\n/* harmony export */   min: () => (/* binding */ min),\n/* harmony export */   mul: () => (/* binding */ mul),\n/* harmony export */   multiply: () => (/* binding */ multiply),\n/* harmony export */   negate: () => (/* binding */ negate),\n/* harmony export */   normalize: () => (/* binding */ normalize),\n/* harmony export */   random: () => (/* binding */ random),\n/* harmony export */   round: () => (/* binding */ round),\n/* harmony export */   scale: () => (/* binding */ scale),\n/* harmony export */   scaleAndAdd: () => (/* binding */ scaleAndAdd),\n/* harmony export */   set: () => (/* binding */ set),\n/* harmony export */   sqrDist: () => (/* binding */ sqrDist),\n/* harmony export */   sqrLen: () => (/* binding */ sqrLen),\n/* harmony export */   squaredDistance: () => (/* binding */ squaredDistance),\n/* harmony export */   squaredLength: () => (/* binding */ squaredLength),\n/* harmony export */   str: () => (/* binding */ str),\n/* harmony export */   sub: () => (/* binding */ sub),\n/* harmony export */   subtract: () => (/* binding */ subtract),\n/* harmony export */   transformMat4: () => (/* binding */ transformMat4),\n/* harmony export */   transformQuat: () => (/* binding */ transformQuat),\n/* harmony export */   zero: () => (/* binding */ zero)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "./node_modules/gl-matrix/esm/common.js");\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\n\r\nfunction create() {\r\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\r\n\r\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\n\r\nfunction clone(a) {\r\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\n\r\nfunction fromValues(x, y, z, w) {\r\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n/**\r\n * Adds two vec4\'s\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n/**\r\n * Multiplies two vec4\'s\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n/**\r\n * Divides two vec4\'s\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n/**\r\n * Returns the minimum of two vec4\'s\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n/**\r\n * Returns the maximum of two vec4\'s\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n/**\r\n * Adds two vec4\'s after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the euclidian distance between two vec4\'s\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\n\r\nfunction distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return Math.hypot(x, y, z, w);\r\n}\r\n/**\r\n * Calculates the squared euclidian distance between two vec4\'s\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\n\r\nfunction squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\n\r\nfunction length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return Math.hypot(x, y, z, w);\r\n}\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\n\r\nfunction squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  var len = x * x + y * y + z * z + w * w;\r\n\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n  }\r\n\r\n  out[0] = x * len;\r\n  out[1] = y * len;\r\n  out[2] = z * len;\r\n  out[3] = w * len;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the dot product of two vec4\'s\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\n\r\nfunction dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\r\n\r\nfunction cross(out, u, v, w) {\r\n  var A = v[0] * w[1] - v[1] * w[0],\r\n      B = v[0] * w[2] - v[2] * w[0],\r\n      C = v[0] * w[3] - v[3] * w[0],\r\n      D = v[1] * w[2] - v[2] * w[1],\r\n      E = v[1] * w[3] - v[3] * w[1],\r\n      F = v[2] * w[3] - v[3] * w[2];\r\n  var G = u[0];\r\n  var H = u[1];\r\n  var I = u[2];\r\n  var J = u[3];\r\n  out[0] = H * F - I * E + J * D;\r\n  out[1] = -(G * F) + I * C - J * B;\r\n  out[2] = G * E - H * C + J * A;\r\n  out[3] = -(G * D) + H * B - I * A;\r\n  return out;\r\n}\r\n/**\r\n * Performs a linear interpolation between two vec4\'s\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  var aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction random(out, scale) {\r\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\r\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n  // http://projecteuclid.org/euclid.aoms/1177692644;\r\n\r\n  var v1, v2, v3, v4;\r\n  var s1, s2;\r\n\r\n  do {\r\n    v1 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\r\n    v2 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\r\n    s1 = v1 * v1 + v2 * v2;\r\n  } while (s1 >= 1);\r\n\r\n  do {\r\n    v3 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\r\n    v4 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\r\n    s2 = v3 * v3 + v4 * v4;\r\n  } while (s2 >= 1);\r\n\r\n  var d = Math.sqrt((1 - s1) / s2);\r\n  out[0] = scale * v1;\r\n  out[1] = scale * v2;\r\n  out[2] = scale * v3 * d;\r\n  out[3] = scale * v4 * d;\r\n  return out;\r\n}\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction transformQuat(out, a, q) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3]; // calculate quat * vec\r\n\r\n  var ix = qw * x + qy * z - qz * y;\r\n  var iy = qw * y + qz * x - qx * z;\r\n  var iz = qw * z + qx * y - qy * x;\r\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\r\n\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\r\n\r\nfunction zero(out) {\r\n  out[0] = 0.0;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  return out;\r\n}\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\n\r\nfunction str(a) {\r\n  return "vec4(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ")";\r\n}\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\n\r\nfunction exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\n\r\nfunction equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\n\r\nvar sub = subtract;\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\n\r\nvar mul = multiply;\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\n\r\nvar div = divide;\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\n\r\nvar dist = distance;\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\n\r\nvar sqrDist = squaredDistance;\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\n\r\nvar len = length;\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\n\r\nvar sqrLen = squaredLength;\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\n\r\nvar forEach = function () {\r\n  var vec = create();\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i, l;\r\n\r\n    if (!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];\r\n      vec[1] = a[i + 1];\r\n      vec[2] = a[i + 2];\r\n      vec[3] = a[i + 3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];\r\n      a[i + 1] = vec[1];\r\n      a[i + 2] = vec[2];\r\n      a[i + 3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();\n\n//# sourceURL=webpack://frontend/./node_modules/gl-matrix/esm/vec4.js?')},"./node_modules/globalthis/implementation.browser.js":module=>{"use strict";eval("/* eslint no-negated-condition: 0, no-new-func: 0 */\r\n\r\n\r\n\r\nif (typeof self !== 'undefined') {\r\n\tmodule.exports = self;\r\n} else if (typeof window !== 'undefined') {\r\n\tmodule.exports = window;\r\n} else {\r\n\tmodule.exports = Function('return this')();\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/globalthis/implementation.browser.js?")},"./node_modules/globalthis/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\r\n\r\nvar defineProperties = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");\r\n\r\nvar implementation = __webpack_require__(/*! ./implementation */ "./node_modules/globalthis/implementation.browser.js");\r\nvar getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/globalthis/polyfill.js");\r\nvar shim = __webpack_require__(/*! ./shim */ "./node_modules/globalthis/shim.js");\r\n\r\nvar polyfill = getPolyfill();\r\n\r\nvar getGlobal = function () { return polyfill; };\r\n\r\ndefineProperties(getGlobal, {\r\n\tgetPolyfill: getPolyfill,\r\n\timplementation: implementation,\r\n\tshim: shim\r\n});\r\n\r\nmodule.exports = getGlobal;\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/globalthis/index.js?')},"./node_modules/globalthis/polyfill.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\r\n\r\nvar implementation = __webpack_require__(/*! ./implementation */ \"./node_modules/globalthis/implementation.browser.js\");\r\n\r\nmodule.exports = function getPolyfill() {\r\n\tif (typeof __webpack_require__.g !== 'object' || !__webpack_require__.g || __webpack_require__.g.Math !== Math || __webpack_require__.g.Array !== Array) {\r\n\t\treturn implementation;\r\n\t}\r\n\treturn __webpack_require__.g;\r\n};\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/globalthis/polyfill.js?")},"./node_modules/globalthis/shim.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\r\n\r\nvar define = __webpack_require__(/*! define-properties */ \"./node_modules/define-properties/index.js\");\r\nvar getPolyfill = __webpack_require__(/*! ./polyfill */ \"./node_modules/globalthis/polyfill.js\");\r\n\r\nmodule.exports = function shimGlobal() {\r\n\tvar polyfill = getPolyfill();\r\n\tif (define.supportsDescriptors) {\r\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(polyfill, 'globalThis');\r\n\t\tif (!descriptor || (descriptor.configurable && (descriptor.enumerable || !descriptor.writable || globalThis !== polyfill))) { // eslint-disable-line max-len\r\n\t\t\tObject.defineProperty(polyfill, 'globalThis', {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: polyfill,\r\n\t\t\t\twritable: true\r\n\t\t\t});\r\n\t\t}\r\n\t} else if (typeof globalThis !== 'object' || globalThis !== polyfill) {\r\n\t\tpolyfill.globalThis = polyfill;\r\n\t}\r\n\treturn polyfill;\r\n};\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/globalthis/shim.js?")},"./node_modules/gopd/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\r\n\r\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/get-intrinsic/index.js\");\r\n\r\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\r\n\r\nif ($gOPD) {\r\n\ttry {\r\n\t\t$gOPD([], 'length');\r\n\t} catch (e) {\r\n\t\t// IE 8 has a broken gOPD\r\n\t\t$gOPD = null;\r\n\t}\r\n}\r\n\r\nmodule.exports = $gOPD;\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/gopd/index.js?")},"./node_modules/has-property-descriptors/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\r\n\r\nvar $defineProperty = __webpack_require__(/*! es-define-property */ \"./node_modules/es-define-property/index.js\");\r\n\r\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\r\n\treturn !!$defineProperty;\r\n};\r\n\r\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\r\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\r\n\tif (!$defineProperty) {\r\n\t\treturn null;\r\n\t}\r\n\ttry {\r\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\r\n\t} catch (e) {\r\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\r\n\t\treturn true;\r\n\t}\r\n};\r\n\r\nmodule.exports = hasPropertyDescriptors;\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/has-property-descriptors/index.js?")},"./node_modules/has-proto/index.js":module=>{"use strict";eval("\r\n\r\nvar test = {\r\n\t__proto__: null,\r\n\tfoo: {}\r\n};\r\n\r\nvar $Object = Object;\r\n\r\n/** @type {import('.')} */\r\nmodule.exports = function hasProto() {\r\n\t// @ts-expect-error: TS errors on an inherited property for some reason\r\n\treturn { __proto__: test }.foo === test.foo\r\n\t\t&& !(test instanceof $Object);\r\n};\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/has-proto/index.js?")},"./node_modules/has-symbols/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\r\n\r\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\r\nvar hasSymbolSham = __webpack_require__(/*! ./shams */ \"./node_modules/has-symbols/shams.js\");\r\n\r\nmodule.exports = function hasNativeSymbols() {\r\n\tif (typeof origSymbol !== 'function') { return false; }\r\n\tif (typeof Symbol !== 'function') { return false; }\r\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\r\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\r\n\r\n\treturn hasSymbolSham();\r\n};\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/has-symbols/index.js?")},"./node_modules/has-symbols/shams.js":module=>{"use strict";eval("\r\n\r\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\r\nmodule.exports = function hasSymbols() {\r\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\r\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\r\n\r\n\tvar obj = {};\r\n\tvar sym = Symbol('test');\r\n\tvar symObj = Object(sym);\r\n\tif (typeof sym === 'string') { return false; }\r\n\r\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\r\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\r\n\r\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\r\n\t// if (sym instanceof Symbol) { return false; }\r\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\r\n\t// if (!(symObj instanceof Symbol)) { return false; }\r\n\r\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\r\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\r\n\r\n\tvar symVal = 42;\r\n\tobj[sym] = symVal;\r\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\r\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\r\n\r\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\r\n\r\n\tvar syms = Object.getOwnPropertySymbols(obj);\r\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\r\n\r\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\r\n\r\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\r\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\r\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/has-symbols/shams.js?")},"./node_modules/hasown/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\r\n\r\nvar call = Function.prototype.call;\r\nvar $hasOwn = Object.prototype.hasOwnProperty;\r\nvar bind = __webpack_require__(/*! function-bind */ \"./node_modules/function-bind/index.js\");\r\n\r\n/** @type {import('.')} */\r\nmodule.exports = bind.call(call, $hasOwn);\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/hasown/index.js?")},"./node_modules/object-keys/implementation.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\r\n\r\nvar keysShim;\r\nif (!Object.keys) {\r\n\t// modified from https://github.com/es-shims/es5-shim\r\n\tvar has = Object.prototype.hasOwnProperty;\r\n\tvar toStr = Object.prototype.toString;\r\n\tvar isArgs = __webpack_require__(/*! ./isArguments */ \"./node_modules/object-keys/isArguments.js\"); // eslint-disable-line global-require\r\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\r\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\r\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\r\n\tvar dontEnums = [\r\n\t\t'toString',\r\n\t\t'toLocaleString',\r\n\t\t'valueOf',\r\n\t\t'hasOwnProperty',\r\n\t\t'isPrototypeOf',\r\n\t\t'propertyIsEnumerable',\r\n\t\t'constructor'\r\n\t];\r\n\tvar equalsConstructorPrototype = function (o) {\r\n\t\tvar ctor = o.constructor;\r\n\t\treturn ctor && ctor.prototype === o;\r\n\t};\r\n\tvar excludedKeys = {\r\n\t\t$applicationCache: true,\r\n\t\t$console: true,\r\n\t\t$external: true,\r\n\t\t$frame: true,\r\n\t\t$frameElement: true,\r\n\t\t$frames: true,\r\n\t\t$innerHeight: true,\r\n\t\t$innerWidth: true,\r\n\t\t$onmozfullscreenchange: true,\r\n\t\t$onmozfullscreenerror: true,\r\n\t\t$outerHeight: true,\r\n\t\t$outerWidth: true,\r\n\t\t$pageXOffset: true,\r\n\t\t$pageYOffset: true,\r\n\t\t$parent: true,\r\n\t\t$scrollLeft: true,\r\n\t\t$scrollTop: true,\r\n\t\t$scrollX: true,\r\n\t\t$scrollY: true,\r\n\t\t$self: true,\r\n\t\t$webkitIndexedDB: true,\r\n\t\t$webkitStorageInfo: true,\r\n\t\t$window: true\r\n\t};\r\n\tvar hasAutomationEqualityBug = (function () {\r\n\t\t/* global window */\r\n\t\tif (typeof window === 'undefined') { return false; }\r\n\t\tfor (var k in window) {\r\n\t\t\ttry {\r\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}());\r\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\r\n\t\t/* global window */\r\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\r\n\t\t\treturn equalsConstructorPrototype(o);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treturn equalsConstructorPrototype(o);\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\tkeysShim = function keys(object) {\r\n\t\tvar isObject = object !== null && typeof object === 'object';\r\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\r\n\t\tvar isArguments = isArgs(object);\r\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\r\n\t\tvar theKeys = [];\r\n\r\n\t\tif (!isObject && !isFunction && !isArguments) {\r\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\r\n\t\t}\r\n\r\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\r\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\r\n\t\t\tfor (var i = 0; i < object.length; ++i) {\r\n\t\t\t\ttheKeys.push(String(i));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isArguments && object.length > 0) {\r\n\t\t\tfor (var j = 0; j < object.length; ++j) {\r\n\t\t\t\ttheKeys.push(String(j));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (var name in object) {\r\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\r\n\t\t\t\t\ttheKeys.push(String(name));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (hasDontEnumBug) {\r\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\r\n\r\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\r\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\r\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn theKeys;\r\n\t};\r\n}\r\nmodule.exports = keysShim;\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/object-keys/implementation.js?")},"./node_modules/object-keys/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\r\n\r\nvar slice = Array.prototype.slice;\r\nvar isArgs = __webpack_require__(/*! ./isArguments */ "./node_modules/object-keys/isArguments.js");\r\n\r\nvar origKeys = Object.keys;\r\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : __webpack_require__(/*! ./implementation */ "./node_modules/object-keys/implementation.js");\r\n\r\nvar originalKeys = Object.keys;\r\n\r\nkeysShim.shim = function shimObjectKeys() {\r\n\tif (Object.keys) {\r\n\t\tvar keysWorksWithArguments = (function () {\r\n\t\t\t// Safari 5.0 bug\r\n\t\t\tvar args = Object.keys(arguments);\r\n\t\t\treturn args && args.length === arguments.length;\r\n\t\t}(1, 2));\r\n\t\tif (!keysWorksWithArguments) {\r\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\r\n\t\t\t\tif (isArgs(object)) {\r\n\t\t\t\t\treturn originalKeys(slice.call(object));\r\n\t\t\t\t}\r\n\t\t\t\treturn originalKeys(object);\r\n\t\t\t};\r\n\t\t}\r\n\t} else {\r\n\t\tObject.keys = keysShim;\r\n\t}\r\n\treturn Object.keys || keysShim;\r\n};\r\n\r\nmodule.exports = keysShim;\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/object-keys/index.js?')},"./node_modules/object-keys/isArguments.js":module=>{"use strict";eval("\r\n\r\nvar toStr = Object.prototype.toString;\r\n\r\nmodule.exports = function isArguments(value) {\r\n\tvar str = toStr.call(value);\r\n\tvar isArgs = str === '[object Arguments]';\r\n\tif (!isArgs) {\r\n\t\tisArgs = str !== '[object Array]' &&\r\n\t\t\tvalue !== null &&\r\n\t\t\ttypeof value === 'object' &&\r\n\t\t\ttypeof value.length === 'number' &&\r\n\t\t\tvalue.length >= 0 &&\r\n\t\t\ttoStr.call(value.callee) === '[object Function]';\r\n\t}\r\n\treturn isArgs;\r\n};\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/object-keys/isArguments.js?")},"./node_modules/react-dom/cjs/react-dom.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('/**\r\n * @license React\r\n * react-dom.production.min.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n/*\r\n Modernizr 3.0.0pre (Custom Build) | MIT\r\n*/\r\nvar aa=__webpack_require__(/*! react */ "./node_modules/react/index.js"),ca=__webpack_require__(/*! scheduler */ "./node_modules/scheduler/index.js");function p(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+"Capture",b)}\r\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\r\nvar ia=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\r\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}\r\nfunction qa(a,b,c,d){if(null===b||"undefined"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\r\n"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\r\n["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\r\n["checked","multiple","muted","selected"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});["capture","download"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});["cols","rows","size","span"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});["rowSpan","start"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\r\n"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(ra,\r\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\r\nz.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\r\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\r\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for("react.element"),wa=Symbol.for("react.portal"),ya=Symbol.for("react.fragment"),za=Symbol.for("react.strict_mode"),Aa=Symbol.for("react.profiler"),Ba=Symbol.for("react.provider"),Ca=Symbol.for("react.context"),Da=Symbol.for("react.forward_ref"),Ea=Symbol.for("react.suspense"),Fa=Symbol.for("react.suspense_list"),Ga=Symbol.for("react.memo"),Ha=Symbol.for("react.lazy");Symbol.for("react.scope");Symbol.for("react.debug_trace_mode");\r\nvar Ia=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden");Symbol.for("react.cache");Symbol.for("react.tracing_marker");var Ja=Symbol.iterator;function Ka(a){if(null===a||"object"!==typeof a)return null;a=Ja&&a[Ja]||a["@@iterator"];return"function"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||""}return"\\n"+La+a}var Na=!1;\r\nfunction Oa(a,b){if(!a||Na)return"";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,"props",{set:function(){throw Error();}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&"string"===typeof l.stack){for(var e=l.stack.split("\\n"),\r\nf=d.stack.split("\\n"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k="\\n"+e[g].replace(" at new "," at ");a.displayName&&k.includes("<anonymous>")&&(k=k.replace("<anonymous>",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:"")?Ma(a):""}\r\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma("Lazy");case 13:return Ma("Suspense");case 19:return Ma("SuspenseList");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return""}}\r\nfunction Qa(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ya:return"Fragment";case wa:return"Portal";case Aa:return"Profiler";case za:return"StrictMode";case Ea:return"Suspense";case Fa:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||"Context")+".Consumer";case Ba:return(a._context.displayName||"Context")+".Provider";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\r\nb.name||"",a=""!==a?"ForwardRef("+a+")":"ForwardRef");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||"Memo";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\r\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return"Cache";case 9:return(b.displayName||"Context")+".Consumer";case 10:return(b._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return a=b.render,a=a.displayName||a.name||"",b.displayName||(""!==a?"ForwardRef("+a+")":"ForwardRef");case 7:return"Fragment";case 5:return b;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Qa(b);case 8:return b===za?"StrictMode":"Mode";case 22:return"Offscreen";\r\ncase 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof b)return b.displayName||b.name||null;if("string"===typeof b)return b}return null}function Sa(a){switch(typeof a){case "boolean":case "number":case "string":case "undefined":return a;case "object":return a;default:return""}}\r\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}\r\nfunction Ua(a){var b=Ta(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=\r\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=Ta(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\r\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,"checked",b,!1)}\r\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?cb(a,b.type,c):b.hasOwnProperty("defaultValue")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\r\nfunction db(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}\r\nfunction cb(a,b,c){if("number"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}var eb=Array.isArray;\r\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\r\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:Sa(c)}}\r\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}\r\nfunction lb(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?kb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}\r\nvar mb,nb=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if("http://www.w3.org/2000/svg"!==a.namespaceURI||"innerHTML"in a)a.innerHTML=b;else{mb=mb||document.createElement("div");mb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\r\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\r\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\r\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=["Webkit","ms","Moz","O"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(""+b).trim():b+"px"}\r\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=rb(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\r\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if("object"!==typeof b.dangerouslySetInnerHTML||!("__html"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(p(62));}}\r\nfunction vb(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\r\nfunction Bb(a){if(a=Cb(a)){if("function"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\r\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==\r\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,"passive",{get:function(){Lb=!0}});window.addEventListener("test",Mb,Mb);window.removeEventListener("test",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\r\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\r\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\r\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\r\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&"function"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\r\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\r\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\r\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\r\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\r\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\r\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\r\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");\r\nfunction Sc(a,b){switch(a){case "focusin":case "focusout":Lc=null;break;case "dragenter":case "dragleave":Mc=null;break;case "mouseover":case "mouseout":Nc=null;break;case "pointerover":case "pointerout":Oc.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":Pc.delete(b.pointerId)}}\r\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\r\nfunction Uc(a,b,c,d,e){switch(b){case "focusin":return Lc=Tc(Lc,a,b,c,d,e),!0;case "dragenter":return Mc=Tc(Mc,a,b,c,d,e),!0;case "mouseover":return Nc=Tc(Nc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\r\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\r\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\r\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\r\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\r\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\r\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\r\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\r\nfunction jd(a){switch(a){case "cancel":case "click":case "close":case "contextmenu":case "copy":case "cut":case "auxclick":case "dblclick":case "dragend":case "dragstart":case "drop":case "focusin":case "focusout":case "input":case "invalid":case "keydown":case "keypress":case "keyup":case "mousedown":case "mouseup":case "paste":case "pause":case "play":case "pointercancel":case "pointerdown":case "pointerup":case "ratechange":case "reset":case "resize":case "seeked":case "submit":case "touchcancel":case "touchend":case "touchstart":case "volumechange":case "change":case "selectionchange":case "textInput":case "compositionstart":case "compositionend":case "compositionupdate":case "beforeblur":case "afterblur":case "beforeinput":case "blur":case "fullscreenchange":case "focus":case "hashchange":case "popstate":case "select":case "selectstart":return 1;case "drag":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "mousemove":case "mouseout":case "mouseover":case "pointermove":case "pointerout":case "pointerover":case "scroll":case "toggle":case "touchmove":case "wheel":case "mouseenter":case "mouseleave":case "pointerenter":case "pointerleave":return 4;\r\ncase "message":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e="value"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\r\nfunction od(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\r\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&\r\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\r\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if("movementX"in\r\na)return a.movementX;a!==yd&&(yd&&"mousemove"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return"movementY"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:"Escape",\r\nSpacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",\r\n119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\r\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=od(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?Nd[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return"keypress"===a.type?od(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===\r\na.type?od(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},\r\ndeltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&"CompositionEvent"in window,be=null;ia&&"documentMode"in document&&(be=document.documentMode);var ce=ia&&"TextEvent"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\r\nfunction ge(a,b){switch(a){case "keyup":return-1!==$d.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "focusout":return!0;default:return!1}}function he(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case "compositionend":return he(b);case "keypress":if(32!==b.which)return null;fe=!0;return ee;case "textInput":return a=b.data,a===ee&&fe?null:a;default:return null}}\r\nfunction ke(a,b){if(ie)return"compositionend"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return de&&"ko"!==b.locale?null:b.data;default:return null}}\r\nvar le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!le[a.type]:"textarea"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,"onChange");0<b.length&&(c=new td("onChange","change",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\r\nfunction ve(a,b){if("change"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye="oninput"in document;if(!ye){var ze=document.createElement("div");ze.setAttribute("oninput","return;");ye="function"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent("onpropertychange",Be),qe=pe=null)}function Be(a){if("value"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\r\nfunction Ce(a,b,c){"focusin"===a?(Ae(),pe=b,qe=c,pe.attachEvent("onpropertychange",Be)):"focusout"===a&&Ae()}function De(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return te(qe)}function Ee(a,b){if("click"===a)return te(b)}function Fe(a,b){if("input"===a||"change"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He="function"===typeof Object.is?Object.is:Ge;\r\nfunction Ie(a,b){if(He(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\r\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\r\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}\r\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),"selectionStart"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\r\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});"function"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\r\nvar Pe=ia&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\r\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,"selectionStart"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,"onSelect"),0<d.length&&(b=new td("onSelect","select",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\r\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var We={animationend:Ve("Animation","AnimationEnd"),animationiteration:Ve("Animation","AnimationIteration"),animationstart:Ve("Animation","AnimationStart"),transitionend:Ve("Transition","TransitionEnd")},Xe={},Ye={};\r\nia&&(Ye=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze("animationend"),af=Ze("animationiteration"),bf=Ze("animationstart"),cf=Ze("transitionend"),df=new Map,ef="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");\r\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,"on"+kf)}ff($e,"onAnimationEnd");ff(af,"onAnimationIteration");ff(bf,"onAnimationStart");ff("dblclick","onDoubleClick");ff("focusin","onFocus");ff("focusout","onBlur");ff(cf,"onTransitionEnd");ha("onMouseEnter",["mouseout","mouseover"]);ha("onMouseLeave",["mouseout","mouseover"]);ha("onPointerEnter",["pointerout","pointerover"]);\r\nha("onPointerLeave",["pointerout","pointerover"]);fa("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));fa("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));fa("onBeforeInput",["compositionend","keypress","textInput","paste"]);fa("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));\r\nfa("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var lf="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),mf=new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));\r\nfunction nf(a,b,c){var d=a.type||"unknown-event";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\r\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\r\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+"__bubble";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf="_reactListening"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){"selectionchange"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf("selectionchange",!1,b))}}\r\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||"touchstart"!==b&&"touchmove"!==b&&"wheel"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\r\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\r\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case "keypress":if(0===od(c))break a;case "keydown":case "keyup":k=Rd;break;case "focusin":n="focus";k=Fd;break;case "focusout":n="blur";k=Fd;break;case "beforeblur":case "afterblur":k=Fd;break;case "click":if(2===c.button)break a;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":k=Bd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":k=\r\nDd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case "scroll":k=vd;break;case "wheel":k=Zd;break;case "copy":case "cut":case "paste":k=Jd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":k=Td}var t=0!==(b&4),J=!t&&"scroll"===a,x=t?null!==h?h+"Capture":null:h;t=[];for(var w=d,u;null!==\r\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h="mouseover"===a||"pointerover"===a;k="mouseout"===a||"pointerout"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\r\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F="onMouseLeave";x="onMouseEnter";w="mouse";if("pointerout"===a||"pointerover"===a)t=Td,F="onPointerLeave",x="onPointerEnter",w="pointer";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+"leave",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+"enter",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\r\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if("select"===k||"input"===k&&"file"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&"input"===k.toLowerCase()&&("checkbox"===h.type||"radio"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);"focusout"===a&&(xa=h._wrapperState)&&\r\nxa.controlled&&"number"===h.type&&cb(h,"number",h.value)}xa=d?ue(d):window;switch(a){case "focusin":if(me(xa)||"true"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case "focusout":Se=Re=Qe=null;break;case "mousedown":Te=!0;break;case "contextmenu":case "mouseup":case "dragend":Te=!1;Ue(g,c,e);break;case "selectionchange":if(Pe)break;case "keydown":case "keyup":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case "compositionstart":var ba="onCompositionStart";break b;case "compositionend":ba="onCompositionEnd";\r\nbreak b;case "compositionupdate":ba="onCompositionUpdate";break b}ba=void 0}else ie?ge(a,c)&&(ba="onCompositionEnd"):"keydown"===a&&229===c.keyCode&&(ba="onCompositionStart");ba&&(de&&"ko"!==c.locale&&(ie||"onCompositionStart"!==ba?"onCompositionEnd"===ba&&ie&&($a=nd()):(kd=e,ld="value"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,"onBeforeInput"),\r\n0<d.length&&(e=new Ld("onBeforeInput","beforeinput",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+"Capture",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\r\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return("string"===typeof a?a:""+a).replace(xf,"\\n").replace(yf,"")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\r\nvar Cf=null,Df=null;function Ef(a,b){return"textarea"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\r\nvar Ff="function"===typeof setTimeout?setTimeout:void 0,Gf="function"===typeof clearTimeout?clearTimeout:void 0,Hf="function"===typeof Promise?Promise:void 0,Jf="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\r\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,"/$"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else"$"!==c&&"$?"!==c&&"$!"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if("$"===b||"$!"===b||"$?"===b)break;if("/$"===b)return null}}return a}\r\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if("$"===c||"$!"===c||"$?"===c){if(0===b)return a;b--}else"/$"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of="__reactFiber$"+Nf,Pf="__reactProps$"+Nf,uf="__reactContainer$"+Nf,of="__reactEvents$"+Nf,Qf="__reactListeners$"+Nf,Rf="__reactHandles$"+Nf;\r\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\r\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\r\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||"Unknown",e));return A({},c,d)}\r\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\r\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg="";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\r\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\r\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType="DELETED";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\r\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\r\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\r\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b="head"!==b&&"body"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if("/$"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else"$"!==c&&"$!"!==c&&"$?"!==c||b++}a=a.nextSibling}yg=\r\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\r\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if("string"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\r\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,"[object Object]"===a?"object with keys {"+Object.keys(b).join(", ")+"}":a));}function Ng(a){var b=a._init;return b(a._payload)}\r\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\r\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||"object"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\r\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if("string"===typeof b&&""!==b||"number"===typeof b)return b=Qg(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\r\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c&&""!==c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\r\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if("string"===typeof d&&""!==d||"number"===typeof d)return a=a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\r\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\r\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if("function"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\r\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){"object"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if("object"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\r\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||"object"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\r\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return"string"===typeof f&&""!==f||"number"===typeof f?(f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\r\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\r\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\r\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\r\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\r\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\r\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\r\nb;c.lastBaseUpdate=b}\r\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\r\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if("function"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r="function"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\r\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\r\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if("function"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\r\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\r\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||"$?"===c.data||"$!"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\r\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\r\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\r\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\r\nfunction Vh(a,b){return"function"===typeof b?b(a):b}\r\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\r\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\r\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\r\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\r\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\r\nfunction hi(a){var b=Th();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\r\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\r\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\r\nfunction pi(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\r\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\r\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\r\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\r\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\r\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\r\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\r\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\r\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=":"+b+"R"+c;c=Kh++;0<c&&(b+="H"+c.toString(32));b+=":"}else c=Lh++,b=":"+b+"r"+c.toString(32)+":";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\r\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\r\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\r\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\r\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\r\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;"object"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\r\nfunction Hi(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\r\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||(b=e.state,\r\n"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c="",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e="\\nError generating stack: "+f.message+"\\n"+f.stack}return{value:a,source:b,stack:e,digest:null}}\r\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi="function"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\r\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);"function"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}\r\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\r\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\r\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\r\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if("function"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\r\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\r\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if("hidden"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\r\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\r\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q="function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate;q||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||\r\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?("function"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===typeof g.componentDidMount&&(b.flags|=4194308)):\r\n("function"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;"object"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m="function"===typeof y||"function"===typeof g.getSnapshotBeforeUpdate)||\r\n"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?("function"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),"function"===typeof g.UNSAFE_componentWillUpdate&&\r\ng.UNSAFE_componentWillUpdate(d,n,k)),"function"===typeof g.componentDidUpdate&&(b.flags|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\r\na.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\r\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\r\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\r\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:"$!"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:"hidden",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\r\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:"hidden",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\r\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:"visible",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\r\nfunction qj(a,b){b=pj({mode:"visible",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\r\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:"visible",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if("$!"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\r\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\r\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if("$?"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\r\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\r\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\r\nnull;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case "together":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\r\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\r\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\r\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\r\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\r\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case "input":e=Ya(a,e);d=Ya(a,d);f=[];break;case "select":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case "textarea":e=gb(a,e);d=gb(a,d);f=[];break;default:"function"!==typeof e.onClick&&"function"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if("style"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\r\n(c||(c={}),c[g]="")}else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if("style"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]="");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\r\nc)),c=k;else"dangerouslySetInnerHTML"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):"children"===l?"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(l,""+k):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(ea.hasOwnProperty(l)?(null!=k&&"onScroll"===l&&D("scroll",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push("style",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\r\nfunction Dj(a,b){if(!I)switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\r\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\r\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\r\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case "dialog":D("cancel",d);D("close",d);break;case "iframe":case "object":case "embed":D("load",d);break;case "video":case "audio":for(e=0;e<lf.length;e++)D(lf[e],d);break;case "source":D("error",d);break;case "img":case "image":case "link":D("error",\r\nd);D("load",d);break;case "details":D("toggle",d);break;case "input":Za(d,f);D("invalid",d);break;case "select":d._wrapperState={wasMultiple:!!f.multiple};D("invalid",d);break;case "textarea":hb(d,f),D("invalid",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];"children"===g?"string"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=["children",h]):"number"===typeof h&&d.textContent!==""+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\r\nh,a),e=["children",""+h]):ea.hasOwnProperty(g)&&null!=h&&"onScroll"===g&&D("scroll",d)}switch(c){case "input":Va(d);db(d,f,!0);break;case "textarea":Va(d);jb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;"http://www.w3.org/1999/xhtml"===a&&(a=kb(c));"http://www.w3.org/1999/xhtml"===a?"script"===c?(a=g.createElement("div"),a.innerHTML="<script>\\x3c/script>",a=a.removeChild(a.firstChild)):\r\n"string"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),"select"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case "dialog":D("cancel",a);D("close",a);e=d;break;case "iframe":case "object":case "embed":D("load",a);e=d;break;case "video":case "audio":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case "source":D("error",a);e=d;break;case "img":case "image":case "link":D("error",\r\na);D("load",a);e=d;break;case "details":D("toggle",a);e=d;break;case "input":Za(a,d);e=Ya(a,d);D("invalid",a);break;case "option":e=d;break;case "select":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D("invalid",a);break;case "textarea":hb(a,d);e=gb(a,d);D("invalid",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];"style"===f?sb(a,k):"dangerouslySetInnerHTML"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):"children"===f?"string"===typeof k?("textarea"!==\r\nc||""!==k)&&ob(a,k):"number"===typeof k&&ob(a,""+k):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(ea.hasOwnProperty(f)?null!=k&&"onScroll"===f&&D("scroll",a):null!=k&&ta(a,f,k,g))}switch(c){case "input":Va(a);db(a,d,!1);break;case "textarea":Va(a);jb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+Sa(d.value));break;case "select":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\r\n!0);break;default:"function"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case "button":case "input":case "select":case "textarea":d=!!d.autoFocus;break a;case "img":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\r\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\r\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\r\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\r\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\r\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&"hidden"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\r\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\r\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\r\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj="function"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if("function"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\r\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if("selectionStart"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\r\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\r\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent="":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\r\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}"function"===typeof b?b(a):b.current=a}}\r\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\r\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\r\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\r\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\r\nfunction Zj(a,b,c){if(lc&&"function"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\r\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,"function"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\r\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\r\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\r\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,"")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\r\na.updateQueue=null;if(null!==k)try{"input"===h&&"radio"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];"style"===m?sb(e,q):"dangerouslySetInnerHTML"===m?nb(e,q):"children"===m?ob(e,q):ta(e,m,q,l)}switch(h){case "input":bb(e,f);break;case "textarea":ib(e,f);break;case "select":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\r\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:"",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\r\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if("function"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\r\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,"function"===typeof f.setProperty?f.setProperty("display","none","important"):f.display="none"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty("display")?k.display:null,h.style.display=\r\nrb("display",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?"":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\r\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,""),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\r\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\r\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\r\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case "button":case "input":case "select":case "textarea":k.autoFocus&&c.focus();break;case "img":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\r\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\r\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if("function"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\r\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\r\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\r\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\r\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\r\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\r\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\r\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\r\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\r\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\r\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\r\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\r\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\r\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&"object"===typeof k&&"function"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\r\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\r\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&("function"===typeof w.getDerivedStateFromError||null!==u&&"function"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\r\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\r\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\r\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\r\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\r\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\r\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\r\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&"function"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\r\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if("function"===typeof b.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\r\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\r\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\r\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;"object"===typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\r\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\r\nd,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\r\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\r\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\r\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\r\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\r\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\r\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\r\nfunction Zk(a){if("function"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\r\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\r\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\r\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)aj(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\r\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,""));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\r\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\r\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\r\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}\r\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\r\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\r\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl="function"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\r\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\r\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function pl(){}\r\nfunction ql(a,b,c,d,e){if(e){if("function"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,"",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if("function"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,"",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\r\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if("function"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\r\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\r\nyb=function(a,b,c){switch(b){case "input":bb(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+\'][type="radio"]\');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case "textarea":ib(a,c);break;case "select":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\r\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"};\r\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\r\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\r\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d="",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\r\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if("function"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(",");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\r\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f="",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\r\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\r\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version="18.3.1-next-f1338f8080-20240426";\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/react-dom/cjs/react-dom.production.min.js?')},"./node_modules/react-dom/client.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('\r\n\r\nvar m = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");\r\nif (true) {\r\n  exports.createRoot = m.createRoot;\r\n  exports.hydrateRoot = m.hydrateRoot;\r\n} else { var i; }\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/react-dom/client.js?')},"./node_modules/react-dom/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\r\n\r\nfunction checkDCE() {\r\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\r\n  if (\r\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\r\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\r\n  ) {\r\n    return;\r\n  }\r\n  if (false) {}\r\n  try {\r\n    // Verify that the code above has been dead code eliminated (DCE'd).\r\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\r\n  } catch (err) {\r\n    // DevTools shouldn't crash React, no matter what.\r\n    // We should still report in case we break this code.\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nif (true) {\r\n  // DCE check should happen before ReactDOM bundle executes so that\r\n  // DevTools can report bad minification during injection.\r\n  checkDCE();\r\n  module.exports = __webpack_require__(/*! ./cjs/react-dom.production.min.js */ \"./node_modules/react-dom/cjs/react-dom.production.min.js\");\r\n} else {}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/react-dom/index.js?")},"./node_modules/react/cjs/react.production.min.js":(__unused_webpack_module,exports)=>{"use strict";eval('/**\r\n * @license React\r\n * react.production.min.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nvar l=Symbol.for("react.element"),n=Symbol.for("react.portal"),p=Symbol.for("react.fragment"),q=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),t=Symbol.for("react.provider"),u=Symbol.for("react.context"),v=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),z=Symbol.iterator;function A(a){if(null===a||"object"!==typeof a)return null;a=z&&a[z]||a["@@iterator"];return"function"===typeof a?a:null}\r\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\r\nE.prototype.setState=function(a,b){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,a,b,"setState")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\r\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\r\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=""+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\r\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return"object"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(""+a.key):b.toString(36)}\r\nfunction R(a,b,e,d,c){var k=typeof a;if("undefined"===k||"boolean"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case "string":case "number":h=!0;break;case "object":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=""===d?"."+Q(h,0):d,I(c)?(e="",null!=a&&(e=a.replace(P,"$&/")+"/"),R(c,b,e,"",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?"":(""+c.key).replace(P,"$&/")+"/")+a)),b.push(c)),1;h=0;d=""===d?".":d+":";if(I(a))for(var g=0;g<a.length;g++){k=\r\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),"function"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if("object"===k)throw b=String(a),Error("Objects are not valid as a React child (found: "+("[object Object]"===b?"object with keys {"+Object.keys(a).join(", ")+"}":b)+"). If you meant to render a collection of children, use an array instead.");return h}\r\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,"","",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\r\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error("act(...) is not supported in production builds of React.");}\r\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error("React.Children.only expected to receive a single React element child.");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\r\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\r\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+a+".");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=""+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\r\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\r\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\r\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\r\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version="18.3.1";\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/react/cjs/react.production.min.js?')},"./node_modules/react/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\r\n\r\nif (true) {\r\n  module.exports = __webpack_require__(/*! ./cjs/react.production.min.js */ "./node_modules/react/cjs/react.production.min.js");\r\n} else {}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/react/index.js?')},"./node_modules/scheduler/cjs/scheduler.production.min.js":(__unused_webpack_module,exports)=>{"use strict";eval('/**\r\n * @license React\r\n * scheduler.production.min.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nfunction f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\r\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D="function"===typeof setTimeout?setTimeout:null,E="function"===typeof clearTimeout?clearTimeout:null,F="undefined"!==typeof setImmediate?setImmediate:null;\r\n"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\r\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if("function"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\r\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if("function"===typeof F)S=function(){F(R)};else if("undefined"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\r\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\r\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\r\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\r\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();"object"===typeof c&&null!==c?(c=c.delay,c="number"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\r\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/scheduler/cjs/scheduler.production.min.js?')},"./node_modules/scheduler/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\r\n\r\nif (true) {\r\n  module.exports = __webpack_require__(/*! ./cjs/scheduler.production.min.js */ "./node_modules/scheduler/cjs/scheduler.production.min.js");\r\n} else {}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/scheduler/index.js?')},"./node_modules/seedrandom/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('// A library of seedable RNGs implemented in Javascript.\r\n//\r\n// Usage:\r\n//\r\n// var seedrandom = require(\'seedrandom\');\r\n// var random = seedrandom(1); // or any seed.\r\n// var x = random();       // 0 <= x < 1.  Every bit is random.\r\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\r\n\r\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\r\n// Period: ~2^116\r\n// Reported to pass all BigCrush tests.\r\nvar alea = __webpack_require__(/*! ./lib/alea */ "./node_modules/seedrandom/lib/alea.js");\r\n\r\n// xor128, a pure xor-shift generator by George Marsaglia.\r\n// Period: 2^128-1.\r\n// Reported to fail: MatrixRank and LinearComp.\r\nvar xor128 = __webpack_require__(/*! ./lib/xor128 */ "./node_modules/seedrandom/lib/xor128.js");\r\n\r\n// xorwow, George Marsaglia\'s 160-bit xor-shift combined plus weyl.\r\n// Period: 2^192-2^32\r\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\r\nvar xorwow = __webpack_require__(/*! ./lib/xorwow */ "./node_modules/seedrandom/lib/xorwow.js");\r\n\r\n// xorshift7, by François Panneton and Pierre L\'ecuyer, takes\r\n// a different approach: it adds robustness by allowing more shifts\r\n// than Marsaglia\'s original three.  It is a 7-shift generator\r\n// with 256 bits, that passes BigCrush with no systmatic failures.\r\n// Period 2^256-1.\r\n// No systematic BigCrush failures reported.\r\nvar xorshift7 = __webpack_require__(/*! ./lib/xorshift7 */ "./node_modules/seedrandom/lib/xorshift7.js");\r\n\r\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\r\n// very long period that also adds a Weyl generator. It also passes\r\n// BigCrush with no systematic failures.  Its long period may\r\n// be useful if you have many generators and need to avoid\r\n// collisions.\r\n// Period: 2^4128-2^32.\r\n// No systematic BigCrush failures reported.\r\nvar xor4096 = __webpack_require__(/*! ./lib/xor4096 */ "./node_modules/seedrandom/lib/xor4096.js");\r\n\r\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\r\n// number generator derived from ChaCha, a modern stream cipher.\r\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\r\n// Period: ~2^127\r\n// No systematic BigCrush failures reported.\r\nvar tychei = __webpack_require__(/*! ./lib/tychei */ "./node_modules/seedrandom/lib/tychei.js");\r\n\r\n// The original ARC4-based prng included in this library.\r\n// Period: ~2^1600\r\nvar sr = __webpack_require__(/*! ./seedrandom */ "./node_modules/seedrandom/seedrandom.js");\r\n\r\nsr.alea = alea;\r\nsr.xor128 = xor128;\r\nsr.xorwow = xorwow;\r\nsr.xorshift7 = xorshift7;\r\nsr.xor4096 = xor4096;\r\nsr.tychei = tychei;\r\n\r\nmodule.exports = sr;\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/seedrandom/index.js?')},"./node_modules/seedrandom/lib/alea.js":function(module,exports,__webpack_require__){eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\r\n// http://baagoe.com/en/RandomMusings/javascript/\r\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\r\n// Original work is under MIT license -\r\n\r\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\n\r\n\r\n(function(global, module, define) {\r\n\r\nfunction Alea(seed) {\r\n  var me = this, mash = Mash();\r\n\r\n  me.next = function() {\r\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\r\n    me.s0 = me.s1;\r\n    me.s1 = me.s2;\r\n    return me.s2 = t - (me.c = t | 0);\r\n  };\r\n\r\n  // Apply the seeding algorithm from Baagoe.\r\n  me.c = 1;\r\n  me.s0 = mash(' ');\r\n  me.s1 = mash(' ');\r\n  me.s2 = mash(' ');\r\n  me.s0 -= mash(seed);\r\n  if (me.s0 < 0) { me.s0 += 1; }\r\n  me.s1 -= mash(seed);\r\n  if (me.s1 < 0) { me.s1 += 1; }\r\n  me.s2 -= mash(seed);\r\n  if (me.s2 < 0) { me.s2 += 1; }\r\n  mash = null;\r\n}\r\n\r\nfunction copy(f, t) {\r\n  t.c = f.c;\r\n  t.s0 = f.s0;\r\n  t.s1 = f.s1;\r\n  t.s2 = f.s2;\r\n  return t;\r\n}\r\n\r\nfunction impl(seed, opts) {\r\n  var xg = new Alea(seed),\r\n      state = opts && opts.state,\r\n      prng = xg.next;\r\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\r\n  prng.double = function() {\r\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\r\n  };\r\n  prng.quick = prng;\r\n  if (state) {\r\n    if (typeof(state) == 'object') copy(state, xg);\r\n    prng.state = function() { return copy(xg, {}); }\r\n  }\r\n  return prng;\r\n}\r\n\r\nfunction Mash() {\r\n  var n = 0xefc8249d;\r\n\r\n  var mash = function(data) {\r\n    data = String(data);\r\n    for (var i = 0; i < data.length; i++) {\r\n      n += data.charCodeAt(i);\r\n      var h = 0.02519603282416938 * n;\r\n      n = h >>> 0;\r\n      h -= n;\r\n      h *= n;\r\n      n = h >>> 0;\r\n      h -= n;\r\n      n += h * 0x100000000; // 2^32\r\n    }\r\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\r\n  };\r\n\r\n  return mash;\r\n}\r\n\r\n\r\nif (module && module.exports) {\r\n  module.exports = impl;\r\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\r\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n} else {\r\n  this.alea = impl;\r\n}\r\n\r\n})(\r\n  this,\r\n   true && module,    // present in node.js\r\n  __webpack_require__.amdD   // present with an AMD loader\r\n);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/seedrandom/lib/alea.js?")},"./node_modules/seedrandom/lib/tychei.js":function(module,exports,__webpack_require__){eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\r\n// Samuel Neves and Filipe Araujo.\r\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\r\n\r\n(function(global, module, define) {\r\n\r\nfunction XorGen(seed) {\r\n  var me = this, strseed = '';\r\n\r\n  // Set up generator function.\r\n  me.next = function() {\r\n    var b = me.b, c = me.c, d = me.d, a = me.a;\r\n    b = (b << 25) ^ (b >>> 7) ^ c;\r\n    c = (c - d) | 0;\r\n    d = (d << 24) ^ (d >>> 8) ^ a;\r\n    a = (a - b) | 0;\r\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\r\n    me.c = c = (c - d) | 0;\r\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\r\n    return me.a = (a - b) | 0;\r\n  };\r\n\r\n  /* The following is non-inverted tyche, which has better internal\r\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\r\n  me.next = function() {\r\n    var a = me.a, b = me.b, c = me.c, d = me.d;\r\n    a = (me.a + me.b | 0) >>> 0;\r\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\r\n    c = me.c + d | 0;\r\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\r\n    me.a = a = a + b | 0;\r\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\r\n    me.c = c = c + d | 0;\r\n    b = b ^ c;\r\n    return me.b = (b << 7 ^ b >>> 25);\r\n  }\r\n  */\r\n\r\n  me.a = 0;\r\n  me.b = 0;\r\n  me.c = 2654435769 | 0;\r\n  me.d = 1367130551;\r\n\r\n  if (seed === Math.floor(seed)) {\r\n    // Integer seed.\r\n    me.a = (seed / 0x100000000) | 0;\r\n    me.b = seed | 0;\r\n  } else {\r\n    // String seed.\r\n    strseed += seed;\r\n  }\r\n\r\n  // Mix in string seed, then discard an initial batch of 64 values.\r\n  for (var k = 0; k < strseed.length + 20; k++) {\r\n    me.b ^= strseed.charCodeAt(k) | 0;\r\n    me.next();\r\n  }\r\n}\r\n\r\nfunction copy(f, t) {\r\n  t.a = f.a;\r\n  t.b = f.b;\r\n  t.c = f.c;\r\n  t.d = f.d;\r\n  return t;\r\n};\r\n\r\nfunction impl(seed, opts) {\r\n  var xg = new XorGen(seed),\r\n      state = opts && opts.state,\r\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\r\n  prng.double = function() {\r\n    do {\r\n      var top = xg.next() >>> 11,\r\n          bot = (xg.next() >>> 0) / 0x100000000,\r\n          result = (top + bot) / (1 << 21);\r\n    } while (result === 0);\r\n    return result;\r\n  };\r\n  prng.int32 = xg.next;\r\n  prng.quick = prng;\r\n  if (state) {\r\n    if (typeof(state) == 'object') copy(state, xg);\r\n    prng.state = function() { return copy(xg, {}); }\r\n  }\r\n  return prng;\r\n}\r\n\r\nif (module && module.exports) {\r\n  module.exports = impl;\r\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\r\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n} else {\r\n  this.tychei = impl;\r\n}\r\n\r\n})(\r\n  this,\r\n   true && module,    // present in node.js\r\n  __webpack_require__.amdD   // present with an AMD loader\r\n);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/seedrandom/lib/tychei.js?")},"./node_modules/seedrandom/lib/xor128.js":function(module,exports,__webpack_require__){eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xor128\" prng algorithm by\r\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\r\n\r\n(function(global, module, define) {\r\n\r\nfunction XorGen(seed) {\r\n  var me = this, strseed = '';\r\n\r\n  me.x = 0;\r\n  me.y = 0;\r\n  me.z = 0;\r\n  me.w = 0;\r\n\r\n  // Set up generator function.\r\n  me.next = function() {\r\n    var t = me.x ^ (me.x << 11);\r\n    me.x = me.y;\r\n    me.y = me.z;\r\n    me.z = me.w;\r\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\r\n  };\r\n\r\n  if (seed === (seed | 0)) {\r\n    // Integer seed.\r\n    me.x = seed;\r\n  } else {\r\n    // String seed.\r\n    strseed += seed;\r\n  }\r\n\r\n  // Mix in string seed, then discard an initial batch of 64 values.\r\n  for (var k = 0; k < strseed.length + 64; k++) {\r\n    me.x ^= strseed.charCodeAt(k) | 0;\r\n    me.next();\r\n  }\r\n}\r\n\r\nfunction copy(f, t) {\r\n  t.x = f.x;\r\n  t.y = f.y;\r\n  t.z = f.z;\r\n  t.w = f.w;\r\n  return t;\r\n}\r\n\r\nfunction impl(seed, opts) {\r\n  var xg = new XorGen(seed),\r\n      state = opts && opts.state,\r\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\r\n  prng.double = function() {\r\n    do {\r\n      var top = xg.next() >>> 11,\r\n          bot = (xg.next() >>> 0) / 0x100000000,\r\n          result = (top + bot) / (1 << 21);\r\n    } while (result === 0);\r\n    return result;\r\n  };\r\n  prng.int32 = xg.next;\r\n  prng.quick = prng;\r\n  if (state) {\r\n    if (typeof(state) == 'object') copy(state, xg);\r\n    prng.state = function() { return copy(xg, {}); }\r\n  }\r\n  return prng;\r\n}\r\n\r\nif (module && module.exports) {\r\n  module.exports = impl;\r\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\r\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n} else {\r\n  this.xor128 = impl;\r\n}\r\n\r\n})(\r\n  this,\r\n   true && module,    // present in node.js\r\n  __webpack_require__.amdD   // present with an AMD loader\r\n);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/seedrandom/lib/xor128.js?")},"./node_modules/seedrandom/lib/xor4096.js":function(module,exports,__webpack_require__){eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\r\n//\r\n// This fast non-cryptographic random number generator is designed for\r\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\r\n// generator with a Weyl generator, and it passes all common batteries\r\n// of stasticial tests for randomness while consuming only a few nanoseconds\r\n// for each prng generated.  For background on the generator, see Brent's\r\n// paper: \"Some long-period random number generators using shifts and xors.\"\r\n// http://arxiv.org/pdf/1004.3115v1.pdf\r\n//\r\n// Usage:\r\n//\r\n// var xor4096 = require('xor4096');\r\n// random = xor4096(1);                        // Seed with int32 or string.\r\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\r\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\r\n//\r\n// For nonzero numeric keys, this impelementation provides a sequence\r\n// identical to that by Brent's xorgens 3 implementaion in C.  This\r\n// implementation also provides for initalizing the generator with\r\n// string seeds, or for saving and restoring the state of the generator.\r\n//\r\n// On Chrome, this prng benchmarks about 2.1 times slower than\r\n// Javascript's built-in Math.random().\r\n\r\n(function(global, module, define) {\r\n\r\nfunction XorGen(seed) {\r\n  var me = this;\r\n\r\n  // Set up generator function.\r\n  me.next = function() {\r\n    var w = me.w,\r\n        X = me.X, i = me.i, t, v;\r\n    // Update Weyl generator.\r\n    me.w = w = (w + 0x61c88647) | 0;\r\n    // Update xor generator.\r\n    v = X[(i + 34) & 127];\r\n    t = X[i = ((i + 1) & 127)];\r\n    v ^= v << 13;\r\n    t ^= t << 17;\r\n    v ^= v >>> 15;\r\n    t ^= t >>> 12;\r\n    // Update Xor generator array state.\r\n    v = X[i] = v ^ t;\r\n    me.i = i;\r\n    // Result is the combination.\r\n    return (v + (w ^ (w >>> 16))) | 0;\r\n  };\r\n\r\n  function init(me, seed) {\r\n    var t, v, i, j, w, X = [], limit = 128;\r\n    if (seed === (seed | 0)) {\r\n      // Numeric seeds initialize v, which is used to generates X.\r\n      v = seed;\r\n      seed = null;\r\n    } else {\r\n      // String seeds are mixed into v and X one character at a time.\r\n      seed = seed + '\\0';\r\n      v = 0;\r\n      limit = Math.max(limit, seed.length);\r\n    }\r\n    // Initialize circular array and weyl value.\r\n    for (i = 0, j = -32; j < limit; ++j) {\r\n      // Put the unicode characters into the array, and shuffle them.\r\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\r\n      // After 32 shuffles, take v as the starting w value.\r\n      if (j === 0) w = v;\r\n      v ^= v << 10;\r\n      v ^= v >>> 15;\r\n      v ^= v << 4;\r\n      v ^= v >>> 13;\r\n      if (j >= 0) {\r\n        w = (w + 0x61c88647) | 0;     // Weyl.\r\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\r\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\r\n      }\r\n    }\r\n    // We have detected all zeroes; make the key nonzero.\r\n    if (i >= 128) {\r\n      X[(seed && seed.length || 0) & 127] = -1;\r\n    }\r\n    // Run the generator 512 times to further mix the state before using it.\r\n    // Factoring this as a function slows the main generator, so it is just\r\n    // unrolled here.  The weyl generator is not advanced while warming up.\r\n    i = 127;\r\n    for (j = 4 * 128; j > 0; --j) {\r\n      v = X[(i + 34) & 127];\r\n      t = X[i = ((i + 1) & 127)];\r\n      v ^= v << 13;\r\n      t ^= t << 17;\r\n      v ^= v >>> 15;\r\n      t ^= t >>> 12;\r\n      X[i] = v ^ t;\r\n    }\r\n    // Storing state as object members is faster than using closure variables.\r\n    me.w = w;\r\n    me.X = X;\r\n    me.i = i;\r\n  }\r\n\r\n  init(me, seed);\r\n}\r\n\r\nfunction copy(f, t) {\r\n  t.i = f.i;\r\n  t.w = f.w;\r\n  t.X = f.X.slice();\r\n  return t;\r\n};\r\n\r\nfunction impl(seed, opts) {\r\n  if (seed == null) seed = +(new Date);\r\n  var xg = new XorGen(seed),\r\n      state = opts && opts.state,\r\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\r\n  prng.double = function() {\r\n    do {\r\n      var top = xg.next() >>> 11,\r\n          bot = (xg.next() >>> 0) / 0x100000000,\r\n          result = (top + bot) / (1 << 21);\r\n    } while (result === 0);\r\n    return result;\r\n  };\r\n  prng.int32 = xg.next;\r\n  prng.quick = prng;\r\n  if (state) {\r\n    if (state.X) copy(state, xg);\r\n    prng.state = function() { return copy(xg, {}); }\r\n  }\r\n  return prng;\r\n}\r\n\r\nif (module && module.exports) {\r\n  module.exports = impl;\r\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\r\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n} else {\r\n  this.xor4096 = impl;\r\n}\r\n\r\n})(\r\n  this,                                     // window object or global\r\n   true && module,    // present in node.js\r\n  __webpack_require__.amdD   // present with an AMD loader\r\n);\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/seedrandom/lib/xor4096.js?")},"./node_modules/seedrandom/lib/xorshift7.js":function(module,exports,__webpack_require__){eval('/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the "xorshift7" algorithm by\r\n// François Panneton and Pierre L\'ecuyer:\r\n// "On the Xorgshift Random Number Generators"\r\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\r\n\r\n(function(global, module, define) {\r\n\r\nfunction XorGen(seed) {\r\n  var me = this;\r\n\r\n  // Set up generator function.\r\n  me.next = function() {\r\n    // Update xor generator.\r\n    var X = me.x, i = me.i, t, v, w;\r\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\r\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\r\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\r\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\r\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\r\n    X[i] = v;\r\n    me.i = (i + 1) & 7;\r\n    return v;\r\n  };\r\n\r\n  function init(me, seed) {\r\n    var j, w, X = [];\r\n\r\n    if (seed === (seed | 0)) {\r\n      // Seed state array using a 32-bit integer.\r\n      w = X[0] = seed;\r\n    } else {\r\n      // Seed state using a string.\r\n      seed = \'\' + seed;\r\n      for (j = 0; j < seed.length; ++j) {\r\n        X[j & 7] = (X[j & 7] << 15) ^\r\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\r\n      }\r\n    }\r\n    // Enforce an array length of 8, not all zeroes.\r\n    while (X.length < 8) X.push(0);\r\n    for (j = 0; j < 8 && X[j] === 0; ++j);\r\n    if (j == 8) w = X[7] = -1; else w = X[j];\r\n\r\n    me.x = X;\r\n    me.i = 0;\r\n\r\n    // Discard an initial 256 values.\r\n    for (j = 256; j > 0; --j) {\r\n      me.next();\r\n    }\r\n  }\r\n\r\n  init(me, seed);\r\n}\r\n\r\nfunction copy(f, t) {\r\n  t.x = f.x.slice();\r\n  t.i = f.i;\r\n  return t;\r\n}\r\n\r\nfunction impl(seed, opts) {\r\n  if (seed == null) seed = +(new Date);\r\n  var xg = new XorGen(seed),\r\n      state = opts && opts.state,\r\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\r\n  prng.double = function() {\r\n    do {\r\n      var top = xg.next() >>> 11,\r\n          bot = (xg.next() >>> 0) / 0x100000000,\r\n          result = (top + bot) / (1 << 21);\r\n    } while (result === 0);\r\n    return result;\r\n  };\r\n  prng.int32 = xg.next;\r\n  prng.quick = prng;\r\n  if (state) {\r\n    if (state.x) copy(state, xg);\r\n    prng.state = function() { return copy(xg, {}); }\r\n  }\r\n  return prng;\r\n}\r\n\r\nif (module && module.exports) {\r\n  module.exports = impl;\r\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\r\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n} else {\r\n  this.xorshift7 = impl;\r\n}\r\n\r\n})(\r\n  this,\r\n   true && module,    // present in node.js\r\n  __webpack_require__.amdD   // present with an AMD loader\r\n);\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/seedrandom/lib/xorshift7.js?')},"./node_modules/seedrandom/lib/xorwow.js":function(module,exports,__webpack_require__){eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xorwow\" prng algorithm by\r\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\r\n\r\n(function(global, module, define) {\r\n\r\nfunction XorGen(seed) {\r\n  var me = this, strseed = '';\r\n\r\n  // Set up generator function.\r\n  me.next = function() {\r\n    var t = (me.x ^ (me.x >>> 2));\r\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\r\n    return (me.d = (me.d + 362437 | 0)) +\r\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\r\n  };\r\n\r\n  me.x = 0;\r\n  me.y = 0;\r\n  me.z = 0;\r\n  me.w = 0;\r\n  me.v = 0;\r\n\r\n  if (seed === (seed | 0)) {\r\n    // Integer seed.\r\n    me.x = seed;\r\n  } else {\r\n    // String seed.\r\n    strseed += seed;\r\n  }\r\n\r\n  // Mix in string seed, then discard an initial batch of 64 values.\r\n  for (var k = 0; k < strseed.length + 64; k++) {\r\n    me.x ^= strseed.charCodeAt(k) | 0;\r\n    if (k == strseed.length) {\r\n      me.d = me.x << 10 ^ me.x >>> 4;\r\n    }\r\n    me.next();\r\n  }\r\n}\r\n\r\nfunction copy(f, t) {\r\n  t.x = f.x;\r\n  t.y = f.y;\r\n  t.z = f.z;\r\n  t.w = f.w;\r\n  t.v = f.v;\r\n  t.d = f.d;\r\n  return t;\r\n}\r\n\r\nfunction impl(seed, opts) {\r\n  var xg = new XorGen(seed),\r\n      state = opts && opts.state,\r\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\r\n  prng.double = function() {\r\n    do {\r\n      var top = xg.next() >>> 11,\r\n          bot = (xg.next() >>> 0) / 0x100000000,\r\n          result = (top + bot) / (1 << 21);\r\n    } while (result === 0);\r\n    return result;\r\n  };\r\n  prng.int32 = xg.next;\r\n  prng.quick = prng;\r\n  if (state) {\r\n    if (typeof(state) == 'object') copy(state, xg);\r\n    prng.state = function() { return copy(xg, {}); }\r\n  }\r\n  return prng;\r\n}\r\n\r\nif (module && module.exports) {\r\n  module.exports = impl;\r\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\r\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n} else {\r\n  this.xorwow = impl;\r\n}\r\n\r\n})(\r\n  this,\r\n   true && module,    // present in node.js\r\n  __webpack_require__.amdD   // present with an AMD loader\r\n);\r\n\r\n\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/seedrandom/lib/xorwow.js?")},"./node_modules/seedrandom/seedrandom.js":function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*\r\nCopyright 2019 David Bau.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n*/\r\n\r\n(function (global, pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n\r\nvar width = 256,        // each RC4 output is 0 <= x < 256\r\n    chunks = 6,         // at least six RC4 outputs for each double\r\n    digits = 52,        // there are 52 significant digits in a double\r\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n    startdenom = math.pow(width, chunks),\r\n    significance = math.pow(2, digits),\r\n    overflow = significance * 2,\r\n    mask = width - 1,\r\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\nfunction seedrandom(seed, options, callback) {\r\n  var key = [];\r\n  options = (options == true) ? { entropy: true } : (options || {});\r\n\r\n  // Flatten the seed string or build one from local entropy if needed.\r\n  var shortseed = mixkey(flatten(\r\n    options.entropy ? [seed, tostring(pool)] :\r\n    (seed == null) ? autoseed() : seed, 3), key);\r\n\r\n  // Use the seed to initialize an ARC4 generator.\r\n  var arc4 = new ARC4(key);\r\n\r\n  // This function returns a random double in [0, 1) that contains\r\n  // randomness in every bit of the mantissa of the IEEE 754 value.\r\n  var prng = function() {\r\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n        x = 0;                          //   and no 'extra last byte'.\r\n    while (n < significance) {          // Fill up all significant digits by\r\n      n = (n + x) * width;              //   shifting numerator and\r\n      d *= width;                       //   denominator and generating a\r\n      x = arc4.g(1);                    //   new least-significant-byte.\r\n    }\r\n    while (n >= overflow) {             // To avoid rounding up, before adding\r\n      n /= 2;                           //   last byte, shift everything\r\n      d /= 2;                           //   right using integer math until\r\n      x >>>= 1;                         //   we have exactly the desired bits.\r\n    }\r\n    return (n + x) / d;                 // Form the number within [0, 1).\r\n  };\r\n\r\n  prng.int32 = function() { return arc4.g(4) | 0; }\r\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\r\n  prng.double = prng;\r\n\r\n  // Mix the randomness into accumulated entropy.\r\n  mixkey(tostring(arc4.S), pool);\r\n\r\n  // Calling convention: what to return as a function of prng, seed, is_math.\r\n  return (options.pass || callback ||\r\n      function(prng, seed, is_math_call, state) {\r\n        if (state) {\r\n          // Load the arc4 state from the given state if it has an S array.\r\n          if (state.S) { copy(state, arc4); }\r\n          // Only provide the .state method if requested via options.state.\r\n          prng.state = function() { return copy(arc4, {}); }\r\n        }\r\n\r\n        // If called as a method of Math (Math.seedrandom()), mutate\r\n        // Math.random because that is how seedrandom.js has worked since v1.0.\r\n        if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n        // Otherwise, it is a newer calling convention, so return the\r\n        // prng directly.\r\n        else return prng;\r\n      })(\r\n  prng,\r\n  shortseed,\r\n  'global' in options ? options.global : (this == math),\r\n  options.state);\r\n}\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\nfunction ARC4(key) {\r\n  var t, keylen = key.length,\r\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n  // The empty key [] is treated as [0].\r\n  if (!keylen) { key = [keylen++]; }\r\n\r\n  // Set up S using the standard key scheduling algorithm.\r\n  while (i < width) {\r\n    s[i] = i++;\r\n  }\r\n  for (i = 0; i < width; i++) {\r\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n    s[j] = t;\r\n  }\r\n\r\n  // The \"g\" method returns the next (count) outputs as one number.\r\n  (me.g = function(count) {\r\n    // Using instance members instead of closure state nearly doubles speed.\r\n    var t, r = 0,\r\n        i = me.i, j = me.j, s = me.S;\r\n    while (count--) {\r\n      t = s[i = mask & (i + 1)];\r\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n    }\r\n    me.i = i; me.j = j;\r\n    return r;\r\n    // For robust unpredictability, the function call below automatically\r\n    // discards an initial batch of values.  This is called RC4-drop[256].\r\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n  })(width);\r\n}\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\nfunction copy(f, t) {\r\n  t.i = f.i;\r\n  t.j = f.j;\r\n  t.S = f.S.slice();\r\n  return t;\r\n};\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\nfunction flatten(obj, depth) {\r\n  var result = [], typ = (typeof obj), prop;\r\n  if (depth && typ == 'object') {\r\n    for (prop in obj) {\r\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n    }\r\n  }\r\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n}\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\nfunction mixkey(seed, key) {\r\n  var stringseed = seed + '', smear, j = 0;\r\n  while (j < stringseed.length) {\r\n    key[mask & j] =\r\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n  }\r\n  return tostring(key);\r\n}\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\nfunction autoseed() {\r\n  try {\r\n    var out;\r\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\r\n      // The use of 'out' to remember randomBytes makes tight minified code.\r\n      out = out(width);\r\n    } else {\r\n      out = new Uint8Array(width);\r\n      (global.crypto || global.msCrypto).getRandomValues(out);\r\n    }\r\n    return tostring(out);\r\n  } catch (e) {\r\n    var browser = global.navigator,\r\n        plugins = browser && browser.plugins;\r\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\r\n  }\r\n}\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\nfunction tostring(a) {\r\n  return String.fromCharCode.apply(0, a);\r\n}\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\nmixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\nif ( true && module.exports) {\r\n  module.exports = seedrandom;\r\n  // When in node.js, try using crypto package for autoseeding.\r\n  try {\r\n    nodecrypto = __webpack_require__(/*! crypto */ \"?d4c0\");\r\n  } catch (ex) {}\r\n} else if (true) {\r\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return seedrandom; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n} else {}\r\n\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n  // global: `self` in browsers (including strict mode and web workers),\r\n  // otherwise `this` in Node and other environments\r\n  (typeof self !== 'undefined') ? self : this,\r\n  [],     // pool: entropy pool starts empty\r\n  Math    // math: package containing random, pow, and seedrandom\r\n);\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/seedrandom/seedrandom.js?")},"./node_modules/spark-md5/spark-md5.js":module=>{eval("(function (factory) {\r\n    if (true) {\r\n        // Node/CommonJS\r\n        module.exports = factory();\r\n    } else { var glob; }\r\n}(function (undefined) {\r\n\r\n    'use strict';\r\n\r\n    /*\r\n     * Fastest md5 implementation around (JKM md5).\r\n     * Credits: Joseph Myers\r\n     *\r\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\r\n     * @see http://jsperf.com/md5-shootout/7\r\n     */\r\n\r\n    /* this function is much faster,\r\n      so if possible we use it. Some IEs\r\n      are the only ones I know of that\r\n      need the idiotic second function,\r\n      generated by an if clause.  */\r\n    var add32 = function (a, b) {\r\n        return (a + b) & 0xFFFFFFFF;\r\n    },\r\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\n\r\n\r\n    function cmn(q, a, b, x, s, t) {\r\n        a = add32(add32(a, q), add32(x, t));\r\n        return add32((a << s) | (a >>> (32 - s)), b);\r\n    }\r\n\r\n    function md5cycle(x, k) {\r\n        var a = x[0],\r\n            b = x[1],\r\n            c = x[2],\r\n            d = x[3];\r\n\r\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\r\n        a  = (a << 7 | a >>> 25) + b | 0;\r\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\r\n        d  = (d << 12 | d >>> 20) + a | 0;\r\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\r\n        c  = (c << 17 | c >>> 15) + d | 0;\r\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\r\n        b  = (b << 22 | b >>> 10) + c | 0;\r\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\r\n        a  = (a << 7 | a >>> 25) + b | 0;\r\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\r\n        d  = (d << 12 | d >>> 20) + a | 0;\r\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\r\n        c  = (c << 17 | c >>> 15) + d | 0;\r\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\r\n        b  = (b << 22 | b >>> 10) + c | 0;\r\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\r\n        a  = (a << 7 | a >>> 25) + b | 0;\r\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\r\n        d  = (d << 12 | d >>> 20) + a | 0;\r\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\r\n        c  = (c << 17 | c >>> 15) + d | 0;\r\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\r\n        b  = (b << 22 | b >>> 10) + c | 0;\r\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\r\n        a  = (a << 7 | a >>> 25) + b | 0;\r\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\r\n        d  = (d << 12 | d >>> 20) + a | 0;\r\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\r\n        c  = (c << 17 | c >>> 15) + d | 0;\r\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\r\n        b  = (b << 22 | b >>> 10) + c | 0;\r\n\r\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\r\n        a  = (a << 5 | a >>> 27) + b | 0;\r\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\r\n        d  = (d << 9 | d >>> 23) + a | 0;\r\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\r\n        c  = (c << 14 | c >>> 18) + d | 0;\r\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\r\n        b  = (b << 20 | b >>> 12) + c | 0;\r\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\r\n        a  = (a << 5 | a >>> 27) + b | 0;\r\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\r\n        d  = (d << 9 | d >>> 23) + a | 0;\r\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\r\n        c  = (c << 14 | c >>> 18) + d | 0;\r\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\r\n        b  = (b << 20 | b >>> 12) + c | 0;\r\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\r\n        a  = (a << 5 | a >>> 27) + b | 0;\r\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\r\n        d  = (d << 9 | d >>> 23) + a | 0;\r\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\r\n        c  = (c << 14 | c >>> 18) + d | 0;\r\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\r\n        b  = (b << 20 | b >>> 12) + c | 0;\r\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\r\n        a  = (a << 5 | a >>> 27) + b | 0;\r\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\r\n        d  = (d << 9 | d >>> 23) + a | 0;\r\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\r\n        c  = (c << 14 | c >>> 18) + d | 0;\r\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\r\n        b  = (b << 20 | b >>> 12) + c | 0;\r\n\r\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\r\n        a  = (a << 4 | a >>> 28) + b | 0;\r\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\r\n        d  = (d << 11 | d >>> 21) + a | 0;\r\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\r\n        c  = (c << 16 | c >>> 16) + d | 0;\r\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\r\n        b  = (b << 23 | b >>> 9) + c | 0;\r\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\r\n        a  = (a << 4 | a >>> 28) + b | 0;\r\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\r\n        d  = (d << 11 | d >>> 21) + a | 0;\r\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\r\n        c  = (c << 16 | c >>> 16) + d | 0;\r\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\r\n        b  = (b << 23 | b >>> 9) + c | 0;\r\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\r\n        a  = (a << 4 | a >>> 28) + b | 0;\r\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\r\n        d  = (d << 11 | d >>> 21) + a | 0;\r\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\r\n        c  = (c << 16 | c >>> 16) + d | 0;\r\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\r\n        b  = (b << 23 | b >>> 9) + c | 0;\r\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\r\n        a  = (a << 4 | a >>> 28) + b | 0;\r\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\r\n        d  = (d << 11 | d >>> 21) + a | 0;\r\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\r\n        c  = (c << 16 | c >>> 16) + d | 0;\r\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\r\n        b  = (b << 23 | b >>> 9) + c | 0;\r\n\r\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\r\n        a  = (a << 6 | a >>> 26) + b | 0;\r\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\r\n        d  = (d << 10 | d >>> 22) + a | 0;\r\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\r\n        c  = (c << 15 | c >>> 17) + d | 0;\r\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\r\n        b  = (b << 21 |b >>> 11) + c | 0;\r\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\r\n        a  = (a << 6 | a >>> 26) + b | 0;\r\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\r\n        d  = (d << 10 | d >>> 22) + a | 0;\r\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\r\n        c  = (c << 15 | c >>> 17) + d | 0;\r\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\r\n        b  = (b << 21 |b >>> 11) + c | 0;\r\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\r\n        a  = (a << 6 | a >>> 26) + b | 0;\r\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\r\n        d  = (d << 10 | d >>> 22) + a | 0;\r\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\r\n        c  = (c << 15 | c >>> 17) + d | 0;\r\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\r\n        b  = (b << 21 |b >>> 11) + c | 0;\r\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\r\n        a  = (a << 6 | a >>> 26) + b | 0;\r\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\r\n        d  = (d << 10 | d >>> 22) + a | 0;\r\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\r\n        c  = (c << 15 | c >>> 17) + d | 0;\r\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\r\n        b  = (b << 21 | b >>> 11) + c | 0;\r\n\r\n        x[0] = a + x[0] | 0;\r\n        x[1] = b + x[1] | 0;\r\n        x[2] = c + x[2] | 0;\r\n        x[3] = d + x[3] | 0;\r\n    }\r\n\r\n    function md5blk(s) {\r\n        var md5blks = [],\r\n            i; /* Andy King said do it this way. */\r\n\r\n        for (i = 0; i < 64; i += 4) {\r\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\r\n        }\r\n        return md5blks;\r\n    }\r\n\r\n    function md5blk_array(a) {\r\n        var md5blks = [],\r\n            i; /* Andy King said do it this way. */\r\n\r\n        for (i = 0; i < 64; i += 4) {\r\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\r\n        }\r\n        return md5blks;\r\n    }\r\n\r\n    function md51(s) {\r\n        var n = s.length,\r\n            state = [1732584193, -271733879, -1732584194, 271733878],\r\n            i,\r\n            length,\r\n            tail,\r\n            tmp,\r\n            lo,\r\n            hi;\r\n\r\n        for (i = 64; i <= n; i += 64) {\r\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\r\n        }\r\n        s = s.substring(i - 64);\r\n        length = s.length;\r\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        for (i = 0; i < length; i += 1) {\r\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\r\n        }\r\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\r\n        if (i > 55) {\r\n            md5cycle(state, tail);\r\n            for (i = 0; i < 16; i += 1) {\r\n                tail[i] = 0;\r\n            }\r\n        }\r\n\r\n        // Beware that the final length might not fit in 32 bits so we take care of that\r\n        tmp = n * 8;\r\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\r\n        lo = parseInt(tmp[2], 16);\r\n        hi = parseInt(tmp[1], 16) || 0;\r\n\r\n        tail[14] = lo;\r\n        tail[15] = hi;\r\n\r\n        md5cycle(state, tail);\r\n        return state;\r\n    }\r\n\r\n    function md51_array(a) {\r\n        var n = a.length,\r\n            state = [1732584193, -271733879, -1732584194, 271733878],\r\n            i,\r\n            length,\r\n            tail,\r\n            tmp,\r\n            lo,\r\n            hi;\r\n\r\n        for (i = 64; i <= n; i += 64) {\r\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\r\n        }\r\n\r\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\r\n        // containing the last element of the parent array if the sub array specified starts\r\n        // beyond the length of the parent array - weird.\r\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\r\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\r\n\r\n        length = a.length;\r\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        for (i = 0; i < length; i += 1) {\r\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\r\n        }\r\n\r\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\r\n        if (i > 55) {\r\n            md5cycle(state, tail);\r\n            for (i = 0; i < 16; i += 1) {\r\n                tail[i] = 0;\r\n            }\r\n        }\r\n\r\n        // Beware that the final length might not fit in 32 bits so we take care of that\r\n        tmp = n * 8;\r\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\r\n        lo = parseInt(tmp[2], 16);\r\n        hi = parseInt(tmp[1], 16) || 0;\r\n\r\n        tail[14] = lo;\r\n        tail[15] = hi;\r\n\r\n        md5cycle(state, tail);\r\n\r\n        return state;\r\n    }\r\n\r\n    function rhex(n) {\r\n        var s = '',\r\n            j;\r\n        for (j = 0; j < 4; j += 1) {\r\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\r\n        }\r\n        return s;\r\n    }\r\n\r\n    function hex(x) {\r\n        var i;\r\n        for (i = 0; i < x.length; i += 1) {\r\n            x[i] = rhex(x[i]);\r\n        }\r\n        return x.join('');\r\n    }\r\n\r\n    // In some cases the fast add32 function cannot be used..\r\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\r\n        add32 = function (x, y) {\r\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\r\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n            return (msw << 16) | (lsw & 0xFFFF);\r\n        };\r\n    }\r\n\r\n    // ---------------------------------------------------\r\n\r\n    /**\r\n     * ArrayBuffer slice polyfill.\r\n     *\r\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\r\n     */\r\n\r\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\r\n        (function () {\r\n            function clamp(val, length) {\r\n                val = (val | 0) || 0;\r\n\r\n                if (val < 0) {\r\n                    return Math.max(val + length, 0);\r\n                }\r\n\r\n                return Math.min(val, length);\r\n            }\r\n\r\n            ArrayBuffer.prototype.slice = function (from, to) {\r\n                var length = this.byteLength,\r\n                    begin = clamp(from, length),\r\n                    end = length,\r\n                    num,\r\n                    target,\r\n                    targetArray,\r\n                    sourceArray;\r\n\r\n                if (to !== undefined) {\r\n                    end = clamp(to, length);\r\n                }\r\n\r\n                if (begin > end) {\r\n                    return new ArrayBuffer(0);\r\n                }\r\n\r\n                num = end - begin;\r\n                target = new ArrayBuffer(num);\r\n                targetArray = new Uint8Array(target);\r\n\r\n                sourceArray = new Uint8Array(this, begin, num);\r\n                targetArray.set(sourceArray);\r\n\r\n                return target;\r\n            };\r\n        })();\r\n    }\r\n\r\n    // ---------------------------------------------------\r\n\r\n    /**\r\n     * Helpers.\r\n     */\r\n\r\n    function toUtf8(str) {\r\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\r\n            str = unescape(encodeURIComponent(str));\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\r\n        var length = str.length,\r\n           buff = new ArrayBuffer(length),\r\n           arr = new Uint8Array(buff),\r\n           i;\r\n\r\n        for (i = 0; i < length; i += 1) {\r\n            arr[i] = str.charCodeAt(i);\r\n        }\r\n\r\n        return returnUInt8Array ? arr : buff;\r\n    }\r\n\r\n    function arrayBuffer2Utf8Str(buff) {\r\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\r\n    }\r\n\r\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\r\n        var result = new Uint8Array(first.byteLength + second.byteLength);\r\n\r\n        result.set(new Uint8Array(first));\r\n        result.set(new Uint8Array(second), first.byteLength);\r\n\r\n        return returnUInt8Array ? result : result.buffer;\r\n    }\r\n\r\n    function hexToBinaryString(hex) {\r\n        var bytes = [],\r\n            length = hex.length,\r\n            x;\r\n\r\n        for (x = 0; x < length - 1; x += 2) {\r\n            bytes.push(parseInt(hex.substr(x, 2), 16));\r\n        }\r\n\r\n        return String.fromCharCode.apply(String, bytes);\r\n    }\r\n\r\n    // ---------------------------------------------------\r\n\r\n    /**\r\n     * SparkMD5 OOP implementation.\r\n     *\r\n     * Use this class to perform an incremental md5, otherwise use the\r\n     * static methods instead.\r\n     */\r\n\r\n    function SparkMD5() {\r\n        // call reset to init the instance\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * Appends a string.\r\n     * A conversion will be applied if an utf8 string is detected.\r\n     *\r\n     * @param {String} str The string to be appended\r\n     *\r\n     * @return {SparkMD5} The instance itself\r\n     */\r\n    SparkMD5.prototype.append = function (str) {\r\n        // Converts the string to utf8 bytes if necessary\r\n        // Then append as binary\r\n        this.appendBinary(toUtf8(str));\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Appends a binary string.\r\n     *\r\n     * @param {String} contents The binary string to be appended\r\n     *\r\n     * @return {SparkMD5} The instance itself\r\n     */\r\n    SparkMD5.prototype.appendBinary = function (contents) {\r\n        this._buff += contents;\r\n        this._length += contents.length;\r\n\r\n        var length = this._buff.length,\r\n            i;\r\n\r\n        for (i = 64; i <= length; i += 64) {\r\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\r\n        }\r\n\r\n        this._buff = this._buff.substring(i - 64);\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Finishes the incremental computation, reseting the internal state and\r\n     * returning the result.\r\n     *\r\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\r\n     *\r\n     * @return {String} The result\r\n     */\r\n    SparkMD5.prototype.end = function (raw) {\r\n        var buff = this._buff,\r\n            length = buff.length,\r\n            i,\r\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            ret;\r\n\r\n        for (i = 0; i < length; i += 1) {\r\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\r\n        }\r\n\r\n        this._finish(tail, length);\r\n        ret = hex(this._hash);\r\n\r\n        if (raw) {\r\n            ret = hexToBinaryString(ret);\r\n        }\r\n\r\n        this.reset();\r\n\r\n        return ret;\r\n    };\r\n\r\n    /**\r\n     * Resets the internal state of the computation.\r\n     *\r\n     * @return {SparkMD5} The instance itself\r\n     */\r\n    SparkMD5.prototype.reset = function () {\r\n        this._buff = '';\r\n        this._length = 0;\r\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Gets the internal state of the computation.\r\n     *\r\n     * @return {Object} The state\r\n     */\r\n    SparkMD5.prototype.getState = function () {\r\n        return {\r\n            buff: this._buff,\r\n            length: this._length,\r\n            hash: this._hash.slice()\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Gets the internal state of the computation.\r\n     *\r\n     * @param {Object} state The state\r\n     *\r\n     * @return {SparkMD5} The instance itself\r\n     */\r\n    SparkMD5.prototype.setState = function (state) {\r\n        this._buff = state.buff;\r\n        this._length = state.length;\r\n        this._hash = state.hash;\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Releases memory used by the incremental buffer and other additional\r\n     * resources. If you plan to use the instance again, use reset instead.\r\n     */\r\n    SparkMD5.prototype.destroy = function () {\r\n        delete this._hash;\r\n        delete this._buff;\r\n        delete this._length;\r\n    };\r\n\r\n    /**\r\n     * Finish the final calculation based on the tail.\r\n     *\r\n     * @param {Array}  tail   The tail (will be modified)\r\n     * @param {Number} length The length of the remaining buffer\r\n     */\r\n    SparkMD5.prototype._finish = function (tail, length) {\r\n        var i = length,\r\n            tmp,\r\n            lo,\r\n            hi;\r\n\r\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\r\n        if (i > 55) {\r\n            md5cycle(this._hash, tail);\r\n            for (i = 0; i < 16; i += 1) {\r\n                tail[i] = 0;\r\n            }\r\n        }\r\n\r\n        // Do the final computation based on the tail and length\r\n        // Beware that the final length may not fit in 32 bits so we take care of that\r\n        tmp = this._length * 8;\r\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\r\n        lo = parseInt(tmp[2], 16);\r\n        hi = parseInt(tmp[1], 16) || 0;\r\n\r\n        tail[14] = lo;\r\n        tail[15] = hi;\r\n        md5cycle(this._hash, tail);\r\n    };\r\n\r\n    /**\r\n     * Performs the md5 hash on a string.\r\n     * A conversion will be applied if utf8 string is detected.\r\n     *\r\n     * @param {String}  str The string\r\n     * @param {Boolean} [raw] True to get the raw string, false to get the hex string\r\n     *\r\n     * @return {String} The result\r\n     */\r\n    SparkMD5.hash = function (str, raw) {\r\n        // Converts the string to utf8 bytes if necessary\r\n        // Then compute it using the binary function\r\n        return SparkMD5.hashBinary(toUtf8(str), raw);\r\n    };\r\n\r\n    /**\r\n     * Performs the md5 hash on a binary string.\r\n     *\r\n     * @param {String}  content The binary string\r\n     * @param {Boolean} [raw]     True to get the raw string, false to get the hex string\r\n     *\r\n     * @return {String} The result\r\n     */\r\n    SparkMD5.hashBinary = function (content, raw) {\r\n        var hash = md51(content),\r\n            ret = hex(hash);\r\n\r\n        return raw ? hexToBinaryString(ret) : ret;\r\n    };\r\n\r\n    // ---------------------------------------------------\r\n\r\n    /**\r\n     * SparkMD5 OOP implementation for array buffers.\r\n     *\r\n     * Use this class to perform an incremental md5 ONLY for array buffers.\r\n     */\r\n    SparkMD5.ArrayBuffer = function () {\r\n        // call reset to init the instance\r\n        this.reset();\r\n    };\r\n\r\n    /**\r\n     * Appends an array buffer.\r\n     *\r\n     * @param {ArrayBuffer} arr The array to be appended\r\n     *\r\n     * @return {SparkMD5.ArrayBuffer} The instance itself\r\n     */\r\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\r\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\r\n            length = buff.length,\r\n            i;\r\n\r\n        this._length += arr.byteLength;\r\n\r\n        for (i = 64; i <= length; i += 64) {\r\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\r\n        }\r\n\r\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Finishes the incremental computation, reseting the internal state and\r\n     * returning the result.\r\n     *\r\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\r\n     *\r\n     * @return {String} The result\r\n     */\r\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\r\n        var buff = this._buff,\r\n            length = buff.length,\r\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            i,\r\n            ret;\r\n\r\n        for (i = 0; i < length; i += 1) {\r\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\r\n        }\r\n\r\n        this._finish(tail, length);\r\n        ret = hex(this._hash);\r\n\r\n        if (raw) {\r\n            ret = hexToBinaryString(ret);\r\n        }\r\n\r\n        this.reset();\r\n\r\n        return ret;\r\n    };\r\n\r\n    /**\r\n     * Resets the internal state of the computation.\r\n     *\r\n     * @return {SparkMD5.ArrayBuffer} The instance itself\r\n     */\r\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\r\n        this._buff = new Uint8Array(0);\r\n        this._length = 0;\r\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Gets the internal state of the computation.\r\n     *\r\n     * @return {Object} The state\r\n     */\r\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\r\n        var state = SparkMD5.prototype.getState.call(this);\r\n\r\n        // Convert buffer to a string\r\n        state.buff = arrayBuffer2Utf8Str(state.buff);\r\n\r\n        return state;\r\n    };\r\n\r\n    /**\r\n     * Gets the internal state of the computation.\r\n     *\r\n     * @param {Object} state The state\r\n     *\r\n     * @return {SparkMD5.ArrayBuffer} The instance itself\r\n     */\r\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\r\n        // Convert string to buffer\r\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\r\n\r\n        return SparkMD5.prototype.setState.call(this, state);\r\n    };\r\n\r\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\r\n\r\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\r\n\r\n    /**\r\n     * Performs the md5 hash on an array buffer.\r\n     *\r\n     * @param {ArrayBuffer} arr The array buffer\r\n     * @param {Boolean}     [raw] True to get the raw string, false to get the hex one\r\n     *\r\n     * @return {String} The result\r\n     */\r\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\r\n        var hash = md51_array(new Uint8Array(arr)),\r\n            ret = hex(hash);\r\n\r\n        return raw ? hexToBinaryString(ret) : ret;\r\n    };\r\n\r\n    return SparkMD5;\r\n}));\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/spark-md5/spark-md5.js?")},"?d4c0":()=>{eval("/* (ignored) */\n\n//# sourceURL=webpack://frontend/crypto_(ignored)?")},"./node_modules/d3-array/src/ascending.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ ascending)\n/* harmony export */ });\nfunction ascending(a, b) {\r\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-array/src/ascending.js?')},"./node_modules/d3-array/src/bisect.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bisectCenter: () => (/* binding */ bisectCenter),\n/* harmony export */   bisectLeft: () => (/* binding */ bisectLeft),\n/* harmony export */   bisectRight: () => (/* binding */ bisectRight),\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");\n/* harmony import */ var _bisector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bisector.js */ "./node_modules/d3-array/src/bisector.js");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-array/src/number.js");\n\r\n\r\n\r\n\r\nconst ascendingBisect = (0,_bisector_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_ascending_js__WEBPACK_IMPORTED_MODULE_1__["default"]);\r\nconst bisectRight = ascendingBisect.right;\r\nconst bisectLeft = ascendingBisect.left;\r\nconst bisectCenter = (0,_bisector_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_number_js__WEBPACK_IMPORTED_MODULE_2__["default"]).center;\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (bisectRight);\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-array/src/bisect.js?')},"./node_modules/d3-array/src/bisector.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ bisector)\n/* harmony export */ });\n/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");\n/* harmony import */ var _descending_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./descending.js */ "./node_modules/d3-array/src/descending.js");\n\r\n\r\n\r\nfunction bisector(f) {\r\n  let compare1, compare2, delta;\r\n\r\n  // If an accessor is specified, promote it to a comparator. In this case we\r\n  // can test whether the search value is (self-) comparable. We can’t do this\r\n  // for a comparator (except for specific, known comparators) because we can’t\r\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\r\n  // used to test whether a single value is comparable.\r\n  if (f.length !== 2) {\r\n    compare1 = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"];\r\n    compare2 = (d, x) => (0,_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(f(d), x);\r\n    delta = (d, x) => f(d) - x;\r\n  } else {\r\n    compare1 = f === _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"] || f === _descending_js__WEBPACK_IMPORTED_MODULE_1__["default"] ? f : zero;\r\n    compare2 = f;\r\n    delta = f;\r\n  }\r\n\r\n  function left(a, x, lo = 0, hi = a.length) {\r\n    if (lo < hi) {\r\n      if (compare1(x, x) !== 0) return hi;\r\n      do {\r\n        const mid = (lo + hi) >>> 1;\r\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\r\n        else hi = mid;\r\n      } while (lo < hi);\r\n    }\r\n    return lo;\r\n  }\r\n\r\n  function right(a, x, lo = 0, hi = a.length) {\r\n    if (lo < hi) {\r\n      if (compare1(x, x) !== 0) return hi;\r\n      do {\r\n        const mid = (lo + hi) >>> 1;\r\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\r\n        else hi = mid;\r\n      } while (lo < hi);\r\n    }\r\n    return lo;\r\n  }\r\n\r\n  function center(a, x, lo = 0, hi = a.length) {\r\n    const i = left(a, x, lo, hi - 1);\r\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\r\n  }\r\n\r\n  return {left, center, right};\r\n}\r\n\r\nfunction zero() {\r\n  return 0;\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-array/src/bisector.js?')},"./node_modules/d3-array/src/descending.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ descending)\n/* harmony export */ });\nfunction descending(a, b) {\r\n  return a == null || b == null ? NaN\r\n    : b < a ? -1\r\n    : b > a ? 1\r\n    : b >= a ? 0\r\n    : NaN;\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-array/src/descending.js?')},"./node_modules/d3-array/src/number.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ number),\n/* harmony export */   numbers: () => (/* binding */ numbers)\n/* harmony export */ });\nfunction number(x) {\r\n  return x === null ? NaN : +x;\r\n}\r\n\r\nfunction* numbers(values, valueof) {\r\n  if (valueof === undefined) {\r\n    for (let value of values) {\r\n      if (value != null && (value = +value) >= value) {\r\n        yield value;\r\n      }\r\n    }\r\n  } else {\r\n    let index = -1;\r\n    for (let value of values) {\r\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\r\n        yield value;\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-array/src/number.js?')},"./node_modules/d3-array/src/ticks.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ ticks),\n/* harmony export */   tickIncrement: () => (/* binding */ tickIncrement),\n/* harmony export */   tickStep: () => (/* binding */ tickStep)\n/* harmony export */ });\nconst e10 = Math.sqrt(50),\r\n    e5 = Math.sqrt(10),\r\n    e2 = Math.sqrt(2);\r\n\r\nfunction tickSpec(start, stop, count) {\r\n  const step = (stop - start) / Math.max(0, count),\r\n      power = Math.floor(Math.log10(step)),\r\n      error = step / Math.pow(10, power),\r\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\r\n  let i1, i2, inc;\r\n  if (power < 0) {\r\n    inc = Math.pow(10, -power) / factor;\r\n    i1 = Math.round(start * inc);\r\n    i2 = Math.round(stop * inc);\r\n    if (i1 / inc < start) ++i1;\r\n    if (i2 / inc > stop) --i2;\r\n    inc = -inc;\r\n  } else {\r\n    inc = Math.pow(10, power) * factor;\r\n    i1 = Math.round(start / inc);\r\n    i2 = Math.round(stop / inc);\r\n    if (i1 * inc < start) ++i1;\r\n    if (i2 * inc > stop) --i2;\r\n  }\r\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\r\n  return [i1, i2, inc];\r\n}\r\n\r\nfunction ticks(start, stop, count) {\r\n  stop = +stop, start = +start, count = +count;\r\n  if (!(count > 0)) return [];\r\n  if (start === stop) return [start];\r\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\r\n  if (!(i2 >= i1)) return [];\r\n  const n = i2 - i1 + 1, ticks = new Array(n);\r\n  if (reverse) {\r\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\r\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\r\n  } else {\r\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\r\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\r\n  }\r\n  return ticks;\r\n}\r\n\r\nfunction tickIncrement(start, stop, count) {\r\n  stop = +stop, start = +start, count = +count;\r\n  return tickSpec(start, stop, count)[2];\r\n}\r\n\r\nfunction tickStep(start, stop, count) {\r\n  stop = +stop, start = +start, count = +count;\r\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\r\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-array/src/ticks.js?')},"./node_modules/d3-color/src/color.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Color: () => (/* binding */ Color),\n/* harmony export */   Rgb: () => (/* binding */ Rgb),\n/* harmony export */   brighter: () => (/* binding */ brighter),\n/* harmony export */   darker: () => (/* binding */ darker),\n/* harmony export */   "default": () => (/* binding */ color),\n/* harmony export */   hsl: () => (/* binding */ hsl),\n/* harmony export */   hslConvert: () => (/* binding */ hslConvert),\n/* harmony export */   rgb: () => (/* binding */ rgb),\n/* harmony export */   rgbConvert: () => (/* binding */ rgbConvert)\n/* harmony export */ });\n/* harmony import */ var _define_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./define.js */ "./node_modules/d3-color/src/define.js");\n\r\n\r\nfunction Color() {}\r\n\r\nvar darker = 0.7;\r\nvar brighter = 1 / darker;\r\n\r\nvar reI = "\\\\s*([+-]?\\\\d+)\\\\s*",\r\n    reN = "\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*",\r\n    reP = "\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*",\r\n    reHex = /^#([0-9a-f]{3,8})$/,\r\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\r\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\r\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\r\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\r\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\r\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\r\n\r\nvar named = {\r\n  aliceblue: 0xf0f8ff,\r\n  antiquewhite: 0xfaebd7,\r\n  aqua: 0x00ffff,\r\n  aquamarine: 0x7fffd4,\r\n  azure: 0xf0ffff,\r\n  beige: 0xf5f5dc,\r\n  bisque: 0xffe4c4,\r\n  black: 0x000000,\r\n  blanchedalmond: 0xffebcd,\r\n  blue: 0x0000ff,\r\n  blueviolet: 0x8a2be2,\r\n  brown: 0xa52a2a,\r\n  burlywood: 0xdeb887,\r\n  cadetblue: 0x5f9ea0,\r\n  chartreuse: 0x7fff00,\r\n  chocolate: 0xd2691e,\r\n  coral: 0xff7f50,\r\n  cornflowerblue: 0x6495ed,\r\n  cornsilk: 0xfff8dc,\r\n  crimson: 0xdc143c,\r\n  cyan: 0x00ffff,\r\n  darkblue: 0x00008b,\r\n  darkcyan: 0x008b8b,\r\n  darkgoldenrod: 0xb8860b,\r\n  darkgray: 0xa9a9a9,\r\n  darkgreen: 0x006400,\r\n  darkgrey: 0xa9a9a9,\r\n  darkkhaki: 0xbdb76b,\r\n  darkmagenta: 0x8b008b,\r\n  darkolivegreen: 0x556b2f,\r\n  darkorange: 0xff8c00,\r\n  darkorchid: 0x9932cc,\r\n  darkred: 0x8b0000,\r\n  darksalmon: 0xe9967a,\r\n  darkseagreen: 0x8fbc8f,\r\n  darkslateblue: 0x483d8b,\r\n  darkslategray: 0x2f4f4f,\r\n  darkslategrey: 0x2f4f4f,\r\n  darkturquoise: 0x00ced1,\r\n  darkviolet: 0x9400d3,\r\n  deeppink: 0xff1493,\r\n  deepskyblue: 0x00bfff,\r\n  dimgray: 0x696969,\r\n  dimgrey: 0x696969,\r\n  dodgerblue: 0x1e90ff,\r\n  firebrick: 0xb22222,\r\n  floralwhite: 0xfffaf0,\r\n  forestgreen: 0x228b22,\r\n  fuchsia: 0xff00ff,\r\n  gainsboro: 0xdcdcdc,\r\n  ghostwhite: 0xf8f8ff,\r\n  gold: 0xffd700,\r\n  goldenrod: 0xdaa520,\r\n  gray: 0x808080,\r\n  green: 0x008000,\r\n  greenyellow: 0xadff2f,\r\n  grey: 0x808080,\r\n  honeydew: 0xf0fff0,\r\n  hotpink: 0xff69b4,\r\n  indianred: 0xcd5c5c,\r\n  indigo: 0x4b0082,\r\n  ivory: 0xfffff0,\r\n  khaki: 0xf0e68c,\r\n  lavender: 0xe6e6fa,\r\n  lavenderblush: 0xfff0f5,\r\n  lawngreen: 0x7cfc00,\r\n  lemonchiffon: 0xfffacd,\r\n  lightblue: 0xadd8e6,\r\n  lightcoral: 0xf08080,\r\n  lightcyan: 0xe0ffff,\r\n  lightgoldenrodyellow: 0xfafad2,\r\n  lightgray: 0xd3d3d3,\r\n  lightgreen: 0x90ee90,\r\n  lightgrey: 0xd3d3d3,\r\n  lightpink: 0xffb6c1,\r\n  lightsalmon: 0xffa07a,\r\n  lightseagreen: 0x20b2aa,\r\n  lightskyblue: 0x87cefa,\r\n  lightslategray: 0x778899,\r\n  lightslategrey: 0x778899,\r\n  lightsteelblue: 0xb0c4de,\r\n  lightyellow: 0xffffe0,\r\n  lime: 0x00ff00,\r\n  limegreen: 0x32cd32,\r\n  linen: 0xfaf0e6,\r\n  magenta: 0xff00ff,\r\n  maroon: 0x800000,\r\n  mediumaquamarine: 0x66cdaa,\r\n  mediumblue: 0x0000cd,\r\n  mediumorchid: 0xba55d3,\r\n  mediumpurple: 0x9370db,\r\n  mediumseagreen: 0x3cb371,\r\n  mediumslateblue: 0x7b68ee,\r\n  mediumspringgreen: 0x00fa9a,\r\n  mediumturquoise: 0x48d1cc,\r\n  mediumvioletred: 0xc71585,\r\n  midnightblue: 0x191970,\r\n  mintcream: 0xf5fffa,\r\n  mistyrose: 0xffe4e1,\r\n  moccasin: 0xffe4b5,\r\n  navajowhite: 0xffdead,\r\n  navy: 0x000080,\r\n  oldlace: 0xfdf5e6,\r\n  olive: 0x808000,\r\n  olivedrab: 0x6b8e23,\r\n  orange: 0xffa500,\r\n  orangered: 0xff4500,\r\n  orchid: 0xda70d6,\r\n  palegoldenrod: 0xeee8aa,\r\n  palegreen: 0x98fb98,\r\n  paleturquoise: 0xafeeee,\r\n  palevioletred: 0xdb7093,\r\n  papayawhip: 0xffefd5,\r\n  peachpuff: 0xffdab9,\r\n  peru: 0xcd853f,\r\n  pink: 0xffc0cb,\r\n  plum: 0xdda0dd,\r\n  powderblue: 0xb0e0e6,\r\n  purple: 0x800080,\r\n  rebeccapurple: 0x663399,\r\n  red: 0xff0000,\r\n  rosybrown: 0xbc8f8f,\r\n  royalblue: 0x4169e1,\r\n  saddlebrown: 0x8b4513,\r\n  salmon: 0xfa8072,\r\n  sandybrown: 0xf4a460,\r\n  seagreen: 0x2e8b57,\r\n  seashell: 0xfff5ee,\r\n  sienna: 0xa0522d,\r\n  silver: 0xc0c0c0,\r\n  skyblue: 0x87ceeb,\r\n  slateblue: 0x6a5acd,\r\n  slategray: 0x708090,\r\n  slategrey: 0x708090,\r\n  snow: 0xfffafa,\r\n  springgreen: 0x00ff7f,\r\n  steelblue: 0x4682b4,\r\n  tan: 0xd2b48c,\r\n  teal: 0x008080,\r\n  thistle: 0xd8bfd8,\r\n  tomato: 0xff6347,\r\n  turquoise: 0x40e0d0,\r\n  violet: 0xee82ee,\r\n  wheat: 0xf5deb3,\r\n  white: 0xffffff,\r\n  whitesmoke: 0xf5f5f5,\r\n  yellow: 0xffff00,\r\n  yellowgreen: 0x9acd32\r\n};\r\n\r\n(0,_define_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Color, color, {\r\n  copy(channels) {\r\n    return Object.assign(new this.constructor, this, channels);\r\n  },\r\n  displayable() {\r\n    return this.rgb().displayable();\r\n  },\r\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\r\n  formatHex: color_formatHex,\r\n  formatHex8: color_formatHex8,\r\n  formatHsl: color_formatHsl,\r\n  formatRgb: color_formatRgb,\r\n  toString: color_formatRgb\r\n});\r\n\r\nfunction color_formatHex() {\r\n  return this.rgb().formatHex();\r\n}\r\n\r\nfunction color_formatHex8() {\r\n  return this.rgb().formatHex8();\r\n}\r\n\r\nfunction color_formatHsl() {\r\n  return hslConvert(this).formatHsl();\r\n}\r\n\r\nfunction color_formatRgb() {\r\n  return this.rgb().formatRgb();\r\n}\r\n\r\nfunction color(format) {\r\n  var m, l;\r\n  format = (format + "").trim().toLowerCase();\r\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\r\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\r\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\r\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\r\n      : null) // invalid hex\r\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\r\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\r\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\r\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\r\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\r\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\r\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\r\n      : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)\r\n      : null;\r\n}\r\n\r\nfunction rgbn(n) {\r\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\r\n}\r\n\r\nfunction rgba(r, g, b, a) {\r\n  if (a <= 0) r = g = b = NaN;\r\n  return new Rgb(r, g, b, a);\r\n}\r\n\r\nfunction rgbConvert(o) {\r\n  if (!(o instanceof Color)) o = color(o);\r\n  if (!o) return new Rgb;\r\n  o = o.rgb();\r\n  return new Rgb(o.r, o.g, o.b, o.opacity);\r\n}\r\n\r\nfunction rgb(r, g, b, opacity) {\r\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\r\n}\r\n\r\nfunction Rgb(r, g, b, opacity) {\r\n  this.r = +r;\r\n  this.g = +g;\r\n  this.b = +b;\r\n  this.opacity = +opacity;\r\n}\r\n\r\n(0,_define_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Rgb, rgb, (0,_define_js__WEBPACK_IMPORTED_MODULE_0__.extend)(Color, {\r\n  brighter(k) {\r\n    k = k == null ? brighter : Math.pow(brighter, k);\r\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\r\n  },\r\n  darker(k) {\r\n    k = k == null ? darker : Math.pow(darker, k);\r\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\r\n  },\r\n  rgb() {\r\n    return this;\r\n  },\r\n  clamp() {\r\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\r\n  },\r\n  displayable() {\r\n    return (-0.5 <= this.r && this.r < 255.5)\r\n        && (-0.5 <= this.g && this.g < 255.5)\r\n        && (-0.5 <= this.b && this.b < 255.5)\r\n        && (0 <= this.opacity && this.opacity <= 1);\r\n  },\r\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\r\n  formatHex: rgb_formatHex,\r\n  formatHex8: rgb_formatHex8,\r\n  formatRgb: rgb_formatRgb,\r\n  toString: rgb_formatRgb\r\n}));\r\n\r\nfunction rgb_formatHex() {\r\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\r\n}\r\n\r\nfunction rgb_formatHex8() {\r\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\r\n}\r\n\r\nfunction rgb_formatRgb() {\r\n  const a = clampa(this.opacity);\r\n  return `${a === 1 ? "rgb(" : "rgba("}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? ")" : `, ${a})`}`;\r\n}\r\n\r\nfunction clampa(opacity) {\r\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\r\n}\r\n\r\nfunction clampi(value) {\r\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\r\n}\r\n\r\nfunction hex(value) {\r\n  value = clampi(value);\r\n  return (value < 16 ? "0" : "") + value.toString(16);\r\n}\r\n\r\nfunction hsla(h, s, l, a) {\r\n  if (a <= 0) h = s = l = NaN;\r\n  else if (l <= 0 || l >= 1) h = s = NaN;\r\n  else if (s <= 0) h = NaN;\r\n  return new Hsl(h, s, l, a);\r\n}\r\n\r\nfunction hslConvert(o) {\r\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\r\n  if (!(o instanceof Color)) o = color(o);\r\n  if (!o) return new Hsl;\r\n  if (o instanceof Hsl) return o;\r\n  o = o.rgb();\r\n  var r = o.r / 255,\r\n      g = o.g / 255,\r\n      b = o.b / 255,\r\n      min = Math.min(r, g, b),\r\n      max = Math.max(r, g, b),\r\n      h = NaN,\r\n      s = max - min,\r\n      l = (max + min) / 2;\r\n  if (s) {\r\n    if (r === max) h = (g - b) / s + (g < b) * 6;\r\n    else if (g === max) h = (b - r) / s + 2;\r\n    else h = (r - g) / s + 4;\r\n    s /= l < 0.5 ? max + min : 2 - max - min;\r\n    h *= 60;\r\n  } else {\r\n    s = l > 0 && l < 1 ? 0 : h;\r\n  }\r\n  return new Hsl(h, s, l, o.opacity);\r\n}\r\n\r\nfunction hsl(h, s, l, opacity) {\r\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\r\n}\r\n\r\nfunction Hsl(h, s, l, opacity) {\r\n  this.h = +h;\r\n  this.s = +s;\r\n  this.l = +l;\r\n  this.opacity = +opacity;\r\n}\r\n\r\n(0,_define_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Hsl, hsl, (0,_define_js__WEBPACK_IMPORTED_MODULE_0__.extend)(Color, {\r\n  brighter(k) {\r\n    k = k == null ? brighter : Math.pow(brighter, k);\r\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\r\n  },\r\n  darker(k) {\r\n    k = k == null ? darker : Math.pow(darker, k);\r\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\r\n  },\r\n  rgb() {\r\n    var h = this.h % 360 + (this.h < 0) * 360,\r\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\r\n        l = this.l,\r\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\r\n        m1 = 2 * l - m2;\r\n    return new Rgb(\r\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\r\n      hsl2rgb(h, m1, m2),\r\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\r\n      this.opacity\r\n    );\r\n  },\r\n  clamp() {\r\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\r\n  },\r\n  displayable() {\r\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\r\n        && (0 <= this.l && this.l <= 1)\r\n        && (0 <= this.opacity && this.opacity <= 1);\r\n  },\r\n  formatHsl() {\r\n    const a = clampa(this.opacity);\r\n    return `${a === 1 ? "hsl(" : "hsla("}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? ")" : `, ${a})`}`;\r\n  }\r\n}));\r\n\r\nfunction clamph(value) {\r\n  value = (value || 0) % 360;\r\n  return value < 0 ? value + 360 : value;\r\n}\r\n\r\nfunction clampt(value) {\r\n  return Math.max(0, Math.min(1, value || 0));\r\n}\r\n\r\n/* From FvD 13.37, CSS Color Module Level 3 */\r\nfunction hsl2rgb(h, m1, m2) {\r\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\r\n      : h < 180 ? m2\r\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\r\n      : m1) * 255;\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-color/src/color.js?')},"./node_modules/d3-color/src/define.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   extend: () => (/* binding */ extend)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(constructor, factory, prototype) {\r\n  constructor.prototype = factory.prototype = prototype;\r\n  prototype.constructor = constructor;\r\n}\r\n\r\nfunction extend(parent, definition) {\r\n  var prototype = Object.create(parent.prototype);\r\n  for (var key in definition) prototype[key] = definition[key];\r\n  return prototype;\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-color/src/define.js?')},"./node_modules/d3-format/src/defaultLocale.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ defaultLocale),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   formatPrefix: () => (/* binding */ formatPrefix)\n/* harmony export */ });\n/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locale.js */ "./node_modules/d3-format/src/locale.js");\n\r\n\r\nvar locale;\r\nvar format;\r\nvar formatPrefix;\r\n\r\ndefaultLocale({\r\n  thousands: ",",\r\n  grouping: [3],\r\n  currency: ["$", ""]\r\n});\r\n\r\nfunction defaultLocale(definition) {\r\n  locale = (0,_locale_js__WEBPACK_IMPORTED_MODULE_0__["default"])(definition);\r\n  format = locale.format;\r\n  formatPrefix = locale.formatPrefix;\r\n  return locale;\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-format/src/defaultLocale.js?')},"./node_modules/d3-format/src/exponent.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal.js */ "./node_modules/d3-format/src/formatDecimal.js");\n\r\n\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {\r\n  return x = (0,_formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__.formatDecimalParts)(Math.abs(x)), x ? x[1] : NaN;\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-format/src/exponent.js?')},"./node_modules/d3-format/src/formatDecimal.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   formatDecimalParts: () => (/* binding */ formatDecimalParts)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {\r\n  return Math.abs(x = Math.round(x)) >= 1e21\r\n      ? x.toLocaleString("en").replace(/,/g, "")\r\n      : x.toString(10);\r\n}\r\n\r\n// Computes the decimal coefficient and exponent of the specified number x with\r\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\r\n// For example, formatDecimalParts(1.23) returns ["123", 0].\r\nfunction formatDecimalParts(x, p) {\r\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity\r\n  var i, coefficient = x.slice(0, i);\r\n\r\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\r\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\r\n  return [\r\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\r\n    +x.slice(i + 1)\r\n  ];\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-format/src/formatDecimal.js?')},"./node_modules/d3-format/src/formatGroup.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(grouping, thousands) {\r\n  return function(value, width) {\r\n    var i = value.length,\r\n        t = [],\r\n        j = 0,\r\n        g = grouping[0],\r\n        length = 0;\r\n\r\n    while (i > 0 && g > 0) {\r\n      if (length + g + 1 > width) g = Math.max(1, width - length);\r\n      t.push(value.substring(i -= g, i + g));\r\n      if ((length += g + 1) > width) break;\r\n      g = grouping[j = (j + 1) % grouping.length];\r\n    }\r\n\r\n    return t.reverse().join(thousands);\r\n  };\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-format/src/formatGroup.js?')},"./node_modules/d3-format/src/formatNumerals.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(numerals) {\r\n  return function(value) {\r\n    return value.replace(/[0-9]/g, function(i) {\r\n      return numerals[+i];\r\n    });\r\n  };\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-format/src/formatNumerals.js?')},"./node_modules/d3-format/src/formatPrefixAuto.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   prefixExponent: () => (/* binding */ prefixExponent)\n/* harmony export */ });\n/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal.js */ "./node_modules/d3-format/src/formatDecimal.js");\n\r\n\r\nvar prefixExponent;\r\n\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x, p) {\r\n  var d = (0,_formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__.formatDecimalParts)(x, p);\r\n  if (!d) return x + "";\r\n  var coefficient = d[0],\r\n      exponent = d[1],\r\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\r\n      n = coefficient.length;\r\n  return i === n ? coefficient\r\n      : i > n ? coefficient + new Array(i - n + 1).join("0")\r\n      : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)\r\n      : "0." + new Array(1 - i).join("0") + (0,_formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__.formatDecimalParts)(x, Math.max(0, p + i - 1))[0]; // less than 1y!\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-format/src/formatPrefixAuto.js?')},"./node_modules/d3-format/src/formatRounded.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal.js */ "./node_modules/d3-format/src/formatDecimal.js");\n\r\n\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x, p) {\r\n  var d = (0,_formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__.formatDecimalParts)(x, p);\r\n  if (!d) return x + "";\r\n  var coefficient = d[0],\r\n      exponent = d[1];\r\n  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient\r\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)\r\n      : coefficient + new Array(exponent - coefficient.length + 2).join("0");\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-format/src/formatRounded.js?')},"./node_modules/d3-format/src/formatSpecifier.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FormatSpecifier: () => (/* binding */ FormatSpecifier),\n/* harmony export */   "default": () => (/* binding */ formatSpecifier)\n/* harmony export */ });\n// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\r\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\r\n\r\nfunction formatSpecifier(specifier) {\r\n  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);\r\n  var match;\r\n  return new FormatSpecifier({\r\n    fill: match[1],\r\n    align: match[2],\r\n    sign: match[3],\r\n    symbol: match[4],\r\n    zero: match[5],\r\n    width: match[6],\r\n    comma: match[7],\r\n    precision: match[8] && match[8].slice(1),\r\n    trim: match[9],\r\n    type: match[10]\r\n  });\r\n}\r\n\r\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\r\n\r\nfunction FormatSpecifier(specifier) {\r\n  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";\r\n  this.align = specifier.align === undefined ? ">" : specifier.align + "";\r\n  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";\r\n  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";\r\n  this.zero = !!specifier.zero;\r\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\r\n  this.comma = !!specifier.comma;\r\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\r\n  this.trim = !!specifier.trim;\r\n  this.type = specifier.type === undefined ? "" : specifier.type + "";\r\n}\r\n\r\nFormatSpecifier.prototype.toString = function() {\r\n  return this.fill\r\n      + this.align\r\n      + this.sign\r\n      + this.symbol\r\n      + (this.zero ? "0" : "")\r\n      + (this.width === undefined ? "" : Math.max(1, this.width | 0))\r\n      + (this.comma ? "," : "")\r\n      + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0))\r\n      + (this.trim ? "~" : "")\r\n      + this.type;\r\n};\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-format/src/formatSpecifier.js?')},"./node_modules/d3-format/src/formatTrim.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(s) {\r\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\r\n    switch (s[i]) {\r\n      case ".": i0 = i1 = i; break;\r\n      case "0": if (i0 === 0) i0 = i; i1 = i; break;\r\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\r\n    }\r\n  }\r\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-format/src/formatTrim.js?')},"./node_modules/d3-format/src/formatTypes.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal.js */ "./node_modules/d3-format/src/formatDecimal.js");\n/* harmony import */ var _formatPrefixAuto_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatPrefixAuto.js */ "./node_modules/d3-format/src/formatPrefixAuto.js");\n/* harmony import */ var _formatRounded_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatRounded.js */ "./node_modules/d3-format/src/formatRounded.js");\n\r\n\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n  "%": (x, p) => (x * 100).toFixed(p),\r\n  "b": (x) => Math.round(x).toString(2),\r\n  "c": (x) => x + "",\r\n  "d": _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__["default"],\r\n  "e": (x, p) => x.toExponential(p),\r\n  "f": (x, p) => x.toFixed(p),\r\n  "g": (x, p) => x.toPrecision(p),\r\n  "o": (x) => Math.round(x).toString(8),\r\n  "p": (x, p) => (0,_formatRounded_js__WEBPACK_IMPORTED_MODULE_1__["default"])(x * 100, p),\r\n  "r": _formatRounded_js__WEBPACK_IMPORTED_MODULE_1__["default"],\r\n  "s": _formatPrefixAuto_js__WEBPACK_IMPORTED_MODULE_2__["default"],\r\n  "X": (x) => Math.round(x).toString(16).toUpperCase(),\r\n  "x": (x) => Math.round(x).toString(16)\r\n});\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-format/src/formatTypes.js?')},"./node_modules/d3-format/src/identity.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {\r\n  return x;\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-format/src/identity.js?')},"./node_modules/d3-format/src/locale.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _exponent_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./exponent.js */ "./node_modules/d3-format/src/exponent.js");\n/* harmony import */ var _formatGroup_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatGroup.js */ "./node_modules/d3-format/src/formatGroup.js");\n/* harmony import */ var _formatNumerals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatNumerals.js */ "./node_modules/d3-format/src/formatNumerals.js");\n/* harmony import */ var _formatSpecifier_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./formatSpecifier.js */ "./node_modules/d3-format/src/formatSpecifier.js");\n/* harmony import */ var _formatTrim_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./formatTrim.js */ "./node_modules/d3-format/src/formatTrim.js");\n/* harmony import */ var _formatTypes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./formatTypes.js */ "./node_modules/d3-format/src/formatTypes.js");\n/* harmony import */ var _formatPrefixAuto_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./formatPrefixAuto.js */ "./node_modules/d3-format/src/formatPrefixAuto.js");\n/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity.js */ "./node_modules/d3-format/src/identity.js");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar map = Array.prototype.map,\r\n    prefixes = ["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];\r\n\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(locale) {\r\n  var group = locale.grouping === undefined || locale.thousands === undefined ? _identity_js__WEBPACK_IMPORTED_MODULE_0__["default"] : (0,_formatGroup_js__WEBPACK_IMPORTED_MODULE_1__["default"])(map.call(locale.grouping, Number), locale.thousands + ""),\r\n      currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",\r\n      currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",\r\n      decimal = locale.decimal === undefined ? "." : locale.decimal + "",\r\n      numerals = locale.numerals === undefined ? _identity_js__WEBPACK_IMPORTED_MODULE_0__["default"] : (0,_formatNumerals_js__WEBPACK_IMPORTED_MODULE_2__["default"])(map.call(locale.numerals, String)),\r\n      percent = locale.percent === undefined ? "%" : locale.percent + "",\r\n      minus = locale.minus === undefined ? "−" : locale.minus + "",\r\n      nan = locale.nan === undefined ? "NaN" : locale.nan + "";\r\n\r\n  function newFormat(specifier) {\r\n    specifier = (0,_formatSpecifier_js__WEBPACK_IMPORTED_MODULE_3__["default"])(specifier);\r\n\r\n    var fill = specifier.fill,\r\n        align = specifier.align,\r\n        sign = specifier.sign,\r\n        symbol = specifier.symbol,\r\n        zero = specifier.zero,\r\n        width = specifier.width,\r\n        comma = specifier.comma,\r\n        precision = specifier.precision,\r\n        trim = specifier.trim,\r\n        type = specifier.type;\r\n\r\n    // The "n" type is an alias for ",g".\r\n    if (type === "n") comma = true, type = "g";\r\n\r\n    // The "" type, and any invalid type, is an alias for ".12~g".\r\n    else if (!_formatTypes_js__WEBPACK_IMPORTED_MODULE_4__["default"][type]) precision === undefined && (precision = 12), trim = true, type = "g";\r\n\r\n    // If zero fill is specified, padding goes after sign and before digits.\r\n    if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";\r\n\r\n    // Compute the prefix and suffix.\r\n    // For SI-prefix, the suffix is lazily computed.\r\n    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",\r\n        suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";\r\n\r\n    // What format function should we use?\r\n    // Is this an integer type?\r\n    // Can this type generate exponential notation?\r\n    var formatType = _formatTypes_js__WEBPACK_IMPORTED_MODULE_4__["default"][type],\r\n        maybeSuffix = /[defgprs%]/.test(type);\r\n\r\n    // Set the default precision if not specified,\r\n    // or clamp the specified precision to the supported range.\r\n    // For significant precision, it must be in [1, 21].\r\n    // For fixed precision, it must be in [0, 20].\r\n    precision = precision === undefined ? 6\r\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\r\n        : Math.max(0, Math.min(20, precision));\r\n\r\n    function format(value) {\r\n      var valuePrefix = prefix,\r\n          valueSuffix = suffix,\r\n          i, n, c;\r\n\r\n      if (type === "c") {\r\n        valueSuffix = formatType(value) + valueSuffix;\r\n        value = "";\r\n      } else {\r\n        value = +value;\r\n\r\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\r\n        var valueNegative = value < 0 || 1 / value < 0;\r\n\r\n        // Perform the initial formatting.\r\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\r\n\r\n        // Trim insignificant zeros.\r\n        if (trim) value = (0,_formatTrim_js__WEBPACK_IMPORTED_MODULE_5__["default"])(value);\r\n\r\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\r\n        if (valueNegative && +value === 0 && sign !== "+") valueNegative = false;\r\n\r\n        // Compute the prefix and suffix.\r\n        valuePrefix = (valueNegative ? (sign === "(" ? sign : minus) : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;\r\n        valueSuffix = (type === "s" ? prefixes[8 + _formatPrefixAuto_js__WEBPACK_IMPORTED_MODULE_6__.prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");\r\n\r\n        // Break the formatted value into the integer “value” part that can be\r\n        // grouped, and fractional or exponential “suffix” part that is not.\r\n        if (maybeSuffix) {\r\n          i = -1, n = value.length;\r\n          while (++i < n) {\r\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\r\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\r\n              value = value.slice(0, i);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // If the fill character is not "0", grouping is applied before padding.\r\n      if (comma && !zero) value = group(value, Infinity);\r\n\r\n      // Compute the padding.\r\n      var length = valuePrefix.length + value.length + valueSuffix.length,\r\n          padding = length < width ? new Array(width - length + 1).join(fill) : "";\r\n\r\n      // If the fill character is "0", grouping is applied after padding.\r\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";\r\n\r\n      // Reconstruct the final output based on the desired alignment.\r\n      switch (align) {\r\n        case "<": value = valuePrefix + value + valueSuffix + padding; break;\r\n        case "=": value = valuePrefix + padding + value + valueSuffix; break;\r\n        case "^": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\r\n        default: value = padding + valuePrefix + value + valueSuffix; break;\r\n      }\r\n\r\n      return numerals(value);\r\n    }\r\n\r\n    format.toString = function() {\r\n      return specifier + "";\r\n    };\r\n\r\n    return format;\r\n  }\r\n\r\n  function formatPrefix(specifier, value) {\r\n    var f = newFormat((specifier = (0,_formatSpecifier_js__WEBPACK_IMPORTED_MODULE_3__["default"])(specifier), specifier.type = "f", specifier)),\r\n        e = Math.max(-8, Math.min(8, Math.floor((0,_exponent_js__WEBPACK_IMPORTED_MODULE_7__["default"])(value) / 3))) * 3,\r\n        k = Math.pow(10, -e),\r\n        prefix = prefixes[8 + e / 3];\r\n    return function(value) {\r\n      return f(k * value) + prefix;\r\n    };\r\n  }\r\n\r\n  return {\r\n    format: newFormat,\r\n    formatPrefix: formatPrefix\r\n  };\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-format/src/locale.js?')},"./node_modules/d3-format/src/precisionFixed.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _exponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent.js */ "./node_modules/d3-format/src/exponent.js");\n\r\n\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(step) {\r\n  return Math.max(0, -(0,_exponent_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Math.abs(step)));\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-format/src/precisionFixed.js?')},"./node_modules/d3-format/src/precisionPrefix.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _exponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent.js */ "./node_modules/d3-format/src/exponent.js");\n\r\n\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(step, value) {\r\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor((0,_exponent_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value) / 3))) * 3 - (0,_exponent_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Math.abs(step)));\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-format/src/precisionPrefix.js?')},"./node_modules/d3-format/src/precisionRound.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _exponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent.js */ "./node_modules/d3-format/src/exponent.js");\n\r\n\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(step, max) {\r\n  step = Math.abs(step), max = Math.abs(max) - step;\r\n  return Math.max(0, (0,_exponent_js__WEBPACK_IMPORTED_MODULE_0__["default"])(max) - (0,_exponent_js__WEBPACK_IMPORTED_MODULE_0__["default"])(step)) + 1;\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-format/src/precisionRound.js?')},"./node_modules/d3-interpolate/src/array.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   genericArray: () => (/* binding */ genericArray)\n/* harmony export */ });\n/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./value.js */ "./node_modules/d3-interpolate/src/value.js");\n/* harmony import */ var _numberArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./numberArray.js */ "./node_modules/d3-interpolate/src/numberArray.js");\n\r\n\r\n\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {\r\n  return ((0,_numberArray_js__WEBPACK_IMPORTED_MODULE_0__.isNumberArray)(b) ? _numberArray_js__WEBPACK_IMPORTED_MODULE_0__["default"] : genericArray)(a, b);\r\n}\r\n\r\nfunction genericArray(a, b) {\r\n  var nb = b ? b.length : 0,\r\n      na = a ? Math.min(nb, a.length) : 0,\r\n      x = new Array(na),\r\n      c = new Array(nb),\r\n      i;\r\n\r\n  for (i = 0; i < na; ++i) x[i] = (0,_value_js__WEBPACK_IMPORTED_MODULE_1__["default"])(a[i], b[i]);\r\n  for (; i < nb; ++i) c[i] = b[i];\r\n\r\n  return function(t) {\r\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\r\n    return c;\r\n  };\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-interpolate/src/array.js?')},"./node_modules/d3-interpolate/src/basis.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   basis: () => (/* binding */ basis),\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction basis(t1, v0, v1, v2, v3) {\r\n  var t2 = t1 * t1, t3 = t2 * t1;\r\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\r\n      + (4 - 6 * t2 + 3 * t3) * v1\r\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\r\n      + t3 * v3) / 6;\r\n}\r\n\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(values) {\r\n  var n = values.length - 1;\r\n  return function(t) {\r\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\r\n        v1 = values[i],\r\n        v2 = values[i + 1],\r\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\r\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\r\n    return basis((t - i / n) * n, v0, v1, v2, v3);\r\n  };\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-interpolate/src/basis.js?')},"./node_modules/d3-interpolate/src/basisClosed.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basis.js */ "./node_modules/d3-interpolate/src/basis.js");\n\r\n\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(values) {\r\n  var n = values.length;\r\n  return function(t) {\r\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\r\n        v0 = values[(i + n - 1) % n],\r\n        v1 = values[i % n],\r\n        v2 = values[(i + 1) % n],\r\n        v3 = values[(i + 2) % n];\r\n    return (0,_basis_js__WEBPACK_IMPORTED_MODULE_0__.basis)((t - i / n) * n, v0, v1, v2, v3);\r\n  };\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-interpolate/src/basisClosed.js?')},"./node_modules/d3-interpolate/src/color.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ nogamma),\n/* harmony export */   gamma: () => (/* binding */ gamma),\n/* harmony export */   hue: () => (/* binding */ hue)\n/* harmony export */ });\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-interpolate/src/constant.js");\n\r\n\r\nfunction linear(a, d) {\r\n  return function(t) {\r\n    return a + t * d;\r\n  };\r\n}\r\n\r\nfunction exponential(a, b, y) {\r\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\r\n    return Math.pow(a + t * b, y);\r\n  };\r\n}\r\n\r\nfunction hue(a, b) {\r\n  var d = b - a;\r\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);\r\n}\r\n\r\nfunction gamma(y) {\r\n  return (y = +y) === 1 ? nogamma : function(a, b) {\r\n    return b - a ? exponential(a, b, y) : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);\r\n  };\r\n}\r\n\r\nfunction nogamma(a, b) {\r\n  var d = b - a;\r\n  return d ? linear(a, d) : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-interpolate/src/color.js?')},"./node_modules/d3-interpolate/src/constant.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (x => () => x);\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-interpolate/src/constant.js?')},"./node_modules/d3-interpolate/src/date.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {\r\n  var d = new Date;\r\n  return a = +a, b = +b, function(t) {\r\n    return d.setTime(a * (1 - t) + b * t), d;\r\n  };\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-interpolate/src/date.js?')},"./node_modules/d3-interpolate/src/number.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {\r\n  return a = +a, b = +b, function(t) {\r\n    return a * (1 - t) + b * t;\r\n  };\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-interpolate/src/number.js?')},"./node_modules/d3-interpolate/src/numberArray.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   isNumberArray: () => (/* binding */ isNumberArray)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {\r\n  if (!b) b = [];\r\n  var n = a ? Math.min(b.length, a.length) : 0,\r\n      c = b.slice(),\r\n      i;\r\n  return function(t) {\r\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\r\n    return c;\r\n  };\r\n}\r\n\r\nfunction isNumberArray(x) {\r\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-interpolate/src/numberArray.js?')},"./node_modules/d3-interpolate/src/object.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ "./node_modules/d3-interpolate/src/value.js");\n\r\n\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {\r\n  var i = {},\r\n      c = {},\r\n      k;\r\n\r\n  if (a === null || typeof a !== "object") a = {};\r\n  if (b === null || typeof b !== "object") b = {};\r\n\r\n  for (k in b) {\r\n    if (k in a) {\r\n      i[k] = (0,_value_js__WEBPACK_IMPORTED_MODULE_0__["default"])(a[k], b[k]);\r\n    } else {\r\n      c[k] = b[k];\r\n    }\r\n  }\r\n\r\n  return function(t) {\r\n    for (k in i) c[k] = i[k](t);\r\n    return c;\r\n  };\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-interpolate/src/object.js?')},"./node_modules/d3-interpolate/src/rgb.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   rgbBasis: () => (/* binding */ rgbBasis),\n/* harmony export */   rgbBasisClosed: () => (/* binding */ rgbBasisClosed)\n/* harmony export */ });\n/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/color.js");\n/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./basis.js */ "./node_modules/d3-interpolate/src/basis.js");\n/* harmony import */ var _basisClosed_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./basisClosed.js */ "./node_modules/d3-interpolate/src/basisClosed.js");\n/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-interpolate/src/color.js");\n\r\n\r\n\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function rgbGamma(y) {\r\n  var color = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.gamma)(y);\r\n\r\n  function rgb(start, end) {\r\n    var r = color((start = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.rgb)(start)).r, (end = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.rgb)(end)).r),\r\n        g = color(start.g, end.g),\r\n        b = color(start.b, end.b),\r\n        opacity = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__["default"])(start.opacity, end.opacity);\r\n    return function(t) {\r\n      start.r = r(t);\r\n      start.g = g(t);\r\n      start.b = b(t);\r\n      start.opacity = opacity(t);\r\n      return start + "";\r\n    };\r\n  }\r\n\r\n  rgb.gamma = rgbGamma;\r\n\r\n  return rgb;\r\n})(1));\r\n\r\nfunction rgbSpline(spline) {\r\n  return function(colors) {\r\n    var n = colors.length,\r\n        r = new Array(n),\r\n        g = new Array(n),\r\n        b = new Array(n),\r\n        i, color;\r\n    for (i = 0; i < n; ++i) {\r\n      color = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.rgb)(colors[i]);\r\n      r[i] = color.r || 0;\r\n      g[i] = color.g || 0;\r\n      b[i] = color.b || 0;\r\n    }\r\n    r = spline(r);\r\n    g = spline(g);\r\n    b = spline(b);\r\n    color.opacity = 1;\r\n    return function(t) {\r\n      color.r = r(t);\r\n      color.g = g(t);\r\n      color.b = b(t);\r\n      return color + "";\r\n    };\r\n  };\r\n}\r\n\r\nvar rgbBasis = rgbSpline(_basis_js__WEBPACK_IMPORTED_MODULE_2__["default"]);\r\nvar rgbBasisClosed = rgbSpline(_basisClosed_js__WEBPACK_IMPORTED_MODULE_3__["default"]);\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-interpolate/src/rgb.js?')},"./node_modules/d3-interpolate/src/round.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {\r\n  return a = +a, b = +b, function(t) {\r\n    return Math.round(a * (1 - t) + b * t);\r\n  };\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-interpolate/src/round.js?')},"./node_modules/d3-interpolate/src/string.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-interpolate/src/number.js");\n\r\n\r\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\r\n    reB = new RegExp(reA.source, "g");\r\n\r\nfunction zero(b) {\r\n  return function() {\r\n    return b;\r\n  };\r\n}\r\n\r\nfunction one(b) {\r\n  return function(t) {\r\n    return b(t) + "";\r\n  };\r\n}\r\n\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {\r\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\r\n      am, // current match in a\r\n      bm, // current match in b\r\n      bs, // string preceding current number in b, if any\r\n      i = -1, // index in s\r\n      s = [], // string constants and placeholders\r\n      q = []; // number interpolators\r\n\r\n  // Coerce inputs to strings.\r\n  a = a + "", b = b + "";\r\n\r\n  // Interpolate pairs of numbers in a & b.\r\n  while ((am = reA.exec(a))\r\n      && (bm = reB.exec(b))) {\r\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\r\n      bs = b.slice(bi, bs);\r\n      if (s[i]) s[i] += bs; // coalesce with previous string\r\n      else s[++i] = bs;\r\n    }\r\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\r\n      if (s[i]) s[i] += bm; // coalesce with previous string\r\n      else s[++i] = bm;\r\n    } else { // interpolate non-matching numbers\r\n      s[++i] = null;\r\n      q.push({i: i, x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__["default"])(am, bm)});\r\n    }\r\n    bi = reB.lastIndex;\r\n  }\r\n\r\n  // Add remains of b.\r\n  if (bi < b.length) {\r\n    bs = b.slice(bi);\r\n    if (s[i]) s[i] += bs; // coalesce with previous string\r\n    else s[++i] = bs;\r\n  }\r\n\r\n  // Special optimization for only a single match.\r\n  // Otherwise, interpolate each of the numbers and rejoin the string.\r\n  return s.length < 2 ? (q[0]\r\n      ? one(q[0].x)\r\n      : zero(b))\r\n      : (b = q.length, function(t) {\r\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\r\n          return s.join("");\r\n        });\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-interpolate/src/string.js?')},"./node_modules/d3-interpolate/src/value.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/color.js");\n/* harmony import */ var _rgb_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rgb.js */ "./node_modules/d3-interpolate/src/rgb.js");\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./array.js */ "./node_modules/d3-interpolate/src/array.js");\n/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./date.js */ "./node_modules/d3-interpolate/src/date.js");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-interpolate/src/number.js");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./object.js */ "./node_modules/d3-interpolate/src/object.js");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./string.js */ "./node_modules/d3-interpolate/src/string.js");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-interpolate/src/constant.js");\n/* harmony import */ var _numberArray_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./numberArray.js */ "./node_modules/d3-interpolate/src/numberArray.js");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {\r\n  var t = typeof b, c;\r\n  return b == null || t === "boolean" ? (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(b)\r\n      : (t === "number" ? _number_js__WEBPACK_IMPORTED_MODULE_1__["default"]\r\n      : t === "string" ? ((c = (0,d3_color__WEBPACK_IMPORTED_MODULE_2__["default"])(b)) ? (b = c, _rgb_js__WEBPACK_IMPORTED_MODULE_3__["default"]) : _string_js__WEBPACK_IMPORTED_MODULE_4__["default"])\r\n      : b instanceof d3_color__WEBPACK_IMPORTED_MODULE_2__["default"] ? _rgb_js__WEBPACK_IMPORTED_MODULE_3__["default"]\r\n      : b instanceof Date ? _date_js__WEBPACK_IMPORTED_MODULE_5__["default"]\r\n      : (0,_numberArray_js__WEBPACK_IMPORTED_MODULE_6__.isNumberArray)(b) ? _numberArray_js__WEBPACK_IMPORTED_MODULE_6__["default"]\r\n      : Array.isArray(b) ? _array_js__WEBPACK_IMPORTED_MODULE_7__.genericArray\r\n      : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? _object_js__WEBPACK_IMPORTED_MODULE_8__["default"]\r\n      : _number_js__WEBPACK_IMPORTED_MODULE_1__["default"])(a, b);\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-interpolate/src/value.js?')},"./node_modules/d3-scale/src/constant.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ constants)\n/* harmony export */ });\nfunction constants(x) {\r\n  return function() {\r\n    return x;\r\n  };\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-scale/src/constant.js?')},"./node_modules/d3-scale/src/continuous.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   copy: () => (/* binding */ copy),\n/* harmony export */   "default": () => (/* binding */ continuous),\n/* harmony export */   identity: () => (/* binding */ identity),\n/* harmony export */   transformer: () => (/* binding */ transformer)\n/* harmony export */ });\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/bisect.js");\n/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/value.js");\n/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/number.js");\n/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/round.js");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-scale/src/constant.js");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-scale/src/number.js");\n\r\n\r\n\r\n\r\n\r\nvar unit = [0, 1];\r\n\r\nfunction identity(x) {\r\n  return x;\r\n}\r\n\r\nfunction normalize(a, b) {\r\n  return (b -= (a = +a))\r\n      ? function(x) { return (x - a) / b; }\r\n      : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(b) ? NaN : 0.5);\r\n}\r\n\r\nfunction clamper(a, b) {\r\n  var t;\r\n  if (a > b) t = a, a = b, b = t;\r\n  return function(x) { return Math.max(a, Math.min(b, x)); };\r\n}\r\n\r\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\r\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\r\nfunction bimap(domain, range, interpolate) {\r\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\r\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\r\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\r\n  return function(x) { return r0(d0(x)); };\r\n}\r\n\r\nfunction polymap(domain, range, interpolate) {\r\n  var j = Math.min(domain.length, range.length) - 1,\r\n      d = new Array(j),\r\n      r = new Array(j),\r\n      i = -1;\r\n\r\n  // Reverse descending domains.\r\n  if (domain[j] < domain[0]) {\r\n    domain = domain.slice().reverse();\r\n    range = range.slice().reverse();\r\n  }\r\n\r\n  while (++i < j) {\r\n    d[i] = normalize(domain[i], domain[i + 1]);\r\n    r[i] = interpolate(range[i], range[i + 1]);\r\n  }\r\n\r\n  return function(x) {\r\n    var i = (0,d3_array__WEBPACK_IMPORTED_MODULE_1__["default"])(domain, x, 1, j) - 1;\r\n    return r[i](d[i](x));\r\n  };\r\n}\r\n\r\nfunction copy(source, target) {\r\n  return target\r\n      .domain(source.domain())\r\n      .range(source.range())\r\n      .interpolate(source.interpolate())\r\n      .clamp(source.clamp())\r\n      .unknown(source.unknown());\r\n}\r\n\r\nfunction transformer() {\r\n  var domain = unit,\r\n      range = unit,\r\n      interpolate = d3_interpolate__WEBPACK_IMPORTED_MODULE_2__["default"],\r\n      transform,\r\n      untransform,\r\n      unknown,\r\n      clamp = identity,\r\n      piecewise,\r\n      output,\r\n      input;\r\n\r\n  function rescale() {\r\n    var n = Math.min(domain.length, range.length);\r\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\r\n    piecewise = n > 2 ? polymap : bimap;\r\n    output = input = null;\r\n    return scale;\r\n  }\r\n\r\n  function scale(x) {\r\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\r\n  }\r\n\r\n  scale.invert = function(y) {\r\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), d3_interpolate__WEBPACK_IMPORTED_MODULE_3__["default"])))(y)));\r\n  };\r\n\r\n  scale.domain = function(_) {\r\n    return arguments.length ? (domain = Array.from(_, _number_js__WEBPACK_IMPORTED_MODULE_4__["default"]), rescale()) : domain.slice();\r\n  };\r\n\r\n  scale.range = function(_) {\r\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\r\n  };\r\n\r\n  scale.rangeRound = function(_) {\r\n    return range = Array.from(_), interpolate = d3_interpolate__WEBPACK_IMPORTED_MODULE_5__["default"], rescale();\r\n  };\r\n\r\n  scale.clamp = function(_) {\r\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\r\n  };\r\n\r\n  scale.interpolate = function(_) {\r\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\r\n  };\r\n\r\n  scale.unknown = function(_) {\r\n    return arguments.length ? (unknown = _, scale) : unknown;\r\n  };\r\n\r\n  return function(t, u) {\r\n    transform = t, untransform = u;\r\n    return rescale();\r\n  };\r\n}\r\n\r\nfunction continuous() {\r\n  return transformer()(identity, identity);\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-scale/src/continuous.js?')},"./node_modules/d3-scale/src/init.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initInterpolator: () => (/* binding */ initInterpolator),\n/* harmony export */   initRange: () => (/* binding */ initRange)\n/* harmony export */ });\nfunction initRange(domain, range) {\r\n  switch (arguments.length) {\r\n    case 0: break;\r\n    case 1: this.range(domain); break;\r\n    default: this.range(range).domain(domain); break;\r\n  }\r\n  return this;\r\n}\r\n\r\nfunction initInterpolator(domain, interpolator) {\r\n  switch (arguments.length) {\r\n    case 0: break;\r\n    case 1: {\r\n      if (typeof domain === "function") this.interpolator(domain);\r\n      else this.range(domain);\r\n      break;\r\n    }\r\n    default: {\r\n      this.domain(domain);\r\n      if (typeof interpolator === "function") this.interpolator(interpolator);\r\n      else this.range(interpolator);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-scale/src/init.js?')},"./node_modules/d3-scale/src/linear.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ linear),\n/* harmony export */   linearish: () => (/* binding */ linearish)\n/* harmony export */ });\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/ticks.js");\n/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./continuous.js */ "./node_modules/d3-scale/src/continuous.js");\n/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./init.js */ "./node_modules/d3-scale/src/init.js");\n/* harmony import */ var _tickFormat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tickFormat.js */ "./node_modules/d3-scale/src/tickFormat.js");\n\r\n\r\n\r\n\r\n\r\nfunction linearish(scale) {\r\n  var domain = scale.domain;\r\n\r\n  scale.ticks = function(count) {\r\n    var d = domain();\r\n    return (0,d3_array__WEBPACK_IMPORTED_MODULE_0__["default"])(d[0], d[d.length - 1], count == null ? 10 : count);\r\n  };\r\n\r\n  scale.tickFormat = function(count, specifier) {\r\n    var d = domain();\r\n    return (0,_tickFormat_js__WEBPACK_IMPORTED_MODULE_1__["default"])(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\r\n  };\r\n\r\n  scale.nice = function(count) {\r\n    if (count == null) count = 10;\r\n\r\n    var d = domain();\r\n    var i0 = 0;\r\n    var i1 = d.length - 1;\r\n    var start = d[i0];\r\n    var stop = d[i1];\r\n    var prestep;\r\n    var step;\r\n    var maxIter = 10;\r\n\r\n    if (stop < start) {\r\n      step = start, start = stop, stop = step;\r\n      step = i0, i0 = i1, i1 = step;\r\n    }\r\n    \r\n    while (maxIter-- > 0) {\r\n      step = (0,d3_array__WEBPACK_IMPORTED_MODULE_0__.tickIncrement)(start, stop, count);\r\n      if (step === prestep) {\r\n        d[i0] = start\r\n        d[i1] = stop\r\n        return domain(d);\r\n      } else if (step > 0) {\r\n        start = Math.floor(start / step) * step;\r\n        stop = Math.ceil(stop / step) * step;\r\n      } else if (step < 0) {\r\n        start = Math.ceil(start * step) / step;\r\n        stop = Math.floor(stop * step) / step;\r\n      } else {\r\n        break;\r\n      }\r\n      prestep = step;\r\n    }\r\n\r\n    return scale;\r\n  };\r\n\r\n  return scale;\r\n}\r\n\r\nfunction linear() {\r\n  var scale = (0,_continuous_js__WEBPACK_IMPORTED_MODULE_2__["default"])();\r\n\r\n  scale.copy = function() {\r\n    return (0,_continuous_js__WEBPACK_IMPORTED_MODULE_2__.copy)(scale, linear());\r\n  };\r\n\r\n  _init_js__WEBPACK_IMPORTED_MODULE_3__.initRange.apply(scale, arguments);\r\n\r\n  return linearish(scale);\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-scale/src/linear.js?')},"./node_modules/d3-scale/src/number.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ number)\n/* harmony export */ });\nfunction number(x) {\r\n  return +x;\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-scale/src/number.js?')},"./node_modules/d3-scale/src/tickFormat.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ tickFormat)\n/* harmony export */ });\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/ticks.js");\n/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/formatSpecifier.js");\n/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/precisionPrefix.js");\n/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/defaultLocale.js");\n/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/precisionRound.js");\n/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/precisionFixed.js");\n\r\n\r\n\r\nfunction tickFormat(start, stop, count, specifier) {\r\n  var step = (0,d3_array__WEBPACK_IMPORTED_MODULE_0__.tickStep)(start, stop, count),\r\n      precision;\r\n  specifier = (0,d3_format__WEBPACK_IMPORTED_MODULE_1__["default"])(specifier == null ? ",f" : specifier);\r\n  switch (specifier.type) {\r\n    case "s": {\r\n      var value = Math.max(Math.abs(start), Math.abs(stop));\r\n      if (specifier.precision == null && !isNaN(precision = (0,d3_format__WEBPACK_IMPORTED_MODULE_2__["default"])(step, value))) specifier.precision = precision;\r\n      return (0,d3_format__WEBPACK_IMPORTED_MODULE_3__.formatPrefix)(specifier, value);\r\n    }\r\n    case "":\r\n    case "e":\r\n    case "g":\r\n    case "p":\r\n    case "r": {\r\n      if (specifier.precision == null && !isNaN(precision = (0,d3_format__WEBPACK_IMPORTED_MODULE_4__["default"])(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");\r\n      break;\r\n    }\r\n    case "f":\r\n    case "%": {\r\n      if (specifier.precision == null && !isNaN(precision = (0,d3_format__WEBPACK_IMPORTED_MODULE_5__["default"])(step))) specifier.precision = precision - (specifier.type === "%") * 2;\r\n      break;\r\n    }\r\n  }\r\n  return (0,d3_format__WEBPACK_IMPORTED_MODULE_3__.format)(specifier);\r\n}\r\n\n\n//# sourceURL=webpack://frontend/./node_modules/d3-scale/src/tickFormat.js?')}},__webpack_module_cache__={};function __webpack_require__(e){var r=__webpack_module_cache__[e];if(void 0!==r)return r.exports;var n=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e].call(n.exports,n,n.exports,__webpack_require__),n.loaded=!0,n.exports}__webpack_require__.amdD=function(){throw new Error("define cannot be used indirect")},__webpack_require__.amdO={},__webpack_require__.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(r,{a:r}),r},__webpack_require__.d=(e,r)=>{for(var n in r)__webpack_require__.o(r,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var __webpack_exports__=__webpack_require__("./src/index.js")})();